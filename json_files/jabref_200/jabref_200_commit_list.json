[["Olaf Lenz", "Merge branch 'sorting'", "03/12/14, 09:16:45 AM", "Olaf Lenz", "6db780e96882aca9fa3170afd13a7965dfb61a69", ["src/java/net/sf/jabref/FileSortTab.java", "src/java/net/sf/jabref/FileTab.java", "src/java/net/sf/jabref/JabRefPreferences.java", "src/java/net/sf/jabref/PrefsDialog3.java", "src/java/net/sf/jabref/TablePrefsTab.java", "src/java/net/sf/jabref/export/FileActions.java", "src/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/java/net/sf/jabref/gui/MainTable.java"], "@@ -0,0 +1,387 @@\n+/*  Copyright (C) 2013 JabRef contributors.\n+ This program is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2 of the License, or\n+ (at your option) any later version.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along\n+ with this program; if not, write to the Free Software Foundation, Inc.,\n+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n+package net.sf.jabref;\n+\n+import java.awt.*;\n+import javax.swing.*;\n+\n+import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.layout.FormLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.ArrayList;\n+\n+/**\n+ * Preference tab for file sorting options.\n+ */\n+public class FileSortTab extends JPanel implements PrefsTab {\n+\n+    JabRefPreferences _prefs;\n+    JabRefFrame _frame;\n+    private JRadioButton saveInOriginalOrder, saveInTableOrder, saveInSpecifiedOrder;\n+    private JCheckBox savePriDesc, saveSecDesc, saveTerDesc;\n+    private JTextField savePriField, saveSecField, saveTerField;\n+    private JComboBox savePriSort, saveSecSort, saveTerSort;\n+    private JPanel saveSpecPanel;\n+\n+    private JRadioButton exportInOriginalOrder, exportInTableOrder, exportInSpecifiedOrder;\n+    private JCheckBox exportPriDesc, exportSecDesc, exportTerDesc;\n+    private JTextField exportPriField, exportSecField, exportTerField;\n+    private JComboBox exportPriSort, exportSecSort, exportTerSort;\n+    private JPanel exportSpecPanel;\n+\n+    public FileSortTab(JabRefFrame frame, JabRefPreferences prefs) {\n+        this._prefs = prefs;\n+        this._frame = frame;\n+        FormLayout layout = new FormLayout(\"4dlu, left:pref, 4dlu, fill:pref\", \"\");\n+        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n+        builder.setLeadingColumnOffset(1);\n+\n+        { // SAVE SORT ORDER\n+            // create Components\n+            saveInOriginalOrder = new JRadioButton(Globals.lang(\"Save entries in their original order\"));\n+            saveInTableOrder = new JRadioButton(Globals.lang(\"Save in current table sort order\"));\n+            saveInSpecifiedOrder = new JRadioButton(Globals.lang(\"Save entries ordered as specified\"));\n+\n+            ButtonGroup bg = new ButtonGroup();\n+            bg.add(saveInOriginalOrder);\n+            bg.add(saveInTableOrder);\n+            bg.add(saveInSpecifiedOrder);\n+\n+            ActionListener listener = new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    boolean selected = e.getSource() == saveInSpecifiedOrder;\n+                    savePriSort.setEnabled(selected);\n+                    savePriField.setEnabled(selected);\n+                    savePriDesc.setEnabled(selected);\n+                    saveSecSort.setEnabled(selected);\n+                    saveSecField.setEnabled(selected);\n+                    saveSecDesc.setEnabled(selected);\n+                    saveTerSort.setEnabled(selected);\n+                    saveTerField.setEnabled(selected);\n+                    saveTerDesc.setEnabled(selected);\n+                }\n+            };\n+            saveInOriginalOrder.addActionListener(listener);\n+            saveInTableOrder.addActionListener(listener);\n+            saveInSpecifiedOrder.addActionListener(listener);\n+\n+            ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n+            v.add(BibtexFields.KEY_FIELD);\n+            Collections.sort(v);\n+            Object[] allPlusKey = v.toArray();\n+            savePriSort = new JComboBox(allPlusKey);\n+            saveSecSort = new JComboBox(allPlusKey);\n+            saveTerSort = new JComboBox(allPlusKey);\n+\n+            savePriField = new JTextField(10);\n+            saveSecField = new JTextField(10);\n+            saveTerField = new JTextField(10);\n+\n+            savePriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+            saveSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+            saveTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+\n+            savePriSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (savePriSort.getSelectedIndex() > 0) {\n+                        savePriField.setText(savePriSort.getSelectedItem().toString());\n+                        savePriSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+            saveSecSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (saveSecSort.getSelectedIndex() > 0) {\n+                        saveSecField.setText(saveSecSort.getSelectedItem().toString());\n+                        saveSecSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+            saveTerSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (saveTerSort.getSelectedIndex() > 0) {\n+                        saveTerField.setText(saveTerSort.getSelectedItem().toString());\n+                        saveTerSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+\n+            savePriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+            saveSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+            saveTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+\n+            // create GUI\n+            JLabel lab;\n+\n+            builder.appendSeparator(Globals.lang(\"Save sort order\"));\n+            builder.append(saveInOriginalOrder, 1);\n+            builder.nextLine();\n+            builder.append(saveInTableOrder, 1);\n+            builder.nextLine();\n+            builder.append(saveInSpecifiedOrder, 1);\n+            builder.nextLine();\n+\n+            // Create a new panel with its own FormLayout for these items:\n+            FormLayout layout2 = new FormLayout(\n+                    \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n+            DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n+            lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(savePriSort);\n+            builder2.append(savePriField);\n+            builder2.append(savePriDesc);\n+            builder2.nextLine();\n+            lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(saveSecSort);\n+            builder2.append(saveSecField);\n+            builder2.append(saveSecDesc);\n+            builder2.nextLine();\n+            lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(saveTerSort);\n+            builder2.append(saveTerField);\n+            builder2.append(saveTerDesc);\n+\n+            saveSpecPanel = builder2.getPanel();\n+            builder.append(saveSpecPanel);\n+            builder.nextLine();\n+        }\n+\n+        { // EXPORT SORT ORDER\n+            // create Components\n+            exportInOriginalOrder = new JRadioButton(Globals.lang(\"Export entries in their original order\"));\n+            exportInTableOrder = new JRadioButton(Globals.lang(\"Export in current table sort order\"));\n+            exportInSpecifiedOrder = new JRadioButton(Globals.lang(\"Export entries ordered as specified\"));\n+\n+            ButtonGroup bg = new ButtonGroup();\n+            bg.add(exportInOriginalOrder);\n+            bg.add(exportInTableOrder);\n+            bg.add(exportInSpecifiedOrder);\n+            \n+            ActionListener listener = new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    boolean selected = e.getSource() == exportInSpecifiedOrder;\n+                    exportPriSort.setEnabled(selected);\n+                    exportPriField.setEnabled(selected);\n+                    exportPriDesc.setEnabled(selected);\n+                    exportSecSort.setEnabled(selected);\n+                    exportSecField.setEnabled(selected);\n+                    exportSecDesc.setEnabled(selected);\n+                    exportTerSort.setEnabled(selected);\n+                    exportTerField.setEnabled(selected);\n+                    exportTerDesc.setEnabled(selected);\n+                }\n+            };\n+            exportInOriginalOrder.addActionListener(listener);\n+            exportInTableOrder.addActionListener(listener);\n+            exportInSpecifiedOrder.addActionListener(listener);\n+\n+            ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n+            v.add(BibtexFields.KEY_FIELD);\n+            Collections.sort(v);\n+            Object[] allPlusKey = v.toArray();\n+            exportPriSort = new JComboBox(allPlusKey);\n+            exportSecSort = new JComboBox(allPlusKey);\n+            exportTerSort = new JComboBox(allPlusKey);\n+\n+            exportPriField = new JTextField(10);\n+            exportSecField = new JTextField(10);\n+            exportTerField = new JTextField(10);\n+\n+            exportPriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+            exportSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+            exportTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+\n+            exportPriSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (exportPriSort.getSelectedIndex() > 0) {\n+                        exportPriField.setText(exportPriSort.getSelectedItem().toString());\n+                        exportPriSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+            exportSecSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (exportSecSort.getSelectedIndex() > 0) {\n+                        exportSecField.setText(exportSecSort.getSelectedItem().toString());\n+                        exportSecSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+            exportTerSort.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    if (exportTerSort.getSelectedIndex() > 0) {\n+                        exportTerField.setText(exportTerSort.getSelectedItem().toString());\n+                        exportTerSort.setSelectedIndex(0);\n+                    }\n+                }\n+            });\n+\n+            exportPriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+            exportSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+            exportTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+\n+\n+            // create GUI\n+            JLabel lab;\n+\n+            builder.appendSeparator(Globals.lang(\"Export sort order\"));\n+            builder.append(exportInOriginalOrder, 1);\n+            builder.nextLine();\n+            builder.append(exportInTableOrder, 1);\n+            builder.nextLine();\n+            builder.append(exportInSpecifiedOrder, 1);\n+            builder.nextLine();\n+            \n+\n+            // Create a new panel with its own FormLayout for these items:\n+            FormLayout layout2 = new FormLayout(\n+                    \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n+            DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n+            lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(exportPriSort);\n+            builder2.append(exportPriField);\n+            builder2.append(exportPriDesc);\n+            builder2.nextLine();\n+            lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(exportSecSort);\n+            builder2.append(exportSecField);\n+            builder2.append(exportSecDesc);\n+            builder2.nextLine();\n+            lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n+            builder2.append(lab);\n+            builder2.append(exportTerSort);\n+            builder2.append(exportTerField);\n+            builder2.append(exportTerDesc);\n+\n+            builder.append(builder2.getPanel());\n+            builder.nextLine();\n+        }\n+\n+        // COMBINE EVERYTHING\n+        JPanel pan = builder.getPanel();\n+        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n+        setLayout(new BorderLayout());\n+        add(pan, BorderLayout.CENTER);\n+    }\n+\n+    public void setValues() {\n+        if (_prefs.getBoolean(JabRefPreferences.SAVE_IN_ORIGINAL_ORDER)) {\n+            saveInOriginalOrder.setSelected(true);\n+        } else if (_prefs.getBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER)) {\n+            saveInSpecifiedOrder.setSelected(true);\n+        } else {\n+            saveInTableOrder.setSelected(true);\n+        }\n+\n+        {\n+            boolean selected = _prefs.getBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER);\n+            savePriSort.setEnabled(selected);\n+            savePriField.setEnabled(selected);\n+            savePriDesc.setEnabled(selected);\n+            saveSecSort.setEnabled(selected);\n+            saveSecField.setEnabled(selected);\n+            saveSecDesc.setEnabled(selected);\n+            saveTerSort.setEnabled(selected);\n+            saveTerField.setEnabled(selected);\n+            saveTerDesc.setEnabled(selected);\n+        }\n+\n+        savePriField.setText(_prefs.get(JabRefPreferences.SAVE_PRIMARY_SORT_FIELD));\n+        saveSecField.setText(_prefs.get(JabRefPreferences.SAVE_SECONDARY_SORT_FIELD));\n+        saveTerField.setText(_prefs.get(JabRefPreferences.SAVE_TERTIARY_SORT_FIELD));\n+\n+        savePriSort.setSelectedIndex(0);\n+        saveSecSort.setSelectedIndex(0);\n+        saveTerSort.setSelectedIndex(0);\n+\n+        savePriDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_PRIMARY_SORT_DESCENDING));\n+        saveSecDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_SECONDARY_SORT_DESCENDING));\n+        saveTerDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_TERTIARY_SORT_DESCENDING));\n+\n+        if (_prefs.getBoolean(JabRefPreferences.EXPORT_IN_ORIGINAL_ORDER)) {\n+            exportInOriginalOrder.setSelected(true);\n+        } else if (_prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER)) {\n+            exportInSpecifiedOrder.setSelected(true);\n+        } else {\n+            exportInTableOrder.setSelected(true);\n+        }\n+\n+        {\n+            boolean selected = _prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER);\n+            exportPriSort.setEnabled(selected);\n+            exportPriField.setEnabled(selected);\n+            exportPriDesc.setEnabled(selected);\n+            exportSecSort.setEnabled(selected);\n+            exportSecField.setEnabled(selected);\n+            exportSecDesc.setEnabled(selected);\n+            exportTerSort.setEnabled(selected);\n+            exportTerField.setEnabled(selected);\n+            exportTerDesc.setEnabled(selected);\n+        }\n+\n+        exportPriField.setText(_prefs.get(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD));\n+        exportSecField.setText(_prefs.get(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD));\n+        exportTerField.setText(_prefs.get(JabRefPreferences.EXPORT_TERTIARY_SORT_FIELD));\n+\n+        exportPriSort.setSelectedIndex(0);\n+        exportSecSort.setSelectedIndex(0);\n+        exportTerSort.setSelectedIndex(0);\n+\n+        exportPriDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_PRIMARY_SORT_DESCENDING));\n+        exportSecDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_SECONDARY_SORT_DESCENDING));\n+        exportTerDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING));\n+    }\n+\n+    public void storeSettings() {\n+        _prefs.putBoolean(JabRefPreferences.SAVE_IN_ORIGINAL_ORDER, saveInOriginalOrder.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER, saveInSpecifiedOrder.isSelected());\n+\n+        _prefs.putBoolean(JabRefPreferences.SAVE_PRIMARY_SORT_DESCENDING, savePriDesc.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.SAVE_SECONDARY_SORT_DESCENDING, saveSecDesc.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.SAVE_TERTIARY_SORT_DESCENDING, saveTerDesc.isSelected());\n+\n+        _prefs.put(JabRefPreferences.SAVE_PRIMARY_SORT_FIELD, savePriField.getText().toLowerCase().trim());\n+        _prefs.put(JabRefPreferences.SAVE_SECONDARY_SORT_FIELD, saveSecField.getText().toLowerCase().trim());\n+        _prefs.put(JabRefPreferences.SAVE_TERTIARY_SORT_FIELD, saveTerField.getText().toLowerCase().trim());\n+\n+        _prefs.putBoolean(JabRefPreferences.EXPORT_IN_ORIGINAL_ORDER, exportInOriginalOrder.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER, exportInSpecifiedOrder.isSelected());\n+\n+        _prefs.putBoolean(JabRefPreferences.EXPORT_PRIMARY_SORT_DESCENDING, exportPriDesc.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.EXPORT_SECONDARY_SORT_DESCENDING, exportSecDesc.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING, exportTerDesc.isSelected());\n+\n+        _prefs.put(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD, exportPriField.getText().toLowerCase().trim());\n+        _prefs.put(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD, exportSecField.getText().toLowerCase().trim());\n+        _prefs.put(JabRefPreferences.EXPORT_TERTIARY_SORT_FIELD, exportTerField.getText().toLowerCase().trim());\n+\n+    }\n+\n+    public boolean readyToClose() {\n+        return true;\n+    }\n+\n+    public String getTabName() {\n+        return Globals.lang(\"File Sorting\");\n+    }\n+}, @@ -39,8 +39,6 @@\n             promptBeforeUsingAutoSave, includeEmptyFields, camelCase, sameColumn;\n     private JComboBox valueDelimiter;\n     private JRadioButton\n-        saveOriginalOrder, saveAuthorOrder, saveTableOrder, saveTitleOrder,\n-        exportOriginalOrder, exportAuthorOrder, exportTableOrder, exportTitleOrder,\n         resolveStringsStandard, resolveStringsAll;\n     private JTextField bracesAroundCapitalsFields, nonWrappableFields,\n             doNotResolveStringsFor;\n@@ -56,14 +54,6 @@ public FileTab(JabRefFrame frame, JabRefPreferences prefs) {\n                 GUIGlobals.getIconUrl(\"helpSmall\"));\n         openLast = new JCheckBox(Globals.lang(\"Open last edited databases at startup\"));\n         backup = new JCheckBox(Globals.lang(\"Backup old file when saving\"));\n-        saveAuthorOrder = new JRadioButton(Globals.lang(\"Save ordered by author/editor/year\"));\n-        exportAuthorOrder = new JRadioButton(Globals.lang(\"Export ordered by author/editor/year\"));\n-        saveOriginalOrder = new JRadioButton(Globals.lang(\"Save entries in their original order\"));\n-        exportOriginalOrder = new JRadioButton(Globals.lang(\"Export entries in their original order\"));\n-        saveTableOrder = new JRadioButton(Globals.lang(\"Save in current table sort order\"));\n-        exportTableOrder = new JRadioButton(Globals.lang(\"Export in current table sort order\"));\n-        saveTitleOrder = new JRadioButton(Globals.lang(\"Save entries ordered by title\"));\n-        exportTitleOrder = new JRadioButton(Globals.lang(\"Export entries ordered by title\"));\n         autoSave = new JCheckBox(Globals.lang(\"Autosave\"));\n         promptBeforeUsingAutoSave = new JCheckBox(Globals.lang(\"Prompt before recovering a database from an autosave file\"));\n         autoSaveInterval = new JSpinner(new SpinnerNumberModel(1, 1, 60, 1));\n@@ -73,19 +63,9 @@ public FileTab(JabRefFrame frame, JabRefPreferences prefs) {\n         includeEmptyFields = new JCheckBox(Globals.lang(\"Include empty fields\"));\n         sameColumn = new JCheckBox(Globals.lang(\"Start field contents in same column\"));\n         camelCase = new JCheckBox(Globals.lang(\"Use camel case for field names (e.g., \\\"HowPublished\\\" instead of \\\"howpublished\\\")\"));\n-        ButtonGroup bg = new ButtonGroup();\n-        bg.add(saveAuthorOrder);\n-        bg.add(saveOriginalOrder);\n-        bg.add(saveTableOrder);\n-        bg.add(saveTitleOrder);\n-        bg = new ButtonGroup();\n-        bg.add(exportAuthorOrder);\n-        bg.add(exportOriginalOrder);\n-        bg.add(exportTableOrder);\n-        bg.add(exportTitleOrder);\n         resolveStringsAll = new JRadioButton(Globals.lang(\"Resolve strings for all fields except\")+\":\");\n         resolveStringsStandard = new JRadioButton(Globals.lang(\"Resolve strings for standard BibTeX fields only\"));\n-        bg = new ButtonGroup();\n+        ButtonGroup bg = new ButtonGroup();\n         bg.add(resolveStringsAll);\n         bg.add(resolveStringsStandard);\n \n@@ -144,19 +124,6 @@ public void stateChanged(ChangeEvent changeEvent) {\n         builder.nextLine();\n         builder.append(promptBeforeUsingAutoSave);\n         builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"Sort order\"));\n-        builder.append(saveAuthorOrder, 1);\n-        builder.append(exportAuthorOrder, 1);\n-        builder.nextLine();\n-        builder.append(saveTableOrder, 1);\n-        builder.append(exportTableOrder, 1);\n-        builder.nextLine();\n-        builder.append(saveOriginalOrder, 1);\n-        builder.append(exportOriginalOrder, 1);\n-        builder.nextLine();\n-        builder.append(saveTitleOrder, 1);\n-        builder.append(exportTitleOrder, 1);\n-        builder.nextLine();\n         builder.appendSeparator(Globals.lang(\"Field saving options\"));\n         builder.nextLine();\n         builder.append(camelCase);\n@@ -184,23 +151,7 @@ public void stateChanged(ChangeEvent changeEvent) {\n     public void setValues() {\n         openLast.setSelected(_prefs.getBoolean(\"openLastEdited\"));\n         backup.setSelected(_prefs.getBoolean(\"backup\"));\n-        if (_prefs.getBoolean(\"saveInStandardOrder\"))\n-            saveAuthorOrder.setSelected(true);\n-        else if (_prefs.getBoolean(\"saveInOriginalOrder\"))\n-            saveOriginalOrder.setSelected(true);\n-        else if (_prefs.getBoolean(\"saveInTitleOrder\"))\n-            saveTitleOrder.setSelected(true);\n-        else\n-            saveTableOrder.setSelected(true);\n-        if (_prefs.getBoolean(\"exportInStandardOrder\"))\n-            exportAuthorOrder.setSelected(true);\n-        else if (_prefs.getBoolean(\"exportInOriginalOrder\"))\n-            exportOriginalOrder.setSelected(true);\n-        else if (_prefs.getBoolean(\"exportInTitleOrder\"))\n-            exportTitleOrder.setSelected(true);\n-        else\n-            exportTableOrder.setSelected(true);\n-\n+        \n         //preserveFormatting.setSelected(_prefs.getBoolean(\"preserveFieldFormatting\"));\n         autoDoubleBraces.setSelected(_prefs.getBoolean(\"autoDoubleBraces\"));\n         resolveStringsAll.setSelected(_prefs.getBoolean(\"resolveStringsAllFields\"));\n@@ -222,12 +173,6 @@ else if (_prefs.getBoolean(\"exportInTitleOrder\"))\n     public void storeSettings() {\n         _prefs.putBoolean(\"backup\", backup.isSelected());\n         _prefs.putBoolean(\"openLastEdited\", openLast.isSelected());\n-        _prefs.putBoolean(\"saveInStandardOrder\", saveAuthorOrder.isSelected());\n-        _prefs.putBoolean(\"saveInOriginalOrder\", saveOriginalOrder.isSelected());\n-        _prefs.putBoolean(\"saveInTitleOrder\", saveTitleOrder.isSelected());\n-        _prefs.putBoolean(\"exportInStandardOrder\", exportAuthorOrder.isSelected());\n-        _prefs.putBoolean(\"exportInOriginalOrder\", exportOriginalOrder.isSelected());\n-        _prefs.putBoolean(\"exportInTitleOrder\", exportTitleOrder.isSelected());\n         _prefs.putBoolean(\"autoDoubleBraces\", autoDoubleBraces.isSelected());\n         _prefs.putBoolean(\"resolveStringsAllFields\", resolveStringsAll.isSelected());\n         _prefs.put(\"doNotResolveStringsFor\", doNotResolveStringsFor.getText().trim());, @@ -1,18 +1,18 @@\n /*  Copyright (C) 2003-2012 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ This program is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2 of the License, or\n+ (at your option) any later version.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along\n+ with this program; if not, write to the Free Software Foundation, Inc.,\n+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref;\n \n import java.awt.Color;\n@@ -54,69 +54,84 @@\n \n public class JabRefPreferences {\n \n-    public final static String\n-        CUSTOM_TYPE_NAME = \"customTypeName_\",\n-        CUSTOM_TYPE_REQ = \"customTypeReq_\",\n-        CUSTOM_TYPE_OPT = \"customTypeOpt_\",\n-        CUSTOM_TYPE_PRIOPT = \"customTypePriOpt_\",\n-        CUSTOM_TAB_NAME = \"customTabName_\",\n-        CUSTOM_TAB_FIELDS = \"customTabFields_\",\n-        EMACS_PATH = \"emacsPath\",\n-        EMACS_ADDITIONAL_PARAMETERS = \"emacsParameters\",\n-        EMACS_23 = \"emacsUseV23InsertString\",\n-        EDIT_GROUP_MEMBERSHIP_MODE = \"groupEditGroupMembershipMode\",\n-        \n-        PDF_PREVIEW = \"pdfPreview\",\n-\n-        SHOWONELETTERHEADINGFORICONCOLUMNS = \"showOneLetterHeadingForIconColumns\",\n-\n-        EDITOR_EMACS_KEYBINDINGS = \"editorEMACSkeyBindings\",\n-        EDITOR_EMACS_KEYBINDINGS_REBIND_CA = \"editorEMACSkeyBindingsRebindCA\",\n-\n-        SHORTEST_TO_COMPLETE = \"shortestToComplete\",\n-        AUTOCOMPLETE_FIRSTNAME_MODE = \"autoCompFirstNameMode\",\n-        // here are the possible values for _MODE:\n-        AUTOCOMPLETE_FIRSTNAME_MODE_BOTH = \"both\",\n-        AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL = \"fullOnly\",\n-        AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR = \"abbrOnly\",\n-\n-        WRITEFIELD_ADDSPACES = \"writeFieldAddSpaces\",\n-        WRITEFIELD_CAMELCASENAME = \"writeFieldCamelCase\",\n-\n-        UPDATE_TIMESTAMP = \"updateTimestamp\";\n+    public final static String CUSTOM_TYPE_NAME = \"customTypeName_\",\n+            CUSTOM_TYPE_REQ = \"customTypeReq_\",\n+            CUSTOM_TYPE_OPT = \"customTypeOpt_\",\n+            CUSTOM_TYPE_PRIOPT = \"customTypePriOpt_\",\n+            CUSTOM_TAB_NAME = \"customTabName_\",\n+            CUSTOM_TAB_FIELDS = \"customTabFields_\",\n+            EMACS_PATH = \"emacsPath\",\n+            EMACS_ADDITIONAL_PARAMETERS = \"emacsParameters\",\n+            EMACS_23 = \"emacsUseV23InsertString\",\n+            EDIT_GROUP_MEMBERSHIP_MODE = \"groupEditGroupMembershipMode\",\n+            PDF_PREVIEW = \"pdfPreview\",\n+            SHOWONELETTERHEADINGFORICONCOLUMNS = \"showOneLetterHeadingForIconColumns\",\n+            EDITOR_EMACS_KEYBINDINGS = \"editorEMACSkeyBindings\",\n+            EDITOR_EMACS_KEYBINDINGS_REBIND_CA = \"editorEMACSkeyBindingsRebindCA\",\n+            SHORTEST_TO_COMPLETE = \"shortestToComplete\",\n+            AUTOCOMPLETE_FIRSTNAME_MODE = \"autoCompFirstNameMode\",\n+            // here are the possible values for _MODE:\n+            AUTOCOMPLETE_FIRSTNAME_MODE_BOTH = \"both\",\n+            AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL = \"fullOnly\",\n+            AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR = \"abbrOnly\",\n+            WRITEFIELD_ADDSPACES = \"writeFieldAddSpaces\",\n+            WRITEFIELD_CAMELCASENAME = \"writeFieldCamelCase\",\n+            UPDATE_TIMESTAMP = \"updateTimestamp\",\n+            PRIMARY_SORT_FIELD = \"priSort\",\n+            PRIMARY_SORT_DESCENDING = \"priDescending\",\n+            SECONDARY_SORT_FIELD = \"secSort\",\n+            SECONDARY_SORT_DESCENDING = \"secDescending\",\n+            TERTIARY_SORT_FIELD = \"terSort\",\n+            TERTIARY_SORT_DESCENDING = \"terDescending\",\n+            SAVE_IN_ORIGINAL_ORDER = \"saveInOriginalOrder\",\n+            SAVE_IN_SPECIFIED_ORDER = \"saveInSpecifiedOrder\",\n+            SAVE_PRIMARY_SORT_FIELD = \"savePriSort\",\n+            SAVE_PRIMARY_SORT_DESCENDING = \"savePriDescending\",\n+            SAVE_SECONDARY_SORT_FIELD = \"saveSecSort\",\n+            SAVE_SECONDARY_SORT_DESCENDING = \"saveSecDescending\",\n+            SAVE_TERTIARY_SORT_FIELD = \"saveTerSort\",\n+            SAVE_TERTIARY_SORT_DESCENDING = \"saveTerDescending\",\n+            EXPORT_IN_ORIGINAL_ORDER = \"exportInOriginalOrder\",\n+            EXPORT_IN_SPECIFIED_ORDER = \"exportInSpecifiedOrder\",\n+            EXPORT_PRIMARY_SORT_FIELD = \"exportPriSort\",\n+            EXPORT_PRIMARY_SORT_DESCENDING = \"exportPriDescending\",\n+            EXPORT_SECONDARY_SORT_FIELD = \"exportSecSort\",\n+            EXPORT_SECONDARY_SORT_DESCENDING = \"exportSecDescending\",\n+            EXPORT_TERTIARY_SORT_FIELD = \"exportTerSort\",\n+            EXPORT_TERTIARY_SORT_DESCENDING = \"exportTerDescending\";\n \n     // This String is used in the encoded list in prefs of external file type\n     // modifications, in order to indicate a removed default file type:\n     public static final String FILE_TYPE_REMOVED_FLAG = \"REMOVED\";\n \n-    private static final char[][] VALUE_DELIMITERS =\n-            new char[][]{ {'\"', '\"'}, {'{', '}'} };\n+    private static final char[][] VALUE_DELIMITERS\n+            = new char[][]{{'\"', '\"'}, {'{', '}'}};\n \n     public String WRAPPED_USERNAME, MARKING_WITH_NUMBER_PATTERN;\n \n     Preferences prefs;\n     public HashMap<String, Object> defaults = new HashMap<String, Object>();\n-    public HashMap<String, String>\n-        keyBinds = new HashMap<String, String>(),\n-        defKeyBinds = new HashMap<String, String>();\n+    public HashMap<String, String> keyBinds = new HashMap<String, String>(),\n+            defKeyBinds = new HashMap<String, String>();\n     private HashSet<String> putBracesAroundCapitalsFields = new HashSet<String>(4);\n     private HashSet<String> nonWrappableFields = new HashSet<String>(5);\n     private static LabelPattern keyPattern;\n \n     // Object containing custom export formats:\n     public CustomExportList customExports;\n \n-    /** Set with all custom {@link net.sf.jabref.imports.ImportFormat}s */\n+    /**\n+     * Set with all custom {@link net.sf.jabref.imports.ImportFormat}s\n+     */\n     public CustomImportList customImports;\n \n     // Object containing info about customized entry editor tabs.\n     private EntryEditorTabList tabList = null;\n-\n     // Map containing all registered external file types:\n     private TreeSet<ExternalFileType> externalFileTypes = new TreeSet<ExternalFileType>();\n \n-    public final ExternalFileType HTML_FALLBACK_TYPE =\n-            new ExternalFileType(\"URL\", \"html\", \"text/html\", \"\", \"www\");\n+    public final ExternalFileType HTML_FALLBACK_TYPE\n+            = new ExternalFileType(\"URL\", \"html\", \"text/html\", \"\", \"www\");\n \n     // The following field is used as a global variable during the export of a database.\n     // By setting this field to the path of the database's default file directory, formatters\n@@ -133,69 +148,120 @@\n     // The following field is used as a global variable during the export of a database.\n     // It is used to hold custom name formatters defined by a custom export filter.\n     // It is set before the export starts:\n-    public HashMap<String,String> customExportNameFormatters = null;\n+    public HashMap<String, String> customExportNameFormatters = null;\n \n     // The only instance of this class:\n     private static JabRefPreferences singleton = null;\n \n     public static JabRefPreferences getInstance() {\n-\t\tif (singleton == null)\n-\t\t\tsingleton = new JabRefPreferences();\n-\t\treturn singleton;\n-\t}\n+        if (singleton == null) {\n+            singleton = new JabRefPreferences();\n+        }\n+        return singleton;\n+    }\n+\n+    // Upgrade the preferences for the current version\n+    // The old preference is kept in case an old version of JabRef is used with \n+    // these preferences, but it is only used when the new preference does not \n+    // exist\n+    private void upgradeOldPreferences() {\n+        if (prefs.get(SAVE_IN_SPECIFIED_ORDER, null) == null) {\n+            if (prefs.getBoolean(\"saveInStandardOrder\", false)) {\n+                putBoolean(SAVE_IN_SPECIFIED_ORDER, true);\n+                put(SAVE_PRIMARY_SORT_FIELD, \"author\");\n+                put(SAVE_SECONDARY_SORT_FIELD, \"editor\");\n+                put(SAVE_TERTIARY_SORT_FIELD, \"year\");\n+                putBoolean(SAVE_PRIMARY_SORT_DESCENDING, false);\n+                putBoolean(SAVE_SECONDARY_SORT_DESCENDING, false);\n+                putBoolean(SAVE_TERTIARY_SORT_DESCENDING, false);\n+            } else if (prefs.getBoolean(\"saveInTitleOrder\", false)) {\n+                // saveInTitleOrder => title, author, editor\n+                putBoolean(SAVE_IN_SPECIFIED_ORDER, true);\n+                put(SAVE_PRIMARY_SORT_FIELD, \"title\");\n+                put(SAVE_SECONDARY_SORT_FIELD, \"author\");\n+                put(SAVE_TERTIARY_SORT_FIELD, \"editor\");\n+                putBoolean(SAVE_PRIMARY_SORT_DESCENDING, false);\n+                putBoolean(SAVE_SECONDARY_SORT_DESCENDING, false);\n+                putBoolean(SAVE_TERTIARY_SORT_DESCENDING, false);\n+            }\n+        }\n+        \n+        if (prefs.get(EXPORT_IN_SPECIFIED_ORDER, null) == null) {\n+            if (prefs.getBoolean(\"exportInStandardOrder\", false)) {\n+                putBoolean(EXPORT_IN_SPECIFIED_ORDER, true);\n+                put(EXPORT_PRIMARY_SORT_FIELD, \"author\");\n+                put(EXPORT_SECONDARY_SORT_FIELD, \"editor\");\n+                put(EXPORT_TERTIARY_SORT_FIELD, \"year\");\n+                putBoolean(EXPORT_PRIMARY_SORT_DESCENDING, false);\n+                putBoolean(EXPORT_SECONDARY_SORT_DESCENDING, false);\n+                putBoolean(EXPORT_TERTIARY_SORT_DESCENDING, false);\n+            } else if (prefs.getBoolean(\"exportInTitleOrder\", false)) {\n+                // exportInTitleOrder => title, author, editor\n+                putBoolean(EXPORT_IN_SPECIFIED_ORDER, true);\n+                put(EXPORT_PRIMARY_SORT_FIELD, \"title\");\n+                put(EXPORT_SECONDARY_SORT_FIELD, \"author\");\n+                put(EXPORT_TERTIARY_SORT_FIELD, \"editor\");\n+                putBoolean(EXPORT_PRIMARY_SORT_DESCENDING, false);\n+                putBoolean(EXPORT_SECONDARY_SORT_DESCENDING, false);\n+                putBoolean(EXPORT_TERTIARY_SORT_DESCENDING, false);\n+            }\n+        }\n+    }\n \n     // The constructor is made private to enforce this as a singleton class:\n     private JabRefPreferences() {\n \n         try {\n-            if (new File(\"jabref.xml\").exists()){\n+            if (new File(\"jabref.xml\").exists()) {\n                 importPreferences(\"jabref.xml\");\n             }\n         } catch (IOException e) {\n             Globals.logger(\"Could not import preferences from jabref.xml:\" + e.getLocalizedMessage());\n         }\n-        \n+\n+        // load user preferences \n         prefs = Preferences.userNodeForPackage(JabRef.class);\n-        \n+        upgradeOldPreferences();\n+\n         if (Globals.osName.equals(Globals.MAC)) {\n-\t\t\t//defaults.put(\"pdfviewer\", \"/Applications/Preview.app\");\n-\t\t\t//defaults.put(\"psviewer\", \"/Applications/Preview.app\");\n-\t\t\t//defaults.put(\"htmlviewer\", \"/Applications/Safari.app\");\n-        \tdefaults.put(EMACS_PATH, \"emacsclient\");\n-        \tdefaults.put(EMACS_23, true);\n-        \tdefaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n+            //defaults.put(\"pdfviewer\", \"/Applications/Preview.app\");\n+            //defaults.put(\"psviewer\", \"/Applications/Preview.app\");\n+            //defaults.put(\"htmlviewer\", \"/Applications/Safari.app\");\n+            defaults.put(EMACS_PATH, \"emacsclient\");\n+            defaults.put(EMACS_23, true);\n+            defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n             defaults.put(\"fontFamily\", \"SansSerif\");\n \n-\t\t} else if (Globals.osName.toLowerCase().startsWith(\"windows\")) {\n-\t\t\t//defaults.put(\"pdfviewer\", \"cmd.exe /c start /b\");\n-\t\t\t//defaults.put(\"psviewer\", \"cmd.exe /c start /b\");\n-\t\t\t//defaults.put(\"htmlviewer\", \"cmd.exe /c start /b\");\n-\t\t\tdefaults.put(\"lookAndFeel\", \"com.jgoodies.looks.windows.WindowsLookAndFeel\");\n+        } else if (Globals.osName.toLowerCase().startsWith(\"windows\")) {\n+            //defaults.put(\"pdfviewer\", \"cmd.exe /c start /b\");\n+            //defaults.put(\"psviewer\", \"cmd.exe /c start /b\");\n+            //defaults.put(\"htmlviewer\", \"cmd.exe /c start /b\");\n+            defaults.put(\"lookAndFeel\", \"com.jgoodies.looks.windows.WindowsLookAndFeel\");\n             defaults.put(\"winEdtPath\", \"C:\\\\Program Files\\\\WinEdt Team\\\\WinEdt\\\\WinEdt.exe\");\n             defaults.put(\"latexEditorPath\", \"C:\\\\Program Files\\\\LEd\\\\LEd.exe\");\n-        \tdefaults.put(EMACS_PATH, \"emacsclient.exe\");\n-        \tdefaults.put(EMACS_23, true);\n-        \tdefaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n+            defaults.put(EMACS_PATH, \"emacsclient.exe\");\n+            defaults.put(EMACS_23, true);\n+            defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n             defaults.put(\"fontFamily\", \"Arial\");\n \n         } else {\n-\t\t\t//defaults.put(\"pdfviewer\", \"evince\");\n-\t\t\t//defaults.put(\"psviewer\", \"gv\");\n-\t\t\t//defaults.put(\"htmlviewer\", \"firefox\");\n-\t\t\tdefaults.put(\"lookAndFeel\", \"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\");\n+            //defaults.put(\"pdfviewer\", \"evince\");\n+            //defaults.put(\"psviewer\", \"gv\");\n+            //defaults.put(\"htmlviewer\", \"firefox\");\n+            defaults.put(\"lookAndFeel\", \"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\");\n             defaults.put(\"fontFamily\", \"SansSerif\");\n-            \n-        \t// linux\n-        \tdefaults.put(EMACS_PATH, \"gnuclient\");\n-        \tdefaults.put(EMACS_23, false);\n-        \tdefaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-batch -eval\");\n-\t\t}\n-\t\tdefaults.put(\"useProxy\", Boolean.FALSE);\n+\n+            // linux\n+            defaults.put(EMACS_PATH, \"gnuclient\");\n+            defaults.put(EMACS_23, false);\n+            defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-batch -eval\");\n+        }\n+        defaults.put(\"useProxy\", Boolean.FALSE);\n         defaults.put(\"proxyHostname\", \"my proxy host\");\n         defaults.put(\"proxyPort\", \"my proxy port\");\n         defaults.put(PDF_PREVIEW, Boolean.FALSE);\n         defaults.put(\"useDefaultLookAndFeel\", Boolean.TRUE);\n-        defaults.put(\"lyxpipe\", System.getProperty(\"user.home\")+File.separator+\".lyx/lyxpipe\");\n+        defaults.put(\"lyxpipe\", System.getProperty(\"user.home\") + File.separator + \".lyx/lyxpipe\");\n         defaults.put(\"vim\", \"vim\");\n         defaults.put(\"vimServer\", \"vim\");\n         defaults.put(\"posX\", new Integer(0));\n@@ -215,20 +281,38 @@ private JabRefPreferences() {\n         defaults.put(\"namesLastOnly\", Boolean.TRUE); // \"Show last names only\"\n         defaults.put(\"language\", \"en\");\n         defaults.put(\"showShort\", Boolean.TRUE);\n-        defaults.put(\"priSort\", \"author\");\n-        defaults.put(\"priDescending\", Boolean.FALSE);\n-        defaults.put(\"priBinary\", Boolean.FALSE);\n-        defaults.put(\"secSort\", \"year\");\n-        defaults.put(\"secDescending\", Boolean.TRUE);\n-        defaults.put(\"terSort\", \"author\");\n-        defaults.put(\"terDescending\", Boolean.FALSE);\n+\n+        // Sorting preferences\n+        defaults.put(PRIMARY_SORT_FIELD, \"author\");\n+        defaults.put(PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(SECONDARY_SORT_FIELD, \"year\");\n+        defaults.put(SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(TERTIARY_SORT_FIELD, \"author\");\n+        defaults.put(TERTIARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(SAVE_IN_ORIGINAL_ORDER, Boolean.FALSE);\n+        defaults.put(SAVE_IN_SPECIFIED_ORDER, Boolean.FALSE);\n+        defaults.put(SAVE_PRIMARY_SORT_FIELD, \"bibtexkey\");\n+        defaults.put(SAVE_PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(SAVE_SECONDARY_SORT_FIELD, \"author\");\n+        defaults.put(SAVE_SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(SAVE_TERTIARY_SORT_FIELD, \"\");\n+        defaults.put(SAVE_TERTIARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(EXPORT_IN_ORIGINAL_ORDER, Boolean.FALSE);\n+        defaults.put(EXPORT_IN_SPECIFIED_ORDER, Boolean.FALSE);\n+        defaults.put(EXPORT_PRIMARY_SORT_FIELD, \"bibtexkey\");\n+        defaults.put(EXPORT_PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(EXPORT_SECONDARY_SORT_FIELD, \"author\");\n+        defaults.put(EXPORT_SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(EXPORT_TERTIARY_SORT_FIELD, \"\");\n+        defaults.put(EXPORT_TERTIARY_SORT_DESCENDING, Boolean.TRUE);\n+\n         defaults.put(\"columnNames\", \"entrytype;author;title;year;journal;owner;timestamp;bibtexkey\");\n-        defaults.put(\"columnWidths\",\"75;280;400;60;100;100;100;100\");\n-        defaults.put(PersistenceTableColumnListener.ACTIVATE_PREF_KEY, \n-        \t\tnew Boolean(PersistenceTableColumnListener.DEFAULT_ENABLED));\n+        defaults.put(\"columnWidths\", \"75;280;400;60;100;100;100;100\");\n+        defaults.put(PersistenceTableColumnListener.ACTIVATE_PREF_KEY,\n+                new Boolean(PersistenceTableColumnListener.DEFAULT_ENABLED));\n         defaults.put(\"xmpPrivacyFilters\", \"pdf;timestamp;keywords;owner;note;review\");\n         defaults.put(\"useXmpPrivacyFilter\", Boolean.FALSE);\n-        defaults.put(\"numberColWidth\",new Integer(GUIGlobals.NUMBER_COL_LENGTH));\n+        defaults.put(\"numberColWidth\", new Integer(GUIGlobals.NUMBER_COL_LENGTH));\n         defaults.put(\"workingDirectory\", System.getProperty(\"user.home\"));\n         defaults.put(\"exportWorkingDirectory\", System.getProperty(\"user.home\"));\n         defaults.put(\"importWorkingDirectory\", System.getProperty(\"user.home\"));\n@@ -253,12 +337,7 @@ private JabRefPreferences() {\n         defaults.put(\"searchAll\", Boolean.FALSE);\n         defaults.put(\"incrementS\", Boolean.FALSE);\n         defaults.put(\"searchAutoComplete\", Boolean.TRUE);\n-        defaults.put(\"saveInStandardOrder\", Boolean.TRUE);\n-        defaults.put(\"saveInOriginalOrder\", Boolean.FALSE);\n-        defaults.put(\"saveInTitleOrder\", Boolean.FALSE);\n-        defaults.put(\"exportInStandardOrder\", Boolean.TRUE);\n-        defaults.put(\"exportInOriginalOrder\", Boolean.FALSE);\n-        defaults.put(\"exportInTitleOrder\", Boolean.FALSE);\n+\n         defaults.put(\"selectS\", Boolean.FALSE);\n         defaults.put(\"regExpSearch\", Boolean.TRUE);\n         defaults.put(\"highLightWords\", Boolean.TRUE);\n@@ -284,7 +363,7 @@ private JabRefPreferences() {\n         defaults.put(\"groupExpandTree\", Boolean.TRUE);\n         defaults.put(\"groupAutoShow\", Boolean.TRUE);\n         defaults.put(\"groupAutoHide\", Boolean.TRUE);\n-        defaults.put(JabRefPreferences.GROUP_SHOW_NUMBER_OF_ELEMENTS, Boolean.FALSE);\n+        defaults.put(GROUP_SHOW_NUMBER_OF_ELEMENTS, Boolean.FALSE);\n         defaults.put(\"autoAssignGroup\", Boolean.TRUE);\n         defaults.put(\"groupKeywordSeparator\", \", \");\n         defaults.put(EDIT_GROUP_MEMBERSHIP_MODE, Boolean.FALSE);\n@@ -298,9 +377,9 @@ private JabRefPreferences() {\n         defaults.put(\"memoryStickMode\", Boolean.FALSE);\n         defaults.put(\"renameOnMoveFileToFileDir\", Boolean.TRUE);\n \n-    // The general fields stuff is made obsolete by the CUSTOM_TAB_... entries.\n-        defaults.put(\"generalFields\", \"crossref;keywords;file;doi;url;urldate;\"+\n-                     \"pdf;comment;owner\");\n+        // The general fields stuff is made obsolete by the CUSTOM_TAB_... entries.\n+        defaults.put(\"generalFields\", \"crossref;keywords;file;doi;url;urldate;\"\n+                + \"pdf;comment;owner\");\n \n         defaults.put(\"useCustomIconTheme\", Boolean.FALSE);\n         defaults.put(\"customIconThemeFile\", \"/home/alver/div/crystaltheme_16/Icons.properties\");\n@@ -344,18 +423,18 @@ private JabRefPreferences() {\n         defaults.put(\"preferUrlDoi\", Boolean.FALSE);\n         defaults.put(\"fileColumn\", Boolean.TRUE);\n         defaults.put(\"arxivColumn\", Boolean.FALSE);\n-        \n+\n         defaults.put(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED, SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING, SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_RANKING_COMPACT, SpecialFieldsUtils.PREF_RANKING_COMPACT_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE, SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS, SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS_DEFAULT);\n-    \tdefaults.put(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS, SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS_DEFAULT);\n-    \t\n-    \tdefaults.put(SHOWONELETTERHEADINGFORICONCOLUMNS, Boolean.FALSE);\n-        \n+        defaults.put(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS, SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS_DEFAULT);\n+\n+        defaults.put(SHOWONELETTERHEADINGFORICONCOLUMNS, Boolean.FALSE);\n+\n         defaults.put(\"useOwner\", Boolean.TRUE);\n         defaults.put(\"overwriteOwner\", Boolean.FALSE);\n         defaults.put(\"allowTableEditing\", Boolean.FALSE);\n@@ -373,49 +452,48 @@ private JabRefPreferences() {\n         defaults.put(\"previewEnabled\", Boolean.TRUE);\n         defaults.put(\"activePreview\", 0);\n         defaults.put(\"preview0\", \"<font face=\\\"arial\\\">\"\n-                     +\"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n-                     +\"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n-                     +\"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n-                     +\"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n-                     +\"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n-                     +\"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n-                     +\"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n-                     +\"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n-                     // Include the booktitle field for @inproceedings, @proceedings, etc.\n-                     +\"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n-                     +\"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n-                     +\"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n-                     +\"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n-                     +\"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n-                     +\"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}__NEWLINE__\"\n-                     +\"\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract} \\\\end{abstract}__NEWLINE__\"\n-                     +\"\\\\begin{review}<BR><BR><b>Review: </b> \\\\format[HTMLChars]{\\\\review} \\\\end{review}\"\n-                     +\"</dd>__NEWLINE__<p></p></font>\");\n+                + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n+                + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n+                + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n+                + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n+                + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n+                + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n+                + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n+                + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n+                // Include the booktitle field for @inproceedings, @proceedings, etc.\n+                + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n+                + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n+                + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n+                + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n+                + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n+                + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}__NEWLINE__\"\n+                + \"\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract} \\\\end{abstract}__NEWLINE__\"\n+                + \"\\\\begin{review}<BR><BR><b>Review: </b> \\\\format[HTMLChars]{\\\\review} \\\\end{review}\"\n+                + \"</dd>__NEWLINE__<p></p></font>\");\n         defaults.put(\"preview1\", \"<font face=\\\"arial\\\">\"\n-                     +\"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n-                     +\"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n-                     +\"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n-                     +\"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n-                     +\"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n-                     +\"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n-                     +\"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n-                     +\"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n-                     // Include the booktitle field for @inproceedings, @proceedings, etc.\n-                     +\"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n-                     +\"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n-                     +\"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n-                     +\"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n-                     +\"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n-                     +\"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}\"\n-                     +\"</dd>__NEWLINE__<p></p></font>\");\n-\n+                + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n+                + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n+                + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n+                + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n+                + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n+                + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n+                + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n+                + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n+                // Include the booktitle field for @inproceedings, @proceedings, etc.\n+                + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n+                + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n+                + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n+                + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n+                + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n+                + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}\"\n+                + \"</dd>__NEWLINE__<p></p></font>\");\n \n         // TODO: Currently not possible to edit this setting:\n         defaults.put(\"previewPrintButton\", Boolean.FALSE);\n         defaults.put(\"autoDoubleBraces\", Boolean.FALSE);\n         defaults.put(\"doNotResolveStringsFor\", \"url\");\n         defaults.put(\"resolveStringsAllFields\", Boolean.FALSE);\n-        defaults.put(\"putBracesAroundCapitals\",\"\");//\"title;journal;booktitle;review;abstract\");\n+        defaults.put(\"putBracesAroundCapitals\", \"\");//\"title;journal;booktitle;review;abstract\");\n         defaults.put(\"nonWrappableFields\", \"pdf;ps;url;doi;file\");\n         defaults.put(\"useImportInspectionDialog\", Boolean.TRUE);\n         defaults.put(\"useImportInspectionDialogForSingle\", Boolean.TRUE);\n@@ -486,36 +564,32 @@ private JabRefPreferences() {\n         defaults.put(\"dbConnectDatabase\", \"jabref\");\n         defaults.put(\"dbConnectUsername\", \"root\");\n         CleanUpAction.putDefaults(defaults);\n-        \n+\n         // defaults for DroppedFileHandler UI\n-    \tdefaults.put(DroppedFileHandler.DFH_LEAVE, Boolean.FALSE);\n-    \tdefaults.put(DroppedFileHandler.DFH_COPY, Boolean.TRUE);\n-    \tdefaults.put(DroppedFileHandler.DFH_MOVE, Boolean.FALSE);\n-    \tdefaults.put(DroppedFileHandler.DFH_RENAME, Boolean.FALSE);\n-        \n+        defaults.put(DroppedFileHandler.DFH_LEAVE, Boolean.FALSE);\n+        defaults.put(DroppedFileHandler.DFH_COPY, Boolean.TRUE);\n+        defaults.put(DroppedFileHandler.DFH_MOVE, Boolean.FALSE);\n+        defaults.put(DroppedFileHandler.DFH_RENAME, Boolean.FALSE);\n+\n         //defaults.put(\"lastAutodetectedImport\", \"\");\n-        \n         //defaults.put(\"autoRemoveExactDuplicates\", Boolean.FALSE);\n         //defaults.put(\"confirmAutoRemoveExactDuplicates\", Boolean.TRUE);\n-        \n         //defaults.put(\"tempDir\", System.getProperty(\"java.io.tmpdir\"));\n         //Util.pr(System.getProperty(\"java.io.tempdir\"));\n-\n         //defaults.put(\"keyPattern\", new LabelPattern(KEY_PATTERN));\n-        \n         defaults.put(ImportSettingsTab.PREF_IMPORT_ALWAYSUSE, Boolean.FALSE);\n         defaults.put(ImportSettingsTab.PREF_IMPORT_DEFAULT_PDF_IMPORT_STYLE, ImportSettingsTab.DEFAULT_STYLE);\n         defaults.put(ImportSettingsTab.PREF_IMPORT_FILENAMEPATTERN, ImportSettingsTab.DEFAULT_FILENAMEPATTERNS[0]);\n-        \n+\n         restoreKeyBindings();\n \n         customExports = new CustomExportList(new ExportComparator());\n         customImports = new CustomImportList(this);\n \n         //defaults.put(\"oooWarning\", Boolean.TRUE);\n         updateSpecialFieldHandling();\n-        WRAPPED_USERNAME = \"[\"+get(\"defaultOwner\")+\"]\";\n-        MARKING_WITH_NUMBER_PATTERN = \"\\\\[\"+get(\"defaultOwner\").replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\")+\":(\\\\d+)\\\\]\";\n+        WRAPPED_USERNAME = \"[\" + get(\"defaultOwner\") + \"]\";\n+        MARKING_WITH_NUMBER_PATTERN = \"\\\\[\" + get(\"defaultOwner\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\") + \":(\\\\d+)\\\\]\";\n \n         String defaultExpression = \"**/.*[bibtexkey].*\\\\\\\\.[extension]\";\n         defaults.put(DEFAULT_REG_EXP_SEARCH_EXPRESSION_KEY, defaultExpression);\n@@ -526,47 +600,45 @@ private JabRefPreferences() {\n         defaults.put(\"useCaseKeeperOnSearch\", Boolean.TRUE);\n         defaults.put(\"useUnitFormatterOnSearch\", Boolean.TRUE);\n \n-\tdefaults.put(\"userFileDir\", GUIGlobals.FILE_FIELD + \"Directory\");\n-\ttry {\n-\t    defaults.put(\"userFileDirInd_Legacy\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\") + \"@\" + InetAddress.getLocalHost().getHostName()); // Legacy setting name - was a bug: @ not allowed inside BibTeX comment text. Retained for backward comp.\n-\t    defaults.put(\"userFileDirIndividual\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\") + \"-\" + InetAddress.getLocalHost().getHostName()); // Valid setting name\n-\t}\n-\tcatch(UnknownHostException ex) {\n-\t    Globals.logger(\"Hostname not found.\");\n-\t    defaults.put(\"userFileDirInd_Legacy\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\"));\n-\t    defaults.put(\"userFileDirIndividual\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\"));\n-\t}\n+        defaults.put(\"userFileDir\", GUIGlobals.FILE_FIELD + \"Directory\");\n+        try {\n+            defaults.put(\"userFileDirInd_Legacy\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\") + \"@\" + InetAddress.getLocalHost().getHostName()); // Legacy setting name - was a bug: @ not allowed inside BibTeX comment text. Retained for backward comp.\n+            defaults.put(\"userFileDirIndividual\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\") + \"-\" + InetAddress.getLocalHost().getHostName()); // Valid setting name\n+        } catch (UnknownHostException ex) {\n+            Globals.logger(\"Hostname not found.\");\n+            defaults.put(\"userFileDirInd_Legacy\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\"));\n+            defaults.put(\"userFileDirIndividual\", GUIGlobals.FILE_FIELD + \"Directory\" + \"-\" + get(\"defaultOwner\"));\n+        }\n     }\n \n     public void setLanguageDependentDefaultValues() {\n \n         // Entry editor tab 0:\n-        defaults.put(CUSTOM_TAB_NAME+\"_def0\", Globals.lang(\"General\"));\n-            defaults.put(CUSTOM_TAB_FIELDS+\"_def0\", \"crossref;keywords;file;doi;url;\"+\n-                         \"comment;owner;timestamp\");\n+        defaults.put(CUSTOM_TAB_NAME + \"_def0\", Globals.lang(\"General\"));\n+        defaults.put(CUSTOM_TAB_FIELDS + \"_def0\", \"crossref;keywords;file;doi;url;\"\n+                + \"comment;owner;timestamp\");\n \n         // Entry editor tab 1:\n-            defaults.put(CUSTOM_TAB_FIELDS+\"_def1\", \"abstract\");\n-        defaults.put(CUSTOM_TAB_NAME+\"_def1\", Globals.lang(\"Abstract\"));\n+        defaults.put(CUSTOM_TAB_FIELDS + \"_def1\", \"abstract\");\n+        defaults.put(CUSTOM_TAB_NAME + \"_def1\", Globals.lang(\"Abstract\"));\n \n-      // Entry editor tab 2: Review Field - used for research comments, etc.\n-            defaults.put(CUSTOM_TAB_FIELDS+\"_def2\", \"review\");\n-        defaults.put(CUSTOM_TAB_NAME+\"_def2\", Globals.lang(\"Review\"));\n+        // Entry editor tab 2: Review Field - used for research comments, etc.\n+        defaults.put(CUSTOM_TAB_FIELDS + \"_def2\", \"review\");\n+        defaults.put(CUSTOM_TAB_NAME + \"_def2\", Globals.lang(\"Review\"));\n \n     }\n-    \n+\n     public static final String DEFAULT_REG_EXP_SEARCH_EXPRESSION_KEY = \"defaultRegExpSearchExpression\";\n     public static final String REG_EXP_SEARCH_EXPRESSION_KEY = \"regExpSearchExpression\";\n     public static final String USE_REG_EXP_SEARCH_KEY = \"useRegExpSearch\";\n     public static final String AUTOLINK_EXACT_KEY_ONLY = \"autolinkExactKeyOnly\";\n \n-\tpublic static final String EMAIL_SUBJECT = \"emailSubject\";\n-\tpublic static final String OPEN_FOLDERS_OF_ATTACHED_FILES = \"openFoldersOfAttachedFiles\";\n+    public static final String EMAIL_SUBJECT = \"emailSubject\";\n+    public static final String OPEN_FOLDERS_OF_ATTACHED_FILES = \"openFoldersOfAttachedFiles\";\n \n     public static final String GROUP_SHOW_NUMBER_OF_ELEMENTS = \"groupShowNumberOfElements\";\n \n-\n-\tpublic boolean putBracesAroundCapitals(String fieldName) {\n+    public boolean putBracesAroundCapitals(String fieldName) {\n         return putBracesAroundCapitalsFields.contains(fieldName);\n     }\n \n@@ -575,15 +647,17 @@ public void updateSpecialFieldHandling() {\n         String fieldString = get(\"putBracesAroundCapitals\");\n         if (fieldString.length() > 0) {\n             String[] fields = fieldString.split(\";\");\n-            for (int i=0; i<fields.length; i++)\n+            for (int i = 0; i < fields.length; i++) {\n                 putBracesAroundCapitalsFields.add(fields[i].trim());\n+            }\n         }\n         nonWrappableFields.clear();\n         fieldString = get(\"nonWrappableFields\");\n         if (fieldString.length() > 0) {\n             String[] fields = fieldString.split(\";\");\n-            for (int i=0; i<fields.length; i++)\n+            for (int i = 0; i < fields.length; i++) {\n                 nonWrappableFields.add(fields[i].trim());\n+            }\n         }\n \n     }\n@@ -599,6 +673,7 @@ public char getValueDelimiters(int index) {\n \n     /**\n      * Check whether a key is set (differently from null).\n+     *\n      * @param key The key to check.\n      * @return true if the key is set, false otherwise.\n      */\n@@ -607,7 +682,7 @@ public boolean hasKey(String key) {\n     }\n \n     public String get(String key) {\n-        return prefs.get(key, (String)defaults.get(key));\n+        return prefs.get(key, (String) defaults.get(key));\n     }\n \n     public String get(String key, String def) {\n@@ -617,35 +692,35 @@ public String get(String key, String def) {\n     public boolean getBoolean(String key) {\n         return prefs.getBoolean(key, getBooleanDefault(key));\n     }\n-    \n-    public boolean getBooleanDefault(String key){\n-        return ((Boolean)defaults.get(key)).booleanValue();\n+\n+    public boolean getBooleanDefault(String key) {\n+        return ((Boolean) defaults.get(key)).booleanValue();\n     }\n \n     public double getDouble(String key) {\n         return prefs.getDouble(key, getDoubleDefault(key));\n     }\n-    \n-    public double getDoubleDefault(String key){\n-        return ((Double)defaults.get(key)).doubleValue();\n+\n+    public double getDoubleDefault(String key) {\n+        return ((Double) defaults.get(key)).doubleValue();\n     }\n \n     public int getInt(String key) {\n         return prefs.getInt(key, getIntDefault(key));\n     }\n \n     public int getIntDefault(String key) {\n-        return ((Integer)defaults.get(key)).intValue();\n+        return ((Integer) defaults.get(key)).intValue();\n     }\n-    \n+\n     public byte[] getByteArray(String key) {\n         return prefs.getByteArray(key, getByteArrayDefault(key));\n     }\n \n-    public byte[] getByteArrayDefault(String key){\n-        return (byte[])defaults.get(key);   \n+    public byte[] getByteArrayDefault(String key) {\n+        return (byte[]) defaults.get(key);\n     }\n-    \n+\n     public void put(String key, String value) {\n         prefs.put(key, value);\n     }\n@@ -671,9 +746,9 @@ public void remove(String key) {\n     }\n \n     /**\n-     * Puts a string array into the Preferences, by linking its elements\n-     * with ';' into a single string. Escape characters make the process\n-     * transparent even if strings contain ';'.\n+     * Puts a string array into the Preferences, by linking its elements with\n+     * ';' into a single string. Escape characters make the process transparent\n+     * even if strings contain ';'.\n      */\n     public void putStringArray(String key, String[] value) {\n         if (value == null) {\n@@ -683,11 +758,11 @@ public void putStringArray(String key, String[] value) {\n \n         if (value.length > 0) {\n             StringBuffer linked = new StringBuffer();\n-            for (int i=0; i<value.length-1; i++) {\n+            for (int i = 0; i < value.length - 1; i++) {\n                 linked.append(makeEscape(value[i]));\n                 linked.append(\";\");\n             }\n-            linked.append(makeEscape(value[value.length-1]));\n+            linked.append(makeEscape(value[value.length - 1]));\n             put(key, linked.toString());\n         } else {\n             put(key, \"\");\n@@ -699,8 +774,9 @@ public void putStringArray(String key, String[] value) {\n      */\n     public String[] getStringArray(String key) {\n         String names = get(key);\n-        if (names == null)\n+        if (names == null) {\n             return null;\n+        }\n \n         StringReader rd = new StringReader(names);\n         Vector<String> arr = new Vector<String>();\n@@ -709,16 +785,19 @@ public void putStringArray(String key, String[] value) {\n             while ((rs = getNextUnit(rd)) != null) {\n                 arr.add(rs);\n             }\n-        } catch (IOException ex) {}\n+        } catch (IOException ex) {\n+        }\n         String[] res = new String[arr.size()];\n-        for (int i=0; i<res.length; i++)\n+        for (int i = 0; i < res.length; i++) {\n             res[i] = arr.elementAt(i);\n+        }\n \n         return res;\n     }\n \n     /**\n      * Looks up a color definition in preferences, and returns the Color object.\n+     *\n      * @param key The key for this setting.\n      * @return The color corresponding to the setting.\n      */\n@@ -729,14 +808,15 @@ public Color getColor(String key) {\n     }\n \n     public Color getDefaultColor(String key) {\n-        String value = (String)defaults.get(key);\n+        String value = (String) defaults.get(key);\n         int[] rgb = getRgb(value);\n         return new Color(rgb[0], rgb[1], rgb[2]);\n     }\n \n     /**\n      * Set the default value for a key. This is useful for plugins that need to\n      * add default values for the prefs keys they use.\n+     *\n      * @param key The preferences key.\n      * @param value The default value.\n      */\n@@ -746,6 +826,7 @@ public void putDefaultValue(String key, Object value) {\n \n     /**\n      * Stores a color in preferences.\n+     *\n      * @param key The key for this setting.\n      * @param color The Color to store.\n      */\n@@ -760,7 +841,9 @@ public void putColor(String key, Color color) {\n     }\n \n     /**\n-     * Looks up a color definition in preferences, and returns an array containing the RGB values.\n+     * Looks up a color definition in preferences, and returns an array\n+     * containing the RGB values.\n+     *\n      * @param value The key for this setting.\n      * @return The RGB values corresponding to this color setting.\n      */\n@@ -774,8 +857,8 @@ public void putColor(String key, Color color) {\n     }\n \n     /**\n-     * Returns the KeyStroke for this binding, as defined by the\n-     * defaults, or in the Preferences.\n+     * Returns the KeyStroke for this binding, as defined by the defaults, or in\n+     * the Preferences.\n      */\n     public KeyStroke getKey(String bindName) {\n \n@@ -792,37 +875,39 @@ public KeyStroke getKey(String bindName) {\n             keyBinds.put(bindName, s);\n         }\n         if (s == null) {\n-          Globals.logger(\"Could not get key binding for \\\"\" + bindName + \"\\\"\");\n+            Globals.logger(\"Could not get key binding for \\\"\" + bindName + \"\\\"\");\n         }\n \n-        if (Globals.ON_MAC)\n-          return getKeyForMac(KeyStroke.getKeyStroke(s));\n-        else\n-          return KeyStroke.getKeyStroke(s);\n+        if (Globals.ON_MAC) {\n+            return getKeyForMac(KeyStroke.getKeyStroke(s));\n+        } else {\n+            return KeyStroke.getKeyStroke(s);\n+        }\n     }\n \n     /**\n-     * Returns the KeyStroke for this binding, as defined by the\n-     * defaults, or in the Preferences, but adapted for Mac users,\n-     * with the Command key preferred instead of Control.\n+     * Returns the KeyStroke for this binding, as defined by the defaults, or in\n+     * the Preferences, but adapted for Mac users, with the Command key\n+     * preferred instead of Control.\n      */\n     private KeyStroke getKeyForMac(KeyStroke ks) {\n-      if (ks == null) return null;\n-      int keyCode = ks.getKeyCode();\n-      if ((ks.getModifiers() & KeyEvent.CTRL_MASK) == 0) {\n-        return ks;\n-      }\n-      else {\n-    \tint modifiers = 0;\n-        if ((ks.getModifiers() & KeyEvent.SHIFT_MASK) != 0) {\n-          modifiers = modifiers | KeyEvent.SHIFT_MASK;\n+        if (ks == null) {\n+            return null;\n         }\n-        if ((ks.getModifiers() & KeyEvent.ALT_MASK) != 0) {\n-            modifiers = modifiers | KeyEvent.ALT_MASK;\n+        int keyCode = ks.getKeyCode();\n+        if ((ks.getModifiers() & KeyEvent.CTRL_MASK) == 0) {\n+            return ks;\n+        } else {\n+            int modifiers = 0;\n+            if ((ks.getModifiers() & KeyEvent.SHIFT_MASK) != 0) {\n+                modifiers = modifiers | KeyEvent.SHIFT_MASK;\n+            }\n+            if ((ks.getModifiers() & KeyEvent.ALT_MASK) != 0) {\n+                modifiers = modifiers | KeyEvent.ALT_MASK;\n+            }\n+\n+            return KeyStroke.getKeyStroke(keyCode, Globals.getShortcutMask() + modifiers);\n         }\n-        \n-        return KeyStroke.getKeyStroke(keyCode, Globals.getShortcutMask()+modifiers);\n-      }\n     }\n \n     /**\n@@ -839,9 +924,9 @@ private KeyStroke getKeyForMac(KeyStroke ks) {\n         return defKeyBinds;\n     }\n \n-\n     /**\n      * Clear all preferences.\n+     *\n      * @throws BackingStoreException\n      */\n     public void clear() throws BackingStoreException {\n@@ -851,11 +936,12 @@ public void clear() throws BackingStoreException {\n     public void clear(String key) throws BackingStoreException {\n         prefs.remove(key);\n     }\n+\n     /**\n      * Calling this method will write all preferences into the preference store.\n      */\n     public void flush() {\n-        if (getBoolean(\"memoryStickMode\")){\n+        if (getBoolean(\"memoryStickMode\")) {\n             try {\n                 exportPreferences(\"jabref.xml\");\n             } catch (IOException e) {\n@@ -870,17 +956,17 @@ public void flush() {\n     }\n \n     /**\n-     * Stores new key bindings into Preferences, provided they\n-     * actually differ from the old ones.\n+     * Stores new key bindings into Preferences, provided they actually differ\n+     * from the old ones.\n      */\n     public void setNewKeyBindings(HashMap<String, String> newBindings) {\n         if (!newBindings.equals(keyBinds)) {\n             // This confirms that the bindings have actually changed.\n             String[] bindNames = new String[newBindings.size()],\n-                bindings = new String[newBindings.size()];\n+                    bindings = new String[newBindings.size()];\n             int index = 0;\n-            for (Iterator<String> i=newBindings.keySet().iterator();\n-                 i.hasNext();) {\n+            for (Iterator<String> i = newBindings.keySet().iterator();\n+                    i.hasNext();) {\n                 String nm = i.next();\n                 String bnd = newBindings.get(nm);\n                 bindNames[index] = nm;\n@@ -893,84 +979,85 @@ public void setNewKeyBindings(HashMap<String, String> newBindings) {\n         }\n     }\n \n-\n-        /**\n-         * Fetches key patterns from preferences\n-         * Not cached\n-         * \n-         * @return LabelPattern containing all keys. Returned LabelPattern has no parent\n-         */\n-        public LabelPattern getKeyPattern(){\n-            keyPattern = new LabelPattern();\n-            Preferences pre = Preferences.userNodeForPackage\n-                (net.sf.jabref.labelPattern.LabelPattern.class);\n-            try {\n-                String[] keys = pre.keys();\n-            if (keys.length > 0) for (int i=0; i<keys.length; i++)\n-                keyPattern.addLabelPattern(keys[i], pre.get(keys[i], null));\n-            } catch (BackingStoreException ex) {\n-                Globals.logger(\"BackingStoreException in JabRefPreferences.getKeyPattern\");\n+    /**\n+     * Fetches key patterns from preferences Not cached\n+     *\n+     * @return LabelPattern containing all keys. Returned LabelPattern has no\n+     * parent\n+     */\n+    public LabelPattern getKeyPattern() {\n+        keyPattern = new LabelPattern();\n+        Preferences pre = Preferences.userNodeForPackage(net.sf.jabref.labelPattern.LabelPattern.class);\n+        try {\n+            String[] keys = pre.keys();\n+            if (keys.length > 0) {\n+                for (int i = 0; i < keys.length; i++) {\n+                    keyPattern.addLabelPattern(keys[i], pre.get(keys[i], null));\n+                }\n             }\n-            return keyPattern;\n+        } catch (BackingStoreException ex) {\n+            Globals.logger(\"BackingStoreException in JabRefPreferences.getKeyPattern\");\n         }\n+        return keyPattern;\n+    }\n \n-        /**\n-         * Adds the given key pattern to the preferences\n-         * \n-         * @param pattern the pattern to store\n-         */\n-        public void putKeyPattern(LabelPattern pattern){\n-            keyPattern = pattern;\n-            LabelPattern parent = pattern.getParent();\n-\n-            // Store overridden definitions to Preferences.\n-            Preferences pre = Preferences.userNodeForPackage\n-                (net.sf.jabref.labelPattern.LabelPattern.class);\n-            try {\n-                pre.clear(); // We remove all old entries.\n-            } catch (BackingStoreException ex) {\n-                Globals.logger(\"BackingStoreException in JabRefPreferences.putKeyPattern\");\n-            }\n+    /**\n+     * Adds the given key pattern to the preferences\n+     *\n+     * @param pattern the pattern to store\n+     */\n+    public void putKeyPattern(LabelPattern pattern) {\n+        keyPattern = pattern;\n+        LabelPattern parent = pattern.getParent();\n \n-            for (String s: pattern.keySet()) {\n-                ArrayList<String> value = pattern.get(s);\n-                if (value != null) {\n-                    // no default value\n-                    // the first entry in the array is the full pattern\n-                    // see net.sf.jabref.labelPattern.LabelPatternUtil.split(String)\n-                    pre.put(s, value.get(0));\n-                }\n+        // Store overridden definitions to Preferences.\n+        Preferences pre = Preferences.userNodeForPackage(net.sf.jabref.labelPattern.LabelPattern.class);\n+        try {\n+            pre.clear(); // We remove all old entries.\n+        } catch (BackingStoreException ex) {\n+            Globals.logger(\"BackingStoreException in JabRefPreferences.putKeyPattern\");\n+        }\n+\n+        for (String s : pattern.keySet()) {\n+            ArrayList<String> value = pattern.get(s);\n+            if (value != null) {\n+                // no default value\n+                // the first entry in the array is the full pattern\n+                // see net.sf.jabref.labelPattern.LabelPatternUtil.split(String)\n+                pre.put(s, value.get(0));\n             }\n         }\n+    }\n \n     private void restoreKeyBindings() {\n         // Define default keybindings.\n         defineDefaultKeyBindings();\n \n         // First read the bindings, and their names.\n         String[] bindNames = getStringArray(\"bindNames\"),\n-                 bindings  = getStringArray(\"bindings\");\n+                bindings = getStringArray(\"bindings\");\n \n         // Then set up the key bindings HashMap.\n         if ((bindNames == null) || (bindings == null)\n-            || (bindNames.length != bindings.length)) {\n+                || (bindNames.length != bindings.length)) {\n             // Nothing defined in Preferences, or something is wrong.\n             setDefaultKeyBindings();\n             return;\n         }\n \n-        for (int i=0; i<bindNames.length; i++)\n+        for (int i = 0; i < bindNames.length; i++) {\n             keyBinds.put(bindNames[i], bindings[i]);\n+        }\n     }\n \n     private void setDefaultKeyBindings() {\n         keyBinds = defKeyBinds;\n     }\n- \n+\n     private void defineDefaultKeyBindings() {\n-        defKeyBinds.put(\"Push to application\",\"ctrl L\");\n-      defKeyBinds.put(\"Push to LyX\",\"ctrl L\");\n-      defKeyBinds.put(\"Push to WinEdt\",\"ctrl shift W\");\n+        defKeyBinds.put(\"Push to application\", \"ctrl L\");\n+        defKeyBinds.put(\"Push to LyX\", \"ctrl L\");\n+        defKeyBinds.put(\"Push to WinEdt\", \"ctrl shift W\");\n         defKeyBinds.put(\"Quit JabRef\", \"ctrl Q\");\n         defKeyBinds.put(\"Open database\", \"ctrl O\");\n         defKeyBinds.put(\"Save database\", \"ctrl S\");\n@@ -1084,27 +1171,28 @@ private String getNextUnit(Reader data) throws IOException {\n         StringBuffer res = new StringBuffer();\n         while (!done && ((c = data.read()) != -1)) {\n             if (c == '\\\\') {\n-                if (!escape)\n+                if (!escape) {\n                     escape = true;\n-                else {\n+                } else {\n                     escape = false;\n                     res.append('\\\\');\n                 }\n             } else {\n                 if (c == ';') {\n-                    if (!escape)\n+                    if (!escape) {\n                         done = true;\n-                    else\n+                    } else {\n                         res.append(';');\n+                    }\n                 } else {\n-                    res.append((char)c);\n+                    res.append((char) c);\n                 }\n                 escape = false;\n             }\n         }\n         if (res.length() > 0) {\n             return res.toString();\n-        } else if (c ==-1) {\n+        } else if (c == -1) {\n             // end of stream\n             return null;\n         } else {\n@@ -1115,42 +1203,42 @@ private String getNextUnit(Reader data) throws IOException {\n     private String makeEscape(String s) {\n         StringBuffer sb = new StringBuffer();\n         int c;\n-        for (int i=0; i<s.length(); i++) {\n+        for (int i = 0; i < s.length(); i++) {\n             c = s.charAt(i);\n-            if ((c == '\\\\') || (c == ';'))\n+            if ((c == '\\\\') || (c == ';')) {\n                 sb.append('\\\\');\n-            sb.append((char)c);\n+            }\n+            sb.append((char) c);\n         }\n         return sb.toString();\n     }\n \n     /**\n-     * Stores all information about the entry type in preferences, with\n-     * the tag given by number.\n+     * Stores all information about the entry type in preferences, with the tag\n+     * given by number.\n      */\n     public void storeCustomEntryType(CustomEntryType tp, int number) {\n-        String nr = \"\"+number;\n-        put(CUSTOM_TYPE_NAME+nr, tp.getName());\n-        put(CUSTOM_TYPE_REQ+nr, tp.getRequiredFieldsString());//tp.getRequiredFields());\n-        putStringArray(CUSTOM_TYPE_OPT+nr, tp.getOptionalFields());\n-        putStringArray(CUSTOM_TYPE_PRIOPT+nr, tp.getPrimaryOptionalFields());\n+        String nr = \"\" + number;\n+        put(CUSTOM_TYPE_NAME + nr, tp.getName());\n+        put(CUSTOM_TYPE_REQ + nr, tp.getRequiredFieldsString());//tp.getRequiredFields());\n+        putStringArray(CUSTOM_TYPE_OPT + nr, tp.getOptionalFields());\n+        putStringArray(CUSTOM_TYPE_PRIOPT + nr, tp.getPrimaryOptionalFields());\n \n     }\n \n     /**\n-     * Retrieves all information about the entry type in preferences,\n-     * with the tag given by number.\n+     * Retrieves all information about the entry type in preferences, with the\n+     * tag given by number.\n      */\n     public CustomEntryType getCustomEntryType(int number) {\n-        String nr = \"\"+number;\n-        String\n-            name = get(CUSTOM_TYPE_NAME+nr);\n-        String[]\n-            req = getStringArray(CUSTOM_TYPE_REQ+nr),\n-            opt = getStringArray(CUSTOM_TYPE_OPT+nr),\n-            priOpt = getStringArray(CUSTOM_TYPE_PRIOPT+nr);\n-        if (name == null)\n+        String nr = \"\" + number;\n+        String name = get(CUSTOM_TYPE_NAME + nr);\n+        String[] req = getStringArray(CUSTOM_TYPE_REQ + nr),\n+                opt = getStringArray(CUSTOM_TYPE_OPT + nr),\n+                priOpt = getStringArray(CUSTOM_TYPE_PRIOPT + nr);\n+        if (name == null) {\n             return null;\n+        }\n         if (priOpt == null) {\n             return new CustomEntryType(Util.nCase(name), req, opt);\n         }\n@@ -1164,11 +1252,8 @@ public CustomEntryType getCustomEntryType(int number) {\n         return new CustomEntryType(Util.nCase(name), req, priOpt,\n                 secOpt.toArray(new String[secOpt.size()]));\n \n-\n     }\n \n-\n-\n     public List<ExternalFileType> getDefaultExternalFileTypes() {\n         List<ExternalFileType> list = new ArrayList<ExternalFileType>();\n         list.add(new ExternalFileType(\"PDF\", \"pdf\", \"application/pdf\", \"evince\", \"pdfSmall\"));\n@@ -1201,47 +1286,50 @@ public CustomEntryType getCustomEntryType(int number) {\n             ExternalFileType type = iterator.next();\n             type.setOpenWith(\"\");\n         }\n-        \n \n         return list;\n     }\n \n     public ExternalFileType[] getExternalFileTypeSelection() {\n-        return externalFileTypes.toArray\n-                (new ExternalFileType[externalFileTypes.size()]);\n+        return externalFileTypes.toArray(new ExternalFileType[externalFileTypes.size()]);\n     }\n \n     /**\n      * Look up the external file type registered with this name, if any.\n+     *\n      * @param name The file type name.\n      * @return The ExternalFileType registered, or null if none.\n      */\n     public ExternalFileType getExternalFileTypeByName(String name) {\n         for (Iterator<ExternalFileType> iterator = externalFileTypes.iterator(); iterator.hasNext();) {\n             ExternalFileType type = iterator.next();\n-            if (type.getName().equals(name))\n+            if (type.getName().equals(name)) {\n                 return type;\n+            }\n         }\n         // Return an instance that signifies an unknown file type:\n         return new UnknownExternalFileType(name);\n     }\n \n     /**\n      * Look up the external file type registered for this extension, if any.\n+     *\n      * @param extension The file extension.\n      * @return The ExternalFileType registered, or null if none.\n      */\n     public ExternalFileType getExternalFileTypeByExt(String extension) {\n         for (Iterator<ExternalFileType> iterator = externalFileTypes.iterator(); iterator.hasNext();) {\n             ExternalFileType type = iterator.next();\n-            if ((type.getExtension() != null) && type.getExtension().equalsIgnoreCase(extension))\n+            if ((type.getExtension() != null) && type.getExtension().equalsIgnoreCase(extension)) {\n                 return type;\n+            }\n         }\n         return null;\n     }\n \n     /**\n      * Look up the external file type registered for this filename, if any.\n+     *\n      * @param filename The name of the file whose type to look up.\n      * @return The ExternalFileType registered, or null if none.\n      */\n@@ -1263,26 +1351,30 @@ public ExternalFileType getExternalFileTypeForName(String filename) {\n \n     /**\n      * Look up the external file type registered for this MIME type, if any.\n+     *\n      * @param mimeType The MIME type.\n-     * @return The ExternalFileType registered, or null if none. For the mime type \"text/html\",\n-     *   a valid file type is guaranteed to be returned.\n+     * @return The ExternalFileType registered, or null if none. For the mime\n+     * type \"text/html\", a valid file type is guaranteed to be returned.\n      */\n     public ExternalFileType getExternalFileTypeByMimeType(String mimeType) {\n         for (Iterator<ExternalFileType> iterator = externalFileTypes.iterator(); iterator.hasNext();) {\n             ExternalFileType type = iterator.next();\n-            if ((type.getMimeType() != null) && type.getMimeType().equals(mimeType))\n+            if ((type.getMimeType() != null) && type.getMimeType().equals(mimeType)) {\n                 return type;\n+            }\n         }\n-        if (mimeType.equals(\"text/html\"))\n+        if (mimeType.equals(\"text/html\")) {\n             return HTML_FALLBACK_TYPE;\n-        else\n+        } else {\n             return null;\n+        }\n     }\n \n     /**\n      * Reset the List of external file types after user customization.\n-     * @param types The new List of external file types. This is the complete list, not\n-     *  just new entries.\n+     *\n+     * @param types The new List of external file types. This is the complete\n+     * list, not just new entries.\n      */\n     public void setExternalFileTypes(List<ExternalFileType> types) {\n \n@@ -1306,9 +1398,9 @@ public void setExternalFileTypes(List<ExternalFileType> types) {\n             }\n             if (found != null) {\n                 // Found it! Check if it is an exact match, or if it has been customized:\n-                if (found.equals(type))\n+                if (found.equals(type)) {\n                     unchanged.add(type);\n-                else {\n+                } else {\n                     // It was modified. Remove its entry from the defaults list, since\n                     // the type hasn't been removed:\n                     defTypes.remove(found);\n@@ -1325,24 +1417,23 @@ public void setExternalFileTypes(List<ExternalFileType> types) {\n \n         // Now set up the array to write to prefs, containing all new types, all modified\n         // types, and a flag denoting each default type that has been removed:\n-        String[][] array = new String[types.size()+defTypes.size()][];\n-        int i=0;\n+        String[][] array = new String[types.size() + defTypes.size()][];\n+        int i = 0;\n         for (ExternalFileType type : types) {\n             array[i] = type.getStringArrayRepresentation();\n             i++;\n         }\n         for (ExternalFileType type : defTypes) {\n-            array[i] = new String[] {type.getName(), FILE_TYPE_REMOVED_FLAG};\n+            array[i] = new String[]{type.getName(), FILE_TYPE_REMOVED_FLAG};\n             i++;\n         }\n         //System.out.println(\"Encoded: '\"+Util.encodeStringArray(array)+\"'\");\n         put(\"externalFileTypes\", Util.encodeStringArray(array));\n     }\n \n-    \n     /**\n-     * Set up the list of external file types, either from default values, or from values\n-     * recorded in Preferences.\n+     * Set up the list of external file types, either from default values, or\n+     * from values recorded in Preferences.\n      */\n     public void updateExternalFileTypes() {\n         // First get a list of the default file types as a starting point:\n@@ -1366,10 +1457,10 @@ public void updateExternalFileTypes() {\n                     }\n                 }\n                 // If we found it, remove it from the type list:\n-                if (toRemove != null)\n+                if (toRemove != null) {\n                     types.remove(toRemove);\n-            }\n-            else {\n+                }\n+            } else {\n                 // A new or modified entry type. Construct it from the string array:\n                 ExternalFileType type = new ExternalFileType(vals[i]);\n                 // Check if there is a default type with the same name. If so, this is a\n@@ -1385,7 +1476,7 @@ public void updateExternalFileTypes() {\n                 if (toRemove != null) {\n                     types.remove(toRemove);\n                 }\n-                \n+\n                 // Then add the new one:\n                 types.add(type);\n             }\n@@ -1397,9 +1488,9 @@ public void updateExternalFileTypes() {\n         }\n     }\n \n-\n     /**\n      * Removes all information about custom entry types with tags of\n+     *\n      * @param number or higher.\n      */\n     public void purgeCustomEntryTypes(int number) {\n@@ -1410,25 +1501,27 @@ public void purgeCustomEntryTypes(int number) {\n     }\n \n     /**\n-     * Removes all entries keyed by prefix+number, where number\n-     * is equal to or higher than the given number.\n+     * Removes all entries keyed by prefix+number, where number is equal to or\n+     * higher than the given number.\n+     *\n      * @param number or higher.\n      */\n     public void purgeSeries(String prefix, int number) {\n-        while (get(prefix+number) != null) {\n-            remove(prefix+number);\n+        while (get(prefix + number) != null) {\n+            remove(prefix + number);\n             number++;\n         }\n     }\n \n     public EntryEditorTabList getEntryEditorTabList() {\n-    if (tabList == null)\n-        updateEntryEditorTabList();\n-    return tabList;\n+        if (tabList == null) {\n+            updateEntryEditorTabList();\n+        }\n+        return tabList;\n     }\n \n     public void updateEntryEditorTabList() {\n-    tabList = new EntryEditorTabList();\n+        tabList = new EntryEditorTabList();\n     }\n \n     /**\n@@ -1437,32 +1530,34 @@ public void updateEntryEditorTabList() {\n      * @param filename String File to export to\n      */\n     public void exportPreferences(String filename) throws IOException {\n-      File f = new File(filename);\n-      OutputStream os = new FileOutputStream(f);\n-      try {\n-        prefs.exportSubtree(os);\n-      } catch (BackingStoreException ex) {\n-        throw new IOException(ex.getMessage());\n-      }\n-    }\n-\n-      /**\n-       * Imports Preferences from an XML file.\n-       *\n-       * @param filename String File to import from\n-       */\n-      public void importPreferences(String filename) throws IOException {\n+        File f = new File(filename);\n+        OutputStream os = new FileOutputStream(f);\n+        try {\n+            prefs.exportSubtree(os);\n+        } catch (BackingStoreException ex) {\n+            throw new IOException(ex.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Imports Preferences from an XML file.\n+     *\n+     * @param filename String File to import from\n+     */\n+    public void importPreferences(String filename) throws IOException {\n         File f = new File(filename);\n         InputStream is = new FileInputStream(f);\n         try {\n-          Preferences.importPreferences(is);\n+            Preferences.importPreferences(is);\n         } catch (InvalidPreferencesFormatException ex) {\n-          throw new IOException(ex.getMessage());\n+            throw new IOException(ex.getMessage());\n         }\n-      }\n+    }\n \n     /**\n-     * Determines whether the given field should be written without any sort of wrapping.\n+     * Determines whether the given field should be written without any sort of\n+     * wrapping.\n+     *\n      * @param fieldName The field name.\n      * @return true if the field should not be wrapped.\n      */, @@ -79,6 +79,7 @@ public PrefsDialog3(JabRefFrame parent) {\n \t\ttabs.add(new GeneralTab(frame, prefs));\n \t\ttabs.add(new NetworkTab(frame, prefs));\n         tabs.add(new FileTab(frame, prefs));\n+        tabs.add(new FileSortTab(frame, prefs));\n         tabs.add(new EntryEditorPrefsTab(frame, prefs));\n         tabs.add(new GroupsPrefsTab(prefs));\n \t\ttabs.add(new AppearancePrefsTab(prefs));, @@ -214,9 +214,9 @@ public void setValues() {\n \t\tautoResizeMode\n \t\t\t.setSelected((_prefs.getInt(\"autoResizeMode\") == JTable.AUTO_RESIZE_ALL_COLUMNS));\n \n-\t\tpriField.setText(_prefs.get(\"priSort\"));\n-\t\tsecField.setText(_prefs.get(\"secSort\"));\n-\t\tterField.setText(_prefs.get(\"terSort\"));\n+\t\tpriField.setText(_prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD));\n+\t\tsecField.setText(_prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD));\n+\t\tterField.setText(_prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD));\n \t\tpriSort.setSelectedIndex(0);\n \t\tsecSort.setSelectedIndex(0);\n \t\tterSort.setSelectedIndex(0);\n@@ -235,9 +235,9 @@ else if (_prefs.getBoolean(\"namesLastOnly\"))\n \t\t\tlastNamesOnly.setSelected(true);\n \t\telse\n \t\t\tnoAbbrNames.setSelected(true);\n-\t\tpriDesc.setSelected(_prefs.getBoolean(\"priDescending\"));\n-\t\tsecDesc.setSelected(_prefs.getBoolean(\"secDescending\"));\n-\t\tterDesc.setSelected(_prefs.getBoolean(\"terDescending\"));\n+\t\tpriDesc.setSelected(_prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING));\n+\t\tsecDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING));\n+\t\tterDesc.setSelected(_prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING));\n \n \t\tfloatMarked.setSelected(_prefs.getBoolean(\"floatMarkedEntries\"));\n \n@@ -268,16 +268,16 @@ public void storeSettings() {\n \n \t\t_prefs.putInt(\"autoResizeMode\",\n \t\t\tautoResizeMode.isSelected() ? JTable.AUTO_RESIZE_ALL_COLUMNS : JTable.AUTO_RESIZE_OFF);\n-\t\t_prefs.putBoolean(\"priDescending\", priDesc.isSelected());\n-\t\t_prefs.putBoolean(\"secDescending\", secDesc.isSelected());\n-\t\t_prefs.putBoolean(\"terDescending\", terDesc.isSelected());\n-\t\t// _prefs.put(\"secSort\",\n+\t\t_prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, priDesc.isSelected());\n+\t\t_prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, secDesc.isSelected());\n+\t\t_prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, terDesc.isSelected());\n+\t\t// _prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD,\n \t\t// GUIGlobals.ALL_FIELDS[secSort.getSelectedIndex()]);\n-\t\t// _prefs.put(\"terSort\",\n+\t\t// _prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD,\n \t\t// GUIGlobals.ALL_FIELDS[terSort.getSelectedIndex()]);\n-\t\t_prefs.put(\"priSort\", priField.getText().toLowerCase().trim());\n-\t\t_prefs.put(\"secSort\", secField.getText().toLowerCase().trim());\n-\t\t_prefs.put(\"terSort\", terField.getText().toLowerCase().trim());\n+\t\t_prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, priField.getText().toLowerCase().trim());\n+\t\t_prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, secField.getText().toLowerCase().trim());\n+\t\t_prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, terField.getText().toLowerCase().trim());\n \n \t\t_prefs.putBoolean(\"floatMarkedEntries\", floatMarked.isSelected());\n \t\t// updatefont, @@ -1,18 +1,18 @@\n /*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ This program is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2 of the License, or\n+ (at your option) any later version.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along\n+ with this program; if not, write to the Free Software Foundation, Inc.,\n+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.export;\n \n import java.io.File;\n@@ -52,23 +52,23 @@\n import ca.odell.glazedlists.BasicEventList;\n import ca.odell.glazedlists.SortedList;\n \n-public class FileActions\n-{\n+public class FileActions {\n \n     private static Pattern refPat = Pattern.compile(\"(#[A-Za-z]+#)\"); // Used to detect string references in strings\n     private static BibtexString.Type previousStringType;\n \n     private static void writePreamble(Writer fw, String preamble) throws IOException {\n-    if (preamble != null) {\n-        fw.write(\"@PREAMBLE{\");\n-        fw.write(preamble);\n-        fw.write(\"}\"+Globals.NEWLINE +Globals.NEWLINE);\n-    }\n+        if (preamble != null) {\n+            fw.write(\"@PREAMBLE{\");\n+            fw.write(preamble);\n+            fw.write(\"}\" + Globals.NEWLINE + Globals.NEWLINE);\n+        }\n     }\n \n     /**\n-     * Write all strings in alphabetical order, modified to produce a safe (for BibTeX) order of the strings\n-     * if they reference each other.\n+     * Write all strings in alphabetical order, modified to produce a safe (for\n+     * BibTeX) order of the strings if they reference each other.\n+     *\n      * @param fw The Writer to send the output to.\n      * @param database The database whose strings we should write.\n      * @throws IOException If anthing goes wrong in writing.\n@@ -83,17 +83,18 @@ private static void writeStrings(Writer fw, BibtexDatabase database) throws IOEx\n         // First, make a Map of all entries:\n         HashMap<String, BibtexString> remaining = new HashMap<String, BibtexString>();\n         int maxKeyLength = 0;\n-        for (Iterator<BibtexString> i=strings.iterator(); i.hasNext();) {\n+        for (Iterator<BibtexString> i = strings.iterator(); i.hasNext();) {\n             BibtexString string = i.next();\n             remaining.put(string.getName(), string);\n             maxKeyLength = Math.max(maxKeyLength, string.getName().length());\n         }\n \n-        for(BibtexString.Type t : BibtexString.Type.values()) {\n+        for (BibtexString.Type t : BibtexString.Type.values()) {\n             for (Iterator<BibtexString> i = strings.iterator(); i.hasNext();) {\n                 BibtexString bs = i.next();\n-                if (remaining.containsKey(bs.getName()) && bs.getType() == t)\n+                if (remaining.containsKey(bs.getName()) && bs.getType() == t) {\n                     writeString(fw, bs, remaining, maxKeyLength);\n+                }\n             }\n         }\n         fw.write(Globals.NEWLINE);\n@@ -110,12 +111,13 @@ private static void writeString(Writer fw, BibtexString bs, HashMap<String, Bibt\n         Matcher m;\n         while ((m = refPat.matcher(content)).find()) {\n             String foundLabel = m.group(1);\n-            int restIndex = content.indexOf(foundLabel)+foundLabel.length();\n+            int restIndex = content.indexOf(foundLabel) + foundLabel.length();\n             content = content.substring(restIndex);\n-            Object referred = remaining.get(foundLabel.substring(1, foundLabel.length()-1));\n+            Object referred = remaining.get(foundLabel.substring(1, foundLabel.length() - 1));\n             // If the label we found exists as a key in the \"remaining\" Map, we go on and write it now:\n-            if (referred != null)\n-                writeString(fw, (BibtexString)referred, remaining, maxKeyLength);\n+            if (referred != null) {\n+                writeString(fw, (BibtexString) referred, remaining, maxKeyLength);\n+            }\n         }\n \n         if (previousStringType != bs.getType()) {\n@@ -124,8 +126,9 @@ private static void writeString(Writer fw, BibtexString bs, HashMap<String, Bibt\n         }\n \n         String suffix = \"\";\n-        for(int i = maxKeyLength - bs.getName().length(); i > 0; i--) \n+        for (int i = maxKeyLength - bs.getName().length(); i > 0; i--) {\n             suffix += \" \";\n+        }\n \n         fw.write(\"@String { \" + bs.getName() + suffix + \" = \");\n         if (!bs.getContent().equals(\"\")) {\n@@ -134,249 +137,229 @@ private static void writeString(Writer fw, BibtexString bs, HashMap<String, Bibt\n                 fw.write(formatted);\n             } catch (IllegalArgumentException ex) {\n                 throw new IllegalArgumentException(\n-                        Globals.lang(\"The # character is not allowed in BibTeX strings unless escaped as in '\\\\#'.\") + \"\\n\" +\n-                        Globals.lang(\"Before saving, please edit any strings containing the # character.\"));\n+                        Globals.lang(\"The # character is not allowed in BibTeX strings unless escaped as in '\\\\#'.\") + \"\\n\"\n+                        + Globals.lang(\"Before saving, please edit any strings containing the # character.\"));\n             }\n \n-        }\n-        else\n+        } else {\n             fw.write(\"{}\");\n+        }\n \n         fw.write(\" }\" + Globals.NEWLINE);// + Globals.NEWLINE);\n     }\n \n     /**\n      * Writes the JabRef signature and the encoding.\n      *\n-     * @param encoding String the name of the encoding, which is part of the header.\n+     * @param encoding String the name of the encoding, which is part of the\n+     * header.\n      */\n     private static void writeBibFileHeader(Writer out, String encoding) throws IOException {\n         out.write(\"% \");\n-      out.write(GUIGlobals.SIGNATURE);\n-      out.write(\" \"+GUIGlobals.version+\".\"+Globals.NEWLINE + \"% \" + \n-              GUIGlobals.encPrefix+encoding+Globals.NEWLINE +Globals.NEWLINE);\n+        out.write(GUIGlobals.SIGNATURE);\n+        out.write(\" \" + GUIGlobals.version + \".\" + Globals.NEWLINE + \"% \"\n+                + GUIGlobals.encPrefix + encoding + Globals.NEWLINE + Globals.NEWLINE);\n     }\n \n     /**\n-     * Saves the database to file. Two boolean values indicate whether\n-     * only entries with a nonzero Globals.SEARCH value and only\n-     * entries with a nonzero Globals.GROUPSEARCH value should be\n-     * saved. This can be used to let the user save only the results of\n-     * a search. False and false means all entries are saved.\n+     * Saves the database to file. Two boolean values indicate whether only\n+     * entries with a nonzero Globals.SEARCH value and only entries with a\n+     * nonzero Globals.GROUPSEARCH value should be saved. This can be used to\n+     * let the user save only the results of a search. False and false means all\n+     * entries are saved.\n      */\n     public static SaveSession saveDatabase(BibtexDatabase database,\n-\t\tMetaData metaData, File file, JabRefPreferences prefs,\n-\t\tboolean checkSearch, boolean checkGroup, String encoding, boolean suppressBackup)\n-\t\tthrows SaveException {\n-    \t\n-\t\tTreeMap<String, BibtexEntryType> types = new TreeMap<String, BibtexEntryType>();\n-\t\t\n-\t\tboolean backup = prefs.getBoolean(\"backup\");\n-        if (suppressBackup)\n+            MetaData metaData, File file, JabRefPreferences prefs,\n+            boolean checkSearch, boolean checkGroup, String encoding, boolean suppressBackup)\n+            throws SaveException {\n+\n+        TreeMap<String, BibtexEntryType> types = new TreeMap<String, BibtexEntryType>();\n+\n+        boolean backup = prefs.getBoolean(\"backup\");\n+        if (suppressBackup) {\n             backup = false;\n+        }\n \n-\t\tSaveSession session;\n-\t\tBibtexEntry exceptionCause = null;\n-\t\ttry {\n-\t\t\tsession = new SaveSession(file, encoding, backup);\n-\t\t} catch (Throwable e) {\n-\t\t\tif (encoding != null) {\n-\t\t\t\tSystem.err.println(\"Error from encoding: '\" + encoding + \"' Len: \" + encoding.length());\n-\t\t\t}\n+        SaveSession session;\n+        BibtexEntry exceptionCause = null;\n+        try {\n+            session = new SaveSession(file, encoding, backup);\n+        } catch (Throwable e) {\n+            if (encoding != null) {\n+                System.err.println(\"Error from encoding: '\" + encoding + \"' Len: \" + encoding.length());\n+            }\n \t\t\t// we must catch all exceptions to be able notify users that\n-\t\t\t// saving failed, no matter what the reason was\n-\t\t\t// (and they won't just quit JabRef thinking\n-\t\t\t// everyting worked and loosing data)\n-\t\t\te.printStackTrace();\n-\t\t\tthrow new SaveException(e.getMessage());\n-\t\t}\n+            // saving failed, no matter what the reason was\n+            // (and they won't just quit JabRef thinking\n+            // everyting worked and loosing data)\n+            e.printStackTrace();\n+            throw new SaveException(e.getMessage());\n+        }\n \n-\t\ttry {\n+        try {\n \n \t\t\t// Get our data stream. This stream writes only to a temporary file,\n-\t\t\t// until committed.\n-\t\t\tVerifyingWriter fw = session.getWriter();\n+            // until committed.\n+            VerifyingWriter fw = session.getWriter();\n \n-\t\t\t// Write signature.\n-\t\t\twriteBibFileHeader(fw, encoding);\n+            // Write signature.\n+            writeBibFileHeader(fw, encoding);\n \n-\t\t\t// Write preamble if there is one.\n-\t\t\twritePreamble(fw, database.getPreamble());\n+            // Write preamble if there is one.\n+            writePreamble(fw, database.getPreamble());\n \n-\t\t\t// Write strings if there are any.\n-\t\t\twriteStrings(fw, database);\n+            // Write strings if there are any.\n+            writeStrings(fw, database);\n \n \t\t\t// Write database entries. Take care, using CrossRefEntry-\n-\t\t\t// Comparator, that referred entries occur after referring\n-\t\t\t// ones. Apart from crossref requirements, entries will be\n-\t\t\t// sorted as they appear on the screen.\n-\t\t\tList<BibtexEntry> sorter = getSortedEntries(database, null, true);\n+            // Comparator, that referred entries occur after referring\n+            // ones. Apart from crossref requirements, entries will be\n+            // sorted as they appear on the screen.\n+            List<BibtexEntry> sorter = getSortedEntries(database, null, true);\n \n-\t\t\tFieldFormatter ff = new LatexFieldFormatter();\n+            FieldFormatter ff = new LatexFieldFormatter();\n \n-\t\t\tfor (BibtexEntry be : sorter) {\n-\t\t\t\texceptionCause = be;\n+            for (BibtexEntry be : sorter) {\n+                exceptionCause = be;\n \n \t\t\t\t// Check if we must write the type definition for this\n-\t\t\t\t// entry, as well. Our criterion is that all non-standard\n-\t\t\t\t// types (*not* customized standard types) must be written.\n-\t\t\t\tBibtexEntryType tp = be.getType();\n-\n-\t\t\t\tif (BibtexEntryType.getStandardType(tp.getName()) == null) {\n-\t\t\t\t\ttypes.put(tp.getName(), tp);\n-\t\t\t\t}\n-\n-\t\t\t\t// Check if the entry should be written.\n-\t\t\t\tboolean write = true;\n-\n-\t\t\t\tif (checkSearch && !nonZeroField(be, BibtexFields.SEARCH)) {\n-\t\t\t\t\twrite = false;\n-\t\t\t\t}\n-\n-\t\t\t\tif (checkGroup && !nonZeroField(be, BibtexFields.GROUPSEARCH)) {\n-\t\t\t\t\twrite = false;\n-\t\t\t\t}\n-\n-\t\t\t\tif (write) {\n-\t\t\t\t\tbe.write(fw, ff, true);\n-\t\t\t\t\tfw.write(Globals.NEWLINE);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// Write meta data.\n-\t\t\tif (metaData != null) {\n-\t\t\t\tmetaData.writeMetaData(fw);\n-\t\t\t}\n-\n-\t\t\t// Write type definitions, if any:\n-\t\t\tif (types.size() > 0) {\n-\t\t\t\tfor (Iterator<String> i = types.keySet().iterator(); i\n-\t\t\t\t\t.hasNext();) {\n+                // entry, as well. Our criterion is that all non-standard\n+                // types (*not* customized standard types) must be written.\n+                BibtexEntryType tp = be.getType();\n+\n+                if (BibtexEntryType.getStandardType(tp.getName()) == null) {\n+                    types.put(tp.getName(), tp);\n+                }\n+\n+                // Check if the entry should be written.\n+                boolean write = true;\n+\n+                if (checkSearch && !nonZeroField(be, BibtexFields.SEARCH)) {\n+                    write = false;\n+                }\n+\n+                if (checkGroup && !nonZeroField(be, BibtexFields.GROUPSEARCH)) {\n+                    write = false;\n+                }\n+\n+                if (write) {\n+                    be.write(fw, ff, true);\n+                    fw.write(Globals.NEWLINE);\n+                }\n+            }\n+\n+            // Write meta data.\n+            if (metaData != null) {\n+                metaData.writeMetaData(fw);\n+            }\n+\n+            // Write type definitions, if any:\n+            if (types.size() > 0) {\n+                for (Iterator<String> i = types.keySet().iterator(); i\n+                        .hasNext();) {\n                     BibtexEntryType type = types.get(i.next());\n                     if (type instanceof CustomEntryType) {\n-                        CustomEntryType tp = (CustomEntryType)type;\n+                        CustomEntryType tp = (CustomEntryType) type;\n                         tp.save(fw);\n                         fw.write(Globals.NEWLINE);\n                     }\n-\t\t\t\t}\n-\n-\t\t\t}\n-\n-\t\t\tfw.close();\n-\t\t} catch (Throwable ex) {\n-\t\t\tex.printStackTrace();\n-\t\t\ttry {\n-\t\t\t\tsession.cancel();\n-\t\t\t\t// repairAfterError(file, backup, INIT_OK);\n-\t\t\t} catch (IOException e) {\n-\t\t\t\t// Argh, another error? Can we do anything?\n-\t\t\t\te.printStackTrace();\n-                throw new SaveException(ex.getMessage()+\"\\n\"+\n-                        Globals.lang(\"Warning: could not complete file repair; your file may \"\n-                        +\"have been corrupted. Error message\")+\": \"+e.getMessage());\n+                }\n \n-\t\t\t}\n-\t\t\tthrow new SaveException(ex.getMessage(), exceptionCause);\n-\t\t}\n+            }\n \n-\t\treturn session;\n+            fw.close();\n+        } catch (Throwable ex) {\n+            ex.printStackTrace();\n+            try {\n+                session.cancel();\n+                // repairAfterError(file, backup, INIT_OK);\n+            } catch (IOException e) {\n+                // Argh, another error? Can we do anything?\n+                e.printStackTrace();\n+                throw new SaveException(ex.getMessage() + \"\\n\"\n+                        + Globals.lang(\"Warning: could not complete file repair; your file may \"\n+                                + \"have been corrupted. Error message\") + \": \" + e.getMessage());\n \n+            }\n+            throw new SaveException(ex.getMessage(), exceptionCause);\n+        }\n \n-\t}\n+        return session;\n \n-    private enum SaveOrder {\n-    \tStandard, Original, Title, TableSort\n     }\n-    \n+\n     private static class SaveSettings {\n         public final String pri, sec, ter;\n         public final boolean priD, secD, terD;\n-        \n+\n         public SaveSettings(boolean isSaveOperation) {\n-        \t/* four options:\n-        \t * 1. ordered by author/editor/year (saveInStandardOrder)\n-        \t * 2. original order (saveInOriginalOrder) -- not hit here as SaveSettings is not called in that case\n-        \t * 3. current table sort order (*everything else*)\n-        \t * 4. ordered by title (saveInTitleOrder)\n-        \t */\n-        \tSaveOrder saveOrder;\n-        \tString prefix = isSaveOperation ? \"save\" :  \"export\";\n-        \tif (Globals.prefs.getBoolean(prefix + \"InStandardOrder\")) {\n-        \t\tsaveOrder = SaveOrder.Standard;\n-        \t} else if (Globals.prefs.getBoolean(prefix + \"InTitleOrder\")) {\n-        \t\tsaveOrder = SaveOrder.Title;\n-//        \t} else if (Globals.prefs.getBoolean(prefix + \"InOriginalOrder\")) {\n-        \t\t// this case is never hit as SaveSettings() is never called if InOriginalOrder is true\n-//        \t\tsaveOrder = SaveOrder.Original;\n-        \t} else {\n-        \t\tsaveOrder = SaveOrder.TableSort;\n-        \t}\n-\n-        \tswitch (saveOrder) {\n-        \tcase TableSort:\n+            /* three options:\n+             * 1. original order (saveInOriginalOrder) -- not hit here as SaveSettings is not called in that case\n+             * 2. current table sort order\n+             * 3. ordered by specified order\n+             */\n+            // This case should never behit as SaveSettings() is never called if InOriginalOrder is true\n+            assert isSaveOperation && !Globals.prefs.getBoolean(JabRefPreferences.SAVE_IN_ORIGINAL_ORDER);\n+            assert !isSaveOperation && !Globals.prefs.getBoolean(JabRefPreferences.EXPORT_IN_ORIGINAL_ORDER);\n+\n+            if (isSaveOperation && Globals.prefs.getBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER)) {\n+                pri = Globals.prefs.get(JabRefPreferences.SAVE_PRIMARY_SORT_FIELD);\n+                sec = Globals.prefs.get(JabRefPreferences.SAVE_SECONDARY_SORT_FIELD);\n+                ter = Globals.prefs.get(JabRefPreferences.SAVE_TERTIARY_SORT_FIELD);\n+                priD = Globals.prefs.getBoolean(JabRefPreferences.SAVE_PRIMARY_SORT_DESCENDING);\n+                secD = Globals.prefs.getBoolean(JabRefPreferences.SAVE_SECONDARY_SORT_DESCENDING);\n+                terD = Globals.prefs.getBoolean(JabRefPreferences.SAVE_TERTIARY_SORT_DESCENDING);\n+            } else if (!isSaveOperation && Globals.prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER)) {\n+                pri = Globals.prefs.get(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD);\n+                sec = Globals.prefs.get(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD);\n+                ter = Globals.prefs.get(JabRefPreferences.EXPORT_TERTIARY_SORT_FIELD);\n+                priD = Globals.prefs.getBoolean(JabRefPreferences.EXPORT_PRIMARY_SORT_DESCENDING);\n+                secD = Globals.prefs.getBoolean(JabRefPreferences.EXPORT_SECONDARY_SORT_DESCENDING);\n+                terD = Globals.prefs.getBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING);\n+            } else {\n                 // The setting is to save according to the current table order.\n-                pri = Globals.prefs.get(\"priSort\");\n-                sec = Globals.prefs.get(\"secSort\");\n-                // sorted as they appear on the screen.\n-                ter = Globals.prefs.get(\"terSort\");\n-                priD = Globals.prefs.getBoolean(\"priDescending\");\n-                secD = Globals.prefs.getBoolean(\"secDescending\");\n-                terD = Globals.prefs.getBoolean(\"terDescending\");\n-                break;\n-        \tcase Title:\n-        \t\t// The setting is to not save in standard order, but in title order: title, author, editor\n-        \t\tpri = \"title\";\n-                sec = \"author\";\n-                ter = \"editor\";\n-                priD = false;\n-                secD = false;\n-                terD = false;\n-                break;\n-        \tcase Standard:\n-        \tdefault: // required to get rid of Java compile errors\n-                pri = \"author\";\n-                sec = \"editor\";\n-                ter = \"year\";\n-                priD = false;\n-                secD = false;\n-                terD = true;\n-        \t\tbreak;\n-        \t}\n+                pri = Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD);\n+                sec = Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD);\n+                ter = Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD);\n+                priD = Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING);\n+                secD = Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING);\n+                terD = Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING);\n+            }\n         }\n     }\n-    \n+\n     private static List<Comparator<BibtexEntry>> getSaveComparators(boolean isSaveOperation) {\n         SaveSettings saveSettings = new SaveSettings(isSaveOperation);\n \n         List<Comparator<BibtexEntry>> comparators = new ArrayList<Comparator<BibtexEntry>>();\n-        if (isSaveOperation)\n+        if (isSaveOperation) {\n             comparators.add(new CrossRefEntryComparator());\n+        }\n         comparators.add(new FieldComparator(saveSettings.pri, saveSettings.priD));\n         comparators.add(new FieldComparator(saveSettings.sec, saveSettings.secD));\n         comparators.add(new FieldComparator(saveSettings.ter, saveSettings.terD));\n         comparators.add(new FieldComparator(BibtexFields.KEY_FIELD));\n-        \n+\n         return comparators;\n     }\n-    \n+\n     /**\n-\t * Saves the database to file, including only the entries included in the\n-\t * supplied input array bes.\n-\t * \n-\t * @return A List containing warnings, if any.\n-\t */\n+     * Saves the database to file, including only the entries included in the\n+     * supplied input array bes.\n+     *\n+     * @return A List containing warnings, if any.\n+     */\n     @SuppressWarnings(\"unchecked\")\n-\tpublic static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData metaData,\n-                                                 File file, JabRefPreferences prefs, BibtexEntry[] bes, String encoding) throws SaveException\n-    {\n-\n-    TreeMap<String, BibtexEntryType> types = new TreeMap<String, BibtexEntryType>(); // Map\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// to\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// collect\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// entry\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// type\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// definitions\n-    // that we must save along with entries using them.\n+    public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData metaData,\n+            File file, JabRefPreferences prefs, BibtexEntry[] bes, String encoding) throws SaveException {\n+\n+        TreeMap<String, BibtexEntryType> types = new TreeMap<String, BibtexEntryType>(); // Map\n+        // to\n+        // collect\n+        // entry\n+        // type\n+        // definitions\n+        // that we must save along with entries using them.\n \n         BibtexEntry be = null;\n         boolean backup = prefs.getBoolean(\"backup\");\n@@ -388,8 +371,7 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n             throw new SaveException(e.getMessage());\n         }\n \n-        try\n-        {\n+        try {\n \n             // Define our data stream.\n             VerifyingWriter fw = session.getWriter();\n@@ -401,119 +383,114 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n             writePreamble(fw, database.getPreamble());\n \n             // Write strings if there are any.\n-        writeStrings(fw, database);\n+            writeStrings(fw, database);\n \n             // Write database entries. Take care, using CrossRefEntry-\n             // Comparator, that referred entries occur after referring\n             // ones. Apart from crossref requirements, entries will be\n             // sorted as they appear on the screen.\n+            List<Comparator<BibtexEntry>> comparators = getSaveComparators(true);\n \n-        List<Comparator<BibtexEntry>> comparators = getSaveComparators(true);\n-\n-        // Use glazed lists to get a sorted view of the entries:\n-        BasicEventList entryList = new BasicEventList();\n-        SortedList sorter = new SortedList(entryList, new FieldComparatorStack<BibtexEntry>(comparators));\n+            // Use glazed lists to get a sorted view of the entries:\n+            BasicEventList entryList = new BasicEventList();\n+            SortedList sorter = new SortedList(entryList, new FieldComparatorStack<BibtexEntry>(comparators));\n \n-        if ((bes != null) && (bes.length > 0))\n-        for (int i=0; i<bes.length; i++) {\n-            sorter.add(bes[i]);\n-        }\n+            if ((bes != null) && (bes.length > 0)) {\n+                for (int i = 0; i < bes.length; i++) {\n+                    sorter.add(bes[i]);\n+                }\n+            }\n \n             FieldFormatter ff = new LatexFieldFormatter();\n \n-            for (Iterator<BibtexEntry> i = sorter.iterator(); i.hasNext();)\n-            {\n+            for (Iterator<BibtexEntry> i = sorter.iterator(); i.hasNext();) {\n                 be = (i.next());\n \n         // Check if we must write the type definition for this\n-        // entry, as well. Our criterion is that all non-standard\n-        // types (*not* customized standard types) must be written.\n-        BibtexEntryType tp = be.getType();\n-        if (BibtexEntryType.getStandardType(tp.getName()) == null) {\n-            types.put(tp.getName(), tp);\n-        }\n-\n-        be.write(fw, ff, true);\n-        fw.write(Globals.NEWLINE);\n-        }\n+                // entry, as well. Our criterion is that all non-standard\n+                // types (*not* customized standard types) must be written.\n+                BibtexEntryType tp = be.getType();\n+                if (BibtexEntryType.getStandardType(tp.getName()) == null) {\n+                    types.put(tp.getName(), tp);\n+                }\n+\n+                be.write(fw, ff, true);\n+                fw.write(Globals.NEWLINE);\n+            }\n \n             // Write meta data.\n-            if (metaData != null)\n-            {\n+            if (metaData != null) {\n                 metaData.writeMetaData(fw);\n             }\n \n-        // Write type definitions, if any:\n-        if (types.size() > 0) {\n-        for (Iterator<String> i=types.keySet().iterator(); i.hasNext();) {\n-            CustomEntryType tp = (CustomEntryType)types.get(i.next());\n-            tp.save(fw);\n-            fw.write(Globals.NEWLINE);\n-        }\n+            // Write type definitions, if any:\n+            if (types.size() > 0) {\n+                for (Iterator<String> i = types.keySet().iterator(); i.hasNext();) {\n+                    CustomEntryType tp = (CustomEntryType) types.get(i.next());\n+                    tp.save(fw);\n+                    fw.write(Globals.NEWLINE);\n+                }\n \n-        }\n+            }\n \n             fw.close();\n-        }\n-         catch (Throwable ex)\n-        {\n+        } catch (Throwable ex) {\n             try {\n                 session.cancel();\n                 //repairAfterError(file, backup, status);\n             } catch (IOException e) {\n                 // Argh, another error? Can we do anything?\n                 e.printStackTrace();\n-                throw new SaveException(ex.getMessage()+\"\\n\"+\n-                        Globals.lang(\"Warning: could not complete file repair; your file may \"\n-                        +\"have been corrupted. Error message\")+\": \"+e.getMessage());\n+                throw new SaveException(ex.getMessage() + \"\\n\"\n+                        + Globals.lang(\"Warning: could not complete file repair; your file may \"\n+                                + \"have been corrupted. Error message\") + \": \" + e.getMessage());\n             }\n             throw new SaveException(ex.getMessage(), be);\n-    }\n+        }\n \n         return session;\n \n     }\n \n-\n     /**\n      * This method attempts to get a Reader for the file path given, either by\n-     * loading it as a resource (from within jar), or as a normal file.\n-     * If unsuccessful (e.g. file not found), an IOException is thrown.\n+     * loading it as a resource (from within jar), or as a normal file. If\n+     * unsuccessful (e.g. file not found), an IOException is thrown.\n      */\n     public static Reader getReader(String name) throws IOException {\n-      Reader reader = null;\n-      // Try loading as a resource first. This works for files inside the jar:\n-      URL reso = Globals.class.getResource(name);\n+        Reader reader = null;\n+        // Try loading as a resource first. This works for files inside the jar:\n+        URL reso = Globals.class.getResource(name);\n \n-      // If that didn't work, try loading as a normal file URL:\n-      if (reso != null) {\n-        try {\n-          reader = new InputStreamReader(reso.openStream());\n-        } catch (FileNotFoundException ex) {\n-          throw new IOException(Globals.lang(\"Could not find layout file\")+\": '\"+name+\"'.\");\n-        }\n-      } else {\n-        File f = new File(name);\n-        try {\n-          reader = new FileReader(f);\n-        } catch (FileNotFoundException ex) {\n-          throw new IOException(Globals.lang(\"Could not find layout file\")+\": '\"+name+\"'.\");\n+        // If that didn't work, try loading as a normal file URL:\n+        if (reso != null) {\n+            try {\n+                reader = new InputStreamReader(reso.openStream());\n+            } catch (FileNotFoundException ex) {\n+                throw new IOException(Globals.lang(\"Could not find layout file\") + \": '\" + name + \"'.\");\n+            }\n+        } else {\n+            File f = new File(name);\n+            try {\n+                reader = new FileReader(f);\n+            } catch (FileNotFoundException ex) {\n+                throw new IOException(Globals.lang(\"Could not find layout file\") + \": '\" + name + \"'.\");\n+            }\n         }\n-      }\n \n-      return reader;\n+        return reader;\n     }\n \n     /*\n-    * We have begun to use getSortedEntries() for both database save operations\n-    * and non-database save operations.  In a non-database save operation\n-    * (such as the exportDatabase call), we do not wish to use the\n-    * global preference of saving in standard order.\n-    */\n+     * We have begun to use getSortedEntries() for both database save operations\n+     * and non-database save operations.  In a non-database save operation\n+     * (such as the exportDatabase call), we do not wish to use the\n+     * global preference of saving in standard order.\n+     */\n     @SuppressWarnings(\"unchecked\")\n-\tpublic static List<BibtexEntry> getSortedEntries(BibtexDatabase database, Set<String> keySet, boolean isSaveOperation) {\n-        boolean inOriginalOrder = isSaveOperation ? Globals.prefs.getBoolean(\"saveInOriginalOrder\") :\n-            Globals.prefs.getBoolean(\"exportInOriginalOrder\");\n+    public static List<BibtexEntry> getSortedEntries(BibtexDatabase database, Set<String> keySet, boolean isSaveOperation) {\n+        boolean inOriginalOrder = isSaveOperation ? Globals.prefs.getBoolean(\"saveInOriginalOrder\")\n+                : Globals.prefs.getBoolean(\"exportInOriginalOrder\");\n         List<Comparator<BibtexEntry>> comparators;\n         if (inOriginalOrder) {\n             // Sort entries based on their creation order, utilizing the fact\n@@ -524,14 +501,15 @@ public static Reader getReader(String name) throws IOException {\n         } else {\n             comparators = getSaveComparators(isSaveOperation);\n         }\n-        \n+\n         // Use glazed lists to get a sorted view of the entries:\n         FieldComparatorStack<BibtexEntry> comparatorStack = new FieldComparatorStack<BibtexEntry>(comparators);\n         BasicEventList entryList = new BasicEventList();\n         SortedList sorter = new SortedList(entryList, comparatorStack);\n \n-        if (keySet == null)\n+        if (keySet == null) {\n             keySet = database.getKeySet();\n+        }\n \n         if (keySet != null) {\n             Iterator<String> i = keySet.iterator();\n@@ -543,19 +521,16 @@ public static Reader getReader(String name) throws IOException {\n         return sorter;\n     }\n \n-    /** \n+    /**\n      * @return true iff the entry has a nonzero value in its field.\n      */\n-    private static boolean nonZeroField(BibtexEntry be, String field)\n-    {\n+    private static boolean nonZeroField(BibtexEntry be, String field) {\n         String o = (be.getField(field));\n \n         return ((o != null) && !o.equals(\"0\"));\n     }\n }\n \n-\n-\n ///////////////////////////////////////////////////////////////////////////////\n //  END OF FILE.\n ///////////////////////////////////////////////////////////////////////////////, @@ -1352,11 +1352,11 @@ else if (i == URL_COL)\n \n         /*\n          * // Default sort order: String[] sortFields = new String[]\n-         * {Globals.prefs.get(\"priSort\"), Globals.prefs.get(\"secSort\"),\n-         * Globals.prefs.get(\"terSort\")}; boolean[] sortDirections = new\n-         * boolean[] {Globals.prefs.getBoolean(\"priDescending\"),\n-         * Globals.prefs.getBoolean(\"secDescending\"),\n-         * Globals.prefs.getBoolean(\"terDescending\")}; // descending\n+         * {Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD), Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD),\n+         * Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD)}; boolean[] sortDirections = new\n+         * boolean[] {Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING),\n+         * Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING),\n+         * Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING)}; // descending\n          */\n         sortedList.getReadWriteLock().writeLock().lock();\n         comparatorChooser.appendComparator(PAD, 0, false);, @@ -377,14 +377,19 @@ private void setupComparatorChooser() {\n             comparators.add(new FieldComparator(tableFormat.getColumnName(i).toLowerCase()));\n         }\n \n-\n         // Set initial sort columns:\n \n         // Default sort order:\n-        String[] sortFields = new String[] {Globals.prefs.get(\"priSort\"), Globals.prefs.get(\"secSort\"),\n-            Globals.prefs.get(\"terSort\")};\n-        boolean[] sortDirections = new boolean[] {Globals.prefs.getBoolean(\"priDescending\"),\n-            Globals.prefs.getBoolean(\"secDescending\"), Globals.prefs.getBoolean(\"terDescending\")}; // descending\n+        String[] sortFields = new String[] {\n+            Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD), \n+            Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD),\n+            Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD)\n+        };\n+        boolean[] sortDirections = new boolean[]{\n+            Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING),\n+            Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING),\n+            Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING)\n+        }; // descending\n \n         sortedForTable.getReadWriteLock().writeLock().lock();\n         for (int i=0; i<sortFields.length; i++) {\n@@ -414,24 +419,24 @@ public void actionPerformed(ActionEvent actionEvent) {\n                 // Update preferences:\n                 int count = Math.min(fields.size(), order.size());\n                 if (count >= 1) {\n-                    Globals.prefs.put(\"priSort\", fields.get(0));\n-                    Globals.prefs.putBoolean(\"priDescending\", order.get(0));\n+                    Globals.prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, fields.get(0));\n+                    Globals.prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, order.get(0));\n                 }\n                 if (count >= 2) {\n-                    Globals.prefs.put(\"secSort\", fields.get(1));\n-                    Globals.prefs.putBoolean(\"secDescending\", order.get(1));\n+                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, fields.get(1));\n+                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, order.get(1));\n                 }\n                 else {\n-                    Globals.prefs.put(\"secSort\", \"\");\n-                    Globals.prefs.putBoolean(\"secDescending\", false);\n+                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, false);\n                 }\n                 if (count >= 3) {\n-                    Globals.prefs.put(\"terSort\", fields.get(2));\n-                    Globals.prefs.putBoolean(\"terDescending\", order.get(2));\n+                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, fields.get(2));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, order.get(2));\n                 }\n                 else {\n-                    Globals.prefs.put(\"terSort\", \"\");\n-                    Globals.prefs.putBoolean(\"terDescending\", false);\n+                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, false);\n                 }\n             }\n , ", 1157, 749, "\"added, modified, modified, modified, modified, modified, modified, modified, \"", 1906], ["Simon Harrer", "Gradle build works basically. Reuses existing folder structure.", "03/12/14, 05:20:08 PM", "Simon Harrer", "a66468793a5dcba41f0f9307f8d762baecc7f331", ["build-wrapper.xml", "build.gradle", "src/extensions/SimpleCsvImporter.java"], "@@ -0,0 +1,3 @@\n+<project default=\"test\">\n+    <include file=\"build.xml\" as=\"antTargets\"/>\n+</project>\n\\ No newline at end of file, @@ -0,0 +1,61 @@\n+apply plugin: \"java\"\n+apply plugin: \"eclipse\"\n+apply plugin: \"idea\"\n+apply plugin: \"application\"\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+sourceSets {\n+    main {\n+        java {\n+            srcDir \"src/java\"\n+        }\n+        resources {\n+            srcDirs = [\"src\"]\n+        }\n+    }\n+}\n+\n+dependencies {\n+\n+    // jgoodies\n+    compile 'com.jgoodies:jgoodies-common:1.4.0'\n+    compile 'com.jgoodies:jgoodies-forms:1.6.0'\n+    compile 'com.jgoodies:jgoodies-looks:2.5.2'\n+\n+    compile 'org.apache.pdfbox:pdfbox:1.7.1'\n+    compile 'org.apache.pdfbox:fontbox:1.7.1'\n+    compile 'org.apache.pdfbox:jempbox:1.7.1'\n+\n+\n+    compile 'org.openoffice:juh:3.2.1'\n+    compile 'org.openoffice:jurt:3.2.1'\n+    compile 'org.openoffice:ridl:3.2.1'\n+    compile 'org.openoffice:unoil:3.2.1'\n+\n+    compile 'org.antlr:antlr:3.4'\n+\n+    compile 'mysql:mysql-connector-java:5.0.7'\n+    compile 'org.postgresql:postgresql:9.2-1002-jdbc4'\n+\n+    compile fileTree(dir: 'lib', includes: ['glazedlists-1.8.0_java15.jar', 'jayatana-1.2.4.jar', 'microba.jar', 'spin.jar'])\n+\n+    // not available in maven repository\n+    compile fileTree(dir: 'lib/plugin', includes: ['jpf.jar', 'jpf-boot.jar', 'commons-logging.jar', 'JPFCodeGenerator-rt.jar'])\n+\n+    compile fileTree(dir: 'lib/spl/jersey', includes: ['*.jar'])\n+    compile fileTree(dir: 'lib/spl/sciplore', includes: ['*.jar'])\n+\n+    compile 'junit:junit:3.8.2'\n+}\n+\n+// use ant targets with prefix antTargets.XXXXX\n+ant.importBuild \"build-wrapper.xml\"\n+\n+compileJava.dependsOn \"antTargets.generate\"\n+\n+task wrapper(type: Wrapper) {\n+    gradleVersion = '1.11'\n+}\n\\ No newline at end of file, @@ -13,8 +13,14 @@ public String getFormatName() {\n   public boolean isRecognizedFormat(InputStream stream) throws IOException {\n     return true; // this is discouraged except for demonstration purposes\n   }\n-  \n-  public List importEntries(InputStream stream) throws IOException {    \n+\n+    @Override\n+    public List<BibtexEntry> importEntries(InputStream in, OutputPrinter status) throws IOException {\n+        // MUST BE IMPLEMENTED\n+        return null;\n+    }\n+\n+    public List importEntries(InputStream stream) throws IOException {\n     ArrayList bibitems = new ArrayList();\n     BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n       , ", 72, 2, "\"added, added, modified, \"", 74], ["Egon Willighagen", "Some example new Dutch translations via the GitHub web page.", "03/15/14, 09:33:10 AM", "Egon Willighagen", "0783fd8ea77776e69372e60bde2df3d31abf852e", ["src/resource/JabRef_nl.properties"], "@@ -34,7 +34,7 @@ Abbreviate_journal_names_of_the_selected_entries_(ISO_abbreviation)=Kort_tijdsch\n Abbreviate_journal_names_of_the_selected_entries_(MEDLINE_abbreviation)=Kort_tijdschriftennamen_met_de_geselecteerde_entries_af_(MEDLINE_afkorting)\n \n Abbreviate_names=Namen_afkorten\n-Abbreviated_%0_journal_names.=\n+Abbreviated_%0_journal_names.=Afgekorte_tijdschrift_namen\n \n Abbreviation=Afkorting\n \n@@ -112,7 +112,7 @@ Append_contents_from_a_BibTeX_database_into_the_currently_viewed_database=Voeg_d\n Append_database=Database_invoegen\n \n append_the_selected_text_to_bibtex_key=voeg_de_geselecteerde_tekst_toe_aan_BibTeX-sleutel\n-Application=\n+Application=Programma\n \n Apply=Toepassen\n \n@@ -159,7 +159,7 @@ Automatically_created_groups=Automatisch_aangemaakte_groepen\n \n Automatically_hide_groups_interface_when_switching_to_a_database_that_contains_no_groups=Verberg_automatisch_het_groepenvenster_bij_overgang_naar_een_database_die_geen_groepen_bevat\n \n-Automatically_remove_exact_duplicates=\n+Automatically_remove_exact_duplicates=Automatisch_exacte_kopie\\u00ebn_verwijderen\n \n Automatically_show_groups_interface_when_switching_to_a_database_that_contains_groups=Toon_automatisch_het_groepenvenster_bij_overgang_naar_een_database_die_groepen_bevat\n \n@@ -186,7 +186,7 @@ Background_color_for_optional_fields=Achtergrondkleur_voor_optionele_velden\n Background_color_for_required_fields=Achtergrondkleur_voor_vereiste_velden\n \n Backup_old_file_when_saving=Maak_reservekopie_van_oud_bestand_bij_het_opslaan\n-Beta_version=\n+Beta_version=Beta_versie\n \n BibTeX_key=BibTeX-sleutel\n \n@@ -233,7 +233,7 @@ Change_case=Verander_geval\n \n Change_entry_type=Wijzig_entry_type\n \n-Change_file_type=\n+Change_file_type=Wijzig_bestandstype\n \n change_key=wijzig_sleutel\n \n@@ -305,8 +305,8 @@ Command_line_id=Commandoregel_id\n \n Complete_record=Vervolledig_record\n \n-Connect=\n-Connect_to_SQL_database=\n+Connect=Verbinden\n+Connect_to_SQL_database=Verbind_met_een_SQL_database\n Connection_to_IEEEXplore_failed=\n \n Contained_in=bevat_in\n@@ -2320,7 +2320,7 @@ Run_HTML_converter_on_title=\n Searching...=\n You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?=\n Confirm_selection=\n-Unknown_DOI\\:_'%0'.=\n+Unknown_DOI\\:_'%0'.=Unbekende_DOI\\:_'%0'.\n Get_BibTeX_entry_from_DOI=\n Prefer_converting_subscripts_and_superscripts_to_equations_rather_than_text=\n Add_{}_to_specified_title_words_on_search_to_keep_the_correct_case=\n@@ -2337,7 +2337,7 @@ Unknown_DiVA_entry\\:_'%0'.=\n Get_BibTeX_entry_from_DiVA=\n Log=\n \n-ISO_690=\n+ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n Add_new_entry_and_keep_both_old_entries=\n@@ -2381,9 +2381,9 @@ Run_Unicode_converter_on_title,_author(s),_and_abstract=\n Database_has_changed._Do_you_want_to_save_before_closing?=\n Host=\n Invalid_setting=\n-Network=\n+Network=Netwerk\n Please_specify_both_hostname_and_port=\n-Port=\n+Port=Poort\n Start_field_contents_in_same_column=\n Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=\n Use_custom_proxy_configuration=\n@@ -2393,7 +2393,7 @@ Rebind_C-a,_too=\n \n Show_number_of_elements_contained_in_each_group=\n \n-Open_folder=\n-Opened_%0_folder(s).=\n+Open_folder=Open_map\n+Opened_%0_folder(s).=%0_map(pen)_geopend.\n \n Searches_for_unlinked_PDF_files_on_the_file_system=, ", 13, 13, "\"modified, \"", 26], ["jtornero", "Spanish translation update", "03/17/14, 09:28:26 PM", "jtornero", "71357a4f5234b5eed78eb6eba9d50a0563398cb4", ["src/resource/JabRef_da.properties", "src/resource/JabRef_de.properties", "src/resource/JabRef_en.properties", "src/resource/JabRef_es.properties", "src/resource/JabRef_fr.properties", "src/resource/JabRef_in.properties", "src/resource/JabRef_it.properties", "src/resource/JabRef_nl.properties", "src/resource/JabRef_no.properties", "src/resource/JabRef_pt_BR.properties", "src/resource/JabRef_ru.properties", "src/resource/JabRef_vi.properties", "src/resource/JabRef_zh.properties"], "@@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n %0_contains_the_Regular_Expression_<b>%1</b>=%0_indeholder_regul\\u00e6rudtrykket_<b>%1</b>\n %0_contains_the_term_<b>%1</b>=%0_indeholder_udtrykket_<b>%1</b>, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.55 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0_den_regul\\u00e4ren_Ausdruck_<b>%1</b>_enth\\u00e4lt, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0%0&nbsp;contains_the_Regular_Expression_<b>%1</b>\n@@ -1097,8 +1097,6 @@ Open_database=Open_database\n \n Open_editor_when_a_new_entry_is_created=Open_editor_when_a_new_entry_is_created\n \n-Open_folder=Open_folder\n-\n Open_file=Open_file\n \n Open_last_edited_databases_at_startup=Open_last_edited_databases_at_startup\n@@ -1957,9 +1955,9 @@ Move_file_to_file_directory.=Move_file_to_file_directory.\n Rename_file_to=Rename_file_to\n <b>All_Entries</b>_(this_group_cannot_be_edited_or_removed)=<b>All_Entries</b>_(this_group_cannot_be_edited_or_removed)\n static_group=static_group\n-includes_subgroups=includes_subgroups\n-refines_supergroup=refines_supergroup\n dynamic_group=dynamic_group\n+refines_supergroup=refines_supergroup\n+includes_subgroups=includes_subgroups\n contains=contains\n search_expression=search_expression\n \n@@ -2184,16 +2182,16 @@ No_entry_needed_a_clean_up=No_entry_needed_a_clean_up\n One_entry_needed_a_clean_up=One_entry_needed_a_clean_up\n %0_entries_needed_a_clean_up=%0_entries_needed_a_clean_up\n Error_importing_from_database=Error_importing_from_database\n-%0_databases_will_be_imported=%0_databases_will_be_imported\n-Imported_%0_databases_successfully=Imported_%0_databases_successfully\n Minimize_to_system_tray=Minimize_to_system_tray\n \n Error_downloading_file_'%0'=Error_downloading_file_'%0'\n Download_failed=Download_failed\n+%0_databases_will_be_imported=%0_databases_will_be_imported\n \n Importing_cancelled=Importing_cancelled\n There_are_no_available_databases_to_be_imported=There_are_no_available_databases_to_be_imported\n Import_from_SQL_database=Import_from_SQL_database\n+Imported_%0_databases_successfully=Imported_%0_databases_successfully\n <_CREATE_NEW_DATABASE_>=<_CREATE_NEW_DATABASE_>\n Remove_Selected=Remove_Selected\n SQL_Database_Exporter=SQL_Database_Exporter\n@@ -2245,80 +2243,80 @@ The_current_BibTeX_key_will_be_overwritten._Continue?=The_current_BibTeX_key_wil\n Overwrite_key=Overwrite_key\n Not_overwriting_existing_key._To_change_this_setting,_open_Options_->_Prefererences_->_BibTeX_key_generator=Not_overwriting_existing_key._To_change_this_setting,_open_Options_->_Prefererences_->_BibTeX_key_generator\n How_would_you_like_to_link_to_'%0'?=How_would_you_like_to_link_to_'%0'?\n-Marked_entries_as_relevant=Marked_entries_as_relevant\n-Marked_entries'_quality_as_good=Marked_entries'_quality_as_good\n-no_preview_available=no_preview_available\n-Enable_PDF_preview=Enable_PDF_preview\n-Show_one_letter_heading_for_icon_columns=Show_one_letter_heading_for_icon_columns\n-Help_on_special_fields=Help_on_special_fields\n-Enable_special_fields=Enable_special_fields\n-Show_rank=Show_rank\n-Compact_rank=Compact_rank\n-Show_quality=Show_quality\n-Show_priority=Show_priority\n-Show_relevance=Show_relevance\n-Synchronize_with_keywords=Synchronize_with_keywords\n-Write_values_of_special_fields_as_separate_fields_to_BibTeX=Write_values_of_special_fields_as_separate_fields_to_BibTeX\n-You_have_changed_settings_for_special_fields.=You_have_changed_settings_for_special_fields.\n-Changed_special_field_settings=Changed_special_field_settings\n Bibtex_key_patterns=Bibtex_key_patterns\n+Changed_special_field_settings=Changed_special_field_settings\n+Clear_priority=Clear_priority\n+Clear_rank=Clear_rank\n+Compact_rank=Compact_rank\n Convert_1st,_2nd,_..._to_real_superscripts=Convert_1st,_2nd,_..._to_real_superscripts\n-Manage_content_selectors=Manage_content_selectors\n Dropped_comment_from_database=Dropped_comment_from_database\n-Synchronized_special_fields_based_on_keywords=Synchronized_special_fields_based_on_keywords\n-Clear_priority=Clear_priority\n+Enable_PDF_preview=Enable_PDF_preview\n+Enable_special_fields=Enable_special_fields\n+Five_stars=Five_stars\n+Four_stars=Four_stars\n+Help_on_special_fields=Help_on_special_fields\n+Keywords_of_selected_entries=Keywords_of_selected_entries\n+Manage_content_selectors=Manage_content_selectors\n+Manage_keywords=Manage_keywords\n+Marked_entries'_quality_as_good=Marked_entries'_quality_as_good\n+Marked_entries_as_relevant=Marked_entries_as_relevant\n No_priority_information=No_priority_information\n-Set_priority_to_high=Set_priority_to_high\n+No_rank_information=No_rank_information\n+One_star=One_star\n+Priority=Priority\n Priority_high=Priority_high\n-Set_priority_to_medium=Set_priority_to_medium\n-Priority_medium=Priority_medium\n-Set_priority_to_low=Set_priority_to_low\n Priority_low=Priority_low\n-Priority=Priority\n-Toogle_quality_assured=Toogle_quality_assured\n+Priority_medium=Priority_medium\n Quality=Quality\n Rank=Rank\n-Clear_rank=Clear_rank\n-No_rank_information=No_rank_information\n+Relevance=Relevance\n+Set_priority_to_high=Set_priority_to_high\n+Set_priority_to_low=Set_priority_to_low\n+Set_priority_to_medium=Set_priority_to_medium\n+Set_rank_to_five_stars=Set_rank_to_five_stars\n+Set_rank_to_four_stars=Set_rank_to_four_stars\n Set_rank_to_one_star=Set_rank_to_one_star\n-One_star=One_star\n-Set_rank_to_two_stars=Set_rank_to_two_stars\n-Two_stars=Two_stars\n Set_rank_to_three_stars=Set_rank_to_three_stars\n+Set_rank_to_two_stars=Set_rank_to_two_stars\n+Show_one_letter_heading_for_icon_columns=Show_one_letter_heading_for_icon_columns\n+Show_priority=Show_priority\n+Show_quality=Show_quality\n+Show_rank=Show_rank\n+Show_relevance=Show_relevance\n+Synchronize_with_keywords=Synchronize_with_keywords\n+Synchronized_special_fields_based_on_keywords=Synchronized_special_fields_based_on_keywords\n Three_stars=Three_stars\n-Set_rank_to_four_stars=Set_rank_to_four_stars\n-Four_stars=Four_stars\n-Set_rank_to_five_stars=Set_rank_to_five_stars\n-Five_stars=Five_stars\n Toggle_relevance=Toggle_relevance\n-Relevance=Relevance\n-Manage_keywords=Manage_keywords\n-Keywords_of_selected_entries=Keywords_of_selected_entries\n+Toogle_quality_assured=Toogle_quality_assured\n+Two_stars=Two_stars\n Update_keywords=Update_keywords\n+Write_values_of_special_fields_as_separate_fields_to_BibTeX=Write_values_of_special_fields_as_separate_fields_to_BibTeX\n+You_have_changed_settings_for_special_fields.=You_have_changed_settings_for_special_fields.\n+no_preview_available=no_preview_available\n+%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.=%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.\n+A_string_with_that_label_already_exists=A_string_with_that_label_already_exists\n+Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.=Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.\n \n Correct_the_entry,_and_reopen_editor_to_display/edit_source.=Correct_the_entry,_and_reopen_editor_to_display/edit_source.\n-When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above=When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above\n-If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.=If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.\n-To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.\n-Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!\n-A_string_with_that_label_already_exists=A_string_with_that_label_already_exists\n Could_not_connect_to_a_running_gnuserv_process._Make_sure_that_Emacs_or_XEmacs_is_running,<BR>and_that_the_server_has_been_started_(by_running_the_command_'server-start'/'gnuserv-start').=Could_not_connect_to_a_running_gnuserv_process._Make_sure_that_Emacs_or_XEmacs_is_running,<BR>and_that_the_server_has_been_started_(by_running_the_command_'server-start'/'gnuserv-start').\n-Use_the_following_delimiter_character(s)\\:=Use_the_following_delimiter_character(s):\n+Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message\\:_=Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message:_\n Created_group_\"%0\".=Created_group_\"%0\".\n+If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.=If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.\n+Import_Metadata_From_PDF=Import_Metadata_From_PDF\n+Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.\n+Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!\n Removed_all_subgroups_of_group_\"%0\".=Removed_all_subgroups_of_group_\"%0\".\n-%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.=%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.\n+To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.\n Unable_to_connect._One_possible_reason_is_that_JabRef_and_OpenOffice/LibreOffice_are_not_both_running_in_either_32_bit_mode_or_64_bit_mode.=Unable_to_connect._One_possible_reason_is_that_JabRef_and_OpenOffice/LibreOffice_are_not_both_running_in_either_32_bit_mode_or_64_bit_mode.\n-Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message\\:_=Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message:_\n-Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.\n-Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.=Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.\n-Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.\n-Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.\n Unable_to_determine_plugin_name_and_version._This_may_not_be_a_valid_JabRef_plugin.=Unable_to_determine_plugin_name_and_version._This_may_not_be_a_valid_JabRef_plugin.\n-Import_Metadata_From_PDF=Import_Metadata_From_PDF\n+Use_the_following_delimiter_character(s)\\:=Use_the_following_delimiter_character(s):\n+When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above=When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above\n+Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.\n+Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.\n+Error_fetching_from_Google_Scholar=Error_fetching_from_Google_Scholar\n \n Run_HTML_converter_on_title=Run_HTML_converter_on_title\n Searching...=Searching...\n-Error_fetching_from_Google_Scholar=Error_fetching_from_Google_Scholar\n You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?=You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?\n Confirm_selection=Confirm_selection\n Unknown_DOI\\:_'%0'.=Unknown_DOI:_'%0'.\n@@ -2339,35 +2337,35 @@ Get_BibTeX_entry_from_DiVA=Get_BibTeX_entry_from_DiVA\n Log=Log\n \n ISO_690=ISO_690\n-\n-Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search\n-Use_Emacs_key_bindings=Use_Emacs_key_bindings\n-Merge_entries=Merge_entries\n-Show_URL_first=Show_URL_first\n-Show_DOI_first=Show_DOI_first\n-Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units\n-First_entry=First_entry\n-Use_1st=Use_1st\n-None=None\n-Use_2nd=Use_2nd\n-Second_entry=Second_entry\n-You_have_to_choose_exactly_two_entries_to_merge.=You_have_to_choose_exactly_two_entries_to_merge.\n-Merged_entry=Merged_entry\n-Error_in_entry=Error_in_entry\n Add_new_entry_and_keep_both_old_entries=Add_new_entry_and_keep_both_old_entries\n-Replace_old_entries_with_new_entry=Replace_old_entries_with_new_entry\n Cancelled_merging_entries=Cancelled_merging_entries\n+Error_in_entry=Error_in_entry\n+First_entry=First_entry\n+\n+Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search\n+Merge_entries=Merge_entries\n Merged_entries_into_a_new_and_kept_the_old=Merged_entries_into_a_new_and_kept_the_old\n Merged_entries_into_a_new_and_removed_the_old=Merged_entries_into_a_new_and_removed_the_old\n+Merged_entry=Merged_entry\n+None=None\n Parse=Parse\n+Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations\n+Replace_old_entries_with_new_entry=Replace_old_entries_with_new_entry\n Result=Result\n+Second_entry=Second_entry\n+Show_DOI_first=Show_DOI_first\n+Show_URL_first=Show_URL_first\n+Use_1st=Use_1st\n+Use_2nd=Use_2nd\n+Use_Emacs_key_bindings=Use_Emacs_key_bindings\n+You_have_to_choose_exactly_two_entries_to_merge.=You_have_to_choose_exactly_two_entries_to_merge.\n \n Update_timestamp_on_modification=Update_timestamp_on_modification\n change_field=change_field\n+All_key_bindings_will_be_reset_to_their_defaults.=All_key_bindings_will_be_reset_to_their_defaults.\n \n Automatically_set_file_links=Automatically_set_file_links\n-All_key_bindings_will_be_reset_to_their_defaults.=All_key_bindings_will_be_reset_to_their_defaults.\n Continue?=Continue?\n Resetting_all_key_bindings=Resetting_all_key_bindings\n Save_entries_ordered_by_title=Save_entries_ordered_by_title\n@@ -2378,23 +2376,25 @@ Include_empty_fields=Include_empty_fields\n Field_saving_options=Field_saving_options\n Field_value_delimiter._E.g.,_\"author\\={x}\"_or_\"author\\='x'\"=Field_value_delimiter._E.g.,_\"author={x}\"_or_\"author='x'\"\n Run_Unicode_converter_on_title,_author(s),_and_abstract=Run_Unicode_converter_on_title,_author(s),_and_abstract\n+Database_has_changed._Do_you_want_to_save_before_closing?=Database_has_changed._Do_you_want_to_save_before_closing?\n+Host=Host\n+Invalid_setting=Invalid_setting\n+Network=Network\n+Please_specify_both_hostname_and_port=Please_specify_both_hostname_and_port\n+Port=Port\n \n Start_field_contents_in_same_column=Start_field_contents_in_same_column\n Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")\n-Database_has_changed._Do_you_want_to_save_before_closing?=Database_has_changed._Do_you_want_to_save_before_closing?\n Use_custom_proxy_configuration=Use_custom_proxy_configuration\n-Network=Network\n-Host=Host\n-Port=Port\n-Please_specify_both_hostname_and_port=Please_specify_both_hostname_and_port\n-Invalid_setting=Invalid_setting\n Clear_connection_settings=Clear_connection_settings\n Cleared_connection_settings.=Cleared_connection_settings.\n \n Rebind_C-a,_too=Rebind_C-a,_too\n \n Show_number_of_elements_contained_in_each_group=Show_number_of_elements_contained_in_each_group\n \n+Open_folder=Open_folder\n+Opened_%0_folder(s).=Opened_%0_folder(s).\n+\n \n Searches_for_unlinked_PDF_files_on_the_file_system=Searches_for_unlinked_PDF_files_on_the_file_system\n-Opened_%0_folder(s).=Opened_%0_folder(s)., @@ -1,6 +1,6 @@\n #!\n-#!_created/edited_by_Popeye_version_0.55_(https://github.com/koppor/popeye)\n-#!_encoding:ISO-8859-1\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n+#! encoding:ISO-8859-1\n %0_contains_the_Regular_Expression_<b>%1</b>=%0%0&nbsp;contiene_la_expresi\\u00f3n_regular_<b>%1</b>\n %0_contains_the_term_<b>%1</b>=%0%nbsp;contiene_el_t\\u00e9rmino_<b>%1</b>\n %0_doesn't_contain_the_Regular_Expression_<b>%1</b>=%0_no_contiene_la_Expresi\\u00f3n_Regular_<b>&1</b>\n@@ -307,6 +307,7 @@ Entry_type_names_are_not_allowed_to_contain_white_space_or_the_following_charact\n Entry_types=Tipos_de_entrada\n Error=Error\n Error\\:_=Error:\n+Error_converting_BibTeX_to_XMP\\:_%0=Error convirtiendo BibTeX a XMP:_%0\n Error_converting_XMP_to_'%0'...=Error_convirtiendo_XMP_a_'%0'...\n Error_exporting_to_clipboard=Error_exportando_al_portapapeles\n Error_in_field=Error_en_campo\n@@ -370,6 +371,7 @@ Finished_autosetting_external_links.=Se_ha_finalizado_la_configuraci\\u00f3n_auto\n Finished_synchronizing_%0_links._Entries_changed%c_%1.=Se_ha_finalizado_la_sincronizaci\\u00f3n_de_%0_enlaces._Se_cambiaron_%c_%1_entradas.\n Finished_writing_XMP-metadata._Wrote_to_%0_file(s).=Se_ha_finalizado_la_escritura_de_los_metadtos_XMP._Se_escribi\\u00f3_en_%0_archivo(s).\n Finished_writing_XMP_for_%0_file_(%1_skipped,_%2_errors).=Se_finaliz\\u00f3_la_escritura_XMP_en_archivo_%0_(%1_evitados,_%2_errores).\n+First_select_the_entries_you_want_keys_to_be_generated_for.=En primer lugar, seleccione las entradas para las que desea generar claves\n Fit_table_horizontally_on_screen=Ajustar_la_tabla_al_ancho_de_pantalla\n Float=Flotar\n Float_marked_entries=Flotar_entradas_marcadas\n@@ -758,6 +760,7 @@ Search_general_fields=Buscar_en_campos_generales\n Search_IEEEXplore=Buscar_en_IEEEXplore\n Search_optional_fields=Buscar_en_campos_opcionales\n Search_required_fields=Buscar_en_requeridos\n+Search_specified_field(s)=Buscar en campo(s) especificado(s)\n Searched_database._Global_number_of_hits=Se_ha_buscado_en_la_base_de_datos._N\\u00famero_global_de_coincidencias\n Searched_database._Number_of_hits=Se_ha_buscado_en_la_base_de_datos._N\\u00famero_de_aciertos\n Searching_for_%0_file=Buscando_el_archivo_%0\n@@ -1107,6 +1110,7 @@ Old_plugin_versions_will_be_deleted_next_time_JabRef_starts_up.=Las_versiones_an\n Formatter_not_found\\:_%0=Formateador_no_encontrado\\:_%0\n The_following_formatters_could_not_be_found=Los_siguientes_formateadores_no_se_pueden_encontrar\n Clear_inputarea=Limpiar_\\u00e1rea_de_entrada\n+Automatically_set_file_links_for_this_entry=Ajustar enlaces de archivo autom\\u00c3\\u00a1ticamente para esta entrada\n Could_not_save,_file_locked_by_another_JabRef_instance.=No_se_puede_guardar._Fichero_bloqueado_por_otra_instancia_JabRef.\n File_is_locked_by_another_JabRef_instance.=El_archivo_est\\u00e1_bloqueado_por_otra_instancia_de_JabRef.\n Do_you_want_to_override_the_file_lock?=\\u00bfQuiere_saltarse_el_bloqueo_de_archivo?\n@@ -1126,9 +1130,9 @@ Move_file_to_file_directory.=Mover_archivo_al_directorio_de_archivos.\n Rename_file_to=Renombrar_archivo_a\n <b>All_Entries</b>_(this_group_cannot_be_edited_or_removed)=<b>Todas_las_entradas</b>_(este_grupo_no_puede_ser_editado_o_eliminado)\n static_group=grupo_est\\u00e1tico\n-includes_subgroups=incluye_subgrupos\n-refines_supergroup=afina_supergrupo\n dynamic_group=grupo_din\\u00e1mico\n+refines_supergroup=afina_supergrupo\n+includes_subgroups=incluye_subgrupos\n contains=contiene\n search_expression=expresi\\u00f3n_de_b\\u00fasqueda\n Disable_file_renaming_in_non-native_file_dialog=Deshabilitar_renombrado_de_archivo_en_di\\u00e1logo_de_archivo_no_nativo.\n@@ -1139,6 +1143,7 @@ Error_while_fetching_from_ScienceDirect=Error_al_recuperar_desde_ScienceDirect\n Error_initializing_custom_export_format_from_string_'%0'=Error_inicializando_formato_de_exportaci\\u00f3n_personalizado_a_partir_de_la_cadena_'%0'\n BibLaTeX_mode=Modo_BibLaTex\n Optional_fields_2=Campos_opcionales_2\n+Waiting_for_save_operation_to_finish=Esperando a que acabe la operaci\\u00f3n de guardado\n Resolving_duplicate_BibTeX_keys...=Resolviendo_claves_BibTeX_duplicadas...\n Finished_resolving_duplicate_BibTeX_keys._%0_entries_modified.=Resoluci\\u00f3n_de_claves_BibTeX_duplicadas_finalizada._%0_entradas_modificadas.\n This_database_contains_one_or_more_duplicated_BibTeX_keys.=Esta_base_de_datos_contiene_una_o_m\\u00e1s_claves_BibTeX_duplicadas.\n@@ -1339,14 +1344,14 @@ No_entry_needed_a_clean_up=Ninguna_entrada_necesit\\u00f3_de_limpieza\n One_entry_needed_a_clean_up=S\\u00f3lo_una_entrada_necesit\\u00f3_limpieza\n %0_entries_needed_a_clean_up=%0_entradas_necesitarion_limpieza\n Error_importing_from_database=Error_al_importar_desde_base_de_datos\n-%0_databases_will_be_imported=%0_bases_de_datos_ser\\u00e1n_importadas\n-Imported_%0_databases_successfully=%0_bases_de_datos_importadas_con_\\u00e9xito\n Minimize_to_system_tray=Minimizar_a_la_bandeja_del_sistema\n Error_downloading_file_'%0'=Error_descargando_el_archivo_'%0'\n Download_failed=Fall\\u00f3_la_descarga\n+%0_databases_will_be_imported=%0_bases_de_datos_ser\\u00e1n_importadas\n Importing_cancelled=Importaci\\u00f3n_cancelada\n There_are_no_available_databases_to_be_imported=No_hay_bases_de_datos_disaponibles_para_importar\n Import_from_SQL_database=Importar_desde_base_de_datos_SQL\n+Imported_%0_databases_successfully=%0_bases_de_datos_importadas_con_\\u00e9xito\n <_CREATE_NEW_DATABASE_>=<_CREAR_NUEVA_BASE_DE_DATOS_>\n Remove_Selected=Eliminar_seleccionados\n SQL_Database_Exporter=Exportador_a_base_de_datos_SQL\n@@ -1361,6 +1366,9 @@ Unknown_preference_key_'%0'=Clave_de_preferencia_desconocida_'%0'\n Unable_to_clear_preferences.=No_es_posible_limpiar_preferencias.\n Reset_preferences_(key1,key2,..._or_'all')=Restablecer_preferencias_(key1,key2,..._or_'todas')\n Find_unlinked_files=Buscar_archivos_desenlazados\n+Unselect_all=Deseleccionar todo\n+Expand_all=Expandir todo\n+Collapse_all=Colapsar todo\n Select_Directory=Seleccionar_directorio\n Choose_Directory=Escoger_directorio\n Use_the_selected_directory_to_start_with_the_search.=Usar_la_carpeta_seleccionada_para_comenzar_la_b\\u00fasqueda.\n@@ -1393,78 +1401,78 @@ The_current_BibTeX_key_will_be_overwritten._Continue?=La_clave_BibTeX_actual_va_\n Overwrite_key=Sobreescribir_clave\n Not_overwriting_existing_key._To_change_this_setting,_open_Options_->_Prefererences_->_BibTeX_key_generator=No_se_sobreescribir\\u00e1_clave_existente._Para_cambiar_este_ajuste,_seleccione_Opciones->Preferencias->Generador_de_claves_BiBTeX\n How_would_you_like_to_link_to_'%0'?=\\u00bfC\\u00f3mo_desea_enlazar_'%0'?\n-Marked_entries_as_relevant=Entradas_marcadas_como_relevantes\n-Marked_entries'_quality_as_good=Calidad_de_las_entradas_marcadas_como_buenas\n-no_preview_available=sin_vista_previa\n-Enable_PDF_preview=Habilitar_vista_previa_de_PDF\n-Show_one_letter_heading_for_icon_columns=Mostrar_encabezamiento_de_una_letra_para_columnas_de_icono\n-Help_on_special_fields=Ayuda_sobre_campos_especiales\n-Enable_special_fields=Habilitar_campos_especiales\n-Show_rank=Mostrar_rango\n-Compact_rank=Compactar_rango\n-Show_quality=Mostrar_cualidad\n-Show_priority=Mostrar_prioridad\n-Show_relevance=Mostrar_relevancia\n-Synchronize_with_keywords=Sincronizar_con_palabras_clave\n-Write_values_of_special_fields_as_separate_fields_to_BibTeX=Escribir_valores_de_campos_especiales_como_campos_separados_en_BibTeX\n-You_have_changed_settings_for_special_fields.=Ha_cambiado_los_ajustes_para_campos_especiales.\n-Changed_special_field_settings=Ajustes_de_campos_especiales_cambiados\n Bibtex_key_patterns=Patrones_de_clave_BibTeX\n+Changed_special_field_settings=Ajustes_de_campos_especiales_cambiados\n+Clear_priority=Limpiar_prioridad\n+Clear_rank=Limpiar_rango\n+Compact_rank=Compactar_rango\n Convert_1st,_2nd,_..._to_real_superscripts=Convertir_1st,_2nd,_..._a_super\\u00edndices\n-Manage_content_selectors=Getionar_selectores_de_contenido\n Dropped_comment_from_database=Eliminado_comentario_de_la_base_de_datos\n-Synchronized_special_fields_based_on_keywords=Sincronizar_campos_especiales_basados_en_palabras_clave\n-Clear_priority=Limpiar_prioridad\n+Enable_PDF_preview=Habilitar_vista_previa_de_PDF\n+Enable_special_fields=Habilitar_campos_especiales\n+Five_stars=Cinco_estrellas\n+Four_stars=Cuatro_estrellas\n+Help_on_special_fields=Ayuda_sobre_campos_especiales\n+Keywords_of_selected_entries=Palabras_clave_de_las_entradas_seleccionadas\n+Manage_content_selectors=Getionar_selectores_de_contenido\n+Manage_keywords=Administrar_palabras_clave\n+Marked_entries'_quality_as_good=Calidad_de_las_entradas_marcadas_como_buenas\n+Marked_entries_as_relevant=Entradas_marcadas_como_relevantes\n No_priority_information=Sin_informaci\\u00f3n_de_prioridad\n-Set_priority_to_high=Establecer_prioridad_alta\n+No_rank_information=Sin_informaci\\u00f3n_de_rango\n+One_star=Una_estrella\n+Priority=Prioridad\n Priority_high=Prioridad_alta\n-Set_priority_to_medium=Establecer_prioridad_media\n-Priority_medium=Prioridad_media\n-Set_priority_to_low=Establecer_prioridad_baja\n Priority_low=Prioridad_baja\n-Priority=Prioridad\n-Toogle_quality_assured=Conmutar_calidad_asegurada\n+Priority_medium=Prioridad_media\n Quality=Calidad\n Rank=Rango\n-Clear_rank=Limpiar_rango\n-No_rank_information=Sin_informaci\\u00f3n_de_rango\n+Relevance=Relevancia\n+Set_priority_to_high=Establecer_prioridad_alta\n+Set_priority_to_low=Establecer_prioridad_baja\n+Set_priority_to_medium=Establecer_prioridad_media\n+Set_rank_to_five_stars=Establecer_rango_en_cinco_estrellas\n+Set_rank_to_four_stars=Establecer_rango_en_cuatro_estrellas\n Set_rank_to_one_star=Establecer_rango_en_una_estrella\n-One_star=Una_estrella\n-Set_rank_to_two_stars=Establecer_rango_en_dos_estrellas\n-Two_stars=Dos_estrellas\n Set_rank_to_three_stars=Establecer_rango_en_tres_estrellas\n+Set_rank_to_two_stars=Establecer_rango_en_dos_estrellas\n+Show_one_letter_heading_for_icon_columns=Mostrar_encabezamiento_de_una_letra_para_columnas_de_icono\n+Show_priority=Mostrar_prioridad\n+Show_quality=Mostrar_cualidad\n+Show_rank=Mostrar_rango\n+Show_relevance=Mostrar_relevancia\n+Synchronize_with_keywords=Sincronizar_con_palabras_clave\n+Synchronized_special_fields_based_on_keywords=Sincronizar_campos_especiales_basados_en_palabras_clave\n Three_stars=Tres_estrellas\n-Set_rank_to_four_stars=Establecer_rango_en_cuatro_estrellas\n-Four_stars=Cuatro_estrellas\n-Set_rank_to_five_stars=Establecer_rango_en_cinco_estrellas\n-Five_stars=Cinco_estrellas\n Toggle_relevance=Conmutar_relevancia\n-Relevance=Relevancia\n-Manage_keywords=Administrar_palabras_clave\n-Keywords_of_selected_entries=Palabras_clave_de_las_entradas_seleccionadas\n+Toogle_quality_assured=Conmutar_calidad_asegurada\n+Two_stars=Dos_estrellas\n Update_keywords=Actualizar_palabras_clave\n-Correct_the_entry,_and_reopen_editor_to_display/edit_source.=Corregir_la_entrada_y_reabrir_el_editor_para_mostrar/editar_fuente.\n-When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above=Al_descargar_archivos_o_mover_archivos_enlazados_a_la_carpeta_de_archivos,_preferir_la_ubicaci\\u00f3n_del_archivo_bib_antes_que_el_directorio_de_archivos_establecido_arriba.\n-If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.=Si_una_entrada_importada_o_pegada_ya_tiene_el_campo_establecido,_sobreescribir.\n-To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=Para_deshabilitar_el_modo_l\\u00e1piz_de_memoria,_renombre_o_elimine_el_archivo_jabrf.xml_en_la_misma_carpeta_que_JabRef.\n-Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=Tenga_en_cuanta_que_es_una_versi\\u00f3n_beta_temprana._\\u00a1No_la_use_sin_hacer_una_copia_de_seguridad_de_sus_archivos!\n+Write_values_of_special_fields_as_separate_fields_to_BibTeX=Escribir_valores_de_campos_especiales_como_campos_separados_en_BibTeX\n+You_have_changed_settings_for_special_fields.=Ha_cambiado_los_ajustes_para_campos_especiales.\n+no_preview_available=sin_vista_previa\n+%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.=%0_entradas_encontradas._Para_reducir_la_carga_del_servidor,_s\\u00f3lo_%1_ser\\u00e1(n)_descargada(s).\n A_string_with_that_label_already_exists=Una_cadena_con_esa_etiqueta_ya_existe\n+Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.=La_conexi\\u00f3n_con_OpenOffice/LibreOffice_se_ha_perdido._Aseg\\u00farese_de_que_OpenOffice/LibreOffice_est\\u00e1_ejecut\\u00e1ndose_e_intente_reconectar.\n+Correct_the_entry,_and_reopen_editor_to_display/edit_source.=Corregir_la_entrada_y_reabrir_el_editor_para_mostrar/editar_fuente.\n Could_not_connect_to_a_running_gnuserv_process._Make_sure_that_Emacs_or_XEmacs_is_running,<BR>and_that_the_server_has_been_started_(by_running_the_command_'server-start'/'gnuserv-start').=No_se_puede_conectar_con_un_proceso_gnuserv_ejecut\\u00e1ndose._Aseg\\u00farese_de_que_Emacs_o_XEmacs_est\\u00e1_ejecut\\u00e1ndose,<BR>y_que_el_servidor_se_ha_arrancado_(ejecutando_el_comando_'server-start'/'gnuserv-start').\n-Use_the_following_delimiter_character(s)\\:=Usar_como_caracter(es)_delimitador(es):\n+Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message\\:_=No_se_puede_conectar_a_un_OpenOffice/LibreOffice_en_ejecuci\\u00f3n.\\nAseg\\u00farese_de_que_tiene_OpenOffice/LibreOffice_instalado_con_soporte_para_Java.\\nlf__connecting_manually,_por_favor_verifique_las_ruta_de_programa_y_librer\\u00edas.\\n\\nMensaje_de_error:_\n Created_group_\"%0\".=Creado_grupo_\"%0\".\n+If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.=Si_una_entrada_importada_o_pegada_ya_tiene_el_campo_establecido,_sobreescribir.\n+Import_Metadata_From_PDF=Importar_metadatos_desde_PDF\n+Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=No_conectado_a_ning\\u00fan_documento_Writer._Aseg\\u00farese_de_que_un_documento_est\\u00e1_abierto_y_use_el_bot\\u00f3n_\"Seleccionar_documento_Writer'_para_conectar_con_\\u00e9l.\n+Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=Tenga_en_cuanta_que_es_una_versi\\u00f3n_beta_temprana._\\u00a1No_la_use_sin_hacer_una_copia_de_seguridad_de_sus_archivos!\n Removed_all_subgroups_of_group_\"%0\".=Eliminados_todos_los_subgrupos_del_grupo_\"%0\".\n-%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.=%0_entradas_encontradas._Para_reducir_la_carga_del_servidor,_s\\u00f3lo_%1_ser\\u00e1(n)_descargada(s).\n+To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=Para_deshabilitar_el_modo_l\\u00e1piz_de_memoria,_renombre_o_elimine_el_archivo_jabrf.xml_en_la_misma_carpeta_que_JabRef.\n Unable_to_connect._One_possible_reason_is_that_JabRef_and_OpenOffice/LibreOffice_are_not_both_running_in_either_32_bit_mode_or_64_bit_mode.=No_es_posible_conectar._Una_posible_raz\\u00f3n_es_que_JabRef_y_OpenOffice/LibreOffice_no_est\\u00e1n_funcionado_en_modo_32_bit_o_64_bit.\n-Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message\\:_=No_se_puede_conectar_a_un_OpenOffice/LibreOffice_en_ejecuci\\u00f3n.\\nAseg\\u00farese_de_que_tiene_OpenOffice/LibreOffice_instalado_con_soporte_para_Java.\\nlf__connecting_manually,_por_favor_verifique_las_ruta_de_programa_y_librer\\u00edas.\\n\\nMensaje_de_error:_\n-Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=No_conectado_a_ning\\u00fan_documento_Writer._Aseg\\u00farese_de_que_un_documento_est\\u00e1_abierto_y_use_el_bot\\u00f3n_\"Seleccionar_documento_Writer'_para_conectar_con_\\u00e9l.\n-Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.=La_conexi\\u00f3n_con_OpenOffice/LibreOffice_se_ha_perdido._Aseg\\u00farese_de_que_OpenOffice/LibreOffice_est\\u00e1_ejecut\\u00e1ndose_e_intente_reconectar.\n-Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Su_archivo_de_estilo_especifica_el_formato_de_p\\u00e1rrafo_'%0',_que_no_est\\u00e1_definido_en_su_documento_OpenOffice/LibreOffice.\n-Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Su_archivo_de_estilo_especifica_el_formato_de_car\\u00e1cter_'%0',_que_no_est\\u00e1_definido_en_su_documento_OpenOffice_actual.\n Unable_to_determine_plugin_name_and_version._This_may_not_be_a_valid_JabRef_plugin.=No_es_posible_determinar_el_nombre_y_versi\\u00f3n_del_plugin._Puede_que_no_sea_un_plugin_JabRef_v\\u00e1lido.\n-Import_Metadata_From_PDF=Importar_metadatos_desde_PDF\n+Use_the_following_delimiter_character(s)\\:=Usar_como_caracter(es)_delimitador(es):\n+When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above=Al_descargar_archivos_o_mover_archivos_enlazados_a_la_carpeta_de_archivos,_preferir_la_ubicaci\\u00f3n_del_archivo_bib_antes_que_el_directorio_de_archivos_establecido_arriba.\n+Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Su_archivo_de_estilo_especifica_el_formato_de_car\\u00e1cter_'%0',_que_no_est\\u00e1_definido_en_su_documento_OpenOffice_actual.\n+Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=Su_archivo_de_estilo_especifica_el_formato_de_p\\u00e1rrafo_'%0',_que_no_est\\u00e1_definido_en_su_documento_OpenOffice/LibreOffice.\n+Error_fetching_from_Google_Scholar=Error_recuperando_desde_Google_Scholar\n Run_HTML_converter_on_title=Ejecutar_conversor_HTML_en_t\\u00edtulo\n Searching...=Buscando...\n-Error_fetching_from_Google_Scholar=Error_recuperando_desde_Google_Scholar\n You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?=Ha_seleccionado_m\\u00e1s_de_%0_entradas_para_descargar._Algunos_sitios_web_podr\\u00edan_bloquearle_si_hace_demasiadas_descargas._\\u00bfDesea_continuar?\n Confirm_selection=Confirmar_selecci\\u00f3n\n Unknown_DOI\\:_'%0'.=DOI_desconocido:_'%0'.\n@@ -1484,32 +1492,32 @@ Unknown_DiVA_entry\\:_'%0'.=Entrada_DiVA_desconocida:_'%0'.\n Get_BibTeX_entry_from_DiVA=Obtener_entrada_BibTeX_desde_DiVA\n Log=Registro\n ISO_690=ISO_690\n-Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Formatear_unidades_a\\u00f1adiendo_separadores_no_divisores_y_manteniendo_may\\u00fasculas/min\\u00fasculas_correctamente_en_la_b\\u00fasqueda\n-Use_Emacs_key_bindings=Usar_combinaciones_de_teclas_de_Emacs\n-Merge_entries=Fusionar_entradas\n-Show_URL_first=Mostrar_URL_en_primer_lugar\n-Show_DOI_first=Mostrar_DOI_en_primer_lugar\n-Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Eliminar_$,_{_y_}_innecesarios_y_mover_n\\u00fameros_adyacentes_a_ecuaciones\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=A\\u00f1adir_par\\u00e9ntesis_y_reemplazar_separadores_con_sus_versiones_no_divisoras_para_unidades.\n-First_entry=Primera_entrada\n-Use_1st=Usar_primero\n-None=Ning\\u00fan\n-Use_2nd=Usar_segundo\n-Second_entry=Segunda_entrada\n-You_have_to_choose_exactly_two_entries_to_merge.=Tiene_que_escoger_exactamente_dos_entradas_para_fusionar.\n-Merged_entry=Entrada_fusionada\n-Error_in_entry=Error_en_la_entrada\n Add_new_entry_and_keep_both_old_entries=A\\u00f1adir_nueva_entrada_y_mantener_las_dos_entradas_antiguas\n-Replace_old_entries_with_new_entry=Reemplazar_viejas_entradas_con_la_nueva\n Cancelled_merging_entries=Cancelar_fusionado_de_entradas\n+Error_in_entry=Error_en_la_entrada\n+First_entry=Primera_entrada\n+Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Formatear_unidades_a\\u00f1adiendo_separadores_no_divisores_y_manteniendo_may\\u00fasculas/min\\u00fasculas_correctamente_en_la_b\\u00fasqueda\n+Merge_entries=Fusionar_entradas\n Merged_entries_into_a_new_and_kept_the_old=Fusionar_entradas_en_una_nueva_y_mantener_la_antigua\n Merged_entries_into_a_new_and_removed_the_old=Entradas_fusionadas_en_una_nueva_y_eliminada_la_antigua\n+Merged_entry=Entrada_fusionada\n+None=Ning\\u00fan\n Parse=Analizar\n+Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Eliminar_$,_{_y_}_innecesarios_y_mover_n\\u00fameros_adyacentes_a_ecuaciones\n+Replace_old_entries_with_new_entry=Reemplazar_viejas_entradas_con_la_nueva\n Result=Resultado\n+Second_entry=Segunda_entrada\n+Show_DOI_first=Mostrar_DOI_en_primer_lugar\n+Show_URL_first=Mostrar_URL_en_primer_lugar\n+Use_1st=Usar_primero\n+Use_2nd=Usar_segundo\n+Use_Emacs_key_bindings=Usar_combinaciones_de_teclas_de_Emacs\n+You_have_to_choose_exactly_two_entries_to_merge.=Tiene_que_escoger_exactamente_dos_entradas_para_fusionar.\n Update_timestamp_on_modification=Actualizar_marca_de_tiempo_al_modificar\n change_field=cambiar_campo\n-Automatically_set_file_links=Establecer_enlaces_de_archivo_autom\\u00e1ticamente\n All_key_bindings_will_be_reset_to_their_defaults.=Todas_las_combinaciones_de_teclas_ser\\u00e1n_restablecidas_a_su_configuraci\\u00f3n_por_defecto\n+Automatically_set_file_links=Establecer_enlaces_de_archivo_autom\\u00e1ticamente\n Continue?=\\u00bfContinuar?\n Resetting_all_key_bindings=Reestableciendo_todas_las_combinaciones_de_teclas\n Save_entries_ordered_by_title=Guardar_entradas_ordenadas_por_t\\u00edtulo\n@@ -1520,29 +1528,21 @@ Include_empty_fields=Incluir_campos_vac\\u00edos\n Field_saving_options=Opciones_de_guardado_de_campo\n Field_value_delimiter._E.g.,_\"author\\={x}\"_or_\"author\\='x'\"=Delimitador_de_valor_de_campo._Ej._\"author={x}\"_o_\"author='x'\"\n Run_Unicode_converter_on_title,_author(s),_and_abstract=Ejecutar_conversor_Unicode_en_t\\u00edtulo,_autor(es)_y_resumen\n-Start_field_contents_in_same_column=Comenzar_los_contenidos_del_campo_en_la_misma_columna\n-Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=Usar_camel_case_para_nombres_de_campo_UEj._\"VistaHermosa\"_en_lugar_de_\"vistahermosa\")\n Database_has_changed._Do_you_want_to_save_before_closing?=La_base_de_datos_ha_cambiado._\\u00bfDesea_guardar_antes_de_cerra?\n-Use_custom_proxy_configuration=Usar_configuraci\\u00f3n_de_proxy_personalizada\n-Network=Red\n Host=Host\n-Port=Puerto\n-Please_specify_both_hostname_and_port=Especifique_tanto_nombre_de_host_como_puerto\n Invalid_setting=Ajuste_inv\\u00e1lido\n-Automatically_set_file_links_for_this_entry=Ajustar enlaces de archivo autom\\u00c3\\u00a1ticamente para esta entrada\n+Network=Red\n+Please_specify_both_hostname_and_port=Especifique_tanto_nombre_de_host_como_puerto\n+Port=Puerto\n+Start_field_contents_in_same_column=Comenzar_los_contenidos_del_campo_en_la_misma_columna\n+Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=Usar_camel_case_para_nombres_de_campo_UEj._\"VistaHermosa\"_en_lugar_de_\"vistahermosa\")\n+Use_custom_proxy_configuration=Usar_configuraci\\u00f3n_de_proxy_personalizada\n Clear_connection_settings=Limpiar ajustes de conexi\\u00c3\\u00b3n\n Cleared_connection_settings.=Ajustes de conexi\\u00f3n limpiados\n-Collapse_all=Colapsar todo\n-Error_converting_BibTeX_to_XMP\\:_%0=Error convirtiendo BibTeX a XMP:_%0\n-Expand_all=Expandir todo\n-First_select_the_entries_you_want_keys_to_be_generated_for.=En primer lugar, seleccione las entradas para las que desea generar claves\n Rebind_C-a,_too=Volver a combinar C-a tambi\\u00c3\\u00a9n\n-Search_specified_field(s)=Buscar en campo(s) especificado(s)\n-Unselect_all=Deseleccionar todo\n-Waiting_for_save_operation_to_finish=Esperando a que acabe la operaci\\u00f3n de guardado\n Show_number_of_elements_contained_in_each_group=Mostrar n\\u00famero de elementos contenidos en cada grupo\n \n-Open_folder=\n-Opened_%0_folder(s).=\n+Open_folder=Abrir_carpeta\n+Opened_%0_folder(s).=Se_abrieron_%0_carpeta(s).\n \n-Searches_for_unlinked_PDF_files_on_the_file_system=\n+Searches_for_unlinked_PDF_files_on_the_file_system=Busca_archivos_PDF_sin_enlazar_en_el_sistema_de_archivos, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n %0_contains_the_Regular_Expression_<b>%1</b>=%0&nbsp;contient_l'expression_r\\u00e9guli\\u00e8re_<b>%1</b>\n %0_contains_the_term_<b>%1</b>=%0&nbsp;contient_le_terme_<b>%1</b>\n@@ -1516,8 +1516,8 @@ Run_HTML_converter_on_title=Lancer_le_convertisseur_HTML_sur_le_titre\n Searching...=Recherche...\n You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?=Vous_avez_s\\u00e9lectionn\\u00e9_plus_de_%0_entr\\u00e9es_\\u00e0_t\\u00e9l\\u00e9charger._Certains_sites_web_pourraient_vous_bloquer_si_vous_effectuez_de_trop_nombreux_et_rapides_t\\u00e9l\\u00e9chargements._Voulez-vous_continuer?\n Confirm_selection=Confirmez_la_s\\u00e9lection\n-Get_BibTeX_entry_from_DOI=Obtenir_l'entr\\u00e9e_BibTeX_\\u00e0_partir_du_DOI\n Unknown_DOI\\:_'%0'.=DOI_inconnu_:_'%0'.\n+Get_BibTeX_entry_from_DOI=Obtenir_l'entr\\u00e9e_BibTeX_\\u00e0_partir_du_DOI\n Prefer_converting_subscripts_and_superscripts_to_equations_rather_than_text=Conversion_des_indices_et_exposants_en_\\u00e9quations_plut\\u00f4t_qu'en_texte\n Add_{}_to_specified_title_words_on_search_to_keep_the_correct_case=Ajouter_{}_aux_mots_du_titre_sp\\u00e9cifi\\u00e9s_lors_d'une_recherche_pour_pr\\u00e9server_la_casse_correcte\n Import_conversions=Importer_les_conversions, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n %0_contains_the_Regular_Expression_<b>%1</b>=%0_mengandung_Ekspresi_Reguler_<b>%1</b>\n %0_contains_the_term_<b>%1</b>=%_mengandung_istilah_<b>%1</b>, @@ -1,5 +1,5 @@\n #!\n-#! edited by Eclipse PropertiesEditor\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n %0_contains_the_Regular_Expression_<b>%1</b>=%0_contiene_l'Espressione_Regolare_<b>%1</b>\n %0_contains_the_term_<b>%1</b>=%0_contiene_il_termine_<b>%1</b>\n@@ -1429,6 +1429,9 @@ Show=Mostra\n This_is_a_simple_copy_and_paste_dialog._First_load_or_paste_some_text_into_the_text_input_area.<br>After_that,_you_can_mark_text_and_assign_it_to_a_BibTeX_field.=Questo_\\u00e8_un_semplice_dialogo_di_copia_e_incolla._Prima_carica_o_incolla_il_testo_nell'area_di_inserimento_di_testo.<BR>Quindi_\\u00e8_possibile_selezionare_parti_del_testo_e_assegnarle_ai_campi_BibTeX.\n Java_Bouncy_Castle_library_not_found._Please_download_and_install_it._For_more_information_see_http\\://www.bouncycastle.org/.=La_libreria_Java_Bouncy_Castle_non_\\u00e8_stata_trovata._\\u00c8_necessario_scaricarla_ed_installarla._Per_ulteriori_informazioni_vedi_http://www.bouncycastle.org/.\n \n+This_feature_generates_a_new_database_based_on_which_entries_are_needed_in_an_existing_LaTeX_document.=Questa_funzione_genera_un_nuovo_database_basato_sulle_voci_necessarie_in_un_documento_LaTeX_esistente.\n+You_need_to_select_one_of_your_open_databases_from_which_to_choose_entries,_as_well_as_the_AUX_file_produced_by_LaTeX_when_compiling_your_document.=\\u00c8_necessario_selezionare_uno_dei_database_aperti_da_cui_scegliere_le_voci,_cos\\u00ec_come_il_file_AUX_prodotto_da_LaTeX_nel_compilare_il_documento.\n+\n First_select_entries_to_clean_up.=Selezionare_le_voci_da_ripulire.\n Cleanup_entry=Ripulisci_voce\n Autogenerate_PDF_Names=Genera_automaticamente_i_nomi_dei_file_PDF\n@@ -1443,6 +1446,7 @@ Autocomplete_after_following_number_of_characters=Attiva_autocompletamento_dopo_\n Name_format_used_for_autocompletion=Formato_dei_nomi_usato_per_l'autocompletamento\n Treatment_of_first_names=Gestione_dei_nomi\n Cleanup_entries=Ripulisci_voci\n+Automatically_assign_new_entry_to_selected_groups=Assegna_automaticamente_la_nuova_voce_ai_gruppi_selezionati\n Move_DOIs_from_note_and_URL_field_to_DOI_field_and_remove_http_prefix=Sposta_i_DOI_dai_campi_note_e_URL_al_campo_DOI_e_rimuovi_il_prefisso_'http'\n Format_content_of_month_field_to_#mon#=Formatta_il_contenuto_del_campo_'month'_nella_forma_'#mon#'\n Ensure_that_page_ranges_are_of_the_form_num1--num2=Assicura_che_gli_intervalli_di_pagine_siano_nella_forma_'num1--num2'\n@@ -1454,12 +1458,8 @@ Doing_a_cleanup_for_%0_entries...=Ripulitura_per_%0_voci...\n No_entry_needed_a_clean_up=Nessuna_voce_necessita_ripulitura\n One_entry_needed_a_clean_up=Una_voce_necessita_ripulitura\n %0_entries_needed_a_clean_up=%0_voci_necessitano_ripulitura\n-Minimize_to_system_tray=Minimizza_nell'area_di_notifica\n-\n-This_feature_generates_a_new_database_based_on_which_entries_are_needed_in_an_existing_LaTeX_document.=Questa_funzione_genera_un_nuovo_database_basato_sulle_voci_necessarie_in_un_documento_LaTeX_esistente.\n-You_need_to_select_one_of_your_open_databases_from_which_to_choose_entries,_as_well_as_the_AUX_file_produced_by_LaTeX_when_compiling_your_document.=\\u00c8_necessario_selezionare_uno_dei_database_aperti_da_cui_scegliere_le_voci,_cos\\u00ec_come_il_file_AUX_prodotto_da_LaTeX_nel_compilare_il_documento.\n-Automatically_assign_new_entry_to_selected_groups=Assegna_automaticamente_la_nuova_voce_ai_gruppi_selezionati\n Error_importing_from_database=Errore_di_importazione_dal_database\n+Minimize_to_system_tray=Minimizza_nell'area_di_notifica\n \n Error_downloading_file_'%0'=Errore_nel_corso_del_download_del_file_'%0'\n Download_failed=Download_fallito, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0_bevat_de_regular_expression_<b>%1</b>\n@@ -1842,6 +1842,7 @@ This_feature_lets_new_files_be_opened_or_imported_into_an_already_running_instan\n Note_that_these_settings_are_used_for_the_legacy_<b>pdf</b>_and_<b>ps</b>_fields_only.<br>For_most_users,_setting_the_<b>Main_file_directory</b>_above_should_be_sufficient.=\n Legacy_file_fields=\n This_makes_JabRef_look_up_each_%0_extension_and_check_if_the_file_exists._If_not,_you_will_be_given_options<BR>to_resolve_the_problem.=\n+Run_Fetcher,_e.g._\"--fetch\\=Medline\\:cancer\"=\n The_ACM_Digital_Library=\n Reset=\n Use_IEEE_LaTeX_abbreviations=\n@@ -2306,7 +2307,6 @@ Import_Metadata_From_PDF=\n Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=\n Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=\n Removed_all_subgroups_of_group_\"%0\".=\n-Run_Fetcher,_e.g._\"--fetch\\=Medline\\:cancer\"=\n To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=\n Unable_to_connect._One_possible_reason_is_that_JabRef_and_OpenOffice/LibreOffice_are_not_both_running_in_either_32_bit_mode_or_64_bit_mode.=\n Unable_to_determine_plugin_name_and_version._This_may_not_be_a_valid_JabRef_plugin.=, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0_inneholder_regul\\u00e6ruttrykket_<b>%1</b>\n@@ -100,6 +100,7 @@ All_fields=Alle_felter\n All_subgroups_(recursively)=Alle_undergrupper_(rekursivt)\n \n Allow_editing_in_table_cells=Tillat_redigering_av_celler_i_tabellen\n+An_Error_occurred_while_fetching_from_OAI2_source_(%0)\\:=En_feil_oppsto_under_nedlasting_fra_OIA2_source_(%0):\n \n An_Exception_ocurred_while_accessing_'%0'=En_feil_oppsto_ved_lesing_av_'%0'\n \n@@ -2610,6 +2611,13 @@ You_must_select_either_a_valid_style_file,_or_use_a_default_style.=Du_m\\u00e5_en\n \n Show=Vis\n \n+This_is_a_simple_copy_and_paste_dialog._First_load_or_paste_some_text_into_the_text_input_area.<br>After_that,_you_can_mark_text_and_assign_it_to_a_BibTeX_field.=Dette_er_et_enkelt_klipp-og-lim-vindu._F\\u00f8rst_last_inn_eller_lim_inn_tekst_i_tekstfeltet.<br>Deretter_kan_du_merke_tekst_og_tilordne_den_til_BibTeX-felter.\n+Java_Bouncy_Castle_library_not_found._Please_download_and_install_it._For_more_information_see_http\\://www.bouncycastle.org/.=Java_Bouncy_Castle-bibliotek_ikke_tilgjengelig._For_\\u00e5_f\\u00e5_tilgang_til_dette_kan_du_installere_det._For_mer_informasjon,_se_http://www.bouncycastle.org/.\n+\n+This_feature_generates_a_new_database_based_on_which_entries_are_needed_in_an_existing_LaTeX_document.=Denne_funksjonen_genererer_en_ny_database_basert_p\\u00e5_hvilke_enheter_som_trengs_i_et_eksisterende_LaTeX-dokument.\n+\n+You_need_to_select_one_of_your_open_databases_from_which_to_choose_entries,_as_well_as_the_AUX_file_produced_by_LaTeX_when_compiling_your_document.=Du_m\\u00e5_velge_en_av_de_\\u00e5pne_databasene_hvor_enheter_skal_hentes_fra,_i_tillegg_til_AUX-filen_generert_av_LaTeX_n\\u00e5r_dokumentet_kompileres.\n+\n First_select_entries_to_clean_up.=\n Cleanup_entry=\n Autogenerate_PDF_Names=\n@@ -2625,6 +2633,8 @@ Name_format_used_for_autocompletion=\n Treatment_of_first_names=\n Cleanup_entries=\n \n+Automatically_assign_new_entry_to_selected_groups=Tilordne_automatisk_nye_enheter_til_valgte_grupper\n+\n Move_DOIs_from_note_and_URL_field_to_DOI_field_and_remove_http_prefix=\n Format_content_of_month_field_to_#mon#=\n Ensure_that_page_ranges_are_of_the_form_num1--num2=\n@@ -2637,16 +2647,8 @@ No_entry_needed_a_clean_up=\n One_entry_needed_a_clean_up=\n %0_entries_needed_a_clean_up=\n \n-This_is_a_simple_copy_and_paste_dialog._First_load_or_paste_some_text_into_the_text_input_area.<br>After_that,_you_can_mark_text_and_assign_it_to_a_BibTeX_field.=Dette_er_et_enkelt_klipp-og-lim-vindu._F\\u00f8rst_last_inn_eller_lim_inn_tekst_i_tekstfeltet.<br>Deretter_kan_du_merke_tekst_og_tilordne_den_til_BibTeX-felter.\n-Java_Bouncy_Castle_library_not_found._Please_download_and_install_it._For_more_information_see_http\\://www.bouncycastle.org/.=Java_Bouncy_Castle-bibliotek_ikke_tilgjengelig._For_\\u00e5_f\\u00e5_tilgang_til_dette_kan_du_installere_det._For_mer_informasjon,_se_http://www.bouncycastle.org/.\n-\n-This_feature_generates_a_new_database_based_on_which_entries_are_needed_in_an_existing_LaTeX_document.=Denne_funksjonen_genererer_en_ny_database_basert_p\\u00e5_hvilke_enheter_som_trengs_i_et_eksisterende_LaTeX-dokument.\n-\n-You_need_to_select_one_of_your_open_databases_from_which_to_choose_entries,_as_well_as_the_AUX_file_produced_by_LaTeX_when_compiling_your_document.=Du_m\\u00e5_velge_en_av_de_\\u00e5pne_databasene_hvor_enheter_skal_hentes_fra,_i_tillegg_til_AUX-filen_generert_av_LaTeX_n\\u00e5r_dokumentet_kompileres.\n-\n-Automatically_assign_new_entry_to_selected_groups=Tilordne_automatisk_nye_enheter_til_valgte_grupper\n-\n Error_importing_from_database=Feil_ved_import_fra_database\n+Minimize_to_system_tray=\n \n Error_downloading_file_'%0'=Feil_ved_nedlasting_av_filen_'%0'\n Download_failed=Nedlasting_mislyktes\n@@ -2665,8 +2667,6 @@ Please_select_which_JabRef_databases_do_you_want_to_import\\:=Vennligst_velg_hvil\n \n Group_tree_could_not_be_parsed._If_you_save_the_BibTeX_database,_all_groups_will_be_lost.=\n Attach_file=\n-Minimize_to_system_tray=\n-An_Error_occurred_while_fetching_from_OAI2_source_(%0)\\:=En_feil_oppsto_under_nedlasting_fra_OIA2_source_(%0):\n \n Setting_all_preferences_to_default_values.=\n Resetting_preference_key_'%0'=, None, None, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0%0&nbsp;ch\\u1ee9a_bi\\u1ec3u_th\\u1ee9c_ch\\u00ednh_t\\u1eafc_<b>%1</b>, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.54 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/koppor/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=%0_\\u5305\\u542b\\u6b63\\u5219\\u8868\\u8fbe\\u5f0f_<b>%1</b>, ", 3335, 3335, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 6670], ["was123", "Update JabRef_in.properties\n\nIndonesian translation added", "03/18/14, 12:01:58 AM", "was123", "5eb77ba20c79e6e53e0ab04c2da502288928a87a", ["src/resource/JabRef_in.properties"], "@@ -1304,10 +1304,10 @@ Style_selection=Pilihan_gaya\n The_panel_below_shows_the_definition_of_the_default_style.=Panel_dibawah_menampilkan_definisi_dari_gaya_bawaan\n If_you_want_to_use_it_as_a_template_for_a_new_style,_you_can_copy_the_contents_into_a_new_.jstyle_file=Jika_anda_menginginkan_sebagai_templet_untuk_gaya_baru,_anda_bisa_menyalin_isi_ke_berkas_baru_.jstyle\n \n-Default_style_(author-year_citations)=\n-Default_style_(numerical_citations)=\n-No_valid_style_file_defined=\n-Choose_pattern=\n+Default_style_(author-year_citations)=Gaya_bawaan_(acuan_penulis_tahun)\n+Default_style_(numerical_citations)=Gaya_bawaan_(acuan_numerik)\n+No_valid_style_file_defined=(gaya_yang_sah_tidak_ditemukan)\n+Choose_pattern=Pilih_pola\n Use_the_bib_file_location_as_primary_file_directory=\n Could_not_run_the_gnuclient/emacsclient_program._Make_sure_you_have_the_emacsclient/gnuclient_program_installed_and_available_in_the_PATH.=\n Built-in_journal_list=, ", 4, 4, "\"modified, \"", 8], ["Olaf Lenz", "Fixed splash-dev.svg", "03/19/14, 07:41:29 PM", "Olaf Lenz", "57427502055b834b2cbad35f3514ec8003c5ac7a", ["src/images/splash-dev.svg"], "@@ -79,18 +79,18 @@\n        width=\"572.00000\"\n        patternUnits=\"userSpaceOnUse\">\n       <image\n-         sodipodi:absref=\"/auto.anoa/home/olenz/projects/software/jabref/src/src/images/behandlet.png\"\n+         sodipodi:absref=\"/home/olenz/projects/software/jabref/src/src/images/behandlet.png\"\n          xlink:href=\"behandlet.png\"\n-         transform=\"translate(-231.0000,-284.3622)\"\n-         style=\"opacity:1.0000000;stroke:#000000;stroke-width:5.0000000;stroke-miterlimit:4.0000000;stroke-dasharray:none;stroke-opacity:1.0000000\"\n-         inkscape:export-ydpi=\"90.000000\"\n-         inkscape:export-xdpi=\"90.000000\"\n-         inkscape:export-filename=\"/home/alver/Desktop/bilder/jabref/splash4.png\"\n-         y=\"284.36218\"\n-         x=\"231.00000\"\n-         width=\"572.00000\"\n+         id=\"image9050\"\n          height=\"428.00000\"\n-         id=\"image9050\" />\n+         width=\"572.00000\"\n+         x=\"231.00000\"\n+         y=\"284.36218\"\n+         inkscape:export-filename=\"/home/alver/Desktop/bilder/jabref/splash4.png\"\n+         inkscape:export-xdpi=\"90.000000\"\n+         inkscape:export-ydpi=\"90.000000\"\n+         style=\"opacity:1.0000000;stroke:#000000;stroke-width:5.0000000;stroke-miterlimit:4.0000000;stroke-dasharray:none;stroke-opacity:1.0000000\"\n+         transform=\"translate(-231.0000,-284.3622)\" />\n     </pattern>\n     <radialGradient\n        inkscape:collect=\"always\"\n@@ -136,14 +136,14 @@\n        r=\"135.88548\" />\n   </defs>\n   <sodipodi:namedview\n-     inkscape:window-y=\"-3\"\n-     inkscape:window-x=\"46\"\n-     inkscape:window-height=\"1180\"\n-     inkscape:window-width=\"1872\"\n-     inkscape:current-layer=\"svg2138\"\n+     inkscape:window-y=\"0\"\n+     inkscape:window-x=\"35\"\n+     inkscape:window-height=\"873\"\n+     inkscape:window-width=\"752\"\n+     inkscape:current-layer=\"layer1\"\n      inkscape:document-units=\"px\"\n-     inkscape:cy=\"225.8697\"\n-     inkscape:cx=\"22.10531\"\n+     inkscape:cy=\"305.8697\"\n+     inkscape:cx=\"342.10531\"\n      inkscape:zoom=\"1\"\n      inkscape:pageshadow=\"2\"\n      inkscape:pageopacity=\"0.0\"\n@@ -152,7 +152,7 @@\n      pagecolor=\"#ffffff\"\n      id=\"base\"\n      showgrid=\"false\"\n-     inkscape:window-maximized=\"1\"\n+     inkscape:window-maximized=\"0\"\n      fit-margin-top=\"0\"\n      fit-margin-left=\"0\"\n      fit-margin-right=\"0\"\n@@ -174,12 +174,13 @@\n      id=\"layer2\"\n      inkscape:label=\"Release splash\">\n     <image\n-       y=\"0\"\n-       x=\"1\"\n-       id=\"image3381\"\n-       xlink:href=\"file:///auto.anoa/home/olenz/projects/software/jabref/src/src/images/splash.png\"\n+       sodipodi:absref=\"/home/olenz/projects/software/jabref/src/src/images/splash-release.svg\"\n+       xlink:href=\"splash-release.svg\"\n+       width=\"576\"\n        height=\"432\"\n-       width=\"576\" />\n+       id=\"image3381\"\n+       x=\"1\"\n+       y=\"0\" />\n   </g>\n   <g\n      id=\"layer1\"\n@@ -204,7 +205,7 @@\n          style=\"font-size:85.91455841px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:start;line-height:100%;writing-mode:lr-tb;text-anchor:start;fill:#ff0000;fill-opacity:1;stroke:#ff6600;stroke-width:2.8878212;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;font-family:Bitstream Vera Sans\">dev</tspan></text>\n     <text\n        xml:space=\"preserve\"\n-       style=\"font-size:29.93491554px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans\"\n+       style=\"font-size:20.00000002px;font-style:normal;font-weight:bold;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans Bold;font-stretch:normal;font-variant:normal\"\n        x=\"510.92224\"\n        y=\"226.16539\"\n        id=\"text3244\"\n@@ -214,23 +215,23 @@\n          x=\"510.92224\"\n          y=\"226.16539\"\n          id=\"tspan3252\"\n-         style=\"font-size:23.9479332px;text-align:center;text-anchor:middle;fill:#ff0000\">This is a</tspan><tspan\n+         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">This is a</tspan><tspan\n          sodipodi:role=\"line\"\n          x=\"510.92224\"\n          y=\"256.10031\"\n          id=\"tspan3256\"\n-         style=\"font-size:23.9479332px;text-align:center;text-anchor:middle;fill:#ff0000\"><tspan\n-   style=\"font-weight:bold;-inkscape-font-specification:Sans Bold\"\n+         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\"><tspan\n+   style=\"font-weight:bold;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-style:normal;font-stretch:normal;font-variant:normal;font-size:20.00000002px\"\n    id=\"tspan3266\">development version</tspan>.</tspan><tspan\n          sodipodi:role=\"line\"\n          x=\"510.92224\"\n          y=\"286.03522\"\n          id=\"tspan3258\"\n-         style=\"font-size:23.9479332px;text-align:center;text-anchor:middle;fill:#ff0000\">Features may</tspan><tspan\n+         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">Features may</tspan><tspan\n          sodipodi:role=\"line\"\n          x=\"510.92224\"\n          y=\"315.97015\"\n          id=\"tspan3260\"\n-         style=\"font-size:23.9479332px;text-align:center;text-anchor:middle;fill:#ff0000\">not work as expected.</tspan></text>\n+         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">not work as expected.</tspan></text>\n   </g>\n </svg>, ", 30, 29, "\"modified, \"", 59], ["noravanq", " I have implemented 2 features requested in Ticket #841.\n\n    The user can now specify an arbitrary number of file-link columns in te \"Entry table columns\" preferences tab, to be added to the main table. The user can any file types specified in the list of External File Types. The extra columns work exactly like the original file-link column.\n\n    For each file-link column whenever there are multiple files, the letter \"m\" is displayed at the bottom right corner of the icon.\n\n Committer: noravanq\n\n On branch master\n Changes to be committed:\n   (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   src/main/java/net/sf/jabref/GUIGlobals.java\n\tmodified:   src/main/java/net/sf/jabref/JabRefPreferences.java\n\tmodified:   src/main/java/net/sf/jabref/TableColumnsTab.java\n\tmodified:   src/main/java/net/sf/jabref/gui/MainTableFormat.java\n\tmodified:   src/main/java/net/sf/jabref/gui/MainTableSelectionListener.java\n\tmodified:   src/main/java/net/sf/jabref/gui/PreventDraggingJTableHeader.java", "03/23/14, 04:48:49 AM", "noravanq", "233203728c3168172527970b53b311be27f75474", ["src/main/java/net/sf/jabref/GUIGlobals.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/TableColumnsTab.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/MainTableSelectionListener.java", "src/main/java/net/sf/jabref/gui/PreventDraggingJTableHeader.java"], "@@ -28,6 +28,8 @@\n import javax.swing.ImageIcon;\n import javax.swing.JLabel;\n \n+import javax.swing.SwingConstants;\n+import net.sf.jabref.external.ExternalFileType;\n import org.xnap.commons.gui.shortcut.EmacsKeyBindings;\n \n import net.sf.jabref.specialfields.Priority;\n@@ -411,6 +413,12 @@ public static void init() {\n         lab = new JLabel(getImage(\"psSmall\"));\n         lab.setToolTipText(Globals.lang(\"Open file\"));\n         tableIcons.put(GUIGlobals.FILE_FIELD, lab);\n+\n+        for(ExternalFileType fileType : Globals.prefs.getExternalFileTypeSelection()) {\n+            lab = new JLabel(fileType.getIcon());\n+            lab.setToolTipText(Globals.lang(\"Open \"+fileType.getName()+\" file\"));\n+            tableIcons.put(fileType.getName(), lab);\n+        }\n         \n         lab = new JLabel(Relevance.getInstance().getRepresentingIcon());\n         lab.setToolTipText(Relevance.getInstance().getToolTip());, @@ -424,6 +424,9 @@ private JabRefPreferences() {\n         defaults.put(\"fileColumn\", Boolean.TRUE);\n         defaults.put(\"arxivColumn\", Boolean.FALSE);\n \n+        defaults.put(\"extraFileColumns\", Boolean.FALSE);\n+        defaults.put(\"listOfFileColumns\",\"\");\n+\n         defaults.put(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED, SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY_DEFAULT);, @@ -33,6 +33,7 @@\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.CellConstraints;\n import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.external.ExternalFileType;\n \n class TableColumnsTab extends JPanel implements PrefsTab {\n \n@@ -44,6 +45,10 @@\n     private JabRefFrame frame;\n \n     private JCheckBox pdfColumn, urlColumn, fileColumn, arxivColumn;\n+\n+    private JCheckBox extraFileColumns;\n+    private JList listOfFileColumns;\n+\n     private JRadioButton preferUrl, preferDoi;\n \n     private JCheckBox showOneLetterHeadingForIconColumns;\n@@ -199,6 +204,22 @@ public void stateChanged(ChangeEvent arg0) {\n \t\t});\n \t\tarxivColumn = new JCheckBox(Globals.lang(\"Show ArXiv column\"));\n \n+\t\textraFileColumns = new JCheckBox(Globals.lang(\"Show Extra columns\"));\n+                extraFileColumns.addChangeListener(new ChangeListener() {\n+                        @Override\n+                        public void stateChanged(ChangeEvent arg0) {\n+                                listOfFileColumns.setEnabled(extraFileColumns.isSelected());\n+                        }\n+                });\n+                ExternalFileType[] fileTypes = Globals.prefs.getExternalFileTypeSelection();\n+                String[] fileTypeNames = new String[fileTypes.length];\n+                for(int i=0;i<fileTypes.length;i++) {\n+                    fileTypeNames[i]=fileTypes[i].getName();\n+                }\n+                listOfFileColumns = new JList(fileTypeNames);\n+                JScrollPane listOfFileColumnsScrollPane = new JScrollPane(listOfFileColumns);\n+                listOfFileColumns.setVisibleRowCount(3);\n+\n \t\t/*** begin: special table columns and special fields ***/\n \n \t\tHelpAction help = new HelpAction(frame.helpDiag, GUIGlobals.specialFieldsHelp);\n@@ -266,6 +287,9 @@ public void stateChanged(ChangeEvent event) {\n \t\tspecialTableColumnsBuilder.add(preferDoi, cc.xy(6, 5));\t\n \t\tspecialTableColumnsBuilder.add(arxivColumn, cc.xyw(5, 6, 2));\t\n \n+\t\tspecialTableColumnsBuilder.add(extraFileColumns, cc.xyw(5, 7, 2));\t\n+\t\tspecialTableColumnsBuilder.add(listOfFileColumnsScrollPane, cc.xywh(5, 8, 2, 3));\t\n+\n \t\tbuilder.append(specialTableColumnsBuilder.getPanel());\n \t\tbuilder.nextLine();\n \n@@ -300,6 +324,26 @@ public void setValues() {\n         fileColumn.setSelected(_prefs.getBoolean(\"fileColumn\"));\n         arxivColumn.setSelected(_prefs.getBoolean(\"arxivColumn\"));\n \n+        extraFileColumns.setSelected(_prefs.getBoolean(\"extraFileColumns\"));\n+        if(extraFileColumns.isSelected()) {\n+            String[] desiredColumns = _prefs.getStringArray(\"listOfFileColumns\");\n+            int listSize = listOfFileColumns.getModel().getSize();\n+            int[] indicesToSelect = new int[listSize];\n+            for(int i=0;i<listSize;i++) {\n+                indicesToSelect[i]=listSize+1;\n+                for(int j=0;j<desiredColumns.length;j++) {\n+                    if(listOfFileColumns.getModel().getElementAt(i).equals(desiredColumns[j])) {\n+                        indicesToSelect[i]=i;\n+                        break;\n+                    }\n+                }\n+            }\n+            listOfFileColumns.setSelectedIndices(indicesToSelect);\n+        }\n+        else {\n+            listOfFileColumns.setSelectedIndices(new int[] {});\n+        }\n+\n         /*** begin: special fields ***/\n \n         oldRankingColumn = _prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING);\n@@ -562,6 +606,19 @@ public void storeSettings() {\n \t\t_prefs.putBoolean(\"urlColumn\", urlColumn.isSelected());\n \t\t_prefs.putBoolean(\"preferUrlDoi\", preferDoi.isSelected());\n \t\t_prefs.putBoolean(\"arxivColumn\", arxivColumn.isSelected());\n+\n+\t\t_prefs.putBoolean(\"extraFileColumns\", extraFileColumns.isSelected());\n+                if(extraFileColumns.isSelected()&&!listOfFileColumns.isSelectionEmpty()) {\n+                    String[] selections = new String[listOfFileColumns.getSelectedIndices().length];\n+                    for(int i=0;i<selections.length;i++) {\n+                        selections[i]=listOfFileColumns.getModel().getElementAt(\n+                                listOfFileColumns.getSelectedIndices()[i]).toString();\n+                    }\n+                    _prefs.putStringArray(\"listOfFileColumns\", selections);\n+                }\n+                else {\n+                    _prefs.putStringArray(\"listOfFileColumns\", new String[] {});\n+                }\n \t\t\n \t\t_prefs.putBoolean(JabRefPreferences.SHOWONELETTERHEADINGFORICONCOLUMNS, showOneLetterHeadingForIconColumns.isSelected());\n , @@ -35,6 +35,12 @@\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import ca.odell.glazedlists.gui.TableFormat;\n import ca.odell.glazedlists.matchers.Matcher;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import javax.swing.Icon;\n+import javax.swing.ImageIcon;\n+import javax.swing.JLabel;\n \n /**\n  * Class defining the contents and column headers of the main table.\n@@ -173,6 +179,23 @@ public boolean isRankingColumn(int col) {\n         return false;\n     }\n \n+    private Object modifyIconForMultipleLinks(JLabel label) {\n+        Icon icon = label.getIcon();\n+        BufferedImage bufImg = new BufferedImage(\n+            icon.getIconWidth(),\n+            icon.getIconHeight(),\n+            BufferedImage.TYPE_INT_ARGB);\n+        Graphics g = bufImg.createGraphics();\n+        // paint the Icon to the BufferedImage.\n+        icon.paintIcon(null, g, 0,0);\n+        // add the letter \"m\" in the bottom right corner\n+        g.setColor(Color.BLACK);\n+        g.setFont(new java.awt.Font(\"Serif\", java.awt.Font.PLAIN, 12));\n+        g.drawString(\"m\",bufImg.getWidth() - g.getFontMetrics().stringWidth(\"m\"),bufImg.getHeight());\n+        g.dispose();\n+        return new JLabel(new ImageIcon(bufImg));\n+    }\n+    \n     public Object getColumnValue(BibtexEntry be, int col) {\n         Object o = null;\n         String[] iconType = getIconTypeForColumn(col); // If non-null, indicates an icon column's type.\n@@ -183,16 +206,21 @@ public Object getColumnValue(BibtexEntry be, int col) {\n \n         else if (iconType != null) {\n             int hasField = -1;\n-            for (int i = iconType.length - 1; i >= 0; i--)\n-                if (hasField(be, iconType[i]))\n-                    hasField = i;\n+\n+            int[] fieldCount = hasField(be,iconType);\n+            hasField=fieldCount[0];\n+\n             if (hasField < 0)\n                 return null;\n \n             // Ok, so we are going to display an icon. Find out which one, and return it:\n             if (iconType[hasField].equals(GUIGlobals.FILE_FIELD)) {\n                 o = FileListTableModel.getFirstLabel(be.getField(GUIGlobals.FILE_FIELD));\n \n+            if(fieldCount[1]>1) {\n+                o = modifyIconForMultipleLinks((JLabel)o);\n+            }\n+\n             // Handle priority column special\n             // Extra handling because the icon depends on a FieldValue\n             } else if (iconType[hasField].equals(PRIORITY[0])) {\n@@ -210,6 +238,10 @@ else if (iconType != null) {\n                 }\n             } else {\n                 o = GUIGlobals.getTableIcon(iconType[hasField]);\n+\n+                if(fieldCount[1]>1) {\n+                    o = modifyIconForMultipleLinks((JLabel)o);\n+                }\n             }\n         } else {\n             String[] fld = columns[col - padleft];\n@@ -265,6 +297,51 @@ public boolean hasField(BibtexEntry be, String field) {\n         return ((be != null) && (be.getField(field) != null));\n     }\n \n+    public int[] hasField(BibtexEntry be, String[] field) {\n+        // If the entry has a nonzero value in any of the\n+        // 'search' fields, returns the smallest index for which it does. \n+        // Otherwise returns -1. When field indicates one or more file types,\n+        // returns the index of the first present file type.\n+        if(be==null||field==null||field.length<1) {\n+            return new int[] {-1,-1};\n+        }\n+        int hasField=-1;\n+        if(!field[0].equals(GUIGlobals.FILE_FIELD)) {\n+            for (int i = field.length - 1; i >= 0; i--) {\n+                if (hasField(be, field[i])) {\n+                    hasField = i;\n+                }\n+            }\n+            return new int[] {hasField,-1};\n+        }\n+        else {\n+            // We use a FileListTableModel to parse the field content:\n+            Object o = be.getField(GUIGlobals.FILE_FIELD);\n+            FileListTableModel fileList = new FileListTableModel();\n+            fileList.setContent((String)o);\n+            if(field.length==1) {\n+                if(fileList.getRowCount()==0) {\n+                    return new int[] {-1,-1};\n+                }\n+                else {\n+                    return new int[] {0,fileList.getRowCount()};\n+                }\n+            }\n+            int lastLinkPosition=-1, countLinks = 0;\n+            for (int i = 1; i < field.length; i++) {\n+                // Count the number of links of correct type.\n+                for (int j=0; j<fileList.getRowCount(); j++) {\n+                    FileListEntry flEntry = fileList.getEntry(j);\n+                    if(flEntry.getType().toString().equals(field[i])) {\n+                        lastLinkPosition=i;\n+                        countLinks++;\n+                    }\n+                }\n+            }\n+            return new int[] {lastLinkPosition,countLinks};\n+        }\n+    }\n+\n     public void updateTableFormat() {\n \n         // Read table columns from prefs:\n@@ -318,6 +395,13 @@ public void updateTableFormat() {\n         if (Globals.prefs.getBoolean(\"arxivColumn\"))\n             iconCols.put(coln++, ARXIV);\n \n+        if (Globals.prefs.getBoolean(\"extraFileColumns\")) {\n+            String[] desiredColumns = Globals.prefs.getStringArray(\"listOfFileColumns\");\n+            for(int i=0;i<desiredColumns.length;i++) {\n+                iconCols.put(coln++, new String[] {GUIGlobals.FILE_FIELD,desiredColumns[i]});\n+            }\n+        }\n+\n         // Add 1 to the number of icon columns to get padleft.\n         padleft = 1 + iconCols.size();\n , @@ -35,13 +35,17 @@\n import net.sf.jabref.FocusRequester;\n import net.sf.jabref.GUIGlobals;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.PreviewPanel;\n import net.sf.jabref.RightClickMenu;\n import net.sf.jabref.Util;\n import net.sf.jabref.external.ExternalFileMenuItem;\n import ca.odell.glazedlists.EventList;\n import ca.odell.glazedlists.event.ListEvent;\n import ca.odell.glazedlists.event.ListEventListener;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n import net.sf.jabref.specialfields.SpecialField;\n import net.sf.jabref.specialfields.SpecialFieldValue;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n@@ -301,6 +305,14 @@ public void mouseClicked(MouseEvent e) {\n                 return;\n             final String fieldName = iconType[hasField];\n \n+            //If this is a file link field with specified file types,\n+            //we should also pass the types.\n+            String[] fileTypes={};\n+            if(hasField==0&&iconType[hasField].equals(GUIGlobals.FILE_FIELD)&&iconType.length>1) {\n+                fileTypes=iconType;\n+            }\n+            final List<String> listOfFileTypes = Collections.unmodifiableList(Arrays.asList(fileTypes));\n+\n             // Open it now. We do this in a thread, so the program won't freeze during the wait.\n             (new Thread() {\n                 public void run() {\n@@ -320,9 +332,33 @@ public void run() {\n                             // We use a FileListTableModel to parse the field content:\n                             FileListTableModel fileList = new FileListTableModel();\n                             fileList.setContent((String)link);\n-                            // If there are one or more links, open the first one:\n-                            if (fileList.getRowCount() > 0) {\n-                                FileListEntry flEntry = fileList.getEntry(0);\n+\n+                            FileListEntry flEntry=null;\n+                            // If there are one or more links of the correct type,\n+                            // open the first one:\n+                            if(listOfFileTypes.size()>0) {\n+                                for(int i=0;i<fileList.getRowCount();i++) {\n+                                    flEntry = fileList.getEntry(i);\n+                                    boolean correctType=false;\n+                                    for(int j=0;j<listOfFileTypes.size();j++) {\n+                                        if(flEntry.getType().toString().equals(listOfFileTypes.get(j))) {\n+                                            correctType=true;\n+                                        }\n+                                    }\n+                                    if(correctType) {\n+                                        break;\n+                                    }\n+                                    flEntry=null;\n+                                }\n+                            }\n+                            //If there are no file types specified, consider all files.\n+                            else if(fileList.getRowCount()>0) {\n+                                flEntry=fileList.getEntry(0);\n+                            }\n+                            if(flEntry!=null) {\n+//                            if (fileList.getRowCount() > 0) {\n+//                                FileListEntry flEntry = fileList.getEntry(0);\n+\n                                 ExternalFileMenuItem item = new ExternalFileMenuItem\n                                         (panel.frame(), entry, \"\",\n                                         flEntry.getLink(), flEntry.getType().getIcon(),\n@@ -403,6 +439,20 @@ private void showIconRightClickMenu(MouseEvent e, int row, String[] iconType) {\n             // If there are one or more links, open the first one:\n             for (int i=0; i<fileList.getRowCount(); i++) {\n                 FileListEntry flEntry = fileList.getEntry(i);\n+\n+                //If file types are specified, ignore files of other types.\n+                if(iconType.length>1) {\n+                    boolean correctType=false;\n+                    for(int j=1;j<iconType.length;j++) {\n+                        if(flEntry.getType().toString().equals(iconType[j])) {\n+                            correctType=true;\n+                        }\n+                    }\n+                    if(!correctType) {\n+                        continue;\n+                    }\n+                }\n+\n                 String description = flEntry.getDescription();\n                 if ((description == null) || (description.trim().length() == 0))\n                     description = flEntry.getLink();, @@ -21,6 +21,7 @@\n import javax.swing.table.TableColumnModel;\n \n import net.sf.jabref.Globals;\n+import net.sf.jabref.Util;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n \n /**\n@@ -119,6 +120,10 @@ private int getSpecialColumnsCount() {\n         if (Globals.prefs.getBoolean(\"arxivColumn\")) {\n             count++;\n         }\n+\n+        if (Globals.prefs.getBoolean(\"extraFileColumns\")) {\n+            count+=Globals.prefs.getStringArray(\"listOfFileColumns\").length;\n+        }\n         \n         // special field columns may also not be dragged\n         if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED)) {, ", 213, 6, "\"modified, modified, modified, modified, modified, modified, \"", 219], ["Adrian Daerr", "Erase fields listed in XMP Privacy Settings from PDF DocumentInformation when XMP-tagging", "04/22/14, 06:19:15 PM", "Adrian Daerr", "2360cb74d2e8d88e1bc705db36e885e44607642f", ["src/main/java/net/sf/jabref/util/XMPUtil.java"], "@@ -996,7 +996,20 @@ public static void writeDocumentInformation(PDDocument document,\n \t\tfor (String field : fields){\n \n \t\t\tif (useXmpPrivacyFilter && filters.contains(field)) {\n-\t\t\t\tcontinue;\n+                            // erase field instead of adding it\n+                            if (field.equals(\"author\")) {\n+\t\t\t\tdi.setAuthor(null);\n+                            } else if (field.equals(\"title\")) {\n+\t\t\t\tdi.setTitle(null);\n+                            } else if (field.equals(\"keywords\")) {\n+\t\t\t\tdi.setKeywords(null);\n+                            } else if (field.equals(\"abstract\")) {\n+\t\t\t\tdi.setSubject(null);\n+                            } else {\n+\t\t\t\tdi.setCustomMetadataValue(\"bibtex/\" + field,\n+                                                          null);\n+                            }\n+                            continue;\n \t\t\t}\n \n \t\t\tif (field.equals(\"author\")) {, ", 14, 1, "\"modified, \"", 15], ["Peter Ansell", "add CSIRO copyright 2014", "05/07/14, 01:02:09 AM", "Peter Ansell", "57cbe70e1be14f7b8f8754e05f6b722ed72ce887", ["src/main/java/net/sf/jabref/external/ACSPdfDownload.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2014 Commonwealth Scientific and Industrial Research Organisation\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or, ", 1, 1, "\"modified, \"", 2], ["Ling Wang", "fix bug causing double entries.", "05/20/14, 02:56:41 AM", "Ling Wang", "b6a89a81a983332d35420534a766d8dfabb6b81e", ["src/main/java/net/sf/jabref/BibtexEntry.java", "src/main/java/net/sf/jabref/BibtexEntryType.java", "testbib/testjabref.bib", "testbib/testjabref_210as292.bib", "testbib/testjabref_292.bib"], "@@ -421,8 +421,10 @@ public void write(Writer out, FieldFormatter ff, boolean write) throws IOExcepti\n             break;\n         case 1:\n             writeUnsorted(out, ff, write);\n+            break;\n         case 2:\n             writeUserOrder(out,ff,write);\n+            break;\n         }\n         \n         , @@ -84,7 +84,7 @@ public String getName()\n             {\n                 return new String[]\n                 {\n-                    \"volume\", \"number\", \"pages\", \"month\", \"note\", //- \"volume\", \"pages\", \"part\", \"eid\"\n+                    \"volume\", \"pages\", \"number\", \"month\", \"note\", //- \"volume\", \"pages\", \"part\", \"eid\"\n                 };\n             }\n , @@ -0,0 +1,313 @@\n+% This file was created with JabRef devel - 1st edition family.\n+% Encoding: UTF8\n+\n+\n+@Article{Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS,\n+  Title                    = {256-Channel Neural Recording and Delta Compression Microsystem With\n+ 3D Electrodes},\n+  Author                   = {Aziz, Joseph N. Y. and Abdelhalim, Karim and Shulyzki, Ruslana and\n+ Genov, Roman and Bardakjian, Berj L. and Derchansky, Miron and Serletis,\n+ Demitre and Carlen, Peter L.},\n+  Journal                  = {IEEE JOURNAL OF SOLID-STATE CIRCUITS},\n+  Year                     = {2009},\n+\n+  Month                    = {MAR},\n+  Number                   = {3},\n+  Pages                    = {995-1005},\n+  Volume                   = {44},\n+\n+  Abstract                 = {A 3D microsystem for multi-site penetrating extracellular neural recording\n+ from the brain is presented. A 16 x 16-channel neural recording interface\n+ integrated prototype fabricated in 0.35 mu m CMOS occupies 3.5 mm\n+ x 4.5 mm area. Each recording channel dissipates 15 mu W of power\n+ with input-referred noise of 7 mu V-rms over 5 kHz bandwidth. A switched-capacitor\n+ delta read-out data compression circuit trades recording accuracy\n+ for the output data rate. An array of 1.5 mm platinum-coated microelectrodes\n+ is bonded directly onto the die. Results of in vitro experimental\n+ recordings from intact mouse hippocampus validate the circuit design\n+ and the on-chip electrode bonding technology.},\n+  Address                  = {445 HOES LANE, PISCATAWAY, NJ 08855 USA},\n+  Affiliation              = {Aziz, JNY (Reprint Author), Broadcom, Irvine, CA 92617 USA. {[}Aziz,\n+ Joseph N. Y.; Abdelhalim, Karim; Shulyzki, Ruslana; Genov, Roman]\n+ Univ Toronto, Dept Elect \\& Comp Engn, Toronto, ON M5S 3G4, Canada.\n+ {[}Bardakjian, Berj L.] Univ Toronto, Inst Biomat \\& Biomed Engn,\n+ Edward S Rogers Sr Dept Elect \\& Comp Engn, Toronto, ON M5S 1A4,\n+ Canada. {[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.]\n+ Univ Toronto, Toronto Western Res Inst, Toronto, ON M5S 1A4, Canada.\n+ {[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.] Univ Toronto,\n+ Dept Physiol, Toronto, ON M5S 1A4, Canada.},\n+  Author-email             = {roman@eecg.utoronto.ca},\n+  Cited-references         = {ATLURI S, 2006, P IEEE INT S CIRC SY, P1131. AZIZ J, 2006, P IEEE\n+ INT S CIRC SY. AZIZ J, 2007, IEEE INT SOL STAT CI, P160. AZIZ JNY,\n+ 2006, P IEEE INT S CIRC SY, P5075. AZIZ JNY, 2007, IEEE T BIOMED\n+ CIRCUI, V1. AZIZ JNY, 2007, P IEEE INT S CIRC SY. CHAIMANONART N,\n+ 2005, P ANN INT IEEE EMBS, P5194. DELBRUCK T, 1994, P IEEE INT S\n+ CIRC SY, V4, P339. ENZ CC, 1996, P IEEE, V84, P1584. EVERSMANN B,\n+ 2003, IEEE J SOLID-ST CIRC, V38, P2306, DOI 10.1109/JSSC.2003.819174.\n+ HARRISON R, 2006, IEEE INT SOL STAT C, P2258. HARRISON RR, 2003,\n+ IEEE J SOLID-ST CIRC, V38, P958, DOI 10.1009/JSSC.2003.811979. HARRISON\n+ RR, 2007, IEEE CUST INTEGR CIR, P115. HEER F, 2006, IEEE J SOLID-ST\n+ CIRC, V41, P1620, DOI 10.1109/JSSC.2006.873677. KIM S, 2006, P 2006\n+ INT C IEEE EN, P2986. MALLIK U, 2005, IEEE ISSCC, P362. MOHSENI P,\n+ 2004, IEEE T BIO-MED ENG, V51, P832, DOI 10.1109/TBME.2004.824126.\n+ MOTCHENBACHER CD, 1993, LOW NOISE ELECT SYST. OLSSON RH, 2005, IEEE\n+ J SOLID-ST CIRC, V40, P2796. PATTERSON WR, 2004, IEEE T BIO-MED ENG,\n+ V51, P1845, DOI 10.1109/TBME.2004.831521. RILEY G, 1987, SURFACE\n+ MOUNT INT, P535. STEYAERT MSJ, 1987, IEEE J SOLID-ST CIRC, V22, P1163.\n+ TSIVIDIS Y, 2003, OPERATION MODELING M. WATTANAPANITCH W, 2007, IEEE\n+ T BIOMED CIRC S, V1, P136, DOI 10.1109/TBCAS.2007.907868. WISE KD,\n+ 2005, IEEE ENG MED BIOL, V24, P22.},\n+  Doc-delivery-number      = {415FE},\n+  Doi                      = {10.1109/JSSC.2008.2010997},\n+  File                     = {Draft:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS_draft.pdf:PDF;Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:PDF},\n+  ISSN                     = {0018-9200},\n+  Journal-iso              = {IEEE J. Solid-State Circuit},\n+  Keywords                 = {Multi-channel recording; microelectrodes; extracellular recording;\n+ electrode array; implantable; brain; hippocampus; delta compression;\n+ neural amplifier},\n+  Keywords-plus            = {AMPLIFIER; STABILIZATION; CIRCUIT; ARRAY},\n+  Language                 = {English},\n+  Number-of-cited-references = {25},\n+  Publisher                = {IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC},\n+  Subject-category         = {Engineering, Electrical \\& Electronic},\n+  Times-cited              = {2},\n+  Timestamp                = {10.04.15.11.41},\n+  Type                     = {Article},\n+  Unique-id                = {ISI:000263918900029}\n+}\n+\n+@Article{BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering,\n+  Title                    = {Patterning PDMS using a combination of wet and dry etching},\n+  Author                   = {B Balakrisnan , S Patil and E Smela},\n+  Journal                  = {Journal of Micromechanics and Microengineering},\n+  Year                     = {2009},\n+  Number                   = {4},\n+  Pages                    = {047002},\n+  Volume                   = {19},\n+\n+  Abstract                 = {PDMS films of 10 \ufffdm thickness can be patterned within 30 min by combining\n+ dry etching to achieve substantially vertical sidewalls with wet\n+ etching to achieve high etch rates and to protect the underlying\n+ substrate from attack. Dry etching alone would have taken 5 h, and\n+ wet etching alone would produce severe undercutting. In addition,\n+ using either technique alone produces undesirable surface morphologies.\n+ The mask used during etching is critical to a successful patterning\n+ outcome. E-beam evaporated Al was found to work well, adhering strongly\n+ to oxygen-plasma-treated PDMS and holding up well during both dry\n+ and wet etching. To prevent wrinkling of the PDMS, a fast deposition\n+ rate should be used.},\n+  File                     = {BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:JabRef\\\\BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:PDF},\n+  Timestamp                = {09.06.17.13.03},\n+  Url                      = {http://stacks.iop.org/0960-1317/19/i=4/a=047002}\n+}\n+\n+@Article{Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA,\n+  Title                    = {Synaptic facilitation by reflected action potentials: enhancement\n+ of transmission when nerve impulses reverse direction at axon branch\n+ points.},\n+  Author                   = {S. A. Baccus},\n+  Journal                  = {Proc Natl Acad Sci U S A},\n+  Year                     = {1998},\n+\n+  Month                    = {Jul},\n+  Number                   = {14},\n+  Pages                    = {8345--8350},\n+  Volume                   = {95},\n+\n+  Abstract                 = {A rapid, reversible enhancement of synaptic transmission from a sensory\n+ neuron is reported and explained by impulses that reverse direction,\n+ or reflect, at axon branch points. In leech mechanosensory neurons,\n+ where one can detect reflection because it is possible simultaneously\n+ to study electrical activity in separate branches, action potentials\n+ reflected from branch points within the central nervous system under\n+ physiological conditions. Synapses adjacent to these branch points\n+ were activated twice in rapid succession, first by an impulse arriving\n+ from the periphery and then by its reflection. This fast double-firing\n+ facilitated synaptic transmission, increasing it to more than twice\n+ its normal level. Reflection occurred within a range of resting membrane\n+ potentials, and electrical activity produced by mechanical stimulation\n+ changed membrane potential so as to produce and cease reflection.\n+ A compartmental model was used to investigate how branch-point morphology\n+ and electrical activity contribute to produce reflection. The model\n+ shows that mechanisms that hyperpolarize the membrane so as to impair\n+ action potential propagation can increase the range of structures\n+ that can produce reflection. This suggests that reflection is more\n+ likely to occur in other structures where impulses fail, such as\n+ in axons and dendrites in the mammalian brain. In leech sensory neurons,\n+ reflection increased transmission from central synapses only in those\n+ axon branches that innervate the edges of the receptive field in\n+ the skin, thereby sharpening spatial contrast. Reflection thus allows\n+ a neuron to amplify synaptic transmission from a selected group of\n+ its branches in a way that can be regulated by electrical activity.},\n+  File                     = {Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:JabRef\\\\Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:PDF},\n+  Institution              = {Neuroscience Program, University of Miami, Miami, FL 33136, USA.\n+ sbaccus@mednet.med.miami.edu},\n+  Keywords                 = {Action Potentials, physiology; Animals; Axons, physiology; Electrophysiology;\n+ Ganglia, Invertebrate, physiology; Ganglia, Sensory, physiology;\n+ Leeches; Neurons, physiology; Synapses, physiology; Synaptic Transmission,\n+ physiology},\n+  Language                 = {eng},\n+  Medline-pst              = {ppublish},\n+  Pmid                     = {9653189},\n+  Timestamp                = {11.05.01.13.02}\n+}\n+\n+@Article{Brewer1995Serum-freeB27/neurobasalmediumsupportsdifferentiatedgrowthofneuronsfromthestriatumsubstantianigraseptumcerebralcortexcerebellumanddentategyrus.JNeurosciRes,\n+  Title                    = {Serum-free B27/neurobasal medium supports differentiated growth of\n+ neurons from the striatum, substantia nigra, septum, cerebral cortex,\n+ cerebellum, and dentate gyrus.},\n+  Author                   = {G. J. Brewer},\n+  Journal                  = {J Neurosci Res},\n+  Year                     = {1995},\n+\n+  Month                    = {Dec},\n+  Number                   = {5},\n+  Pages                    = {674--683},\n+  Volume                   = {42},\n+\n+  Abstract                 = {Two fundamental questions about neuron cell culture were addressed.\n+ Can one serum-free medium that was developed for optimum growth of\n+ hippocampal neurons support the growth of neurons from other regions\n+ of the brain? Is the region specific state of differentiation maintained\n+ in culture? To answer these questions, we isolated neurons from six\n+ other rat brain regions, placed them in culture in B27/Neurobasal\n+ defined medium, and analyzed their morphology and growth dependence\n+ on cell density after 4 days in culture. Neuronal identity was confirmed\n+ by immunostaining with antibodies to neurofilament 200. Neurons from\n+ each brain region maintained distinctive morphologies in culture\n+ in the virtual absence of glia. Cells isolated from embryonic day\n+ 18 cerebral cortex by digestion with papain showed the same high\n+ survival as hippocampal neurons, e.g., 70\\% survival for cells plated\n+ at 160/mm2. At this age and density, neurons from the septum showed\n+ slightly lower survival, 45\\%. Survival of dentate granule neurons\n+ from postnatal day four brains was 30-40\\%, significantly lower,\n+ and relatively independent of plating density. This suggests an absence\n+ of dependence on trophic factors or contact for dentate granule neurons.\n+ Growth of cerebellar granule neurons isolated from postnatal day\n+ 7, 8, or 9 brains in B27/Neurobasal was compared to growth in BME/10\\%\n+ serum. Viability in serum-free medium at 4 days was much better than\n+ that in serum, did not require KCl elevated to 25 mM, and occurred\n+ without substantial growth of glia. Cerebellar granule neurons plated\n+ at 1,280 cells/mm2 were maintained in culture for three weeks with\n+ 17\\% of the original cell density surviving. Survival of cells isolated\n+ from embryonic day 18 substantia nigra was 50\\% at 160 cells/mm2\n+ after 4 days, similar to that of striatum, but slightly less than\n+ hippocampal neuron survival. The dopaminergic phenotype of the substantia\n+ nigral neurons was maintained over 2 weeks in culture as judged by\n+ immunoreactivity with antibodies to tyrosine hydroxylase. During\n+ this time, immunoreactivity was found in the processes as they grew\n+ out from the soma. Together, these studies suggest that B27/Neurobasal\n+ will be a useful medium for maintaining the differentiated growth\n+ of neurons from many brain regions. Potential applications of a common\n+ growth medium for different neurons are discussed.},\n+  Doi                      = {10.1002/jnr.490420510},\n+  Institution              = {Southern Illinois University School of Medicine, Springfield 62794-1220,\n+ USA.},\n+  Keywords                 = {Animals; Brain, anatomy /&/ histology/cytology/enzymology; Cell Culture\n+ Techniques; Cell Survival; Cells, Cultured; Cerebellum, cytology/embryology;\n+ Cerebral Cortex, cytology/embryology; Corpus Striatum, cytology/embryology;\n+ Culture Media, Serum-Free; Dentate Gyrus, cytology/embryology; Electrophysiology;\n+ Hippocampus, cytology/embryology; Neurofilament Proteins, metabolism;\n+ Neurons, cytology/enzymology; Rats; Rats, Sprague-Dawley; Septum\n+ Pellucidum, embryology; Substantia Nigra, cytology/embryology; Tyrosine\n+ 3-Monooxygenase, metabolism},\n+  Pmid                     = {8600300},\n+  Timestamp                = {2008.12.12},\n+  Url                      = {http://dx.doi.org/10.1002/jnr.490420510}\n+}\n+\n+@Article{Brewer1997Isolationandcultureofadultrathippocampalneurons.JNeurosciMethods,\n+  Title                    = {Isolation and culture of adult rat hippocampal neurons.},\n+  Author                   = {G. J. Brewer},\n+  Journal                  = {J Neurosci Methods},\n+  Year                     = {1997},\n+\n+  Month                    = {Feb},\n+  Number                   = {2},\n+  Pages                    = {143--155},\n+  Volume                   = {71},\n+\n+  Abstract                 = {Inability to culture adult central neurons and the failure of injured\n+ neurons to regenerate in the brain could be due to genetic controls\n+ or environmental inhibitors. We tested the environmental inhibitor\n+ hypothesis by attempting to regenerate adult rat neurons in B27/Neurobasal\n+ culture medium, a medium optimized for survival of embryonic neurons.\n+ To isolate neurons from their numerous connections, papain was the\n+ best of six different proteases screened on slices of hippocampus\n+ for survival of isolated cells after 4 days of culture. Use of a\n+ density gradient enabled separation of oligodendroglia and some enrichment\n+ of neurons and microglia from considerable debris which was inhibitory\n+ to sprouting and viability. With these techniques, about 900000 viable\n+ neurons were isolated from each hippocampus of any age rat from birth\n+ to 24-36 months, near the median mortality. FGF2 was found to enhance\n+ viability at least 3-fold to 40-80\\%, independent of age, without\n+ affecting the length of the processes. Neurons were cultured for\n+ more than 3 weeks. These methods demonstrate that hippocampal neurons\n+ can regenerate axons and dendrites if provided with adequate nutrition\n+ and if inhibitors are removed. They also will enable aging studies.\n+ Therefore, the concept of environmental growth restriction may be\n+ more appropriate for neurons in the brain than the concept of a genetic\n+ block that precludes regeneration of processes.},\n+  Institution              = {Department of Medical Microbiology and Immunology, Southern Illinois\n+ University School of Medicine, Springfield 62794-1220, USA. gbrewer@siumed.edu},\n+  Keywords                 = {Age Factors; Animals; Cell Adhesion, physiology; Cell Culture Techniques,\n+ methods; Cell Separation, methods; Cell Survival, physiology; Cells,\n+ Cultured; Cerebral Cortex, cytology; Dose-Response Relationship,\n+ Drug; Fibroblast Growth Factor 2, physiology; Glutamic Acid, pharmacology;\n+ Hippocampus, cytology; Male; Neurons, cytology/drug effects; Osmolar\n+ Concentration; Oxygen, pharmacology; Papain; Rats; Rats, Inbred F344;\n+ Rats, Sprague-Dawley},\n+  Pii                      = {S0165-0270(96)00136-7},\n+  Pmid                     = {9128149},\n+  Timestamp                = {09.02.26.19.31}\n+}\n+\n+@Article{Brewer2008NbActiv4mediumimprovementtoNeurobasal/B27increasesneuronsynapsedensitiesandnetworkspikeratesonmultielectrodearrays.JNeurosciMethods,\n+  Title                    = {NbActiv4 medium improvement to Neurobasal/B27 increases neuron synapse\n+ densities and network spike rates on multielectrode arrays.},\n+  Author                   = {Gregory J Brewer and Michael D Boehler and Torrie T Jones and Bruce\n+ C Wheeler},\n+  Journal                  = {J Neurosci Methods},\n+  Year                     = {2008},\n+\n+  Month                    = {May},\n+  Number                   = {2},\n+  Pages                    = {181--187},\n+  Volume                   = {170},\n+\n+  Abstract                 = {The most interesting property of neurons is their long-distance propagation\n+ of signals as spiking action potentials. Since 1993, Neurobasal/B27\n+ has been used as a serum-free medium optimized for hippocampal neuron\n+ survival. Neurons on microelectrode arrays (MEA) were used as an\n+ assay system to increase spontaneous spike rates in media of different\n+ compositions. We find spike rates of 0.5 s(-1) (Hz) for rat embryonic\n+ hippocampal neurons cultured in Neurobasal/B27, lower than cultures\n+ in serum-based media and offering an opportunity for improvement.\n+ NbActiv4 was formulated by addition of creatine, cholesterol and\n+ estrogen to Neurobasal/B27 that synergistically produced an eightfold\n+ increase in spontaneous spike activity. The increased activity with\n+ NbActiv4 correlated with a twofold increase in immunoreactive synaptophysin\n+ bright puncta and GluR1 total puncta. Characteristic of synaptic\n+ scaling, immunoreactive GABAAbeta puncta also increased 1.5-fold\n+ and NMDA-R1 puncta increased 1.8-fold. Neuron survival in NbActiv4\n+ equaled that in Neurobasal/B27, but with slightly higher astroglia.\n+ Resting respiratory demand was decreased and demand capacity was\n+ increased in NbActiv4, indicating less stress and higher efficiency.\n+ These results show that NbActiv4 is an improvement to Neurobasal/B27\n+ for cultured networks with an increased density of synapses and transmitter\n+ receptors which produces higher spontaneous spike rates in neuron\n+ networks.},\n+  Doi                      = {10.1016/j.jneumeth.2008.01.009},\n+  Institution              = {Southern Illinois University School of Medicine, Springfield, IL\n+ 62794-9626, USA. gbrewer@siumed.edu},\n+  Keywords                 = {Cell Survival; Cells, Cultured; Culture Media; Electrophysiology;\n+ Hippocampus, cytology; Humans; Image Processing, Computer-Assisted;\n+ Immunohistochemistry; Kinetics; Microelectrodes; Nerve Net, physiology;\n+ Neurons, physiology; Oxygen Consumption, physiology; Oxygen, analysis;\n+ Synapses, physiology},\n+  Pii                      = {S0165-0270(08)00039-3},\n+  Pmid                     = {18308400},\n+  Timestamp                = {09.02.26.19.31},\n+  Url                      = {http://dx.doi.org/10.1016/j.jneumeth.2008.01.009}\n+}\n+, @@ -0,0 +1,482 @@\n+% This file was created with JabRef devel - 1st edition family.\n+% Encoding: UTF8\n+\n+\n+@ARTICLE{Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS,\n+  author = {Aziz, Joseph N. Y. and Abdelhalim, Karim and Shulyzki, Ruslana and\n+\t\n+\t Genov, Roman and Bardakjian, Berj L. and Derchansky, Miron and Serletis,\n+\t\n+\t Demitre and Carlen, Peter L.},\n+  title = {256-Channel Neural Recording and Delta Compression Microsystem With\n+\t\n+\t 3D Electrodes},\n+  journal = {IEEE JOURNAL OF SOLID-STATE CIRCUITS},\n+  year = {2009},\n+  volume = {44},\n+  pages = {995-1005},\n+  number = {3},\n+  month = {MAR},\n+  abstract = {A 3D microsystem for multi-site penetrating extracellular neural recording\n+\t\n+\t from the brain is presented. A 16 x 16-channel neural recording interface\n+\t\n+\t integrated prototype fabricated in 0.35 mu m CMOS occupies 3.5 mm\n+\t\n+\t x 4.5 mm area. Each recording channel dissipates 15 mu W of power\n+\t\n+\t with input-referred noise of 7 mu V-rms over 5 kHz bandwidth. A switched-capacitor\n+\t\n+\t delta read-out data compression circuit trades recording accuracy\n+\t\n+\t for the output data rate. An array of 1.5 mm platinum-coated microelectrodes\n+\t\n+\t is bonded directly onto the die. Results of in vitro experimental\n+\t\n+\t recordings from intact mouse hippocampus validate the circuit design\n+\t\n+\t and the on-chip electrode bonding technology.},\n+  address = {445 HOES LANE, PISCATAWAY, NJ 08855 USA},\n+  affiliation = {Aziz, JNY (Reprint Author), Broadcom, Irvine, CA 92617 USA. {[}Aziz,\n+\t\n+\t Joseph N. Y.; Abdelhalim, Karim; Shulyzki, Ruslana; Genov, Roman]\n+\t\n+\t Univ Toronto, Dept Elect \\& Comp Engn, Toronto, ON M5S 3G4, Canada.\n+\t\n+\t {[}Bardakjian, Berj L.] Univ Toronto, Inst Biomat \\& Biomed Engn,\n+\t\n+\t Edward S Rogers Sr Dept Elect \\& Comp Engn, Toronto, ON M5S 1A4,\n+\t\n+\t Canada. {[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.]\n+\t\n+\t Univ Toronto, Toronto Western Res Inst, Toronto, ON M5S 1A4, Canada.\n+\t\n+\t {[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.] Univ Toronto,\n+\t\n+\t Dept Physiol, Toronto, ON M5S 1A4, Canada.},\n+  author-email = {roman@eecg.utoronto.ca},\n+  cited-references = {ATLURI S, 2006, P IEEE INT S CIRC SY, P1131. AZIZ J, 2006, P IEEE\n+\t\n+\t INT S CIRC SY. AZIZ J, 2007, IEEE INT SOL STAT CI, P160. AZIZ JNY,\n+\t\n+\t 2006, P IEEE INT S CIRC SY, P5075. AZIZ JNY, 2007, IEEE T BIOMED\n+\t\n+\t CIRCUI, V1. AZIZ JNY, 2007, P IEEE INT S CIRC SY. CHAIMANONART N,\n+\t\n+\t 2005, P ANN INT IEEE EMBS, P5194. DELBRUCK T, 1994, P IEEE INT S\n+\t\n+\t CIRC SY, V4, P339. ENZ CC, 1996, P IEEE, V84, P1584. EVERSMANN B,\n+\t\n+\t 2003, IEEE J SOLID-ST CIRC, V38, P2306, DOI 10.1109/JSSC.2003.819174.\n+\t\n+\t HARRISON R, 2006, IEEE INT SOL STAT C, P2258. HARRISON RR, 2003,\n+\t\n+\t IEEE J SOLID-ST CIRC, V38, P958, DOI 10.1009/JSSC.2003.811979. HARRISON\n+\t\n+\t RR, 2007, IEEE CUST INTEGR CIR, P115. HEER F, 2006, IEEE J SOLID-ST\n+\t\n+\t CIRC, V41, P1620, DOI 10.1109/JSSC.2006.873677. KIM S, 2006, P 2006\n+\t\n+\t INT C IEEE EN, P2986. MALLIK U, 2005, IEEE ISSCC, P362. MOHSENI P,\n+\t\n+\t 2004, IEEE T BIO-MED ENG, V51, P832, DOI 10.1109/TBME.2004.824126.\n+\t\n+\t MOTCHENBACHER CD, 1993, LOW NOISE ELECT SYST. OLSSON RH, 2005, IEEE\n+\t\n+\t J SOLID-ST CIRC, V40, P2796. PATTERSON WR, 2004, IEEE T BIO-MED ENG,\n+\t\n+\t V51, P1845, DOI 10.1109/TBME.2004.831521. RILEY G, 1987, SURFACE\n+\t\n+\t MOUNT INT, P535. STEYAERT MSJ, 1987, IEEE J SOLID-ST CIRC, V22, P1163.\n+\t\n+\t TSIVIDIS Y, 2003, OPERATION MODELING M. WATTANAPANITCH W, 2007, IEEE\n+\t\n+\t T BIOMED CIRC S, V1, P136, DOI 10.1109/TBCAS.2007.907868. WISE KD,\n+\t\n+\t 2005, IEEE ENG MED BIOL, V24, P22.},\n+  doc-delivery-number = {415FE},\n+  doi = {10.1109/JSSC.2008.2010997},\n+  file = {Draft:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS_draft.pdf:PDF;Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:PDF},\n+  issn = {0018-9200},\n+  journal-iso = {IEEE J. Solid-State Circuit},\n+  keywords = {Multi-channel recording; microelectrodes; extracellular recording;\n+\t\n+\t electrode array; implantable; brain; hippocampus; delta compression;\n+\t\n+\t neural amplifier},\n+  keywords-plus = {AMPLIFIER; STABILIZATION; CIRCUIT; ARRAY},\n+  language = {English},\n+  number-of-cited-references = {25},\n+  publisher = {IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC},\n+  subject-category = {Engineering, Electrical \\& Electronic},\n+  times-cited = {2},\n+  timestamp = {10.04.15.11.41},\n+  type = {Article},\n+  unique-id = {ISI:000263918900029}\n+}\n+\n+@ARTICLE{BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering,\n+  author = {B Balakrisnan , S Patil and E Smela},\n+  title = {Patterning PDMS using a combination of wet and dry etching},\n+  journal = {Journal of Micromechanics and Microengineering},\n+  year = {2009},\n+  volume = {19},\n+  pages = {047002},\n+  number = {4},\n+  abstract = {PDMS films of 10 \ufffdm thickness can be patterned within 30 min by combining\n+\t\n+\t dry etching to achieve substantially vertical sidewalls with wet\n+\t\n+\t etching to achieve high etch rates and to protect the underlying\n+\t\n+\t substrate from attack. Dry etching alone would have taken 5 h, and\n+\t\n+\t wet etching alone would produce severe undercutting. In addition,\n+\t\n+\t using either technique alone produces undesirable surface morphologies.\n+\t\n+\t The mask used during etching is critical to a successful patterning\n+\t\n+\t outcome. E-beam evaporated Al was found to work well, adhering strongly\n+\t\n+\t to oxygen-plasma-treated PDMS and holding up well during both dry\n+\t\n+\t and wet etching. To prevent wrinkling of the PDMS, a fast deposition\n+\t\n+\t rate should be used.},\n+  file = {BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:JabRef\\\\BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:PDF},\n+  timestamp = {09.06.17.13.03},\n+  url = {http://stacks.iop.org/0960-1317/19/i=4/a=047002}\n+}\n+\n+@ARTICLE{Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA,\n+  author = {S. A. Baccus},\n+  title = {Synaptic facilitation by reflected action potentials: enhancement\n+\t\n+\t of transmission when nerve impulses reverse direction at axon branch\n+\t\n+\t points.},\n+  journal = {Proc Natl Acad Sci U S A},\n+  year = {1998},\n+  volume = {95},\n+  pages = {8345--8350},\n+  number = {14},\n+  month = {Jul},\n+  abstract = {A rapid, reversible enhancement of synaptic transmission from a sensory\n+\t\n+\t neuron is reported and explained by impulses that reverse direction,\n+\t\n+\t or reflect, at axon branch points. In leech mechanosensory neurons,\n+\t\n+\t where one can detect reflection because it is possible simultaneously\n+\t\n+\t to study electrical activity in separate branches, action potentials\n+\t\n+\t reflected from branch points within the central nervous system under\n+\t\n+\t physiological conditions. Synapses adjacent to these branch points\n+\t\n+\t were activated twice in rapid succession, first by an impulse arriving\n+\t\n+\t from the periphery and then by its reflection. This fast double-firing\n+\t\n+\t facilitated synaptic transmission, increasing it to more than twice\n+\t\n+\t its normal level. Reflection occurred within a range of resting membrane\n+\t\n+\t potentials, and electrical activity produced by mechanical stimulation\n+\t\n+\t changed membrane potential so as to produce and cease reflection.\n+\t\n+\t A compartmental model was used to investigate how branch-point morphology\n+\t\n+\t and electrical activity contribute to produce reflection. The model\n+\t\n+\t shows that mechanisms that hyperpolarize the membrane so as to impair\n+\t\n+\t action potential propagation can increase the range of structures\n+\t\n+\t that can produce reflection. This suggests that reflection is more\n+\t\n+\t likely to occur in other structures where impulses fail, such as\n+\t\n+\t in axons and dendrites in the mammalian brain. In leech sensory neurons,\n+\t\n+\t reflection increased transmission from central synapses only in those\n+\t\n+\t axon branches that innervate the edges of the receptive field in\n+\t\n+\t the skin, thereby sharpening spatial contrast. Reflection thus allows\n+\t\n+\t a neuron to amplify synaptic transmission from a selected group of\n+\t\n+\t its branches in a way that can be regulated by electrical activity.},\n+  file = {Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:JabRef\\\\Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:PDF},\n+  institution = {Neuroscience Program, University of Miami, Miami, FL 33136, USA.\n+\t\n+\t sbaccus@mednet.med.miami.edu},\n+  keywords = {Action Potentials, physiology; Animals; Axons, physiology; Electrophysiology;\n+\t\n+\t Ganglia, Invertebrate, physiology; Ganglia, Sensory, physiology;\n+\t\n+\t Leeches; Neurons, physiology; Synapses, physiology; Synaptic Transmission,\n+\t\n+\t physiology},\n+  language = {eng},\n+  medline-pst = {ppublish},\n+  pmid = {9653189},\n+  timestamp = {11.05.01.13.02}\n+}\n+\n+@ARTICLE{Brewer1995Serum-freeB27/neurobasalmediumsupportsdifferentiatedgrowthofneuronsfromthestriatumsubstantianigraseptumcerebralcortexcerebellumanddentategyrus.JNeurosciRes,\n+  author = {G. J. Brewer},\n+  title = {Serum-free B27/neurobasal medium supports differentiated growth of\n+\t\n+\t neurons from the striatum, substantia nigra, septum, cerebral cortex,\n+\t\n+\t cerebellum, and dentate gyrus.},\n+  journal = {J Neurosci Res},\n+  year = {1995},\n+  volume = {42},\n+  pages = {674--683},\n+  number = {5},\n+  month = {Dec},\n+  abstract = {Two fundamental questions about neuron cell culture were addressed.\n+\t\n+\t Can one serum-free medium that was developed for optimum growth of\n+\t\n+\t hippocampal neurons support the growth of neurons from other regions\n+\t\n+\t of the brain? Is the region specific state of differentiation maintained\n+\t\n+\t in culture? To answer these questions, we isolated neurons from six\n+\t\n+\t other rat brain regions, placed them in culture in B27/Neurobasal\n+\t\n+\t defined medium, and analyzed their morphology and growth dependence\n+\t\n+\t on cell density after 4 days in culture. Neuronal identity was confirmed\n+\t\n+\t by immunostaining with antibodies to neurofilament 200. Neurons from\n+\t\n+\t each brain region maintained distinctive morphologies in culture\n+\t\n+\t in the virtual absence of glia. Cells isolated from embryonic day\n+\t\n+\t 18 cerebral cortex by digestion with papain showed the same high\n+\t\n+\t survival as hippocampal neurons, e.g., 70\\% survival for cells plated\n+\t\n+\t at 160/mm2. At this age and density, neurons from the septum showed\n+\t\n+\t slightly lower survival, 45\\%. Survival of dentate granule neurons\n+\t\n+\t from postnatal day four brains was 30-40\\%, significantly lower,\n+\t\n+\t and relatively independent of plating density. This suggests an absence\n+\t\n+\t of dependence on trophic factors or contact for dentate granule neurons.\n+\t\n+\t Growth of cerebellar granule neurons isolated from postnatal day\n+\t\n+\t 7, 8, or 9 brains in B27/Neurobasal was compared to growth in BME/10\\%\n+\t\n+\t serum. Viability in serum-free medium at 4 days was much better than\n+\t\n+\t that in serum, did not require KCl elevated to 25 mM, and occurred\n+\t\n+\t without substantial growth of glia. Cerebellar granule neurons plated\n+\t\n+\t at 1,280 cells/mm2 were maintained in culture for three weeks with\n+\t\n+\t 17\\% of the original cell density surviving. Survival of cells isolated\n+\t\n+\t from embryonic day 18 substantia nigra was 50\\% at 160 cells/mm2\n+\t\n+\t after 4 days, similar to that of striatum, but slightly less than\n+\t\n+\t hippocampal neuron survival. The dopaminergic phenotype of the substantia\n+\t\n+\t nigral neurons was maintained over 2 weeks in culture as judged by\n+\t\n+\t immunoreactivity with antibodies to tyrosine hydroxylase. During\n+\t\n+\t this time, immunoreactivity was found in the processes as they grew\n+\t\n+\t out from the soma. Together, these studies suggest that B27/Neurobasal\n+\t\n+\t will be a useful medium for maintaining the differentiated growth\n+\t\n+\t of neurons from many brain regions. Potential applications of a common\n+\t\n+\t growth medium for different neurons are discussed.},\n+  doi = {10.1002/jnr.490420510},\n+  institution = {Southern Illinois University School of Medicine, Springfield 62794-1220,\n+\t\n+\t USA.},\n+  keywords = {Animals; Brain, anatomy /&/ histology/cytology/enzymology; Cell Culture\n+\t\n+\t Techniques; Cell Survival; Cells, Cultured; Cerebellum, cytology/embryology;\n+\t\n+\t Cerebral Cortex, cytology/embryology; Corpus Striatum, cytology/embryology;\n+\t\n+\t Culture Media, Serum-Free; Dentate Gyrus, cytology/embryology; Electrophysiology;\n+\t\n+\t Hippocampus, cytology/embryology; Neurofilament Proteins, metabolism;\n+\t\n+\t Neurons, cytology/enzymology; Rats; Rats, Sprague-Dawley; Septum\n+\t\n+\t Pellucidum, embryology; Substantia Nigra, cytology/embryology; Tyrosine\n+\t\n+\t 3-Monooxygenase, metabolism},\n+  pmid = {8600300},\n+  timestamp = {2008.12.12},\n+  url = {http://dx.doi.org/10.1002/jnr.490420510}\n+}\n+\n+@ARTICLE{Brewer1997Isolationandcultureofadultrathippocampalneurons.JNeurosciMethods,\n+  author = {G. J. Brewer},\n+  title = {Isolation and culture of adult rat hippocampal neurons.},\n+  journal = {J Neurosci Methods},\n+  year = {1997},\n+  volume = {71},\n+  pages = {143--155},\n+  number = {2},\n+  month = {Feb},\n+  abstract = {Inability to culture adult central neurons and the failure of injured\n+\t\n+\t neurons to regenerate in the brain could be due to genetic controls\n+\t\n+\t or environmental inhibitors. We tested the environmental inhibitor\n+\t\n+\t hypothesis by attempting to regenerate adult rat neurons in B27/Neurobasal\n+\t\n+\t culture medium, a medium optimized for survival of embryonic neurons.\n+\t\n+\t To isolate neurons from their numerous connections, papain was the\n+\t\n+\t best of six different proteases screened on slices of hippocampus\n+\t\n+\t for survival of isolated cells after 4 days of culture. Use of a\n+\t\n+\t density gradient enabled separation of oligodendroglia and some enrichment\n+\t\n+\t of neurons and microglia from considerable debris which was inhibitory\n+\t\n+\t to sprouting and viability. With these techniques, about 900000 viable\n+\t\n+\t neurons were isolated from each hippocampus of any age rat from birth\n+\t\n+\t to 24-36 months, near the median mortality. FGF2 was found to enhance\n+\t\n+\t viability at least 3-fold to 40-80\\%, independent of age, without\n+\t\n+\t affecting the length of the processes. Neurons were cultured for\n+\t\n+\t more than 3 weeks. These methods demonstrate that hippocampal neurons\n+\t\n+\t can regenerate axons and dendrites if provided with adequate nutrition\n+\t\n+\t and if inhibitors are removed. They also will enable aging studies.\n+\t\n+\t Therefore, the concept of environmental growth restriction may be\n+\t\n+\t more appropriate for neurons in the brain than the concept of a genetic\n+\t\n+\t block that precludes regeneration of processes.},\n+  institution = {Department of Medical Microbiology and Immunology, Southern Illinois\n+\t\n+\t University School of Medicine, Springfield 62794-1220, USA. gbrewer@siumed.edu},\n+  keywords = {Age Factors; Animals; Cell Adhesion, physiology; Cell Culture Techniques,\n+\t\n+\t methods; Cell Separation, methods; Cell Survival, physiology; Cells,\n+\t\n+\t Cultured; Cerebral Cortex, cytology; Dose-Response Relationship,\n+\t\n+\t Drug; Fibroblast Growth Factor 2, physiology; Glutamic Acid, pharmacology;\n+\t\n+\t Hippocampus, cytology; Male; Neurons, cytology/drug effects; Osmolar\n+\t\n+\t Concentration; Oxygen, pharmacology; Papain; Rats; Rats, Inbred F344;\n+\t\n+\t Rats, Sprague-Dawley},\n+  pii = {S0165-0270(96)00136-7},\n+  pmid = {9128149},\n+  timestamp = {09.02.26.19.31}\n+}\n+\n+@ARTICLE{Brewer2008NbActiv4mediumimprovementtoNeurobasal/B27increasesneuronsynapsedensitiesandnetworkspikeratesonmultielectrodearrays.JNeurosciMethods,\n+  author = {Gregory J Brewer and Michael D Boehler and Torrie T Jones and Bruce\n+\t\n+\t C Wheeler},\n+  title = {NbActiv4 medium improvement to Neurobasal/B27 increases neuron synapse\n+\t\n+\t densities and network spike rates on multielectrode arrays.},\n+  journal = {J Neurosci Methods},\n+  year = {2008},\n+  volume = {170},\n+  pages = {181--187},\n+  number = {2},\n+  month = {May},\n+  abstract = {The most interesting property of neurons is their long-distance propagation\n+\t\n+\t of signals as spiking action potentials. Since 1993, Neurobasal/B27\n+\t\n+\t has been used as a serum-free medium optimized for hippocampal neuron\n+\t\n+\t survival. Neurons on microelectrode arrays (MEA) were used as an\n+\t\n+\t assay system to increase spontaneous spike rates in media of different\n+\t\n+\t compositions. We find spike rates of 0.5 s(-1) (Hz) for rat embryonic\n+\t\n+\t hippocampal neurons cultured in Neurobasal/B27, lower than cultures\n+\t\n+\t in serum-based media and offering an opportunity for improvement.\n+\t\n+\t NbActiv4 was formulated by addition of creatine, cholesterol and\n+\t\n+\t estrogen to Neurobasal/B27 that synergistically produced an eightfold\n+\t\n+\t increase in spontaneous spike activity. The increased activity with\n+\t\n+\t NbActiv4 correlated with a twofold increase in immunoreactive synaptophysin\n+\t\n+\t bright puncta and GluR1 total puncta. Characteristic of synaptic\n+\t\n+\t scaling, immunoreactive GABAAbeta puncta also increased 1.5-fold\n+\t\n+\t and NMDA-R1 puncta increased 1.8-fold. Neuron survival in NbActiv4\n+\t\n+\t equaled that in Neurobasal/B27, but with slightly higher astroglia.\n+\t\n+\t Resting respiratory demand was decreased and demand capacity was\n+\t\n+\t increased in NbActiv4, indicating less stress and higher efficiency.\n+\t\n+\t These results show that NbActiv4 is an improvement to Neurobasal/B27\n+\t\n+\t for cultured networks with an increased density of synapses and transmitter\n+\t\n+\t receptors which produces higher spontaneous spike rates in neuron\n+\t\n+\t networks.},\n+  doi = {10.1016/j.jneumeth.2008.01.009},\n+  institution = {Southern Illinois University School of Medicine, Springfield, IL\n+\t\n+\t 62794-9626, USA. gbrewer@siumed.edu},\n+  keywords = {Cell Survival; Cells, Cultured; Culture Media; Electrophysiology;\n+\t\n+\t Hippocampus, cytology; Humans; Image Processing, Computer-Assisted;\n+\t\n+\t Immunohistochemistry; Kinetics; Microelectrodes; Nerve Net, physiology;\n+\t\n+\t Neurons, physiology; Oxygen Consumption, physiology; Oxygen, analysis;\n+\t\n+\t Synapses, physiology},\n+  pii = {S0165-0270(08)00039-3},\n+  pmid = {18308400},\n+  timestamp = {09.02.26.19.31},\n+  url = {http://dx.doi.org/10.1016/j.jneumeth.2008.01.009}\n+}\n+, @@ -0,0 +1,301 @@\n+% This file was created with JabRef 2.9.2.\n+% Encoding: UTF8\n+\n+@ARTICLE{Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS,\n+  author = {Aziz, Joseph N. Y. and Abdelhalim, Karim and Shulyzki, Ruslana and\n+\tGenov, Roman and Bardakjian, Berj L. and Derchansky, Miron and Serletis,\n+\tDemitre and Carlen, Peter L.},\n+  title = {256-Channel Neural Recording and Delta Compression Microsystem With\n+\t3D Electrodes},\n+  journal = {IEEE JOURNAL OF SOLID-STATE CIRCUITS},\n+  year = {2009},\n+  volume = {44},\n+  pages = {995-1005},\n+  number = {3},\n+  month = {MAR},\n+  abstract = {A 3D microsystem for multi-site penetrating extracellular neural recording\n+\tfrom the brain is presented. A 16 x 16-channel neural recording interface\n+\tintegrated prototype fabricated in 0.35 mu m CMOS occupies 3.5 mm\n+\tx 4.5 mm area. Each recording channel dissipates 15 mu W of power\n+\twith input-referred noise of 7 mu V-rms over 5 kHz bandwidth. A switched-capacitor\n+\tdelta read-out data compression circuit trades recording accuracy\n+\tfor the output data rate. An array of 1.5 mm platinum-coated microelectrodes\n+\tis bonded directly onto the die. Results of in vitro experimental\n+\trecordings from intact mouse hippocampus validate the circuit design\n+\tand the on-chip electrode bonding technology.},\n+  address = {445 HOES LANE, PISCATAWAY, NJ 08855 USA},\n+  affiliation = {Aziz, JNY (Reprint Author), Broadcom, Irvine, CA 92617 USA. {[}Aziz,\n+\tJoseph N. Y.; Abdelhalim, Karim; Shulyzki, Ruslana; Genov, Roman]\n+\tUniv Toronto, Dept Elect \\& Comp Engn, Toronto, ON M5S 3G4, Canada.\n+\t{[}Bardakjian, Berj L.] Univ Toronto, Inst Biomat \\& Biomed Engn,\n+\tEdward S Rogers Sr Dept Elect \\& Comp Engn, Toronto, ON M5S 1A4,\n+\tCanada. {[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.]\n+\tUniv Toronto, Toronto Western Res Inst, Toronto, ON M5S 1A4, Canada.\n+\t{[}Derchansky, Miron; Serletis, Demitre; Carlen, Peter L.] Univ Toronto,\n+\tDept Physiol, Toronto, ON M5S 1A4, Canada.},\n+  author-email = {roman@eecg.utoronto.ca},\n+  cited-references = {ATLURI S, 2006, P IEEE INT S CIRC SY, P1131. AZIZ J, 2006, P IEEE\n+\tINT S CIRC SY. AZIZ J, 2007, IEEE INT SOL STAT CI, P160. AZIZ JNY,\n+\t2006, P IEEE INT S CIRC SY, P5075. AZIZ JNY, 2007, IEEE T BIOMED\n+\tCIRCUI, V1. AZIZ JNY, 2007, P IEEE INT S CIRC SY. CHAIMANONART N,\n+\t2005, P ANN INT IEEE EMBS, P5194. DELBRUCK T, 1994, P IEEE INT S\n+\tCIRC SY, V4, P339. ENZ CC, 1996, P IEEE, V84, P1584. EVERSMANN B,\n+\t2003, IEEE J SOLID-ST CIRC, V38, P2306, DOI 10.1109/JSSC.2003.819174.\n+\tHARRISON R, 2006, IEEE INT SOL STAT C, P2258. HARRISON RR, 2003,\n+\tIEEE J SOLID-ST CIRC, V38, P958, DOI 10.1009/JSSC.2003.811979. HARRISON\n+\tRR, 2007, IEEE CUST INTEGR CIR, P115. HEER F, 2006, IEEE J SOLID-ST\n+\tCIRC, V41, P1620, DOI 10.1109/JSSC.2006.873677. KIM S, 2006, P 2006\n+\tINT C IEEE EN, P2986. MALLIK U, 2005, IEEE ISSCC, P362. MOHSENI P,\n+\t2004, IEEE T BIO-MED ENG, V51, P832, DOI 10.1109/TBME.2004.824126.\n+\tMOTCHENBACHER CD, 1993, LOW NOISE ELECT SYST. OLSSON RH, 2005, IEEE\n+\tJ SOLID-ST CIRC, V40, P2796. PATTERSON WR, 2004, IEEE T BIO-MED ENG,\n+\tV51, P1845, DOI 10.1109/TBME.2004.831521. RILEY G, 1987, SURFACE\n+\tMOUNT INT, P535. STEYAERT MSJ, 1987, IEEE J SOLID-ST CIRC, V22, P1163.\n+\tTSIVIDIS Y, 2003, OPERATION MODELING M. WATTANAPANITCH W, 2007, IEEE\n+\tT BIOMED CIRC S, V1, P136, DOI 10.1109/TBCAS.2007.907868. WISE KD,\n+\t2005, IEEE ENG MED BIOL, V24, P22.},\n+  doc-delivery-number = {415FE},\n+  doi = {10.1109/JSSC.2008.2010997},\n+  file = {Draft:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS_draft.pdf:PDF;Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:JabRef\\\\Aziz2009256-ChannelNeuralRecordingandDeltaCompressionMicrosystemWith3DElectrodesIEEEJOURNALOFSOLID-STATECIRCUITS.pdf:PDF},\n+  issn = {0018-9200},\n+  journal-iso = {IEEE J. Solid-State Circuit},\n+  keywords = {Multi-channel recording; microelectrodes; extracellular recording;\n+\telectrode array; implantable; brain; hippocampus; delta compression;\n+\tneural amplifier},\n+  keywords-plus = {AMPLIFIER; STABILIZATION; CIRCUIT; ARRAY},\n+  language = {English},\n+  number-of-cited-references = {25},\n+  publisher = {IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC},\n+  subject-category = {Engineering, Electrical \\& Electronic},\n+  times-cited = {2},\n+  timestamp = {10.04.15.11.41},\n+  type = {Article},\n+  unique-id = {ISI:000263918900029}\n+}\n+\n+@ARTICLE{Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA,\n+  author = {S. A. Baccus},\n+  title = {Synaptic facilitation by reflected action potentials: enhancement\n+\tof transmission when nerve impulses reverse direction at axon branch\n+\tpoints.},\n+  journal = {Proc Natl Acad Sci U S A},\n+  year = {1998},\n+  volume = {95},\n+  pages = {8345--8350},\n+  number = {14},\n+  month = {Jul},\n+  abstract = {A rapid, reversible enhancement of synaptic transmission from a sensory\n+\tneuron is reported and explained by impulses that reverse direction,\n+\tor reflect, at axon branch points. In leech mechanosensory neurons,\n+\twhere one can detect reflection because it is possible simultaneously\n+\tto study electrical activity in separate branches, action potentials\n+\treflected from branch points within the central nervous system under\n+\tphysiological conditions. Synapses adjacent to these branch points\n+\twere activated twice in rapid succession, first by an impulse arriving\n+\tfrom the periphery and then by its reflection. This fast double-firing\n+\tfacilitated synaptic transmission, increasing it to more than twice\n+\tits normal level. Reflection occurred within a range of resting membrane\n+\tpotentials, and electrical activity produced by mechanical stimulation\n+\tchanged membrane potential so as to produce and cease reflection.\n+\tA compartmental model was used to investigate how branch-point morphology\n+\tand electrical activity contribute to produce reflection. The model\n+\tshows that mechanisms that hyperpolarize the membrane so as to impair\n+\taction potential propagation can increase the range of structures\n+\tthat can produce reflection. This suggests that reflection is more\n+\tlikely to occur in other structures where impulses fail, such as\n+\tin axons and dendrites in the mammalian brain. In leech sensory neurons,\n+\treflection increased transmission from central synapses only in those\n+\taxon branches that innervate the edges of the receptive field in\n+\tthe skin, thereby sharpening spatial contrast. Reflection thus allows\n+\ta neuron to amplify synaptic transmission from a selected group of\n+\tits branches in a way that can be regulated by electrical activity.},\n+  file = {Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:JabRef\\\\Baccus1998Synapticfacilitationbyreflectedactionpotentials--enhancementoftransmissionwhennerveimpulsesreversedirectionataxonbranchpoints.ProcNatlAcadSciUSA.pdf:PDF},\n+  institution = {Neuroscience Program, University of Miami, Miami, FL 33136, USA.\n+\tsbaccus@mednet.med.miami.edu},\n+  keywords = {Action Potentials, physiology; Animals; Axons, physiology; Electrophysiology;\n+\tGanglia, Invertebrate, physiology; Ganglia, Sensory, physiology;\n+\tLeeches; Neurons, physiology; Synapses, physiology; Synaptic Transmission,\n+\tphysiology},\n+  language = {eng},\n+  medline-pst = {ppublish},\n+  pmid = {9653189},\n+  timestamp = {11.05.01.13.02}\n+}\n+\n+@ARTICLE{BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering,\n+  author = {B Balakrisnan , S Patil and E Smela},\n+  title = {Patterning PDMS using a combination of wet and dry etching},\n+  journal = {Journal of Micromechanics and Microengineering},\n+  year = {2009},\n+  volume = {19},\n+  pages = {047002},\n+  number = {4},\n+  abstract = {PDMS films of 10 \ufffdm thickness can be patterned within 30 min by combining\n+\tdry etching to achieve substantially vertical sidewalls with wet\n+\tetching to achieve high etch rates and to protect the underlying\n+\tsubstrate from attack. Dry etching alone would have taken 5 h, and\n+\twet etching alone would produce severe undercutting. In addition,\n+\tusing either technique alone produces undesirable surface morphologies.\n+\tThe mask used during etching is critical to a successful patterning\n+\toutcome. E-beam evaporated Al was found to work well, adhering strongly\n+\tto oxygen-plasma-treated PDMS and holding up well during both dry\n+\tand wet etching. To prevent wrinkling of the PDMS, a fast deposition\n+\trate should be used.},\n+  file = {BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:JabRef\\\\BBalakrisnan2009PatterningPDMSusingacombinationofwetanddryetchingJournalofMicromechanicsandMicroengineering.pdf:PDF},\n+  timestamp = {09.06.17.13.03},\n+  url = {http://stacks.iop.org/0960-1317/19/i=4/a=047002}\n+}\n+\n+@ARTICLE{Brewer1997Isolationandcultureofadultrathippocampalneurons.JNeurosciMethods,\n+  author = {G. J. Brewer},\n+  title = {Isolation and culture of adult rat hippocampal neurons.},\n+  journal = {J Neurosci Methods},\n+  year = {1997},\n+  volume = {71},\n+  pages = {143--155},\n+  number = {2},\n+  month = {Feb},\n+  abstract = {Inability to culture adult central neurons and the failure of injured\n+\tneurons to regenerate in the brain could be due to genetic controls\n+\tor environmental inhibitors. We tested the environmental inhibitor\n+\thypothesis by attempting to regenerate adult rat neurons in B27/Neurobasal\n+\tculture medium, a medium optimized for survival of embryonic neurons.\n+\tTo isolate neurons from their numerous connections, papain was the\n+\tbest of six different proteases screened on slices of hippocampus\n+\tfor survival of isolated cells after 4 days of culture. Use of a\n+\tdensity gradient enabled separation of oligodendroglia and some enrichment\n+\tof neurons and microglia from considerable debris which was inhibitory\n+\tto sprouting and viability. With these techniques, about 900000 viable\n+\tneurons were isolated from each hippocampus of any age rat from birth\n+\tto 24-36 months, near the median mortality. FGF2 was found to enhance\n+\tviability at least 3-fold to 40-80\\%, independent of age, without\n+\taffecting the length of the processes. Neurons were cultured for\n+\tmore than 3 weeks. These methods demonstrate that hippocampal neurons\n+\tcan regenerate axons and dendrites if provided with adequate nutrition\n+\tand if inhibitors are removed. They also will enable aging studies.\n+\tTherefore, the concept of environmental growth restriction may be\n+\tmore appropriate for neurons in the brain than the concept of a genetic\n+\tblock that precludes regeneration of processes.},\n+  institution = {Department of Medical Microbiology and Immunology, Southern Illinois\n+\tUniversity School of Medicine, Springfield 62794-1220, USA. gbrewer@siumed.edu},\n+  keywords = {Age Factors; Animals; Cell Adhesion, physiology; Cell Culture Techniques,\n+\tmethods; Cell Separation, methods; Cell Survival, physiology; Cells,\n+\tCultured; Cerebral Cortex, cytology; Dose-Response Relationship,\n+\tDrug; Fibroblast Growth Factor 2, physiology; Glutamic Acid, pharmacology;\n+\tHippocampus, cytology; Male; Neurons, cytology/drug effects; Osmolar\n+\tConcentration; Oxygen, pharmacology; Papain; Rats; Rats, Inbred F344;\n+\tRats, Sprague-Dawley},\n+  pii = {S0165-0270(96)00136-7},\n+  pmid = {9128149},\n+  timestamp = {09.02.26.19.31}\n+}\n+\n+@ARTICLE{Brewer1995Serum-freeB27/neurobasalmediumsupportsdifferentiatedgrowthofneuronsfromthestriatumsubstantianigraseptumcerebralcortexcerebellumanddentategyrus.JNeurosciRes,\n+  author = {G. J. Brewer},\n+  title = {Serum-free B27/neurobasal medium supports differentiated growth of\n+\tneurons from the striatum, substantia nigra, septum, cerebral cortex,\n+\tcerebellum, and dentate gyrus.},\n+  journal = {J Neurosci Res},\n+  year = {1995},\n+  volume = {42},\n+  pages = {674--683},\n+  number = {5},\n+  month = {Dec},\n+  abstract = {Two fundamental questions about neuron cell culture were addressed.\n+\tCan one serum-free medium that was developed for optimum growth of\n+\thippocampal neurons support the growth of neurons from other regions\n+\tof the brain? Is the region specific state of differentiation maintained\n+\tin culture? To answer these questions, we isolated neurons from six\n+\tother rat brain regions, placed them in culture in B27/Neurobasal\n+\tdefined medium, and analyzed their morphology and growth dependence\n+\ton cell density after 4 days in culture. Neuronal identity was confirmed\n+\tby immunostaining with antibodies to neurofilament 200. Neurons from\n+\teach brain region maintained distinctive morphologies in culture\n+\tin the virtual absence of glia. Cells isolated from embryonic day\n+\t18 cerebral cortex by digestion with papain showed the same high\n+\tsurvival as hippocampal neurons, e.g., 70\\% survival for cells plated\n+\tat 160/mm2. At this age and density, neurons from the septum showed\n+\tslightly lower survival, 45\\%. Survival of dentate granule neurons\n+\tfrom postnatal day four brains was 30-40\\%, significantly lower,\n+\tand relatively independent of plating density. This suggests an absence\n+\tof dependence on trophic factors or contact for dentate granule neurons.\n+\tGrowth of cerebellar granule neurons isolated from postnatal day\n+\t7, 8, or 9 brains in B27/Neurobasal was compared to growth in BME/10\\%\n+\tserum. Viability in serum-free medium at 4 days was much better than\n+\tthat in serum, did not require KCl elevated to 25 mM, and occurred\n+\twithout substantial growth of glia. Cerebellar granule neurons plated\n+\tat 1,280 cells/mm2 were maintained in culture for three weeks with\n+\t17\\% of the original cell density surviving. Survival of cells isolated\n+\tfrom embryonic day 18 substantia nigra was 50\\% at 160 cells/mm2\n+\tafter 4 days, similar to that of striatum, but slightly less than\n+\thippocampal neuron survival. The dopaminergic phenotype of the substantia\n+\tnigral neurons was maintained over 2 weeks in culture as judged by\n+\timmunoreactivity with antibodies to tyrosine hydroxylase. During\n+\tthis time, immunoreactivity was found in the processes as they grew\n+\tout from the soma. Together, these studies suggest that B27/Neurobasal\n+\twill be a useful medium for maintaining the differentiated growth\n+\tof neurons from many brain regions. Potential applications of a common\n+\tgrowth medium for different neurons are discussed.},\n+  doi = {10.1002/jnr.490420510},\n+  institution = {Southern Illinois University School of Medicine, Springfield 62794-1220,\n+\tUSA.},\n+  keywords = {Animals; Brain, anatomy /&/ histology/cytology/enzymology; Cell Culture\n+\tTechniques; Cell Survival; Cells, Cultured; Cerebellum, cytology/embryology;\n+\tCerebral Cortex, cytology/embryology; Corpus Striatum, cytology/embryology;\n+\tCulture Media, Serum-Free; Dentate Gyrus, cytology/embryology; Electrophysiology;\n+\tHippocampus, cytology/embryology; Neurofilament Proteins, metabolism;\n+\tNeurons, cytology/enzymology; Rats; Rats, Sprague-Dawley; Septum\n+\tPellucidum, embryology; Substantia Nigra, cytology/embryology; Tyrosine\n+\t3-Monooxygenase, metabolism},\n+  pmid = {8600300},\n+  timestamp = {2008.12.12},\n+  url = {http://dx.doi.org/10.1002/jnr.490420510}\n+}\n+\n+@ARTICLE{Brewer2008NbActiv4mediumimprovementtoNeurobasal/B27increasesneuronsynapsedensitiesandnetworkspikeratesonmultielectrodearrays.JNeurosciMethods,\n+  author = {Gregory J Brewer and Michael D Boehler and Torrie T Jones and Bruce\n+\tC Wheeler},\n+  title = {NbActiv4 medium improvement to Neurobasal/B27 increases neuron synapse\n+\tdensities and network spike rates on multielectrode arrays.},\n+  journal = {J Neurosci Methods},\n+  year = {2008},\n+  volume = {170},\n+  pages = {181--187},\n+  number = {2},\n+  month = {May},\n+  abstract = {The most interesting property of neurons is their long-distance propagation\n+\tof signals as spiking action potentials. Since 1993, Neurobasal/B27\n+\thas been used as a serum-free medium optimized for hippocampal neuron\n+\tsurvival. Neurons on microelectrode arrays (MEA) were used as an\n+\tassay system to increase spontaneous spike rates in media of different\n+\tcompositions. We find spike rates of 0.5 s(-1) (Hz) for rat embryonic\n+\thippocampal neurons cultured in Neurobasal/B27, lower than cultures\n+\tin serum-based media and offering an opportunity for improvement.\n+\tNbActiv4 was formulated by addition of creatine, cholesterol and\n+\testrogen to Neurobasal/B27 that synergistically produced an eightfold\n+\tincrease in spontaneous spike activity. The increased activity with\n+\tNbActiv4 correlated with a twofold increase in immunoreactive synaptophysin\n+\tbright puncta and GluR1 total puncta. Characteristic of synaptic\n+\tscaling, immunoreactive GABAAbeta puncta also increased 1.5-fold\n+\tand NMDA-R1 puncta increased 1.8-fold. Neuron survival in NbActiv4\n+\tequaled that in Neurobasal/B27, but with slightly higher astroglia.\n+\tResting respiratory demand was decreased and demand capacity was\n+\tincreased in NbActiv4, indicating less stress and higher efficiency.\n+\tThese results show that NbActiv4 is an improvement to Neurobasal/B27\n+\tfor cultured networks with an increased density of synapses and transmitter\n+\treceptors which produces higher spontaneous spike rates in neuron\n+\tnetworks.},\n+  doi = {10.1016/j.jneumeth.2008.01.009},\n+  institution = {Southern Illinois University School of Medicine, Springfield, IL\n+\t62794-9626, USA. gbrewer@siumed.edu},\n+  keywords = {Cell Survival; Cells, Cultured; Culture Media; Electrophysiology;\n+\tHippocampus, cytology; Humans; Image Processing, Computer-Assisted;\n+\tImmunohistochemistry; Kinetics; Microelectrodes; Nerve Net, physiology;\n+\tNeurons, physiology; Oxygen Consumption, physiology; Oxygen, analysis;\n+\tSynapses, physiology},\n+  pii = {S0165-0270(08)00039-3},\n+  pmid = {18308400},\n+  timestamp = {09.02.26.19.31},\n+  url = {http://dx.doi.org/10.1016/j.jneumeth.2008.01.009}\n+}\n+, ", 1099, 1, "\"modified, modified, added, added, added, \"", 1100], ["vegeziel", "BugFix for \"#880 PubMed Import broken\"\n\nFound bug: PubMed/Medline PLAIN format recognized as RIS format.\nProvided solution:\n\t- Modified RIS ImportFilter. Now RIS format is identified by looking for the \"TY\" tag (it is a mandatory tag in RIS format and it is not conflictual with other filters)\n\t- Added new ImportFilter \"MedlinePlain\". This import filter parses Medline files in plain format (not XML). The import filter has been produced referring to the official Medline documentation (http://www.nlm.nih.gov/bsd/mms/medlineelements.html)\n\t- Updated the net.sf.jabref.core plugin.xml file in order to include the newly added MedlinePlain import filter", "06/27/14, 06:53:49 PM", "vegeziel", "224b486bf0493ab115c2859218a2b52fc524451d", ["src/main/java/net/sf/jabref/imports/MedlinePlainImporter.java", "src/main/java/net/sf/jabref/imports/RisImporter.java", "src/main/resources/plugins/net.sf.jabref.core/plugin.xml"], "@@ -0,0 +1,279 @@\n+/*  Copyright (C) 2003-2011 JabRef contributors.\r\n+    This program is free software; you can redistribute it and/or modify\r\n+    it under the terms of the GNU General Public License as published by\r\n+    the Free Software Foundation; either version 2 of the License, or\r\n+    (at your option) any later version.\r\n+\r\n+    This program is distributed in the hope that it will be useful,\r\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n+    GNU General Public License for more details.\r\n+\r\n+    You should have received a copy of the GNU General Public License along\r\n+    with this program; if not, write to the Free Software Foundation, Inc.,\r\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\r\n+    \r\n+*/\r\n+\r\n+package net.sf.jabref.imports;\r\n+\r\n+import java.util.regex.Pattern;\r\n+import java.io.InputStream;\r\n+import java.io.BufferedReader;\r\n+import java.io.IOException;\r\n+import java.util.List;\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.Iterator;\r\n+\r\n+import net.sf.jabref.BibtexEntry;\r\n+import net.sf.jabref.Globals;\r\n+import net.sf.jabref.AuthorList;\r\n+import net.sf.jabref.BibtexFields;\r\n+import net.sf.jabref.OutputPrinter;\r\n+\r\n+/**\r\n+ * Importer for the MEDLINE Plain format.\r\n+ * \r\n+ * check here for details on the format\r\n+ * http://www.nlm.nih.gov/bsd/mms/medlineelements.html\r\n+ * \r\n+ * @author vegeziel\r\n+ */\r\n+public class MedlinePlainImporter extends ImportFormat {\r\n+\r\n+    /**\r\n+     * Return the name of this import format.\r\n+     */\r\n+    public String getFormatName() {\r\n+        return \"MedlinePlain\";\r\n+    }\r\n+\r\n+    /*\r\n+     *  (non-Javadoc)\r\n+     * @see net.sf.jabref.imports.ImportFormat#getCLIId()\r\n+     */\r\n+    public String getCLIId() {\r\n+        return \"medlineplain\";\r\n+    }\r\n+\r\n+    /**\r\n+     * Check whether the source is in the correct format for this importer.\r\n+     */\r\n+    public boolean isRecognizedFormat(InputStream stream) throws IOException {\r\n+\r\n+    \t// Our strategy is to look for the \"PMID  - *\", \"PMC.*-.*\", or \"PMCR.*-.*\" line \r\n+    \t// (i.e., PubMed Unique Identifier, PubMed Central Identifier, PubMed Central Release)\r\n+        BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\r\n+        Pattern pat1 = Pattern.compile(\"PMID.*-.*\"),\r\n+                pat2 = Pattern.compile(\"PMC.*-.*\"),\r\n+                pat3 = Pattern.compile(\"PMCR.*-.*\");\r\n+\r\n+        String str;\r\n+        while ((str = in.readLine()) != null){\r\n+            if (pat1.matcher(str).find() || pat2.matcher(str).find() || pat3.matcher(str).find())\r\n+                return true;\r\n+        }\r\n+\r\n+        return false;\r\n+    }\r\n+\r\n+    /**\r\n+     * Parse the entries in the source, and return a List of BibtexEntry\r\n+     * objects.\r\n+     */\r\n+    public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\r\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\r\n+        StringBuffer sb = new StringBuffer();\r\n+        BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\r\n+        String str;\r\n+        while ((str = in.readLine()) != null){\r\n+            sb.append(str);\r\n+            sb.append(\"\\n\");\r\n+        }\r\n+        String[] entries = sb.toString().replaceAll(\"\\u2013\", \"-\").replaceAll(\"\\u2014\", \"--\").replaceAll(\"\\u2015\", \"--\").split(\"\\\\n\\\\n\");\r\n+\r\n+        for (int i = 0; i < entries.length; i++){\r\n+\r\n+            if (entries[i].trim().length() == 0)\r\n+                continue;\r\n+\r\n+            String type = \"\", author = \"\", editor = \"\", comment = \"\";\r\n+            HashMap<String, String> hm = new HashMap<String, String>();\r\n+\r\n+\r\n+            String[] fields = entries[i].split(\"\\n\");\r\n+\r\n+            for (int j = 0; j < fields.length; j++){\r\n+            \tif(fields[j].equals(\"\"))\r\n+            \t\tcontinue;\r\n+            \t\r\n+                StringBuffer current = new StringBuffer(fields[j]);\r\n+                boolean done = false;\r\n+                \r\n+                while (!done && (j < fields.length-1)) {\r\n+                    if(fields[j+1].length() <=4 )\r\n+                    \tSystem.out.println(\"aaa\");\r\n+                \tif (fields[j+1].charAt(4) != '-') {\r\n+                        if ((current.length() > 0)\r\n+                                && !Character.isWhitespace(current.charAt(current.length()-1)))\r\n+                            current.append(' ');\r\n+                        current.append(fields[j+1].trim());\r\n+                        j++;\r\n+                    } else\r\n+                        done = true;\r\n+                }\r\n+                String entry = current.toString();\r\n+                \r\n+                String lab = entry.substring(0, entry.indexOf('-')).trim();\r\n+                String val = entry.substring(entry.indexOf('-')+1).trim();\r\n+                if (lab.equals(\"PT\")){\r\n+                \tval = val.toLowerCase();\r\n+                    if (val.equals(\"BOOK\")) type = \"book\";\r\n+                    else if (val.equals(\"journal article\") \r\n+                    \t\t\t|| val.equals(\"classical article\")\r\n+                    \t\t\t|| val.equals(\"corrected and republished article\")\r\n+                    \t\t\t|| val.equals(\"historical article\")\r\n+                    \t\t\t|| val.equals(\"introductory journal article\")\r\n+                    \t\t\t|| val.equals(\"newspaper article\")) type = \"article\";\r\n+                    else if (val.equals(\"clinical conference\")\r\n+                    \t\t|| val.equals(\"consensus development conference\")\r\n+                    \t\t|| val.equals(\"consensus development conference, NIH\")) type = \"conference\";\r\n+                    else if (val.equals(\"technical report\")) type = \"techreport\";\r\n+                    else if (val.equals(\"editorial\")) type = \"inproceedings\";//\"incollection\";\"inbook\";\r\n+                    else if (val.equals(\"overall\")) type = \"proceedings\";\r\n+                    else if(type.equals(\"\")) type = \"other\";\r\n+                    \r\n+                }else if (lab.equals(\"TI\")) {\r\n+                    String oldVal = hm.get(\"title\");\r\n+                    if (oldVal == null)\r\n+                        hm.put(\"title\", val);\r\n+                    else {\r\n+                        if (oldVal.endsWith(\":\") || oldVal.endsWith(\".\") || oldVal.endsWith(\"?\"))\r\n+                            hm.put(\"title\", oldVal+\" \"+val);\r\n+                        else\r\n+                            hm.put(\"title\", oldVal+\": \"+val);\r\n+                    }\r\n+                }\r\n+                    // =\r\n+                    // val;\r\n+                else if (lab.equals(\"BTI\") || lab.equals(\"CTI\")) {\r\n+                    hm.put(\"booktitle\", val);\r\n+                }\r\n+                else if (lab.equals(\"FAU\")) {\r\n+                    if (author.equals(\"\")) // don't add \" and \" for the first author\r\n+                        author = val;\r\n+                    else author += \" and \" + val;\r\n+                }\r\n+                else if (lab.equals(\"FED\")){\r\n+                    if (editor.equals(\"\")) // don't add \" and \" for the first editor\r\n+                        editor = val;\r\n+                    else editor += \" and \" + val;\r\n+                }\r\n+                else if (lab.equals(\"JT\")) {\r\n+                    if (type.equals(\"inproceedings\"))\r\n+                        hm.put(\"booktitle\", val);\r\n+                    else\r\n+                        hm.put(\"journal\", val);\r\n+                }\r\n+\r\n+                else if (lab.equals(\"PG\")) \r\n+                \thm.put(\"pages\", val);\r\n+                \r\n+//                else if (lab.equals(\"STAT\")) {\r\n+//                    if (val.equals(\"MEDLINE\"))\r\n+//                        hm.put(\"publisher\", \"PubMed\");\r\n+//                    else\r\n+//                        hm.put(\"publisher\", val);\r\n+//                }\r\n+                else if (lab.equals(\"PL\"))\r\n+                    hm.put(\"address\", val);\r\n+                else if (lab.equals(\"IS\"))\r\n+                    hm.put(\"issn\", val);\r\n+                else if (lab.equals(\"VI\")) \r\n+                \thm.put(\"volume\", val);\r\n+//                else if (lab.equals(\"\")) \r\n+//                \thm.put(\"number\", val);\r\n+                else if (lab.equals(\"AB\")) {\r\n+                    String oldAb = hm.get(\"abstract\");\r\n+                    if (oldAb == null)\r\n+                        hm.put(\"abstract\", val);\r\n+                    else\r\n+                        hm.put(\"abstract\", oldAb+\"\\n\"+val);\r\n+                }\r\n+                else if ((lab.equals(\"DP\"))) {\r\n+                    String[] parts = val.split(\" \");\r\n+                    hm.put(\"year\", parts[0]);\r\n+                    if ((parts.length > 1) && (parts[1].length() > 0)) {\r\n+                    \thm.put(\"month\", parts[1]);\r\n+                    }\r\n+                }\r\n+\r\n+                else if (lab.equals(\"MH\") || lab.equals(\"OT\")){\r\n+                    if (!hm.containsKey(\"keywords\")) hm.put(\"keywords\", val);\r\n+                    else{\r\n+                        String kw = hm.get(\"keywords\");\r\n+                        hm.put(\"keywords\", kw + \", \" + val);\r\n+                    }\r\n+                }\r\n+                else if (lab.equals(\"CON\") || lab.equals(\"CIN\") || lab.equals(\"EIN\")\r\n+                \t\t\t|| lab.equals(\"EFR\") || lab.equals(\"CRI\") || lab.equals(\"CRF\")\r\n+                \t\t\t|| lab.equals(\"PRIN\") || lab.equals(\"PROF\") || lab.equals(\"RPI\")\r\n+                \t\t\t|| lab.equals(\"RPF\") || lab.equals(\"RIN\") || lab.equals(\"ROF\")\r\n+                \t\t\t|| lab.equals(\"UIN\") || lab.equals(\"UOF\") || lab.equals(\"SPIN\")\r\n+                \t\t\t|| lab.equals(\"ORI\")) {\r\n+                    if (comment.length() > 0)\r\n+                        comment = comment+\"\\n\";\r\n+                    comment = comment+val;\r\n+                }\r\n+//                // Added ID import 2005.12.01, Morten Alver:\r\n+//                else if (lab.equals(\"ID\"))\r\n+//                    hm.put(\"refid\", val);\r\n+//                    // Added doi import (sciencedirect.com) 2011.01.10, Alexander Hug <alexander@alexanderhug.info>\r\n+                else if (lab.equals(\"AID\")){\r\n+                    String doi = val;\r\n+                    if (doi.startsWith(\"doi:\")){\r\n+                        doi = doi.replaceAll(\"(?i)doi:\", \"\").trim();\r\n+                        hm.put(\"doi\", doi);\r\n+                    }\r\n+                }\r\n+            }\r\n+            // fix authors\r\n+            if (author.length() > 0) {\r\n+                author = AuthorList.fixAuthor_lastNameFirst(author);\r\n+                hm.put(\"author\", author);\r\n+            }\r\n+            if (editor.length() > 0) {\r\n+                editor = AuthorList.fixAuthor_lastNameFirst(editor);\r\n+                hm.put(\"editor\", editor);\r\n+            }\r\n+            if (comment.length() > 0) {\r\n+                hm.put(\"comment\", comment);\r\n+            }\r\n+            \r\n+            BibtexEntry b = new BibtexEntry(BibtexFields.DEFAULT_BIBTEXENTRY_ID, Globals\r\n+                    .getEntryType(type)); // id assumes an existing database so don't\r\n+\r\n+            // Remove empty fields:\r\n+            ArrayList<Object> toRemove = new ArrayList<Object>();\r\n+            for (Iterator<String> it = hm.keySet().iterator(); it.hasNext();) {\r\n+                Object key = it.next();\r\n+                String content = hm.get(key);\r\n+                if ((content == null) || (content.trim().length() == 0))\r\n+                    toRemove.add(key);\r\n+            }\r\n+            for (Iterator<Object> iterator = toRemove.iterator(); iterator.hasNext();) {\r\n+                hm.remove(iterator.next());\r\n+\r\n+            }\r\n+\r\n+            // create one here\r\n+            b.setField(hm);\r\n+            bibitems.add(b);\r\n+\r\n+        }\r\n+\r\n+        return bibitems;\r\n+\r\n+    }\r\n+}\r, @@ -60,14 +60,12 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n \n         // Our strategy is to look for the \"AU  - *\" line.\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n-        Pattern pat1 = Pattern.compile(\"AU  - .*\"),\n-                pat2 = Pattern.compile(\"A1  - .*\"),\n-                pat3 = Pattern.compile(\"A2  - .*\");\n+        Pattern pat1 = Pattern.compile(\"TY  - .*\");\n \n \n         String str;\n         while ((str = in.readLine()) != null){\n-            if (pat1.matcher(str).find() || pat2.matcher(str).find() || pat3.matcher(str).find())\n+            if (pat1.matcher(str).find())\n                 return true;\n         }\n , @@ -32,6 +32,15 @@\n \t\t<parameter id=\"description\"\n \t\t\tvalue=\"Import format for Medline references.\" />\n \t</extension>\n+\t\n+\t<extension id=\"MedlinePlainImporter\" plugin-id=\"net.sf.jabref.core\"\n+\t\tpoint-id=\"ImportFormat\">\n+\t\t<parameter id=\"importFormat\"\n+\t\t\tvalue=\"net.sf.jabref.imports.MedlinePlainImporter\" />\n+\t\t<parameter id=\"name\" value=\"Medline Plain Importer\" />\n+\t\t<parameter id=\"description\"\n+\t\t\tvalue=\"Import format for Medline references (not XML).\" />\n+\t</extension>\n \n \t<!-- To extend JabRef with an Entry Fetcher use the following extension point -->\n \t<extension-point id=\"EntryFetcher\">, ", 290, 4, "\"added, modified, modified, \"", 294], ["Ingvar Jackal", "Added message in CHANGELOG", "07/16/14, 05:25:59 PM", "Ingvar Jackal", "064f708300b76faa49135508c9dab6d5c9723db9", ["CHANGELOG"], "@@ -10,6 +10,7 @@\n     - Support FindFullText with ACS DOIs (pull request #9)\n     - Fixes groups and adds optional 2.9.2 save ordering (pull request #10)\n     - Fixes bug 880 \"PubMed Import broken\" (pull request #11 by vegeziel)\n+    - Fixes bug #959 \"StringIndexOutOfBoundsException with invalid Preview text\" (pull request #12 by IngvarJackal)\n 2.10\n     - Made IEEEXploreFetcher author parsing work again.\n     - Added a few more characters in the HTML/Unicode to LaTeX conversion., ", 1, 0, "\"modified, \"", 1], ["Ingvar Jackal", "Language locale fix for BugFix #959", "07/21/14, 06:34:42 PM", "Ingvar Jackal", "f42065e46ae8689ede4cbc1985e74aae599149a5", ["src/main/java/net/sf/jabref/PreviewPrefsTab.java", "src/main/java/net/sf/jabref/export/layout/LayoutHelper.java", "src/main/resources/resource/JabRef_da.properties", "src/main/resources/resource/JabRef_de.properties", "src/main/resources/resource/JabRef_en.properties", "src/main/resources/resource/JabRef_es.properties", "src/main/resources/resource/JabRef_fr.properties", "src/main/resources/resource/JabRef_in.properties", "src/main/resources/resource/JabRef_it.properties", "src/main/resources/resource/JabRef_ja.properties", "src/main/resources/resource/JabRef_nl.properties", "src/main/resources/resource/JabRef_no.properties", "src/main/resources/resource/JabRef_pt_BR.properties", "src/main/resources/resource/JabRef_ru.properties", "src/main/resources/resource/JabRef_tr.properties", "src/main/resources/resource/JabRef_vi.properties", "src/main/resources/resource/JabRef_zh.properties"], "@@ -170,7 +170,7 @@ public void actionPerformed(ActionEvent e) {\n \t\t\t\t\t\tJOptionPane.PLAIN_MESSAGE);\n \t\t\t\t} catch (StringIndexOutOfBoundsException ex) {\n \t\t\t\t\tex.printStackTrace();\n-\t\t\t\t\tJOptionPane.showMessageDialog(null, \"Parsing error: illegal backslash expression.\\n\" + ex.getMessage() + \"\\nLook at stderr for details.\", \"Parsing error\", JOptionPane.WARNING_MESSAGE);\n+\t\t\t\t\tJOptionPane.showMessageDialog(null, Globals.lang(\"Parsing error\") + \": \" + Globals.lang(\"illegal backslash expression\") + \".\\n\" + ex.getMessage() + \"\\n\" + Globals.lang(\"Look at stderr for details\") + \".\", Globals.lang(\"Parsing error\"), JOptionPane.ERROR_MESSAGE);\n \t\t\t\t}\n \t\t\t}\n \t\t});\n@@ -185,7 +185,7 @@ public void actionPerformed(ActionEvent e) {\n \t                                        Globals.lang(\"Preview\"), JOptionPane.PLAIN_MESSAGE);\n \t\t\t\t} catch (StringIndexOutOfBoundsException ex) {\n \t\t\t\t\tex.printStackTrace();\n-\t\t\t\t\tJOptionPane.showMessageDialog(null, \"Parsing error: illegal backslash expression.\\n\" + ex.getMessage() + \"\\nLook at stderr for details.\", \"Parsing error\", JOptionPane.WARNING_MESSAGE);\n+\t\t\t\t\tJOptionPane.showMessageDialog(null, \"Parsing error: illegal backslash expression.\\n\" + ex.getMessage() + \"\\nLook at stderr for details.\", \"Parsing error\", JOptionPane.ERROR_MESSAGE);\n \t\t\t\t}\n \t\t\t}\n \t\t});, @@ -22,6 +22,10 @@\n \n import javax.swing.JOptionPane;\n \n+import net.sf.jabref.Globals;\n+\n+import com.sun.star.ui.GlobalAcceleratorConfiguration;\n+\n \n /**\n  * Helper class to get a Layout object.\n@@ -376,7 +380,7 @@ private void parseField() throws IOException, StringIndexOutOfBoundsException\n                 \tfor (StringInt entry : parsedEntries.subList(Math.max(0, parsedEntries.size()-6), parsedEntries.size()-1)) {\n                 \t\tlastFive.append(entry.s);\n                 \t}\n-                \tthrow new StringIndexOutOfBoundsException(\"Backslash parsing error near \" + \"\\'\" + lastFive.toString().replace(\"\\n\", \" \") +  \"\\'\");\n+                \tthrow new StringIndexOutOfBoundsException(Globals.lang(\"Backslash parsing error near\") + \" \\'\" + lastFive.toString().replace(\"\\n\", \" \") +  \"\\'\");\n                 }\n                 \n                 //System.out.println(\"NAME:\" + name);, @@ -1664,3 +1664,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2421,3 +2421,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -1513,10 +1513,6 @@ Sorted_all_subgroups_recursively.=Sorted_all_subgroups_recursively.\n \n Sorted_immediate_subgroups.=Sorted_immediate_subgroups.\n \n-Sort_fields_in_alphabeta_order_(as_ver_2.10)=Sort_fields_in_alphabeta_order_(as_ver_2.10)\n-Sort_fields_in_old_fasion_(as_ver_2.9.2)=Sort_fields_in_old_fasion_(as_ver_2.9.2)\n-Save_fields_as_user_defined_order=Save_fields_as_user_defined_order\n-\n source_edit=source_edit\n Special_Name_Formatters=Special_Name_Formatters\n \n@@ -2402,13 +2398,20 @@ Opened_%0_folder(s).=Opened_%0_folder(s).\n \n \n Searches_for_unlinked_PDF_files_on_the_file_system=Searches_for_unlinked_PDF_files_on_the_file_system\n-\n-Save_entries_ordered_as_specified=Save_entries_ordered_as_specified\n-Save_sort_order=Save_sort_order\n Export_entries_ordered_as_specified=Export_entries_ordered_as_specified\n Export_sort_order=Export_sort_order\n File_Sorting=File_Sorting\n Newline_separator=Newline_separator\n+\n+Save_entries_ordered_as_specified=Save_entries_ordered_as_specified\n+Save_sort_order=Save_sort_order\n Show_Extra_columns=Show_Extra_columns\n Save_entries_as_configured_globally=Save_entries_as_configured_globally\n Open_=Open_\n+\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=Sort_fields_in_alphabeta_order_(as_ver_2.10)\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=Sort_fields_in_old_fasion_(as_ver_2.9.2)\n+Save_fields_as_user_defined_order=Save_fields_as_user_defined_order\n+Parsing_error=Parsing_error\n+illegal_backslash_expression=illegal_backslash_expression\n+Backslash_parsing_error_near=Backslash_parsing_error_near, @@ -1556,3 +1556,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -1602,3 +1602,9 @@ Save_sort_order=Enregistrer_l'ordre_de_tri\n Show_Extra_columns=Montrer_les_colonnes_suppl\\u00e9mentaires\n Save_entries_as_configured_globally=Enregistrer_les_entr\\u00e9es_comme_dans_la_configuration_g\\u00e9n\\u00e9rale\n Open_=Ouvrir_\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -1575,3 +1575,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -1686,3 +1686,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2406,3 +2406,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2407,3 +2407,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2873,3 +2873,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -1571,3 +1571,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, None, @@ -1593,3 +1593,9 @@ Save_sort_order=S\\u0131ralama_kriterlerini_kaydet\n Show_Extra_columns=Ekstra_s\\u00fctunlar\\u0131_g\\u00f6ster\n Save_entries_as_configured_globally=Girdileri_global_ayarlar_uyar\\u0131nca_kaydet\n Open_=A\\u00e7:_\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2403,3 +2403,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, @@ -2396,3 +2396,9 @@ Save_sort_order=\n Show_Extra_columns=\n Save_entries_as_configured_globally=\n Open_=\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=, ", 1681, 1590, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 3271], ["Ingvar Jackal", "Fix for Globals.lang call", "08/04/14, 02:10:04 PM", "Ingvar Jackal", "24654597d2df7da8e3774d7a4da0154633126a23", ["src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/journals/ManageJournalsPanel.java"], "@@ -171,7 +171,7 @@ protected JabRef(String[] args) {\n \t\t\t\tGlobals.journalAbbrev.readJournalList(new File(\n \t\t\t\t\t\tpersonalJournalList));\n \t\t\t} catch (FileNotFoundException e) {\n-\t\t\t\tJOptionPane.showMessageDialog(null, Globals.lang(\"Journal_file_not_found\" + \": \" + e.getMessage()), Globals.lang(\"Error_opening_file\"), JOptionPane.ERROR_MESSAGE);\n+\t\t\t\tJOptionPane.showMessageDialog(null, Globals.lang(\"Journal file not found\") + \": \" + e.getMessage(), Globals.lang(\"Error opening file\"), JOptionPane.ERROR_MESSAGE);\n \t\t\t\tGlobals.prefs.put(\"personalJournalList\", \"\");\n \t\t\t}\n \t\t}, @@ -206,7 +206,7 @@ public void actionPerformed(ActionEvent e) {\n                 \t\tstoreSettings();\n                 \t\tdialog.dispose();\n                 \t} catch (FileNotFoundException ex) {\n-                \t\tJOptionPane.showMessageDialog(null, Globals.lang(\"Error_opening_file\" + \": \" + ex.getMessage()), Globals.lang(\"Error_opening_file\"), JOptionPane.ERROR_MESSAGE); \n+                \t\tJOptionPane.showMessageDialog(null, Globals.lang(\"Error opening file\") + \": \" + ex.getMessage(), Globals.lang(\"Error opening file\"), JOptionPane.ERROR_MESSAGE);\n                 \t}\n                 }\n             }, ", 2, 2, "\"modified, modified, \"", 4], ["Thorsten Dahlheimer", "Make (un)abbreviating journal titles also work on the journaltitle field", "08/19/14, 05:32:20 PM", "Thorsten Dahlheimer", "8ef71f3b3b6a7fe486f5822acfff08ed962905ac", ["CHANGELOG", "src/main/java/net/sf/jabref/BibtexFields.java", "src/main/java/net/sf/jabref/journals/AbbreviateAction.java", "src/main/java/net/sf/jabref/journals/UnabbreviateAction.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+    - Make (un)abbreviating journal titles also work on the journaltitle field\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n     - \"Open Folder\" works again\n     - newline separator can now be configured globally, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 Raik Nagel and JabRef contributors\n+/*  Copyright (C) 2003-2014 Raik Nagel and JabRef contributors\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -96,6 +96,10 @@ private BibtexFields()\n     dummy = new BibtexSingleField( \"journal\", true, GUIGlobals.SMALL_W ) ;\n     dummy.setExtras(\"journalNames\");\n     add(dummy) ;\n+    dummy = new BibtexSingleField( \"journaltitle\", true, GUIGlobals.SMALL_W ) ;\n+    dummy.setExtras(\"journalNames\");\n+    add(dummy) ;\n+\n     add( new BibtexSingleField( \"key\", true ) ) ;\n     add( new BibtexSingleField( \"month\", true, GUIGlobals.SMALL_W ) ) ;\n     add( new BibtexSingleField( \"note\", true, GUIGlobals.MEDIUM_W  ) ) ;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -56,6 +56,8 @@ public void run() {\n         for (BibtexEntry entry : entries) {\n             if (Globals.journalAbbrev.abbreviate(panel.database(), entry, \"journal\", ce, iso))\n                 count++;\n+            if (Globals.journalAbbrev.abbreviate(panel.database(), entry, \"journaltitle\", ce, iso))\n+                count++;\n         }\n         if (count > 0) {\n             ce.end();, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -54,6 +54,8 @@ public void run() {\n         for (BibtexEntry entry : entries) {\n             if (Globals.journalAbbrev.unabbreviate(panel.database(), entry, \"journal\", ce))\n                 count++;\n+            if (Globals.journalAbbrev.unabbreviate(panel.database(), entry, \"journaltitle\", ce))\n+                count++;\n         }\n         if (count > 0) {\n             ce.end();, @@ -53,6 +53,7 @@ <h2>Contributions from:</h2>\n         Fedor Bezrukov,\n         Fabian Bieker,\n         Aaron Chen,\n+        Thorsten Dahlheimer,\n         Fabrice Dessaint,\n         Nathan Dunn,\n         E. Hakan Duran,, ", 13, 3, "\"modified, modified, modified, modified, modified, \"", 16], ["Kempf", "add my name in About.html and my contribuation in changelog.", "08/25/14, 10:48:02 PM", "Kempf", "5db6df22c53e8e6badfdbbfb92e3b34f929f70bf", ["CHANGELOG", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+    - Fixed bug 960 \"FileNotFoundException in Journal abbreviations window\" (by edukempf)\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n     - \"Open Folder\" works again\n     - newline separator can now be configured globally, @@ -88,7 +88,8 @@ <h2>Contributions from:</h2>\n         David Weitzman,\n         Seb Wills,\n         John Zedlewski,\n-        Waluyo Adi Siswanto</p>\n+        Waluyo Adi Siswanto,\n+        Eduardo Kempf</p>\n \n         <h2>Thanks to:</h2>\n , ", 3, 1, "\"modified, modified, \"", 4], ["eduardogreco", "Update CHANGELOG and ABOUT", "08/22/14, 10:24:15 PM", "eduardogreco", "e7087082f0b481eb356526dd89a63cf5c29dcba4", ["CHANGELOG", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco)\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n     - \"Open Folder\" works again\n     - newline separator can now be configured globally, @@ -88,7 +88,8 @@ <h2>Contributions from:</h2>\n         David Weitzman,\n         Seb Wills,\n         John Zedlewski,\n-        Waluyo Adi Siswanto</p>\n+        Waluyo Adi Siswanto,\n+\t\tEduardo Roberto Greco</p>\n \n         <h2>Thanks to:</h2>\n , ", 3, 1, "\"modified, modified, \"", 4], ["Thorsten Dahlheimer", "Merge branch 'master' into store-edit-fix\n\nConflicts:\n\tCHANGELOG", "09/05/14, 04:59:36 PM", "Thorsten Dahlheimer", "783ea0493f7d218503555c6662ab060cf3765c0d", ["CHANGELOG", "src/main/java/net/sf/jabref/EntryEditor.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco)\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n     - \"Open Folder\" works again\n     - newline separator can now be configured globally\n@@ -14,6 +15,7 @@\n     - Fixes bug #960 \"FileNotFoundException in Journal abbreviations window\" (pull request #13 by IngvarJackal)\n     - Make (un)abbreviating journal titles also work on the journaltitle field\n     - Fix edits getting lost in Biblatex mode\n+    - Fix error when setting a previously unset field via the source panel of the entry editor\n 2.10\n     - Made IEEEXploreFetcher author parsing work again.\n     - Added a few more characters in the HTML/Unicode to LaTeX conversion., @@ -840,15 +840,14 @@ public boolean storeSource(boolean showError) {\n \n             // Then set all fields that have been set by the user.\n             for (String field : nu.getAllFields()){\n-                if (!entry.getField(field).equals(nu.getField(field))) {\n-                    String toSet = nu.getField(field);\n-\n+                String oldValue = entry.getField(field);\n+                String newValue = nu.getField(field);\n+                if (oldValue == null || !oldValue.equals(newValue)) {\n                     // Test if the field is legally set.\n-                    (new LatexFieldFormatter()).format(toSet, field);\n+                    (new LatexFieldFormatter()).format(newValue, field);\n \n-                    compound.addEdit(new UndoableFieldChange(entry, field, entry\n-                        .getField(field), toSet));\n-                    entry.setField(field, toSet);\n+                    compound.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n+                    entry.setField(field, newValue);\n                     anyChanged = true;\n                 }\n             }, @@ -290,6 +290,7 @@ void addAction(Action a) {\n       writeXmpAction = new GeneralAction(\"writeXMP\", \"Write XMP-metadata to PDFs\",\n                                         Globals.lang(\"Will write XMP-metadata to the PDFs linked from selected entries.\"),\n                                         prefs.getKey(\"Write XMP\")),\n+                                        \n       openFolder = new GeneralAction(\"openFolder\", \"Open folder\",\n                                         Globals.lang(\"Open folder\"),\n                                         prefs.getKey(\"Open folder\")),\n@@ -355,7 +356,8 @@ void addAction(Action a) {\n \n     Cleanup = new GeneralAction(\"Cleanup\", \"Cleanup entries\", \n \t\t\t\t\tGlobals.lang(\"Cleanup entries\"), \n-\t\t\t\t\tGUIGlobals.getIconUrl(\"cleanupentries\") ),\n+\t\t\t\t\tprefs.getKey(\"Cleanup\"),\n+\t\t\t\t\t(\"cleanupentries\")),\n           \n     mergeEntries = new GeneralAction(\"mergeEntries\", \"Merge entries\", \n \t\t\t\t\tGlobals.lang(\"Merge entries\"),\n@@ -1121,16 +1123,15 @@ public GeneralAction(String command, String text, String description, KeyStroke\n           putValue(ACCELERATOR_KEY, key);\n       }\n \n-  /*    public GeneralAction(String command, String text, String description,\n-                           URL imageUrl, KeyStroke key) {\n+      public GeneralAction(String command, String text, String description, KeyStroke key, String imageUrl) {\n       this.command = command;\n-        ImageIcon icon = GUIGlobals.getImage(command);\n+        ImageIcon icon = GUIGlobals.getImage(imageUrl);\n         if (icon != null)\n             putValue(SMALL_ICON, icon);\n       putValue(NAME, text);\n       putValue(SHORT_DESCRIPTION, Globals.lang(description));\n         putValue(ACCELERATOR_KEY, key);\n-    }*/\n+    }\n \n     public void actionPerformed(ActionEvent e) {\n       if (tabbedPane.getTabCount() > 0) {, @@ -1145,6 +1145,7 @@ private void defineDefaultKeyBindings() {\n         defKeyBinds.put(\"Search ACM Portal\", \"ctrl shift F8\");\n         defKeyBinds.put(\"Fetch ArXiv.org\", \"shift F8\");\n         defKeyBinds.put(\"Search JSTOR\", \"shift F9\");\n+        defKeyBinds.put(\"Cleanup\", \"ctrl shift F7\");\n         defKeyBinds.put(\"Write XMP\", \"ctrl F7\");\n         defKeyBinds.put(\"New file link\", \"ctrl N\");\n         defKeyBinds.put(\"Fetch SPIRES\", \"ctrl F8\");, @@ -89,7 +89,8 @@ <h2>Contributions from:</h2>\n         David Weitzman,\n         Seb Wills,\n         John Zedlewski,\n-        Waluyo Adi Siswanto</p>\n+        Waluyo Adi Siswanto,\n+\t\tEduardo Roberto Greco</p>\n \n         <h2>Thanks to:</h2>\n , ", 17, 13, "\"modified, modified, modified, modified, modified, \"", 30], ["Thorsten Dahlheimer", "Fix error when setting unset field in source panel\n\nWhen the user tries to set a previously unset field of an entry via the\nsource panel of the entry editor, the program complains with an error\nmessage and refuses to store the field values.\nThis change fixes that behaviour.", "08/27/14, 05:34:14 PM", "Thorsten Dahlheimer", "1fe684ca7a0974f6e589fd7b2947be4b2086c0d8", ["CHANGELOG", "src/main/java/net/sf/jabref/EntryEditor.java"], "@@ -1,5 +1,4 @@\n [master]\n-    - Make (un)abbreviating journal titles also work on the journaltitle field\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n     - \"Open Folder\" works again\n     - newline separator can now be configured globally\n@@ -13,6 +12,8 @@\n     - Fixes bug 880 \"PubMed Import broken\" (pull request #11 by vegeziel)\n     - Fixes bug #959 \"StringIndexOutOfBoundsException with invalid Preview text\" (pull request #13 by IngvarJackal)\n     - Fixes bug #960 \"FileNotFoundException in Journal abbreviations window\" (pull request #13 by IngvarJackal)\n+    - Make (un)abbreviating journal titles also work on the journaltitle field\n+    - Fix error when setting a previously unset field via the source panel of the entry editor\n 2.10\n     - Made IEEEXploreFetcher author parsing work again.\n     - Added a few more characters in the HTML/Unicode to LaTeX conversion., @@ -840,15 +840,14 @@ public boolean storeSource(boolean showError) {\n \n             // Then set all fields that have been set by the user.\n             for (String field : nu.getAllFields()){\n-                if (!entry.getField(field).equals(nu.getField(field))) {\n-                    String toSet = nu.getField(field);\n-\n+                String oldValue = entry.getField(field);\n+                String newValue = nu.getField(field);\n+                if (oldValue == null || !oldValue.equals(newValue)) {\n                     // Test if the field is legally set.\n-                    (new LatexFieldFormatter()).format(toSet, field);\n+                    (new LatexFieldFormatter()).format(newValue, field);\n \n-                    compound.addEdit(new UndoableFieldChange(entry, field, entry\n-                        .getField(field), toSet));\n-                    entry.setField(field, toSet);\n+                    compound.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n+                    entry.setField(field, newValue);\n                     anyChanged = true;\n                 }\n             }, ", 8, 8, "\"modified, modified, \"", 16], ["Joerg Lenhard", "Update to gradle 2.1", "09/11/14, 09:02:05 AM", "Joerg Lenhard", "421804a971c5dff4a5254a428dfb80c35010a869", ["build.gradle", "gradle/wrapper/gradle-wrapper.properties"], "@@ -95,7 +95,7 @@ sourceCompatibility = 1.6\n mainClassName = \"net.sf.jabref.JabRefMain\"\n \n task wrapper(type: Wrapper) {\n-    gradleVersion = '2.0'\n+    gradleVersion = '2.1'\n }\n \n compileJava {, @@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.0-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.1-all.zip, ", 2, 2, "\"modified, modified, \"", 4], ["Thiago Toledo", "correcao do log4j.properties q tinha deixado para modo debug", "10/16/14, 01:04:57 PM", "Thiago Toledo", "a97dca23d3b4c062be3acc5db5c1c339a495dec3", ["src/main/resources/resource/log4j.properties"], "@@ -1,6 +1,6 @@\n #Uncomment next line for debugging\n-log4j.rootCategory=ALL,stderr\n-#log4j.rootCategory=WARN,stderr\n+#log4j.rootCategory=ALL,stderr\n+log4j.rootCategory=WARN,stderr\n log4j.appender.stderr=org.apache.log4j.ConsoleAppender\n log4j.appender.stderr.target=System.err\n log4j.appender.stderr.layout=org.apache.log4j.PatternLayout, ", 2, 2, "\"modified, \"", 4], ["Tobias", "Extended the 'unknown entry type' error message by the bibtex key in order to make it easier for the user to find the problematic entry.", "10/19/14, 08:14:50 AM", "Tobias", "c7dd9cc3eb5e2c7029dd540e333421cb1ee0f783", ["src/main/java/net/sf/jabref/imports/BibtexParser.java"], "@@ -979,7 +979,8 @@ public void checkEntryTypes(ParserResult _pr) {\n \t\t\t\t\t// \"+be.getType().getName());\n \t\t\t\t\t_pr\n \t\t\t\t\t\t.addWarning(Globals.lang(\"unknown entry type\") + \": \"\n-\t\t\t\t\t\t\t+ be.getType().getName() + \". \" + Globals.lang(\"Type set to 'other'\")\n+\t\t\t\t\t\t\t+ be.getType().getName() + \":\" + be.getField(BibtexFields.KEY_FIELD)\n+\t\t\t\t\t\t\t+ \" . \" + Globals.lang(\"Type set to 'other'\")\n \t\t\t\t\t\t\t+ \".\");\n \t\t\t\t\tbe.setType(BibtexEntryType.OTHER);\n \t\t\t\t}, ", 2, 1, "\"modified, \"", 3], ["rmmsilva", "The rest of steps of the contributing tutorial", "10/20/14, 07:36:15 PM", "rmmsilva", "02899e7dc1076352a4774a86f636b8dd77f20e90", ["CHANGELOG", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Fix for bug 949: Exception properly logged\n \t- Fix for bug 950: NullPointerException on \"Manage custom imports\"\n \t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco)\n     - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry., @@ -91,7 +91,8 @@ <h2>Contributions from:</h2>\n         John Zedlewski,\n         Waluyo Adi Siswanto,\n \t\tEduardo Roberto Greco,\n-\t\tThiago Gomes Toledo</p>\n+\t\tThiago Gomes Toledo,\n+\t\tRenato Massao Maeda da Silva</p>\n \n         <h2>Thanks to:</h2>\n , ", 3, 1, "\"modified, modified, \"", 4], ["Tobias", "Fixed bug where a missing year and date field in an entry resulted in crashimr.", "10/24/14, 11:48:28 PM", "Tobias", "11d7054f6a21146685024039a74dde66533c6b16", ["src/main/java/net/sf/jabref/BibtexEntry.java"], "@@ -371,6 +371,8 @@ public String getFieldOrAlias(String name) {\n         if(name.equals(\"year\") || name.equals(\"month\"))\n         {\n         \tString date = getField(\"date\");\n+        \tif(date == null)\n+        \t\treturn null;\n         \t\n         \t// Create date format matching dates with year and month\n         \tDateFormat df = new DateFormat() {, ", 2, 0, "\"modified, \"", 2], ["Mattias Ulbrich", "adapted a pattern to parse DBLP entries.\n\nDBLP seems to send <pre class=\"verbatim select-on-click\"> now\ninstead of only <pre>.", "10/25/14, 10:37:17 AM", "Mattias Ulbrich", "9be39c6446549f6d0631d61b5ae2e2185f9480f8", ["src/main/java/net/sf/jabref/imports/DBLPHelper.java"], "@@ -66,7 +66,7 @@ public String cleanDBLPQuery(String query) {\n \t */\n \tpublic List<BibtexEntry> getBibTexFromPage(final String page) {\n \t\tfinal List<BibtexEntry> bibtexList = new ArrayList<BibtexEntry>();\n-\t\tfinal String startPattern = \"<pre>\";\n+\t\tfinal String startPattern = \"<pre class=\\\"verbatim select-on-click\\\">\";\n \t\tfinal String endPattern = \"</pre>\";\n \n \t\tString tmpStr = page;, ", 1, 1, "\"modified, \"", 2], ["lucianamelo", "ArrayIndexOutOfBoundsException was produced when the user  tried to apply changes in \"Setup selectors\" right after closing all databases. Now the exception is caught and a message is shown, telling the user that the changes could not be applied.", "10/25/14, 05:35:39 PM", "lucianamelo", "bfbd3527171f96dc858c2d52bcbca80c299a9e3d", ["CHANGELOG", "src/main/java/net/sf/jabref/ContentSelectorDialog2.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Fix for bug 958: ArrayIndexOutOfBoundsException on \"Content Selector Dialog\"\n \t- Fix for bug 949: Exception properly logged\n \t- Fix for bug 950: NullPointerException on \"Manage custom imports\"\n \t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco), @@ -251,8 +251,14 @@ public void actionPerformed(ActionEvent e) {\n \n \tok.addActionListener(new ActionListener() {\n \t\tpublic void actionPerformed(ActionEvent e) {\n-\t\t    applyChanges();\n-\t\t    dispose();\n+\t\t\ttry {\n+\t\t\t\tapplyChanges();\n+\t\t\t\tdispose();\n+\t\t\t}\n+\t\t\tcatch (Exception ex) {\n+\t\t\t\tGlobals.logger(\"Could not apply changes in \\\"Setup selectors\\\"\");\n+\t\t\t\tJOptionPane.showMessageDialog(frame, Globals.lang(\"Could not apply changes.\"));\n+\t\t\t}\n \t\t}\n \t    });\n \n@@ -262,7 +268,13 @@ public void actionPerformed(ActionEvent e) {\n             if (!wordEditField.getText().equals(\"\")) {\n                 wordEditFieldListener.actionPerformed(null);\n             }\n-\t\t    applyChanges();\n+            try {\n+            \tapplyChanges();\n+            }\n+            catch (Exception ex) {\n+\t\t\t\tGlobals.logger(\"Could not apply changes in \\\"Setup selectors\\\"\");\n+\t\t\t\tJOptionPane.showMessageDialog(frame, Globals.lang(\"Could not apply changes.\"));\n+\t\t\t}\n \t\t}\n \t    });\n \t, @@ -92,7 +92,8 @@ <h2>Contributions from:</h2>\n         Waluyo Adi Siswanto,\n \t\tEduardo Roberto Greco,\n \t\tThiago Gomes Toledo,\n-\t\tRenato Massao Maeda da Silva</p>\n+\t\tRenato Massao Maeda da Silva\n+\t\tLuciana de Melo e Abud</p>\n \n         <h2>Thanks to:</h2>\n , ", 18, 4, "\"modified, modified, modified, \"", 22], ["Yara Grassi Gouffon", "Updated CHANGELOG, About.html and header year", "10/26/14, 06:23:53 PM", "Yara Grassi Gouffon", "f87bc27e1f9395e45d8f32ee6d809b3d2e261238", ["CHANGELOG", "src/main/java/net/sf/jabref/export/OOCalcDatabase.java", "src/main/java/net/sf/jabref/export/OpenDocumentRepresentation.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Partial fix for bug 913: fixed export for .ods and .sxc (by yaragg)\n \t- Fix for bug 949: Exception properly logged\n \t- Fix for bug 950: NullPointerException on \"Manage custom imports\"\n \t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco), @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or, @@ -92,7 +92,8 @@ <h2>Contributions from:</h2>\n         Waluyo Adi Siswanto,\n \t\tEduardo Roberto Greco,\n \t\tThiago Gomes Toledo,\n-\t\tRenato Massao Maeda da Silva</p>\n+\t\tRenato Massao Maeda da Silva,\n+\t\tYara Grassi Gouffon</p>\n \n         <h2>Thanks to:</h2>\n , ", 5, 3, "\"modified, modified, modified, modified, \"", 8], ["Tobias", "Added special fields 'Printed' and 'Read status'", "10/27/14, 08:34:07 PM", "Tobias", "cc344ca29fc359c6ac792325f74f6deb2ff4a117", ["CHANGELOG", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/BibtexFields.java", "src/main/java/net/sf/jabref/GUIGlobals.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/RightClickMenu.java", "src/main/java/net/sf/jabref/TableColumnsTab.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/PreventDraggingJTableHeader.java", "src/main/java/net/sf/jabref/specialfields/Printed.java", "src/main/java/net/sf/jabref/specialfields/ReadStatus.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldsUtils.java", "src/main/java/net/sf/jabref/util/ManageKeywordsAction.java", "src/main/resources/images/crystal_16/Icons.properties", "src/main/resources/images/crystal_16/fileprint.png", "src/main/resources/images/crystal_16/read.png", "src/main/resources/images/crystal_16/readskimmed.png"], "@@ -22,6 +22,12 @@\n     \t- Fixes bug #1014 'journal' not recognized as alias for 'journaltitle''\n     \t- Fixes bug #874 Support of biblatex \"date\" field\n     \t- Fixes bug that prevented the secondary optional fields to update properly in the \"Customize entry fields\" dialog (in BibLatex mode)\n+\t- Added special fields 'Printed' and 'Read status', thereby implementing (at least partially):\n+\t\t- Feature #762 Printed attribute\n+\t\t- Feature #692 Marking of new entries and often read entries \n+\t\t- Feature #685 Highlight new entries that were \"forgotten\"\n+\t\t- Feature #602 could add the mark as read feature \n+\t\t- Feature #225 read? checkbox\n 2.10\n     - Made IEEEXploreFetcher author parsing work again.\n     - Added a few more characters in the HTML/Unicode to LaTeX conversion., @@ -90,9 +90,11 @@\n import net.sf.jabref.labelPattern.SearchFixDuplicateLabels;\n import net.sf.jabref.search.NoSearchMatcher;\n import net.sf.jabref.search.SearchMatcher;\n+import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.Relevance;\n import net.sf.jabref.specialfields.SpecialFieldAction;\n import net.sf.jabref.specialfields.SpecialFieldDatabaseChangeListener;\n@@ -1558,13 +1560,17 @@ public void action() {\n                   new SpecialFieldAction(frame, Relevance.getInstance(), Relevance.getInstance().getValues().get(0).getFieldValue(), true, Globals.lang(\"Marked entries as relevant\"), \"Marked %0 entries as relevant\"));\n               actions.put(Quality.getInstance().getValues().get(0).getActionName(),\n                   new SpecialFieldAction(frame, Quality.getInstance(), Quality.getInstance().getValues().get(0).getFieldValue(), true, Globals.lang(\"Marked entries' quality as good\"), \"Set quality of %0 entries to good\"));\n+              actions.put(Printed.getInstance().getValues().get(0).getActionName(),\n+                      new SpecialFieldAction(frame, Printed.getInstance(), Printed.getInstance().getValues().get(0).getFieldValue(), true, Globals.lang(\"Marked entries as printed\"), \"Marked %0 entries as printed\"));\n               \n               for (SpecialFieldValue prio: Priority.getInstance().getValues()) {\n \t              actions.put(prio.getActionName(), prio.getAction(this.frame));\n               }\n-              \n-              for (SpecialFieldValue prio: Rank.getInstance().getValues()) {\n-\t              actions.put(prio.getActionName(), prio.getAction(this.frame));\n+              for (SpecialFieldValue rank: Rank.getInstance().getValues()) {\n+\t              actions.put(rank.getActionName(), rank.getAction(this.frame));\n+              }\n+              for (SpecialFieldValue status: ReadStatus.getInstance().getValues()) {\n+\t              actions.put(status.getActionName(), status.getAction(this.frame));\n               }\n               \n               actions.put(\"togglePreview\", new BaseAction() {, @@ -144,6 +144,20 @@ private BibtexFields()\n     \tdummy.setDisplayable(false);\n     }\n     add(dummy) ;\n+    dummy =  new BibtexSingleField( SpecialFieldsUtils.FIELDNAME_READ , false) ;\n+    if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n+    \tdummy.setPrivate();\n+    \tdummy.setWriteable(false);\n+    \tdummy.setDisplayable(false);\n+    }\n+    add(dummy) ;\n+    dummy =  new BibtexSingleField( SpecialFieldsUtils.FIELDNAME_PRINTED , false) ;\n+    if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n+    \tdummy.setPrivate();\n+    \tdummy.setWriteable(false);\n+    \tdummy.setDisplayable(false);\n+    }\n+    add(dummy) ;\n     \n     // some semi-standard fields\n     dummy = new BibtexSingleField( KEY_FIELD, true ) ;, @@ -27,14 +27,17 @@\n \n import javax.swing.ImageIcon;\n import javax.swing.JLabel;\n-\n import javax.swing.SwingConstants;\n+\n import net.sf.jabref.external.ExternalFileType;\n+\n import org.xnap.commons.gui.shortcut.EmacsKeyBindings;\n \n+import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.Relevance;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n \n@@ -440,6 +443,16 @@ public static void init() {\n         lab.setToolTipText(Rank.getInstance().getToolTip());\n         tableIcons.put(SpecialFieldsUtils.FIELDNAME_PRIORITY, lab);\n         \n+        // Read icon used for menu\n+        lab = new JLabel(ReadStatus.getInstance().getRepresentingIcon());\n+        lab.setToolTipText(ReadStatus.getInstance().getToolTip());\n+        tableIcons.put(SpecialFieldsUtils.FIELDNAME_READ, lab);\n+        \n+        // Print icon used for menu\n+        lab = new JLabel(Printed.getInstance().getRepresentingIcon());\n+        lab.setToolTipText(Printed.getInstance().getToolTip());\n+        tableIcons.put(SpecialFieldsUtils.FIELDNAME_PRINTED, lab);\n+        \n         //jabRefFont = new Font(\"arial\", Font.ITALIC/*+Font.BOLD*/, 20); \n \n         if (Globals.prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS)) {, @@ -68,9 +68,11 @@\n import net.sf.jabref.plugin.PluginInstallerAction;\n import net.sf.jabref.plugin.core.JabRefPlugin;\n import net.sf.jabref.plugin.core.generated._JabRefPlugin.EntryFetcherExtension;\n+import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.Relevance;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import net.sf.jabref.sql.importer.DbImportAction;\n@@ -225,6 +227,10 @@ void addAction(Action a) {\n \t\t\t\tQuality.getInstance().getValues().get(0).getActionName(),\n \t\t\t\tQuality.getInstance().getValues().get(0).getMenuString(),\n \t\t\t\tQuality.getInstance().getValues().get(0).getToolTipText()),\n+\t\ttogglePrinted = new GeneralAction(\n+\t\t\t\tPrinted.getInstance().getValues().get(0).getActionName(),\n+\t\t\t\tPrinted.getInstance().getValues().get(0).getMenuString(),\n+\t\t\t\tPrinted.getInstance().getValues().get(0).getToolTipText()),\n //    \tpriority = new GeneralAction(\"setPriority\", \"Set priority\",\n //    \t\t\t                                            Globals.lang(\"Set priority\")),\n       manageSelectors = new GeneralAction(\"manageSelectors\", \"Manage content selectors\"),\n@@ -1346,6 +1352,14 @@ private void fillMenu() {\n     \t\t  RightClickMenu.populateSpecialFieldMenu(m, Priority.getInstance(), this);\n     \t\t  edit.add(m);\n     \t  }\n+    \t  if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED)) {\n+    \t\t  edit.add(togglePrinted);\n+    \t  }\n+    \t  if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ)) {\n+    \t\t  m = new JMenu();\n+    \t\t  RightClickMenu.populateSpecialFieldMenu(m, ReadStatus.getInstance(), this);\n+    \t\t  edit.add(m);\n+    \t  }\n       }\n       edit.addSeparator();\n       edit.add(manageKeywords);\n@@ -1572,6 +1586,12 @@ private void createToolBar() {\n     \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY)) {\n     \t\ttlb.add(net.sf.jabref.specialfields.SpecialFieldDropDown.generateSpecialFieldButtonWithDropDown(Priority.getInstance(), this));\n     \t}\n+    \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED)) {\n+    \t\ttlb.addAction(togglePrinted);\n+    \t}\n+    \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ)) {\n+    \t\ttlb.add(net.sf.jabref.specialfields.SpecialFieldDropDown.generateSpecialFieldButtonWithDropDown(ReadStatus.getInstance(), this));\n+    \t}\n     }\n \n     tlb.addSeparator();, @@ -437,6 +437,8 @@ private JabRefPreferences() {\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING, SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_RANKING_COMPACT, SpecialFieldsUtils.PREF_RANKING_COMPACT_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE, SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE_DEFAULT);\n+        defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED, SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED_DEFAULT);\n+        defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ, SpecialFieldsUtils.PREF_SHOWCOLUMN_READ_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS, SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS, SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS_DEFAULT);\n , @@ -25,9 +25,11 @@\n import javax.swing.event.PopupMenuListener;\n \n import net.sf.jabref.groups.*;\n+import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.Relevance;\n import net.sf.jabref.specialfields.SpecialField;\n import net.sf.jabref.specialfields.SpecialFieldValue;\n@@ -45,6 +47,7 @@\n             groupMoveMenu = new JMenu(Globals.lang(\"Assign exclusively to group\")), // JZTODO lyrics\n             rankingMenu = new JMenu(),\n             priorityMenu = new JMenu(),\n+            readStatusMenu = new JMenu(),\n             typeMenu = new JMenu(Globals.lang(\"Change entry type\"));\n     JMenuItem groupAdd, groupRemove, groupMoveTo;\n     JCheckBoxMenuItem\n@@ -200,11 +203,19 @@ public void actionPerformed(ActionEvent e) {\n         \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY)) {\n         \t\tadd(Quality.getInstance().getValues().get(0).getMenuAction(panel.frame));\n         \t}\n+        \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED)) {\n+        \t\tadd(Printed.getInstance().getValues().get(0).getMenuAction(panel.frame));\n+        \t}\n \n         \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY)) {\n \t\t        populateSpecialFieldMenu(this.priorityMenu, Priority.getInstance(), panel.frame);\n \t\t        add(this.priorityMenu);\n         \t}\n+        \t\n+        \tif (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ)) {\n+\t\t        populateSpecialFieldMenu(this.readStatusMenu, ReadStatus.getInstance(), panel.frame);\n+\t\t        add(this.readStatusMenu);\n+        \t}\n \t        \n \t        addSeparator();\n         }, @@ -54,9 +54,9 @@\n     private JCheckBox showOneLetterHeadingForIconColumns;\n \n     /*** begin: special fields ***/\n-\tprivate JCheckBox specialFieldsEnabled, rankingColumn, compactRankingColumn, qualityColumn, priorityColumn, relevanceColumn;\n+\tprivate JCheckBox specialFieldsEnabled, rankingColumn, compactRankingColumn, qualityColumn, priorityColumn, relevanceColumn, printedColumn, readStatusColumn;\n \tprivate JRadioButton syncKeywords, writeSpecialFields;\n-\tprivate boolean oldSpecialFieldsEnabled, oldRankingColumn, oldCompcatRankingColumn, oldQualityColumn, oldPriorityColumn, oldRelevanceColumn, oldSyncKeyWords, oldWriteSpecialFields;\n+\tprivate boolean oldSpecialFieldsEnabled, oldRankingColumn, oldCompcatRankingColumn, oldQualityColumn, oldPriorityColumn, oldRelevanceColumn, oldPrintedColumn, oldReadStatusColumn, oldSyncKeyWords, oldWriteSpecialFields;\n \n     /*** end: special fields ***/\n \n@@ -237,6 +237,8 @@ public void stateChanged(ChangeEvent event) {\n \t\t\t\tqualityColumn.setEnabled(isEnabled);\n \t\t\t\tpriorityColumn.setEnabled(isEnabled);\n \t\t\t\trelevanceColumn.setEnabled(isEnabled);\n+\t\t\t\tprintedColumn.setEnabled(isEnabled);\n+\t\t\t\treadStatusColumn.setEnabled(isEnabled);\n \t\t\t\tsyncKeywords.setEnabled(isEnabled);\n \t\t\t\twriteSpecialFields.setEnabled(isEnabled);\n \t\t\t}\n@@ -251,6 +253,8 @@ public void stateChanged(ChangeEvent event) {\n \t\tqualityColumn = new JCheckBox(Globals.lang(\"Show quality\"));\n \t\tpriorityColumn = new JCheckBox(Globals.lang(\"Show priority\"));\n \t\trelevanceColumn = new JCheckBox(Globals.lang(\"Show relevance\"));\n+\t\tprintedColumn = new JCheckBox(Globals.lang(\"Show printed status\"));\n+\t\treadStatusColumn = new JCheckBox(Globals.lang(\"Show read status\"));\n \t\t\n \t\t// \"sync keywords\" and \"write special\" fields may be configured mutually exclusive only\n \t\t// The implementation supports all combinations (TRUE+TRUE and FALSE+FALSE, even if the latter does not make sense)\n@@ -266,7 +270,7 @@ public void stateChanged(ChangeEvent event) {\n \t\tbuilder.append(pan);\n \n \t\tDefaultFormBuilder specialTableColumnsBuilder = new DefaultFormBuilder(new FormLayout(\n-\t\t\t\t\"8dlu, 8dlu, 8cm, 8dlu, 8dlu, left:pref:grow\", \"pref, pref, pref, pref, pref, pref, pref, pref, pref, pref\"));\n+\t\t\t\t\"8dlu, 8dlu, 8cm, 8dlu, 8dlu, left:pref:grow\", \"pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref\"));\n         CellConstraints cc = new CellConstraints();\n \t\t\n         specialTableColumnsBuilder.add(specialFieldsEnabled, cc.xyw(1, 1, 3));\n@@ -275,10 +279,12 @@ public void stateChanged(ChangeEvent event) {\n         specialTableColumnsBuilder.add(relevanceColumn, cc.xyw(2, 4, 2));\n         specialTableColumnsBuilder.add(qualityColumn, cc.xyw(2, 5, 2));\n         specialTableColumnsBuilder.add(priorityColumn, cc.xyw(2, 6, 2));\n-        specialTableColumnsBuilder.add(syncKeywords, cc.xyw(2, 7, 2));\n-        specialTableColumnsBuilder.add(writeSpecialFields, cc.xyw(2, 8, 2));\n-        specialTableColumnsBuilder.add(showOneLetterHeadingForIconColumns, cc.xyw(1, 9, 5));\n-\t\tspecialTableColumnsBuilder.add(hlb, cc.xyw(1, 10, 2));\n+        specialTableColumnsBuilder.add(printedColumn, cc.xyw(2, 7, 2));\n+        specialTableColumnsBuilder.add(readStatusColumn, cc.xyw(2, 8, 2));\n+        specialTableColumnsBuilder.add(syncKeywords, cc.xyw(2, 10, 2));\n+        specialTableColumnsBuilder.add(writeSpecialFields, cc.xyw(2, 11, 2));\n+        specialTableColumnsBuilder.add(showOneLetterHeadingForIconColumns, cc.xyw(1, 12, 4));\n+\t\tspecialTableColumnsBuilder.add(hlb, cc.xyw(1, 13, 2));\n \n \t\tspecialTableColumnsBuilder.add(fileColumn, cc.xyw(5, 1, 2));\t\n \t\tspecialTableColumnsBuilder.add(pdfColumn, cc.xyw(5, 2, 2));\t\n@@ -288,7 +294,7 @@ public void stateChanged(ChangeEvent event) {\n \t\tspecialTableColumnsBuilder.add(arxivColumn, cc.xyw(5, 6, 2));\t\n \n \t\tspecialTableColumnsBuilder.add(extraFileColumns, cc.xyw(5, 7, 2));\t\n-\t\tspecialTableColumnsBuilder.add(listOfFileColumnsScrollPane, cc.xywh(5, 8, 2, 3));\t\n+\t\tspecialTableColumnsBuilder.add(listOfFileColumnsScrollPane, cc.xywh(5, 8, 2, 5));\t\n \n \t\tbuilder.append(specialTableColumnsBuilder.getPanel());\n \t\tbuilder.nextLine();\n@@ -360,6 +366,12 @@ public void setValues() {\n \t\t\n \t\toldRelevanceColumn = _prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE);\n         relevanceColumn.setSelected(oldRelevanceColumn);\n+        \n+        oldPrintedColumn = _prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED);\n+        printedColumn.setSelected(oldPrintedColumn);\n+        \n+        oldReadStatusColumn = _prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ);\n+        readStatusColumn.setSelected(oldReadStatusColumn);\n \t\t\n \t\toldSyncKeyWords = _prefs.getBoolean(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS);\n \t\tsyncKeywords.setSelected(oldSyncKeyWords);\n@@ -630,7 +642,9 @@ public void storeSettings() {\n \t\tnewCompactRankingColumn = compactRankingColumn.isSelected(),\n \t\tnewQualityColumn = qualityColumn.isSelected(), \n \t\tnewPriorityColumn = priorityColumn.isSelected(), \n-\t\tnewRelevanceColumn = relevanceColumn.isSelected(), \n+\t\tnewRelevanceColumn = relevanceColumn.isSelected(),\n+\t\tnewPrintedColumn = printedColumn.isSelected(),\n+\t\tnewReadStatusColumn = readStatusColumn.isSelected(),\n \t\tnewSyncKeyWords = syncKeywords.isSelected(), \n \t\tnewWriteSpecialFields = writeSpecialFields.isSelected();\n \t\t\n@@ -641,6 +655,8 @@ public void storeSettings() {\n \t\t\t\t(oldQualityColumn != newQualityColumn) ||\n \t\t\t\t(oldPriorityColumn != newPriorityColumn) ||\n \t\t\t\t(oldRelevanceColumn != newRelevanceColumn) ||\n+\t\t\t\t(oldPrintedColumn != newPrintedColumn) ||\n+\t\t\t\t(oldReadStatusColumn != newReadStatusColumn) ||\n \t\t\t\t(oldSyncKeyWords != newSyncKeyWords) ||\n \t\t\t\t(oldWriteSpecialFields != newWriteSpecialFields);\n \t\tif (restartRequired) {\n@@ -661,6 +677,8 @@ public void storeSettings() {\n \t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY, newPriorityColumn);\n \t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY, newQualityColumn);\n \t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE, newRelevanceColumn);\n+\t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED, newPrintedColumn);\n+\t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ, newReadStatusColumn);\n \t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS, newSyncKeyWords);\n \t\t\t_prefs.putBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS, newWriteSpecialFields);\n \t\t}, @@ -31,13 +31,16 @@\n import net.sf.jabref.Util;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.SpecialFieldValue;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import ca.odell.glazedlists.gui.TableFormat;\n import ca.odell.glazedlists.matchers.Matcher;\n+\n import java.awt.Color;\n import java.awt.Graphics;\n import java.awt.image.BufferedImage;\n+\n import javax.swing.Icon;\n import javax.swing.ImageIcon;\n import javax.swing.JLabel;\n@@ -66,6 +69,8 @@\n     PRIORITY = {SpecialFieldsUtils.FIELDNAME_PRIORITY},\n     RELEVANCE = {SpecialFieldsUtils.FIELDNAME_RELEVANCE},\n     QUALITY = {SpecialFieldsUtils.FIELDNAME_QUALITY},\n+    PRINTED = {SpecialFieldsUtils.FIELDNAME_PRINTED},\n+    READ = {SpecialFieldsUtils.FIELDNAME_READ},\n     FILE = {GUIGlobals.FILE_FIELD};\n \n     BasePanel panel;\n@@ -236,6 +241,13 @@ else if (iconType != null) {\n                 if (rank != null) {\n                     o = rank.createLabel();\n                 }\n+            // Handle read status column special\n+            // Extra handling because the icon depends on a FieldValue\n+            } else if (iconType[hasField].equals(READ[0])) {\n+                SpecialFieldValue status = ReadStatus.getInstance().parse(be.getField(SpecialFieldsUtils.FIELDNAME_READ));\n+                if (status != null) {\n+                    o = status.createLabel();\n+                }\n             } else {\n                 o = GUIGlobals.getTableIcon(iconType[hasField]);\n \n@@ -377,6 +389,10 @@ public void updateTableFormat() {\n                 iconCols.put(coln++, QUALITY);\n             if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY))\n                 iconCols.put(coln++, PRIORITY);\n+            if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED))\n+                iconCols.put(coln++, PRINTED);\n+            if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ))\n+                iconCols.put(coln++, READ);\n         }\n \n         if (Globals.prefs.getBoolean(\"fileColumn\")), @@ -135,6 +135,10 @@ private int getSpecialColumnsCount() {\n \t            count++;\n \t        if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY))\n \t            count++;\n+\t        if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED))\n+\t            count++;\n+\t        if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ))\n+\t            count++;\n         }\n \n         return count;, @@ -0,0 +1,63 @@\n+/*  Copyright (C) 2012 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.specialfields;\n+\n+import java.util.ArrayList;\n+\n+import javax.swing.ImageIcon;\n+\n+import net.sf.jabref.GUIGlobals;\n+import net.sf.jabref.Globals;\n+\n+public class Printed extends SpecialField {\n+\n+\tprivate static Printed INSTANCE;\n+\n+\tpublic Printed() {\n+\t\tArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+    \tvalues.add(new SpecialFieldValue(this, \"printed\", \"togglePrinted\", Globals.lang(\"Toogle print status\"), GUIGlobals.getImage(\"printed\"), Globals.lang(\"Toogle print status\")));\n+\t\tthis.setValues(values);\n+\t\tTEXT_DONE_PATTERN = \"Toggled print status for %0 entries\";\n+\t}\n+\t\n+\tpublic String getFieldName() {\n+\t\treturn SpecialFieldsUtils.FIELDNAME_PRINTED;\n+\t}\n+\n+\tpublic static Printed getInstance() {\n+\t\tif (INSTANCE == null) {\n+\t\t\tINSTANCE = new Printed();\n+\t\t}\n+\t\treturn INSTANCE;\n+\t}\n+\t\n+\tpublic ImageIcon getRepresentingIcon() {\n+\t\treturn this.getValues().get(0).getIcon();\n+\t}\n+\n+\tpublic String getToolTip() {\n+\t\treturn this.getValues().get(0).getToolTipText();\n+\t}\n+\n+\tpublic String getMenuString() {\n+\t\treturn Globals.lang(\"Printed\");\n+\t}\n+\t\n+\tpublic boolean isSingleValueField() {\n+\t\treturn true;\n+\t}\n+\n+}, @@ -0,0 +1,65 @@\n+/*  Copyright (C) 2012 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.specialfields;\n+\n+import java.util.ArrayList;\n+\n+import javax.swing.ImageIcon;\n+\n+import net.sf.jabref.GUIGlobals;\n+import net.sf.jabref.Globals;\n+\n+public class ReadStatus extends SpecialField {\n+\t\n+\tprivate static ReadStatus INSTANCE = null;\n+\t\n+\tprivate ImageIcon icon = new ImageIcon(GUIGlobals.getIconUrl(\"readstatus\"));\n+\t\n+\tpublic ReadStatus() {\n+\t\tArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+\t\tvalues.add(new SpecialFieldValue(this, null, \"clearReadStatus\", Globals.lang(\"Clear read status\"), null, Globals.lang(\"No read status information\")));\n+\t\tImageIcon icon;\n+\t\ticon = GUIGlobals.getImage(\"readStatusRead\");\n+\t\tvalues.add(new SpecialFieldValue(this, \"read\", \"setReadStatusToRead\", Globals.lang(\"Set read status to read\"), icon, Globals.lang(\"Read status read\")));\n+\t\ticon = GUIGlobals.getImage(\"readStatusSkimmed\");\n+\t\tvalues.add(new SpecialFieldValue(this, \"skimmed\", \"setReadStatusToSkimmed\", Globals.lang(\"Set read status to skimmed\"), icon, Globals.lang(\"Read status skimmed\")));\n+\t\tthis.setValues(values);\n+\t\tTEXT_DONE_PATTERN = \"Set read status '%0' for %1 entries\";\n+\t}\n+\t\n+\tpublic static ReadStatus getInstance() {\n+\t\tif (INSTANCE == null) {\n+\t\t\tINSTANCE = new ReadStatus();\n+\t\t}\n+\t\treturn INSTANCE;\n+\t}\n+\t\n+\tpublic String getFieldName() {\n+\t\treturn SpecialFieldsUtils.FIELDNAME_READ;\n+\t}\n+\t\n+\tpublic ImageIcon getRepresentingIcon() {\n+\t\treturn this.icon;\n+\t}\n+\t\n+\tpublic String getToolTip() {\n+\t\treturn Globals.lang(\"Read status\");\n+\t}\n+\t\n+\tpublic String getMenuString() {\n+\t\treturn Globals.lang(\"Read status\");\n+\t}\n+}, @@ -30,6 +30,8 @@\n \tpublic final static String FIELDNAME_RANKING = \"ranking\";\n \tpublic final static String FIELDNAME_RELEVANCE = \"relevance\";\n \tpublic final static String FIELDNAME_QUALITY = \"qualityassured\";\n+\tpublic final static String FIELDNAME_READ = \"readstatus\";\n+\tpublic final static String FIELDNAME_PRINTED = \"printed\";\n \n \tpublic final static String  PREF_SPECIALFIELDSENABLED = \"specialFieldsEnabled\";\n \tpublic final static Boolean PREF_SPECIALFIELDSENABLED_DEFAULT = Boolean.FALSE;\n@@ -49,6 +51,12 @@\n \tpublic final static String  PREF_SHOWCOLUMN_QUALITY = \"showQualityColumn\";\n \tpublic final static Boolean PREF_SHOWCOLUMN_QUALITY_DEFAULT = Boolean.FALSE;\n \t\n+\tpublic final static String  PREF_SHOWCOLUMN_READ = \"showReadColumn\";\n+\tpublic final static Boolean PREF_SHOWCOLUMN_READ_DEFAULT = Boolean.FALSE;\n+\t\n+\tpublic final static String  PREF_SHOWCOLUMN_PRINTED = \"showPrintedColumn\";\n+\tpublic final static Boolean PREF_SHOWCOLUMN_PRINTED_DEFAULT = Boolean.FALSE;\n+\t\n \tpublic final static String  PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS = \"autoSyncSpecialFieldsToKeywords\";\n \tpublic final static Boolean PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS_DEFAULT = Boolean.FALSE;\n \t\n@@ -114,6 +122,8 @@ public static void syncKeywordsFromSpecialFields(BibtexEntry be, NamedCompound n\n \t\texportFieldToKeywords(Rank.getInstance(), be, nc);\n \t\texportFieldToKeywords(Relevance.getInstance(), be, nc);\n \t\texportFieldToKeywords(Quality.getInstance(), be, nc);\n+\t\texportFieldToKeywords(ReadStatus.getInstance(), be, nc);\n+\t\texportFieldToKeywords(Printed.getInstance(), be, nc);\n \t}\n \t\n \tprivate static void importKeywordsForField(ArrayList<String> keywordList, SpecialField c, BibtexEntry be, NamedCompound nc) {\n@@ -141,6 +151,8 @@ public static void syncSpecialFieldsFromKeywords(BibtexEntry be, NamedCompound c\n \t\timportKeywordsForField(keywordList, Rank.getInstance(), be, ce);\n \t\timportKeywordsForField(keywordList, Quality.getInstance(), be, ce);\n \t\timportKeywordsForField(keywordList, Relevance.getInstance(), be, ce);\n+\t\timportKeywordsForField(keywordList, ReadStatus.getInstance(), be, ce);\n+\t\timportKeywordsForField(keywordList, Printed.getInstance(), be, ce);\n \t}\n \t\n \t/**\n@@ -156,6 +168,10 @@ public static SpecialField getSpecialFieldInstanceFromFieldName(String fieldName\n \t\t\treturn Rank.getInstance();\n \t\t} else if (fieldName.equals(FIELDNAME_RELEVANCE)) {\n \t\t\treturn Relevance.getInstance();\n+\t\t} else if (fieldName.equals(FIELDNAME_READ)) {\n+\t\t\treturn ReadStatus.getInstance();\n+\t\t} else if (fieldName.equals(FIELDNAME_PRINTED)) {\n+\t\t\treturn Printed.getInstance();\n \t\t} else {\n \t\t\treturn null;\n \t\t}, @@ -20,7 +20,6 @@\n import java.awt.event.ActionListener;\n import java.awt.event.KeyEvent;\n import java.awt.event.KeyListener;\n-\n import java.util.ArrayList;\n import java.util.Enumeration;\n import java.util.HashSet;\n@@ -50,9 +49,11 @@\n import net.sf.jabref.Util;\n import net.sf.jabref.autocompleter.AbstractAutoCompleter;\n import net.sf.jabref.gui.AutoCompleteListener;\n+import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;\n import net.sf.jabref.specialfields.Rank;\n+import net.sf.jabref.specialfields.ReadStatus;\n import net.sf.jabref.specialfields.Relevance;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import net.sf.jabref.undo.NamedCompound;\n@@ -326,6 +327,20 @@ public void actionPerformed(ActionEvent e) {\n \t        \tif (!clone.isEmpty()) {\n \t        \t\tkeywordsToRemove.addAll(Relevance.getInstance().getKeyWords());\n \t        \t}\n+\t        \t\n+\t        \t// Read status\n+\t        \tclone = createClone(keywordsToAdd);\n+\t        \tclone.retainAll(ReadStatus.getInstance().getKeyWords());\n+\t        \tif (!clone.isEmpty()) {\n+\t        \t\tkeywordsToRemove.addAll(ReadStatus.getInstance().getKeyWords());\n+\t        \t}\n+\t        \t\n+\t        \t// Printed\n+\t        \tclone = createClone(keywordsToAdd);\n+\t        \tclone.retainAll(Printed.getInstance().getKeyWords());\n+\t        \tif (!clone.isEmpty()) {\n+\t        \t\tkeywordsToRemove.addAll(Printed.getInstance().getKeyWords());\n+\t        \t}\n \t        }\n         }\n , @@ -88,6 +88,8 @@ setRelevant=relevance.png\n qualityAssured=button_ok.png\n toggleQualityAssured=button_ok.png\n quality=button_ok.png\n+printed=fileprint.png\n+togglePrinted=fileprint.png\n rank1=rank1.png\n rank2=rank2.png\n rank3=rank3.png\n@@ -99,6 +101,9 @@ rankc2=rankc2.png\n rankc3=rankc3.png\n rankc4=rankc4.png\n rankc5=rankc5.png\n+readstatus=read.png\n+readStatusRead=read.png\n+readStatusSkimmed=readskimmed.png\n priority=priority.png\n red=red.png\n orange=orange.png, None, None, None, ", 288, 14, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, added, modified, modified, modified, added, added, added, \"", 302], ["Leonardo Haddad", "Fixed bug #1240. Now, strings with length of one character can be included and no exception is thrown by the system.", "10/28/14, 03:46:39 AM", "Leonardo Haddad", "dd4676b6cc75f0ce38cf44843ab7abea89249fb1", ["CHANGELOG", "src/main/java/net/sf/jabref/BibtexString.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Fix for bug 1240: Accepting string with length of one character (by lhaddad).\n \t- Fix for bug 949: Exception properly logged\n \t- Fix for bug 950: NullPointerException on \"Manage custom imports\"\n \t- Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco), @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -67,7 +67,7 @@\n         }\n \n         public static final Type get(String name) {\n-        \tif (name.length() == 0) {\n+        \tif (name.length() <= 1) {\n         \t\treturn OTHER;\n         \t}\n             if (!(name.charAt(1) + \"\").toUpperCase().equals(, @@ -92,7 +92,8 @@ <h2>Contributions from:</h2>\n         Waluyo Adi Siswanto,\n \t\tEduardo Roberto Greco,\n \t\tThiago Gomes Toledo,\n-\t\tRenato Massao Maeda da Silva</p>\n+\t\tRenato Massao Maeda da Silva\n+\t\tLeonardo Haddad Carlos</p>\n \n         <h2>Thanks to:</h2>\n , ", 5, 3, "\"modified, modified, modified, \"", 8], ["Thorsten Dahlheimer", "Fix undoing Cleanup/Convert to Biblatex\n\nWhen Cleanup/Convert to Biblatex converted year/month fields to a date\nfield, it used to store erroneous undo information. This change fixes\nit.", "10/30/14, 10:23:25 AM", "Thorsten Dahlheimer", "993f4fc83b63777d635ba7ed29581b058bb5b5a1", ["src/main/java/net/sf/jabref/gui/CleanUpAction.java"], "@@ -680,8 +680,8 @@ private void doConvertToBiblatex(BibtexEntry entry, NamedCompound ce) {\n     \t\tentry.setField(\"month\", null);\n     \t\t\n     \t\tce.addEdit(new UndoableFieldChange(entry, \"date\", null, newDate));\n-    \t\tce.addEdit(new UndoableFieldChange(entry, \"date\", oldYear, null));\n-    \t\tce.addEdit(new UndoableFieldChange(entry, \"date\", oldMonth, null));\n+    \t\tce.addEdit(new UndoableFieldChange(entry, \"year\", oldYear, null));\n+    \t\tce.addEdit(new UndoableFieldChange(entry, \"month\", oldMonth, null));\n     \t}\n     }\n , ", 2, 2, "\"modified, \"", 4], ["Thorsten Dahlheimer", "Take aliased fields into account when sorting entries", "11/03/14, 01:25:32 PM", "Thorsten Dahlheimer", "6d65da786f56b393cbf0f8a1b7777ac45b0905bb", ["CHANGELOG", "src/main/java/net/sf/jabref/FieldComparator.java"], "@@ -34,6 +34,7 @@\n         - Feature #685 Highlight new entries that were \"forgotten\"\n         - Feature #602 could add the mark as read feature\n         - Feature #225 read? checkbox\n+    - Take aliased fields into account when sorting entries\n 2.10\n     - Made IEEEXploreFetcher author parsing work again.\n     - Added a few more characters in the HTML/Unicode to LaTeX conversion., @@ -180,7 +180,7 @@ public int compare(BibtexEntry e1, BibtexEntry e2) {\n \n     private Object getField(BibtexEntry entry) {\n         for (String aField : field) {\n-            Object o = entry.getField(aField);\n+            Object o = entry.getFieldOrAlias(aField);\n             if (o != null)\n                 return o;\n         }, ", 2, 1, "\"modified, modified, \"", 3], ["Tobias", "Fixed bug where conversion of a bibtex year/month representation to the biblatex date field an invalid date would be generated (i.e. 2013-1 instead of 2013-01)\nAdded basic formating of date fields in cleanup", "11/29/14, 10:03:40 PM", "Tobias", "a57c7539fe68b885d00d67b498e1f89f9754eb85", ["src/main/java/net/sf/jabref/BibtexEntry.java", "src/main/java/net/sf/jabref/gui/CleanUpAction.java"], "@@ -365,7 +365,7 @@ public String getFieldOrAlias(String name) {\n         \t\tif(month == 0)\n         \t\t\treturn year;\n         \t\telse\n-        \t\t\treturn year + \"-\" + month;\n+        \t\t\treturn year + \"-\" + String.format(\"%02d\", month);\n         \t}\n         }\n         if(name.equals(\"year\") || name.equals(\"month\")), @@ -16,7 +16,16 @@\n package net.sf.jabref.gui;\n \n import java.io.File;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.time.temporal.TemporalAccessor;\n import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.Date;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.logging.Logger;\n@@ -683,6 +692,42 @@ private void doConvertToBiblatex(BibtexEntry entry, NamedCompound ce) {\n     \t\tce.addEdit(new UndoableFieldChange(entry, \"date\", oldYear, null));\n     \t\tce.addEdit(new UndoableFieldChange(entry, \"date\", oldMonth, null));\n     \t}\n+    \t\n+    \t// Dates: format dates correctly (yyyy-mm-dd or yyyy-mm)\n+    \tif(entry.getField(\"date\") != null)\n+    \t{\n+    \t\tString oldDate = entry.getField(\"date\");\n+    \t\n+    \t\tTemporalAccessor parsedDate = tryParseDate(oldDate);\n+\t    \tif(parsedDate != null)\n+\t    \t{\n+\t    \t\tDateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"uuuu-MM[-dd]\");\n+\t    \t\tString formatedDate = dateFormatter.format(parsedDate);\n+\t    \t\t\n+\t    \t\t if (!oldDate.equals(formatedDate)) {\n+    \t            entry.setField(\"date\", formatedDate);\n+    \t            ce.addEdit(new UndoableFieldChange(entry, \"date\", oldDate, formatedDate));\n+    \t        }\n+\t    \t}\n+    \t}\n     }\n+    \n+    TemporalAccessor tryParseDate(String dateString)\n+    {\n+    \t// The following code is essentially copied from http://stackoverflow.com/questions/4024544/how-to-parse-dates-in-multiple-formats-using-simpledateformat\n+    \t// Try to parse the following formats\n+    \t// \t\"M/y\" (covers 9/09, 9/2009, and 09/2009)\n+    \t// \t\"yyyy-MM-dd\" (covers 2009-1-15)\n+    \tString[] formatStrings = {\"uuuu-MM-dd\", \"uuuu-MM\", \"uuuu-M\"};\n+        for (String formatString : formatStrings)\n+        {\n+            try\n+            {\n+            \treturn DateTimeFormatter.ofPattern(formatString).parse(dateString);\n+            }\n+            catch (DateTimeParseException e) {}\n+        }\n \n+        return null;\n+    }\n }, ", 46, 1, "\"modified, modified, \"", 47], ["Philip Johnson", "Feature 809: import Pubmed Central ID\n\nImport \"pmc\" field into bibtex from pubmed/medline records.  This field\nis analogous to other pubmed identifiers (pubmed id, doi, pii) and is\nused in NIH grant applications when listing publications produced by\nNIH-funded work.", "12/02/14, 08:30:04 PM", "Philip Johnson", "1a11c01b407379c5ac11afcff47ad3e09e7a702c", ["CHANGELOG", "src/main/java/net/sf/jabref/imports/MedlineHandler.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+    - Feature #809: import pubmed central id (pmc) field from medline\n     - Fix undoing Cleanup/Convert to Biblatex\n     - Adapted pattern to parse DBLP entries\n     - Partial fix for bug 913: fixed export for .ods and .sxc (by yaragg), @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2014 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -38,14 +38,14 @@\n \t\tinMedlineID = false,\t\tinURL=false,\n \t\tinIssue = false,\t\t\tinPubDate = false,\n         inUrl=false, inForename=false, inAbstractText=false, inMedlineDate=false,\n-\t\tinPubMedID=false, inDescriptorName=false,inDoi=false,inPii=false,\n+\t\tinPubMedID=false, inDescriptorName=false,inDoi=false,inPii=false,inPmc=false,\n         inAffiliation=false, inMeshHeader=false, inQualifierName=false,\n         inLanguage=false, inPst=false;\n     String title=\"\", journal=\"\", keywords =\"\",author=\"\",\n \t\tlastName=\"\",suffix=\"\",year=\"\",forename=\"\", abstractText=\"\", affiliation=\"\";\n     String month=\"\",volume=\"\",lastname=\"\",initials=\"\",number=\"\",page=\"\",medlineID=\"\",url=\"\",MedlineDate=\"\";\n     String series=\"\",editor=\"\",booktitle=\"\",type=\"article\",key=\"\",address=\"\",\n-\t\tpubmedid=\"\",doi=\"\",pii=\"\", majorTopic = \"\", minorTopics = \"\", language = \"\", pst= \"\";\n+        pubmedid=\"\",doi=\"\",pii=\"\", pmc=\"\",majorTopic = \"\", minorTopics = \"\", language = \"\", pst= \"\";\n     ArrayList<String> authors=new ArrayList<String>();\n     TreeSet<String> descriptors = new TreeSet<String>(); // To gather keywords\n     int rowNum=0;\n@@ -117,6 +117,8 @@ else if(localName.equals(\"ArticleId\")){\n \t\t\t\t\tinDoi=true;\n \t\t\t\telse if(value.equals(\"pii\"))\n \t\t\t\t\tinPii=true;\n+\t\t\t\telse if(value.equals(\"pmc\"))\n+\t\t\t\t\tinPmc=true;\n \n \t\t\t}\n \t\t}\n@@ -194,6 +196,8 @@ public void endElement( String uri, String localName, String qName ) {\n \t\t\t}\n \t\t\tif(!pii.equals(\"\"))\n \t\t\t    b.setField(\"pii\",pii);\n+\t\t\tif(!pmc.equals(\"\"))\n+\t\t\t    b.setField(\"pmc\",pmc);\n             if(!affiliation.equals(\"\")) {\n                 b.setField(\"institution\",affiliation.replaceAll(\"#\", \"\\\\\\\\#\"));\n             }\n@@ -212,7 +216,7 @@ public void endElement( String uri, String localName, String qName ) {\n \t\t\ttitle=\"\";\n \t\t\tjournal=\"\";\n \t\t\tkeywords =\"\";\n-            doi=\"\"; pii=\"\";\n+                        doi=\"\"; pii=\"\"; pmc=\"\";\n \t\t\tyear=\"\";\n \t\t\tforename=\"\";\n \t\t\tlastName=\"\";\n@@ -293,7 +297,9 @@ else if(localName.equals(\"ArticleId\")){\n \t\t\tif(inDoi)\n \t\t\t\tinDoi=false;\n \t\t\telse if(inPii)\n-\t\t\t\tinPii=false;}\n+\t\t\t\tinPii=false;\n+\t\t\telse if(inPmc)\n+\t\t\t\tinPmc=false;}\n     }\n \n     public void characters( char[] data, int start, int length ) {\n@@ -332,6 +338,7 @@ else if(inForename){\n \t\telse if(inMedlineDate){ MedlineDate += new String(data,start,length);}\n \t\telse if(inDoi){ doi=new String(data,start,length);}\n \t\telse if(inPii){ pii=new String(data,start,length);}\n+\t\telse if(inPmc){ pmc=new String(data,start,length);}\n         else if(inAffiliation){ affiliation = new String(data,start,length);}\n     }\n , @@ -67,6 +67,7 @@ <h2>Contributions from:</h2>\n         Yara Grassi Gouffon,\n         Leonardo Haddad Carlos\n         Sascha Hunold,\n+        Philip Johnson,\n         Bernd Kalbfuss,\n         Martin K&auml;hmer,\n         Ervin Kolenovic,, ", 14, 5, "\"modified, modified, modified, \"", 19], ["Brian Quistorff", "+Contribution notes for DOI encoding fix", "12/07/14, 09:02:05 PM", "Brian Quistorff", "a3521705d9515a8b16fc10b69daeb058fcd4efcb", ["CHANGELOG", "src/main/java/net/sf/jabref/imports/DOItoBibTeXFetcher.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+    - Fix for bug 1213 (sourceforge): Fix encoding for DOI import\n     - Feature #809: import pubmed central id (pmc) field from medline\n     - Fix undoing Cleanup/Convert to Biblatex\n     - Adapted pattern to parse DBLP entries, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2014 JabRef contributors.\n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation, either version 3 of the License, or, @@ -83,6 +83,7 @@ <h2>Contributions from:</h2>\n         Alex Montgomery,\n         Saverio Mori,\n         Ambrogio Oliva,\n+        Brian Quistorff,\n         Stephan Rave,\n         John Relph,\n         Hannes Restel,, ", 3, 1, "\"modified, modified, modified, \"", 4], ["Alexsandro Lauber", "Solve the bug '1248 Key bindings not modified'", "02/14/15, 09:01:06 PM", "Alexsandro Lauber", "5cc5d6d4531fd9298e43f205fd2e6f6142f74676", ["src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -885,10 +885,9 @@ public KeyStroke getKey(String bindName) {\n             // So, if this happens, we add the default value to the current\n             // hashmap, so this doesn't happen again, and so this binding\n             // will appear in the KeyBindingsDialog.\n-            keyBinds.put(bindName, s);\n-        }\n-        if (s == null) {\n             Globals.logger(\"Could not get key binding for \\\"\" + bindName + \"\\\"\");\n+            s = \"Not associated\"; // if the item of menu not in defKeyBind list\n+            keyBinds.put(bindName, s);\n         }\n \n         if (Globals.ON_MAC) {, ", 2, 3, "\"modified, \"", 5], ["Ruy Minoru Ito Takata", "Fix for bug #1253: Cleanup entries error 2\n\nCommitter: Ruy Minoru Ito Takata <ruy.takata@gmail.com>", "03/31/15, 06:43:22 PM", "Ruy Minoru Ito Takata - SUPCD/CDISO/CDSSP", "65ddbbe725b6123ca676c312d492561edbb4a180", ["CHANGELOG", "src/main/java/net/sf/jabref/imports/HTMLConverter.java", "src/main/resources/help/About.html"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Fix for bug #1253: Cleanup entries error 2 (by ruy.takata)\n     - Fix for bug 1213 (sourceforge): Fix encoding for DOI import\n     - Feature #809: import pubmed central id (pmc) field from medline\n     - Fix undoing Cleanup/Convert to Biblatex, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -107,7 +107,7 @@\n         //                                 U+00C3 ISOlat1 \n         {\"196\", \"Auml\", \"\\\\{\\\\\\\\\\\"\\\\{A\\\\}\\\\}\"}, // latin capital letter A with diaeresis, \n         //                                 U+00C4 ISOlat1 \n-        {\"197\", \"Aring\", \"\\\\{\\\\\\\\AA\\\\}\"}, // latin capital letter A with ring above \n+        {\"197\", \"Aring\", \"\\\\{\\\\{\\\\\\\\AA\\\\}\\\\}\"}, // latin capital letter A with ring above \n         //                                 = latin capital letter A ring,\n         //                                 U+00C5 ISOlat1 \n         {\"198\", \"AElig\", \"\\\\{\\\\\\\\AE\\\\}\"}, // latin capital letter AE \n@@ -173,7 +173,7 @@\n         //                                 U+00E3 ISOlat1 \n         {\"228\", \"auml\", \"\\\\{\\\\\\\\\\\"\\\\{a\\\\}\\\\}\"}, // latin small letter a with diaeresis, \n         //                                 U+00E4 ISOlat1 \n-        {\"229\", \"aring\", \"\\\\{\\\\\\\\aa\\\\}\"}, // latin small letter a with ring above \n+        {\"229\", \"aring\", \"\\\\{\\\\{\\\\\\\\aa\\\\}\\\\}\"}, // latin small letter a with ring above \n         //                                 = latin small letter a ring,\n         //                                 U+00E5 ISOlat1 \n         {\"230\", \"aelig\", \"\\\\{\\\\\\\\ae\\\\}\"}, // latin small letter ae , @@ -101,7 +101,8 @@ <h2>Contributions from:</h2>\n         Mattias Ulbrich,\n         David Weitzman,\n         Seb Wills,\n-        John Zedlewski</p>\n+        John Zedlewski,\n+        Ruy Minoru Ito Takata</p>\n \n         <h2>Thanks to:</h2>\n , ", 6, 4, "\"modified, modified, modified, \"", 10], ["NS", "Update About.html", "04/09/15, 07:37:07 AM", "NS", "18e787861faeab5a22303ae539ad8fbfe0392e10", ["src/main/resources/help/About.html"], "@@ -90,6 +90,7 @@ <h2>Contributions from:</h2>\n         Moritz Ringler,\n         Andreas Rudert,\n         Mark Schenk,\n+        Nathan Sheffield,\n         Rudolf Seemann,\n         Toralf Senger,\n         Manuel Siebeneicher,, ", 1, 0, "\"modified, \"", 1], ["Ruy Minoru Ito Takata - SUPCD/CDISO/CDSSP", "Fix for bug #1270: Cleanup entries error 3", "04/23/15, 06:56:07 PM", "Ruy Minoru Ito Takata - SUPCD/CDISO/CDSSP", "d60322ef108fe9d864227ad9234ed1b16c7c57a4", ["CHANGELOG", "src/main/java/net/sf/jabref/imports/HTMLConverter.java"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Fix for bug #1270: Cleanup entries error 3\n     - Fix for bug #919: Accents don't export to RTF (by ruy.takata)\n     - Change the CrossRef content negotiation for bibtex DOI import (by sheffien)\n     - Fix for bug #1253: Cleanup entries error 2 (by ruy.takata), @@ -188,13 +188,13 @@\n         //                                 U+00EA ISOlat1 \n         {\"235\", \"euml\", \"\\\\{\\\\\\\\\\\"\\\\{e\\\\}\\\\}\"}, // latin small letter e with diaeresis, \n         //                                 U+00EB ISOlat1 \n-        {\"236\", \"igrave\", \"\\\\{\\\\\\\\`\\\\{\\\\\\\\i\\\\}\\\\}\"}, // latin small letter i with grave,\n+        {\"236\", \"igrave\", \"\\\\{\\\\\\\\`\\\\{i\\\\}\\\\}\"}, // latin small letter i with grave,\n         //                                 U+00EC ISOlat1 \n-        {\"237\", \"iacute\", \"\\\\{\\\\\\\\'\\\\{\\\\\\\\i\\\\}\\\\}\"}, // latin small letter i with acute, \n+        {\"237\", \"iacute\", \"\\\\{\\\\\\\\'\\\\{i\\\\}\\\\}\"}, // latin small letter i with acute, \n         //                                 U+00ED ISOlat1 \n-        {\"238\", \"icirc\", \"\\\\{\\\\\\\\\\\\^\\\\{\\\\\\\\i\\\\}\\\\}\"}, // latin small letter i with circumflex, \n+        {\"238\", \"icirc\", \"\\\\{\\\\\\\\\\\\^\\\\{i\\\\}\\\\}\"}, // latin small letter i with circumflex, \n         //                                 U+00EE ISOlat1 \n-        {\"239\", \"iuml\", \"\\\\{\\\\\\\\\\\"\\\\{\\\\\\\\i\\\\}\\\\}\"}, // latin small letter i with diaeresis, \n+        {\"239\", \"iuml\", \"\\\\{\\\\\\\\\\\"\\\\{i\\\\}\\\\}\"}, // latin small letter i with diaeresis, \n         //                                 U+00EF ISOlat1 \n         {\"240\", \"eth\", \"\\\\{\\\\\\\\dh\\\\}\"}, // latin small letter eth, U+00F0 ISOlat1  \n         {\"241\", \"ntilde\", \"\\\\{\\\\\\\\~\\\\{n\\\\}\\\\}\"}, // latin small letter n with tilde, \n@@ -227,6 +227,8 @@\n         //                                 U+00FE ISOlat1 \n         {\"255\", \"yuml\", \"\\\\{\\\\\\\\\\\"\\\\{y\\\\}\\\\}\"}, // latin small letter y with diaeresis, \n         //                                 U+00FF ISOlat1 \n+        {\"332\", \"Omacro\", \"\\\\{\\\\\\\\=\\\\{O\\\\}\\\\}\"}, // the small letter o with macron\n+        {\"333\", \"omacro\", \"\\\\{\\\\\\\\=\\\\{o\\\\}\\\\}\"}, // the big letter O with macron\n         {\"402\", \"fnof\", \"\\\\$f\\\\$\"}, // latin small f with hook = function \n         //                                   = florin, U+0192 ISOtech \n , ", 7, 4, "\"modified, modified, \"", 11], ["Igor Steinmacher", "Merge pull request #1 from mariprudencio/master\n\nFixing bug 1269 multiple keywords problem", "04/29/15, 06:21:52 PM", "Igor Steinmacher", "4c247e744d20ab2d695e3570795ece05d7e9f6c7", [], "", 0, 0, "\"\"", 0], ["NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN"], ["Tobias", "Updated some paths in Launch4j configuration file", "05/11/15, 11:31:46 AM", "Tobias", "8c0cf77e9cd954e71d46d5cf50fbf6e0ac3da573", ["README.md", "jabref-launch4j.xml"], "@@ -128,7 +128,8 @@ To get a list of all targets, use `gradlew tasks`.\n To compile, use the command `gradlew generateSource antTargets.jars`.\n After the build is finished, you can find the executable jar file\n named `JabRef-$VERSION.jar` (where $VERSION is the current version of the\n-source tree) in the `build/lib` directory. Enjoy!\n+source tree) in the `buildant\\lib` directory. Enjoy!\n+The setup files are created by invoking the command `gradlew generateSource antTargets.release`.\n \n On Mac OS X you should include the targets osx and osxjar,\n making the correct command `gradlew generateSource antTargets.compile antTargets.unjarlib antTargets.osx antTargets.jars antTargets.osxjar`., @@ -2,7 +2,7 @@\n   <dontWrapJar>true</dontWrapJar>\n   <headerType>gui</headerType>\n   <jar>JabRef-1.1.1.jar</jar>\n-  <outfile>.\\src\\windows\\nsis\\dist\\JabRef.exe</outfile>\n+  <outfile>./src/main/resources/windows/nsis/dist/JabRef.exe</outfile>\n   <errTitle></errTitle>\n   <cmdLine></cmdLine>\n   <chdir></chdir>\n@@ -12,7 +12,7 @@\n   <customProcName>false</customProcName>\n   <stayAlive>false</stayAlive>\n   <manifest></manifest>\n-  <icon>./src/resources/images/JabRef.ico</icon>\n+  <icon>./src/main/resources/images/JabRef.ico</icon>\n   <jre>\n     <path></path>\n     <minVersion>1.6.0</minVersion>, ", 4, 3, "\"modified, modified, \"", 7], ["Tobias", "Fix for bug #876: Windows 7/8/10 - Pinning Jabref to the taskbar now works\n\nDetails:\nPreviously, JabRef couldn't be pinned to the taskbar ([bug report](https://sourceforge.net/p/jabref/bugs/876/)). The reason is that, by wrapping JabRef with Launch4j, Windows thinks only Java is running and does not recognize JabRef as something separate.\n\nBased on a [stackoverflow question](http://stackoverflow.com/questions/9330209/whats-the-best-way-to-start-java-applications-on-windows-7) the fix proceeds in two stages:\n* During the setup, we create a (dummy) shortcut and set the [Application User Model Id](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459%28v=vs.85%29.aspx). For this, we use the [WinShell plugin](http://nsis.sourceforge.net/WinShell_plug-in) for NSIS.\n* At program start, we notify Windows that this JabRef instance has the AppUserModelId specified in the setup. In order to do this, we invoke native commands using the Java Native Access (JNA) library.", "05/11/15, 04:30:01 PM", "Tobias", "5b8e37d8491610d3109ead40ea69172d628827bb", ["CHANGELOG", "build.gradle", "build.xml", "lib/jna-4.1.0.jar", "lib/licenses.txt", "src/main/java/net/sf/jabref/JabRef.java", "src/main/resources/windows/nsis/setup.nsi"], "@@ -1,4 +1,5 @@\n [master]\n+    - Fix for bug #876: Windows 7/8/10 - Pinning Jabref to the taskbar\t\n     - Fix for bug #1270: Cleanup entries error 3\n     - Fix for bug #919: Accents don't export to RTF (by ruy.takata)\n     - Change the CrossRef content negotiation for bibtex DOI import (by sheffien), @@ -77,6 +77,8 @@ dependencies {\n \n     compile fileTree(dir: 'lib', includes: ['glazedlists-1.8.0_java15.jar', 'jayatana-1.2.4.jar', 'microba.jar', 'spin.jar'])\n \n+    compile 'net.java.dev.jna:jna:4.1.0'\n+\n     // not available in maven repository\n     compile fileTree(dir: 'lib/plugin', includes: ['jpf.jar', 'jpf-boot.jar', 'commons-logging.jar', 'JPFCodeGenerator-rt.jar'])\n , @@ -101,6 +101,7 @@\n \t\t<include name=\"jgoodies-looks-2.5.2.jar\" />\n \t\t<include name=\"jgoodies-forms-1.6.0.jar\" />\n         <include name=\"jgoodies/jgoodies-uif-lite.jar\" />\n+        <include name=\"jna-4.1.0.jar\" />\n         <include name=\"ritopt/ritopt-0.2.1-bin.jar\" />\n \t\t<include name=\"jayatana-1.2.4.jar\" />\n \t\t<include name=\"spin.jar\" />, None, @@ -138,6 +138,11 @@ Project: JGoodies Looks\n URL:     http://www.jgoodies.com/downloads/libraries/\n License: BSD\n \n+Path:    jna-4.1.0.jar\n+Project: Java Native Access (JNA)\n+URL:     https://github.com/twall/jna\n+License: LGPL 2.1\n+\n Path:    microba.jar\n Project: Microba\n URL:     http://microba.sourceforge.net/, @@ -50,6 +50,12 @@\n import net.sf.jabref.remote.RemoteListener;\n import net.sf.jabref.wizard.auximport.AuxCommandLine;\n \n+import com.sun.jna.Native;\n+import com.sun.jna.NativeLong;\n+import com.sun.jna.Pointer;\n+import com.sun.jna.WString;\n+import com.sun.jna.ptr.PointerByReference;\n+\n /**\n  * JabRef Main Class - The application gets started here.\n  *\n@@ -181,9 +187,44 @@ protected JabRef(String[] args) {\n \t\tGlobals.NEWLINE = Globals.prefs.get(JabRefPreferences.NEWLINE);\n \t\tGlobals.NEWLINE_LENGTH = Globals.NEWLINE.length();\n \t\t\n+\t\t\n+\t\t// Set application user model id so that pinning JabRef to the Win7/8 taskbar works\n+\t\t// Based on http://stackoverflow.com/a/1928830\n+\t\tsetCurrentProcessExplicitAppUserModelID(\"JabRef.\"+Globals.VERSION);\n+\t    //System.out.println(getCurrentProcessExplicitAppUserModelID());\n+\t\t\n \t\topenWindow(processArguments(args, true));\n \t}\n     \n+    // Do not use this code in release version, it contains some memory leaks\n+    public static String getCurrentProcessExplicitAppUserModelID()\n+    {\n+      final PointerByReference r = new PointerByReference();\n+\n+      if (GetCurrentProcessExplicitAppUserModelID(r).longValue() == 0)\n+      {\n+        final Pointer p = r.getValue();\n+\n+\n+        return p.getString(0, true); // here we leak native memory by lazyness\n+      }      \n+      return \"N/A\";\n+    }\n+\n+    public static void setCurrentProcessExplicitAppUserModelID(final String appID)\n+    {\n+      if (SetCurrentProcessExplicitAppUserModelID(new WString(appID)).longValue() != 0)\n+        throw new RuntimeException(\"unable to set current process explicit AppUserModelID to: \" + appID);\n+    }\n+\n+    private static native NativeLong GetCurrentProcessExplicitAppUserModelID(PointerByReference appID);\n+    private static native NativeLong SetCurrentProcessExplicitAppUserModelID(WString appID);\n+\n+\n+    static\n+    {\n+      Native.register(\"shell32\");\n+    }\n \n \n     public Vector<ParserResult> processArguments(String[] args, boolean initialStartup) {, @@ -26,8 +26,7 @@ Name \"JabRef ${VERSION}\"\n !define PRODUCT_NAME \"JabRef\"\n !define PRODUCT_UNINST_KEY \"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n !define PRODUCT_LICENSE_FILE \"dist\\gpl3.txt\"\n-\n-\n+!define AppUserModelId \"JabRef.${VERSION}\"\n \n # Variables\n Var StartmenuFolder\n@@ -179,6 +178,9 @@ Section \"-Installation actions\" SecInstallation\n   ; register JabRef\n   WriteRegStr SHCTX \"${REGKEY}\" Path $INSTDIR\n   WriteUninstaller $INSTDIR\\uninstall.exe\n+  ; register application user model id so that JabRef works with Win7 taskbar\n+  CreateShortCut \"$INSTDIR\\$(^Name).lnk\" \"$INSTDIR\\${PRODUCT_EXE}\" \"\" \"$INSTDIR\\JabRef.exe\" 0 SW_SHOWNORMAL\n+  WinShell::SetLnkAUMI \"$INSTDIR\\$(^Name).lnk\" \"${AppUserModelId}\"\n   ; create shortcuts to startmenu\n   SetOutPath \"$INSTDIR\"\n   CreateDirectory \"$SMPROGRAMS\\$StartmenuFolder\"\n@@ -212,6 +214,10 @@ Section \"un.JabRef\" un.SecUnProgramFiles\n   ; delete executables\n   Delete $INSTDIR\\${PRODUCT_EXE}\n   Delete $INSTDIR\\uninstall.exe\n+  ; remove application user model id\n+  WinShell::UninstAppUserModelId \"${AppUserModelId}\"\n+  WinShell::UninstShortcut \"$INSTDIR\\$(^Name).lnk\"\n+  Delete \"$INSTDIR\\$(^Name).lnk\"\n   ; delete dir only if empty\n   RMDir $INSTDIR\n   ; delete start menu entry, ", 58, 2, "\"modified, modified, modified, added, modified, modified, modified, \"", 60], ["Tobias", "Add option to hide/show gridlines in the main table", "05/12/15, 10:33:47 PM", "Tobias", "3c5b51623b3ecba267d4f7f259dde272d16d9816", ["CHANGELOG", "src/main/java/net/sf/jabref/AppearancePrefsTab.java", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/MainTable.java"], "@@ -1,5 +1,5 @@\n [master]\n-    - Some UI updates\n+    - Feature: Gridlines are now optional (and disabled by default)\n     - Fix for bug #1270: Cleanup entries error 3\n     - Fix for bug #919: Accents don't export to RTF (by ruy.takata)\n     - Change the CrossRef content negotiation for bibtex DOI import (by sheffien), @@ -31,12 +31,12 @@\n class AppearancePrefsTab extends JPanel implements PrefsTab {\n \n     JabRefPreferences _prefs;\n-    private JCheckBox colorCodes, overrideFonts;//, useCustomIconTheme;\n+    private JCheckBox colorCodes, overrideFonts, showGrid;//, useCustomIconTheme;\n     private ColorSetupPanel colorPanel = new ColorSetupPanel();\n     private Font font = GUIGlobals.CURRENTFONT;\n     private int oldMenuFontSize;\n     private boolean oldOverrideFontSize;\n-    private JTextField fontSize;//, customIconThemeFile;\n+    private JTextField fontSize, gridPadding;//, customIconThemeFile;\n \n     /**\n      * Customization of appearance parameters.\n@@ -57,6 +57,9 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n                   (\"Use antialiasing font\"));*/\n         overrideFonts = new JCheckBox(Globals.lang(\"Override default font settings\"));\n \n+        gridPadding = new JTextField(5);\n+        showGrid = new JCheckBox(Globals.lang(\"Show gridlines\"));\n+        \n         //useCustomIconTheme = new JCheckBox(Globals.lang(\"Use custom icon theme\"));\n         //customIconThemeFile = new JTextField();\n         FormLayout layout = new FormLayout\n@@ -79,6 +82,14 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n         //builder.nextLine();\n         builder.append(colorCodes);\n         builder.nextLine();\n+        builder.append(showGrid);\n+        builder.nextLine();\n+        JPanel panelGridPadding = new JPanel();\n+        lab = new JLabel(Globals.lang(\"Additional cell padding (in px)\") + \":\");\n+        panelGridPadding.add(lab);\n+        panelGridPadding.add(gridPadding);\n+        builder.append(panelGridPadding);\n+        builder.nextLine();\n         JButton fontButton = new JButton(Globals.lang(\"Set table font\"));\n         builder.append(fontButton);\n         builder.nextLine();\n@@ -149,6 +160,8 @@ public void setValues() {\n         fontSize.setEnabled(overrideFonts.isSelected());\n         //useCustomIconTheme.setSelected(_prefs.getBoolean(\"useCustomIconTheme\"));\n         //customIconThemeFile.setText(_prefs.get(\"customIconThemeFile\"));\n+        showGrid.setSelected(_prefs.getBoolean(\"tableShowGrid\"));\n+        gridPadding.setText(\"\" + _prefs.getInt(\"tablePadding\"));\n         colorPanel.setValues();\n     }\n \n@@ -167,6 +180,7 @@ public void storeSettings() {\n         _prefs.putBoolean(\"overrideDefaultFonts\", overrideFonts.isSelected());\n         GUIGlobals.CURRENTFONT = font;\n         colorPanel.storeSettings();\n+        _prefs.putBoolean(\"tableShowGrid\", showGrid.isSelected());\n         try {\n             int size = Integer.parseInt(fontSize.getText());\n             if ((overrideFonts.isSelected() != oldOverrideFontSize) ||\n@@ -179,6 +193,7 @@ public void storeSettings() {\n                         Globals.lang(\"Changed font settings\"),\n                         JOptionPane.WARNING_MESSAGE);\n             }\n+           _prefs.putInt(\"tablePadding\", Integer.parseInt(gridPadding.getText()));\n \n         } catch (NumberFormatException ex) {\n             ex.printStackTrace();\n@@ -196,6 +211,16 @@ public boolean readyToClose() {\n                             JOptionPane.ERROR_MESSAGE);\n             return false;\n         }\n+        try {\n+            // Test if table padding is a number:\n+            Integer.parseInt(gridPadding.getText());\n+        } catch (NumberFormatException ex) {\n+            JOptionPane.showMessageDialog\n+                    (null, Globals.lang(\"You must enter an integer value in the text field for\") + \" '\" +\n+                            Globals.lang(\"Additional cell padding (in px)\") + \"'\", Globals.lang(\"Changed table settings\"),\n+                            JOptionPane.ERROR_MESSAGE);\n+            return false;\n+        }\n         return true;\n \n     }, @@ -45,8 +45,6 @@\n import java.util.Vector;\n import java.util.logging.Logger;\n \n-import javafx.scene.Parent;\n-\n import javax.swing.AbstractAction;\n import javax.swing.BorderFactory;\n import javax.swing.JComponent;, @@ -401,6 +401,8 @@ private JabRefPreferences() {\n         defaults.put(\"tableReqFieldBackground\", \"230:235:255\");\n         defaults.put(\"tableOptFieldBackground\", \"230:255:230\");\n         defaults.put(\"tableText\", \"0:0:0\");\n+        defaults.put(\"tablePadding\", 0);\n+        defaults.put(\"tableShowGrid\", Boolean.FALSE);\n         defaults.put(\"gridColor\", \"210:210:210\");\n         defaults.put(\"grayedOutBackground\", \"210:210:210\");\n         defaults.put(\"grayedOutText\", \"40:40:40\");, @@ -114,9 +114,14 @@ public MainTable(MainTableFormat tableFormat, EventList<BibtexEntry> list, JabRe\n         pane = new JScrollPane(this);\n         pane.setBorder(BorderFactory.createEmptyBorder());\n         pane.getViewport().setBackground(Globals.prefs.getColor(\"tableBackground\"));\n-        //setGridColor(Globals.prefs.getColor(\"gridColor\"));\n-        setShowGrid(false);\n-        setIntercellSpacing(new Dimension(0, 0));\n+        setGridColor(Globals.prefs.getColor(\"gridColor\"));\n+        if(Globals.prefs.getBoolean(\"tableShowGrid\"))\n+        \tsetShowGrid(true);\n+        else\n+        {\n+\t        setShowGrid(false);\n+\t        setIntercellSpacing(new Dimension(0, 0));\n+        }\n         \n         this.setTableHeader(new PreventDraggingJTableHeader(this.getColumnModel()));\n \n@@ -532,7 +537,7 @@ public void scrollTo(int y) {\n      */\n     public void updateFont() {\n         setFont(GUIGlobals.CURRENTFONT);\n-        setRowHeight(GUIGlobals.TABLE_ROW_PADDING + GUIGlobals.CURRENTFONT.getSize());\n+        setRowHeight(GUIGlobals.TABLE_ROW_PADDING + Globals.prefs.getInt(\"tablePadding\") + GUIGlobals.CURRENTFONT.getSize());\n     }\n \n     public void ensureVisible(int row) {, ", 39, 9, "\"modified, modified, modified, modified, modified, \"", 48], ["Tobias", "Add entry under the 'View' menu to hide the toolbar", "05/11/15, 07:38:47 PM", "Tobias", "769090b229a72b50197b8d77485da7d029a44cd3", ["CHANGELOG", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Feature: Make it possible to hide the toolbar\n     - Fix for bug #1270: Cleanup entries error 3\n     - Fix for bug #919: Accents don't export to RTF (by ruy.takata)\n     - Change the CrossRef content negotiation for bibtex DOI import (by sheffien), @@ -691,6 +691,12 @@ public void action() {\n             }\n         });\n \n+        // The action for toggling the visibility of the toolbar\n+        actions.put(\"toggleToolbar\", new BaseAction() {\n+            public void action() {\n+            \tframe.tlb.setVisible(! frame.tlb.isVisible());\n+            }\n+        });\n \n         // action for collecting database strings from user\n         actions.put(\"dbConnect\", new DbConnectAction(this));, @@ -270,6 +270,9 @@ void addAction(Action a) {\n       editStrings = new GeneralAction(\"editStrings\", \"Edit strings\",\n                                       Globals.lang(\"Edit strings\"),\n                                       prefs.getKey(\"Edit strings\")),\n+\t  toggleToolbar = new GeneralAction(\"toggleToolbar\", \"Hide/show toolbar\",\n+              Globals.lang(\"Hide/show toolbar\"),\n+\t          prefs.getKey(\"Hide/show toolbar\")),\n       toggleGroups = new GeneralAction(\"toggleGroups\",\n                                        \"Toggle groups interface\",\n                                        Globals.lang(\"Toggle groups interface\"),\n@@ -470,6 +473,8 @@ public void windowClosing(WindowEvent e) {\n         \n         initActions();\n \n+        // Show the toolbar if it was visible at last shutdown:\n+        tlb.setVisible(Globals.prefs.getBoolean(\"toolbarVisible\"));\n       \n       setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());\n       if ( !prefs.getBoolean(\"windowMaximised\") ) {\n@@ -809,6 +814,7 @@ public void quit() {\n       //prefs.putBoolean(\"windowMaximised\", (getExtendedState()&MAXIMIZED_BOTH)>0);\n       prefs.putBoolean(\"windowMaximised\", (getExtendedState() == Frame.MAXIMIZED_BOTH));\n       \n+      prefs.putBoolean(\"toolbarVisible\", tlb.isVisible());\n       prefs.putBoolean(\"searchPanelVisible\", sidePaneManager.isComponentVisible(\"search\"));\n       // Store divider location for side pane:\n       int width = contentPane.getDividerLocation();\n@@ -1394,6 +1400,7 @@ private void fillMenu() {\n       view.add(increaseFontSize);\n       view.add(decreseFontSize);\n       view.addSeparator();\n+      view.add(toggleToolbar);\n       view.add(toggleGroups);\n       view.add(togglePreview);\n       view.add(switchPreview);\n@@ -1649,7 +1656,6 @@ private void createToolBar() {\n     //Insets margin = new Insets(0, 0, 0, 0);\n     //for (int i=0; i<tlb.getComponentCount(); i++)\n     //  ((JButton)tlb.getComponentAtIndex(i)).setMargin(margin);\n-\n   }\n \n   , @@ -373,6 +373,7 @@ private JabRefPreferences() {\n         defaults.put(EDIT_GROUP_MEMBERSHIP_MODE, Boolean.FALSE);\n         defaults.put(\"highlightGroupsMatchingAny\", Boolean.FALSE);\n         defaults.put(\"highlightGroupsMatchingAll\", Boolean.FALSE);\n+        defaults.put(\"toolbarVisible\", Boolean.TRUE);\n         defaults.put(\"searchPanelVisible\", Boolean.FALSE);\n         defaults.put(\"defaultEncoding\", System.getProperty(\"file.encoding\"));\n         defaults.put(\"groupsVisibleRows\", 8);, ", 15, 1, "\"modified, modified, modified, modified, \"", 16], ["Adam Rehn", "Added the option to change the table row height padding.\n\nPreviously, the padding added to the row height for the main table was hardcoded.\nThe padding value can now be modified by the user through the preferences dialog.\nThe old hardcoded value is used as the default value for the new preference.", "05/13/15, 10:51:16 AM", "Adam Rehn", "9499e02420dcc440283e6aac04ea0239af6d788d", ["src/main/java/net/sf/jabref/AppearancePrefsTab.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/MainTable.java"], "@@ -36,7 +36,7 @@\n     private Font font = GUIGlobals.CURRENTFONT;\n     private int oldMenuFontSize;\n     private boolean oldOverrideFontSize;\n-    private JTextField fontSize;//, customIconThemeFile;\n+    private JTextField fontSize, rowPadding;//, customIconThemeFile;\n \n     /**\n      * Customization of appearance parameters.\n@@ -50,6 +50,8 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n         // Font sizes:\n         fontSize = new JTextField(5);\n \n+        // Row padding size:\n+        rowPadding = new JTextField(5);\n \n         colorCodes = new JCheckBox(\n                    Globals.lang(\"Color codes for required and optional fields\"));\n@@ -77,6 +79,11 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n         builder.appendSeparator(Globals.lang(\"Table appearance\"));\n         //builder.append(antialias);\n         //builder.nextLine();\n+        JPanel p2 = new JPanel();\n+        p2.add(new JLabel(Globals.lang(\"Table row height padding\") + \":\"));\n+        p2.add(rowPadding);\n+        builder.append(p2);\n+        builder.nextLine();\n         builder.append(colorCodes);\n         builder.nextLine();\n         JButton fontButton = new JButton(Globals.lang(\"Set table font\"));\n@@ -143,6 +150,7 @@ public void setValues() {\n         colorCodes.setSelected(_prefs.getBoolean(\"tableColorCodesOn\"));\n         //antialias.setSelected(_prefs.getBoolean(\"antialias\"));\n         fontSize.setText(\"\" + _prefs.getInt(\"menuFontSize\"));\n+        rowPadding.setText(\"\" + _prefs.getInt(\"tableRowPadding\"));\n         oldMenuFontSize = _prefs.getInt(\"menuFontSize\");\n         overrideFonts.setSelected(_prefs.getBoolean(\"overrideDefaultFonts\"));\n         oldOverrideFontSize = overrideFonts.isSelected();\n@@ -183,20 +191,41 @@ public void storeSettings() {\n         } catch (NumberFormatException ex) {\n             ex.printStackTrace();\n         }\n+        try {\n+            int padding = Integer.parseInt(rowPadding.getText());\n+                _prefs.putInt(\"tableRowPadding\", padding);\n+        } catch (NumberFormatException ex) {\n+            ex.printStackTrace();\n+        }\n     }\n \n-    public boolean readyToClose() {\n+    private boolean validateIntegerField(String fieldName, String fieldValue, String errorTitle)\n+    {\n         try {\n-            // Test if font size is a number:\n-            Integer.parseInt(fontSize.getText());\n+            // Test if the field value is a number:\n+            Integer.parseInt(fieldValue);\n         } catch (NumberFormatException ex) {\n             JOptionPane.showMessageDialog\n                     (null, Globals.lang(\"You must enter an integer value in the text field for\") + \" '\" +\n-                            Globals.lang(\"Menu and label font size\") + \"'\", Globals.lang(\"Changed font settings\"),\n+                            Globals.lang(fieldName) + \"'\", Globals.lang(errorTitle),\n                             JOptionPane.ERROR_MESSAGE);\n             return false;\n         }\n         return true;\n+    }\n+\n+    public boolean readyToClose() {\n+        // Test if font size is a number:\n+        if (validateIntegerField(\"Menu and label font size\", fontSize.getText(), \"Changed font settings\") == false) {\n+            return false;\n+        }\n+\n+        // Test if row padding is a number:\n+        if (validateIntegerField(\"Table row height padding\", rowPadding.getText(), \"Changed table appearance settings\") == false) {\n+            return false;\n+        }\n+        \n+        return true;\n \n     }\n , @@ -396,6 +396,7 @@ private JabRefPreferences() {\n         defaults.put(\"menuFontFamily\", \"Times\");\n         defaults.put(\"menuFontStyle\", java.awt.Font.PLAIN);\n         defaults.put(\"menuFontSize\", 11);\n+        defaults.put(\"tableRowPadding\", GUIGlobals.TABLE_ROW_PADDING);\n         // Main table color settings:\n         defaults.put(\"tableBackground\", \"255:255:255\");\n         defaults.put(\"tableReqFieldBackground\", \"230:235:255\");, @@ -525,7 +525,7 @@ public void scrollTo(int y) {\n      */\n     public void updateFont() {\n         setFont(GUIGlobals.CURRENTFONT);\n-        setRowHeight(GUIGlobals.TABLE_ROW_PADDING + GUIGlobals.CURRENTFONT.getSize());\n+        setRowHeight(Globals.prefs.getInt(\"tableRowPadding\") + GUIGlobals.CURRENTFONT.getSize());\n     }\n \n     public void ensureVisible(int row) {, ", 36, 6, "\"modified, modified, modified, \"", 42], ["Tobias", "Add option to hide/show gridlines in the main table", "05/16/15, 09:34:49 PM", "Tobias", "d41f26eaa0104ed195b7aaf7a829b3b62bc86db6", ["CHANGELOG", "src/main/java/net/sf/jabref/AppearancePrefsTab.java", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/EntryEditorTab.java", "src/main/java/net/sf/jabref/FieldNameLabel.java", "src/main/java/net/sf/jabref/GUIGlobals.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/SidePaneComponent.java", "src/main/java/net/sf/jabref/gui/MainTable.java"], "@@ -1,4 +1,6 @@\n [master]\n+    - Some UI updates (mainly removing unnecessary boundaries)\n+    - Feature: Gridlines are now optional (and disabled by default)\n     - Fix for bug #1248: Key bindings not modified\n     - Fix for bug #876: Windows 7/8/10 - Pinning Jabref to the taskbar\n     - Feature: Option to change the table row height padding, @@ -31,7 +31,7 @@\n class AppearancePrefsTab extends JPanel implements PrefsTab {\n \n     JabRefPreferences _prefs;\n-    private JCheckBox colorCodes, overrideFonts;//, useCustomIconTheme;\n+    private JCheckBox colorCodes, overrideFonts, showGrid;//, useCustomIconTheme;\n     private ColorSetupPanel colorPanel = new ColorSetupPanel();\n     private Font font = GUIGlobals.CURRENTFONT;\n     private int oldMenuFontSize;\n@@ -59,6 +59,8 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n                   (\"Use antialiasing font\"));*/\n         overrideFonts = new JCheckBox(Globals.lang(\"Override default font settings\"));\n \n+        showGrid = new JCheckBox(Globals.lang(\"Show gridlines\"));\n+        \n         //useCustomIconTheme = new JCheckBox(Globals.lang(\"Use custom icon theme\"));\n         //customIconThemeFile = new JTextField();\n         FormLayout layout = new FormLayout\n@@ -86,6 +88,8 @@ public AppearancePrefsTab(JabRefPreferences prefs) {\n         builder.nextLine();\n         builder.append(colorCodes);\n         builder.nextLine();\n+        builder.append(showGrid);\n+        builder.nextLine();\n         JButton fontButton = new JButton(Globals.lang(\"Set table font\"));\n         builder.append(fontButton);\n         builder.nextLine();\n@@ -157,6 +161,7 @@ public void setValues() {\n         fontSize.setEnabled(overrideFonts.isSelected());\n         //useCustomIconTheme.setSelected(_prefs.getBoolean(\"useCustomIconTheme\"));\n         //customIconThemeFile.setText(_prefs.get(\"customIconThemeFile\"));\n+        showGrid.setSelected(_prefs.getBoolean(\"tableShowGrid\"));\n         colorPanel.setValues();\n     }\n \n@@ -175,6 +180,7 @@ public void storeSettings() {\n         _prefs.putBoolean(\"overrideDefaultFonts\", overrideFonts.isSelected());\n         GUIGlobals.CURRENTFONT = font;\n         colorPanel.storeSettings();\n+        _prefs.putBoolean(\"tableShowGrid\", showGrid.isSelected());\n         try {\n             int size = Integer.parseInt(fontSize.getText());\n             if ((overrideFonts.isSelected() != oldOverrideFontSize) ||\n@@ -187,7 +193,6 @@ public void storeSettings() {\n                         Globals.lang(\"Changed font settings\"),\n                         JOptionPane.WARNING_MESSAGE);\n             }\n-\n         } catch (NumberFormatException ex) {\n             ex.printStackTrace();\n         }, @@ -16,6 +16,7 @@\n package net.sf.jabref;\n \n import java.awt.BorderLayout;\n+import java.awt.Color;\n import java.awt.Component;\n import java.awt.GridBagConstraints;\n import java.awt.GridBagLayout;\n@@ -45,6 +46,7 @@\n import java.util.logging.Logger;\n \n import javax.swing.AbstractAction;\n+import javax.swing.BorderFactory;\n import javax.swing.JComponent;\n import javax.swing.JFileChooser;\n import javax.swing.JOptionPane;\n@@ -2084,6 +2086,10 @@ protected boolean accept(Component c) {\n \n         splitPane.setTopComponent(mainTable.getPane());\n \n+        // Remove borders\n+        splitPane.setBorder(BorderFactory.createEmptyBorder());\n+        setBorder(BorderFactory.createEmptyBorder());\n+                \n         //setupTable();\n         // If an entry is currently being shown, make sure it stays shown,\n         // otherwise set the bottom component to null., @@ -26,6 +26,7 @@\n import java.util.List;\n \n import javax.swing.ActionMap;\n+import javax.swing.BorderFactory;\n import javax.swing.InputMap;\n import javax.swing.JComponent;\n import javax.swing.JPanel;\n@@ -129,7 +130,7 @@ void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField,\n \n         DefaultFormBuilder builder = new DefaultFormBuilder\n                 (new FormLayout(colSpec, rowSpec), panel);\n-\n+        \n         for (int i = 0; i < fields.length; i++) {\n             // Create the text area:\n             int editorType = BibtexFields.getEditorType(fields[i]);, @@ -30,8 +30,9 @@ public FieldNameLabel(String name) {\n       setVerticalAlignment(TOP);\n     //setFont(GUIGlobals.fieldNameFont);\n     setForeground(GUIGlobals.entryEditorLabelColor);\n-      setBorder(BorderFactory.createMatteBorder(1,0,0,0, Color.GRAY));\n+    //  setBorder(BorderFactory.createMatteBorder(1,0,0,0, Color.GRAY));\n     //setBorder(BorderFactory.createEtchedBorder());\n+    setBorder(BorderFactory.createEmptyBorder());\n   }\n \n   public void paintComponent(Graphics g) {, @@ -78,7 +78,7 @@\n \tpublic static final int\n \tSPLIT_PANE_DIVIDER_SIZE = 4,\n \tSPLIT_PANE_DIVIDER_LOCATION = 145 + 15, // + 15 for possible scrollbar.\n-\tTABLE_ROW_PADDING = 4,\n+\tTABLE_ROW_PADDING = 8,\n \tKEYBIND_COL_0 = 200,\n \tKEYBIND_COL_1 = 80, // Added to the font size when determining table\n \tMAX_CONTENT_SELECTOR_WIDTH = 240; // The max width of the combobox for content selectors., @@ -1797,7 +1797,7 @@ public void addTab(BasePanel bp, File file, boolean raisePanel) {\n         } else {\n             title = file.getName();\n         }\n-        tabbedPane.add(title, bp);\n+        tabbedPane.add(\"<html><div style='padding:2px 5px;'>\" + title + \"</div></html>\", bp);\n         tabbedPane.setToolTipTextAt(tabbedPane.getTabCount()-1,\n                 file != null ? file.getAbsolutePath() : null);\n         if (raisePanel) {, @@ -398,6 +398,7 @@ private JabRefPreferences() {\n         defaults.put(\"menuFontStyle\", java.awt.Font.PLAIN);\n         defaults.put(\"menuFontSize\", 11);\n         defaults.put(\"tableRowPadding\", GUIGlobals.TABLE_ROW_PADDING);\n+        defaults.put(\"tableShowGrid\", Boolean.FALSE);\n         // Main table color settings:\n         defaults.put(\"tableBackground\", \"255:255:255\");\n         defaults.put(\"tableReqFieldBackground\", \"230:235:255\");, @@ -21,6 +21,7 @@\n import java.awt.event.ActionListener;\n import java.net.URL;\n \n+import javax.swing.BorderFactory;\n import javax.swing.ImageIcon;\n import javax.swing.JButton;\n import javax.swing.JToolBar;\n@@ -50,7 +51,7 @@ public SidePaneComponent(SidePaneManager manager, URL icon, String title) {\n \t\tclose.addActionListener(new CloseButtonListener());\n \t\tsetToolBar(tlb);\n \t\t// setBorder(BorderFactory.createEtchedBorder());\n-\n+\t\tsetBorder(BorderFactory.createEmptyBorder());\n \t\t// setBorder(BorderFactory.createMatteBorder(1,1,1,1,java.awt.Color.green));\n \t\t// setPreferredSize(new java.awt.Dimension\n \t\t// (GUIGlobals.SPLIT_PANE_DIVIDER_LOCATION, 200));, @@ -16,6 +16,7 @@\n package net.sf.jabref.gui;\n \n import java.awt.Color;\n+import java.awt.Dimension;\n import java.awt.Rectangle;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n@@ -25,6 +26,7 @@\n \n import javax.swing.*;\n import javax.swing.plaf.TableUI;\n+import javax.swing.table.DefaultTableCellRenderer;\n import javax.swing.table.TableCellRenderer;\n import javax.swing.table.TableColumnModel;\n \n@@ -84,6 +86,7 @@ public MainTable(MainTableFormat tableFormat, EventList<BibtexEntry> list, JabRe\n \n         addFocusListener(Globals.focusListener);\n         setAutoResizeMode(Globals.prefs.getInt(\"autoResizeMode\"));\n+      \n         this.tableFormat = tableFormat;\n         this.panel = panel;\n         // This SortedList has a Comparator controlled by the TableComparatorChooser\n@@ -109,8 +112,16 @@ public MainTable(MainTableFormat tableFormat, EventList<BibtexEntry> list, JabRe\n         selectionModel = new EventSelectionModel<BibtexEntry>(sortedForGrouping);\n         setSelectionModel(selectionModel);\n         pane = new JScrollPane(this);\n+        pane.setBorder(BorderFactory.createEmptyBorder());\n         pane.getViewport().setBackground(Globals.prefs.getColor(\"tableBackground\"));\n         setGridColor(Globals.prefs.getColor(\"gridColor\"));\n+        if(Globals.prefs.getBoolean(\"tableShowGrid\"))\n+        \tsetShowGrid(true);\n+        else\n+        {\n+\t        setShowGrid(false);\n+\t        setIntercellSpacing(new Dimension(0, 0));\n+        }\n \n         this.setTableHeader(new PreventDraggingJTableHeader(this.getColumnModel()));\n \n@@ -217,7 +228,7 @@ public JScrollPane getPane() {\n     public TableCellRenderer getCellRenderer(int row, int column) {\n         \n         int score = -3;\n-        TableCellRenderer renderer = defRenderer;\n+        DefaultTableCellRenderer renderer = defRenderer;\n \n         int status = getCellStatus(row, column);\n \n@@ -256,14 +267,15 @@ else if (column == 0) {\n                 } else\n                     renderer = compRenderer;\n             }\n+            renderer.setHorizontalAlignment( JLabel.CENTER );\n         }\n         else if (tableColorCodes) {\n             if (status == REQUIRED)\n                 renderer = reqRenderer;\n             else if (status == OPTIONAL)\n                 renderer = optRenderer;\n             else if (status == BOOLEAN)\n-                renderer = getDefaultRenderer(Boolean.class);\n+                renderer = (DefaultTableCellRenderer) getDefaultRenderer(Boolean.class);\n         }\n \n         // For MARKED feature:, ", 38, 9, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 47], ["Adam Rehn", "Fixed a Java 7 compatibility issue in the side pane reordering code.\n\nThe previous implementation used Map.getOrDefault(), which is introduced in Java 8.", "05/18/15, 11:09:50 AM", "Adam Rehn", "9e9e7216600e6dcb7172783fc7392e3732693600", ["src/main/java/net/sf/jabref/SidePaneManager.java"], "@@ -205,10 +205,12 @@ public PreferredIndexSort() {\n \t\tpublic int compare(SidePaneComponent comp1, SidePaneComponent comp2) {\n \t\t\tString comp1Name = getComponentName(comp1);\n \t\t\tString comp2Name = getComponentName(comp2);\n-\t\t\treturn Integer.compare(\n-\t\t\t\t\tpreferredPositions.getOrDefault(comp1Name, 0),\n-\t\t\t\t\tpreferredPositions.getOrDefault(comp2Name, 0)\n-\t\t\t);\n+\t\t\t\n+\t\t\t// Manually provide default values, since getOrDefault() doesn't exist prior to Java 8\n+\t\t\tint pos1 = (preferredPositions.containsKey(comp1Name) ? preferredPositions.get(comp1Name) : 0);\n+\t\t\tint pos2 = (preferredPositions.containsKey(comp2Name) ? preferredPositions.get(comp2Name) : 0);\n+\t\t\t\n+\t\t\treturn Integer.compare(pos1, pos2);\n \t\t}\n \t}\n \t, ", 6, 4, "\"modified, \"", 10], ["Adam Rehn", "Update the plain BibTeX export code to use an enum instead of a boolean.\n\nInstead of a boolean that determines whether or not plain BibTeX is exported, an enum is now used that differentiates between the default and plain export options.\n\nThe use of an enum provides flexibility that facilitates the addition of further format customisation options in the future.", "05/19/15, 11:53:20 AM", "Adam Rehn", "d2ac141c36501f2c81361b14c05f69fa7c414f52", ["src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/export/FileActions.java", "src/main/java/net/sf/jabref/export/SaveDatabaseAction.java"], "@@ -70,6 +70,7 @@\n import net.sf.jabref.export.SaveDatabaseAction;\n import net.sf.jabref.export.SaveException;\n import net.sf.jabref.export.SaveSession;\n+import net.sf.jabref.export.FileActions.DatabaseSaveType;\n import net.sf.jabref.export.layout.Layout;\n import net.sf.jabref.export.layout.LayoutHelper;\n import net.sf.jabref.external.AttachFileAction;\n@@ -411,9 +412,9 @@ public void action() throws Throwable {\n             }\n         });\n \n-        actions.put(\"saveSelectedAs\", new SaveSelectedAction(false));\n+        actions.put(\"saveSelectedAs\", new SaveSelectedAction(FileActions.DatabaseSaveType.DEFAULT));\n         \n-        actions.put(\"saveSelectedAsPlain\", new SaveSelectedAction(true));\n+        actions.put(\"saveSelectedAsPlain\", new SaveSelectedAction(FileActions.DatabaseSaveType.PLAIN_BIBTEX));\n         \n         // The action for copying selected entries.\n         actions.put(\"copy\", new BaseAction() {\n@@ -1696,7 +1697,7 @@ public void runCommand(String _command) {\n       //}).start();\n     }\n \n-    private boolean saveDatabase(File file, boolean selectedOnly, String encoding, boolean savePlainBibtex) throws SaveException {\n+    private boolean saveDatabase(File file, boolean selectedOnly, String encoding, FileActions.DatabaseSaveType saveType) throws SaveException {\n         SaveSession session;\n         frame.block();\n         try {\n@@ -1705,7 +1706,7 @@ private boolean saveDatabase(File file, boolean selectedOnly, String encoding, b\n                                            Globals.prefs, false, false, encoding, false);\n             else\n                 session = FileActions.savePartOfDatabase(database, metaData, file,\n-                                               Globals.prefs, mainTable.getSelectedEntries(), encoding, savePlainBibtex);\n+                                               Globals.prefs, mainTable.getSelectedEntries(), encoding, saveType);\n \n         } catch (UnsupportedCharsetException ex2) {\n             JOptionPane.showMessageDialog(frame, Globals.lang(\"Could not save file. \"\n@@ -1755,7 +1756,7 @@ private boolean saveDatabase(File file, boolean selectedOnly, String encoding, b\n                         JOptionPane.QUESTION_MESSAGE, null, Globals.ENCODINGS, encoding);\n                 if (choice != null) {\n                     String newEncoding = (String)choice;\n-                    return saveDatabase(file, selectedOnly, newEncoding, savePlainBibtex);\n+                    return saveDatabase(file, selectedOnly, newEncoding, saveType);\n                 } else\n                     commit = false;\n             } else if (answer == JOptionPane.CANCEL_OPTION)\n@@ -3078,10 +3079,10 @@ public void setBackAndForwardEnabledState() {\n \n     private class SaveSelectedAction extends BaseAction {\n     \t\n-    \tprivate boolean savePlainBibtex;\n+    \tprivate DatabaseSaveType saveType;\n     \t\n-    \tpublic SaveSelectedAction(boolean savePlainBibtex) {\n-    \t\tthis.savePlainBibtex = savePlainBibtex;\n+    \tpublic SaveSelectedAction(DatabaseSaveType saveType) {\n+    \t\tthis.saveType = saveType;\n     \t}\n     \t\n         public void action() throws Throwable {\n@@ -3097,7 +3098,7 @@ public void action() throws Throwable {\n                     Globals.lang(\"Save database\"), JOptionPane.OK_CANCEL_OPTION)\n                    == JOptionPane.OK_OPTION)) {\n \n-                saveDatabase(expFile, true, Globals.prefs.get(\"defaultEncoding\"), savePlainBibtex);\n+                saveDatabase(expFile, true, Globals.prefs.get(\"defaultEncoding\"), saveType);\n                 //runCommand(\"save\");\n                 frame.getFileHistory().newFile(expFile.getPath());\n                 frame.output(Globals.lang(\"Saved selected to\")+\" '\", @@ -55,7 +55,11 @@\n import ca.odell.glazedlists.SortedList;\n \n public class FileActions {\n-\n+\t\n+\tpublic enum DatabaseSaveType {\n+\t\tDEFAULT, PLAIN_BIBTEX\n+\t}\n+\t\n     private static Pattern refPat = Pattern.compile(\"(#[A-Za-z]+#)\"); // Used to detect string references in strings\n     private static BibtexString.Type previousStringType;\n \n@@ -357,7 +361,7 @@ public SaveSettings(boolean isSaveOperation, MetaData metaData) {\n      * @return A List containing warnings, if any.\n      */\n     public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData metaData,\n-            File file, JabRefPreferences prefs, BibtexEntry[] bes, String encoding, boolean writePlainBibtex) throws SaveException {\n+            File file, JabRefPreferences prefs, BibtexEntry[] bes, String encoding, DatabaseSaveType saveType) throws SaveException {\n \n         TreeMap<String, BibtexEntryType> types = new TreeMap<String, BibtexEntryType>(); // Map\n         // to\n@@ -382,7 +386,7 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n             // Define our data stream.\n             VerifyingWriter fw = session.getWriter();\n \n-            if (!writePlainBibtex) {\n+            if (saveType != DatabaseSaveType.PLAIN_BIBTEX) {\n             \t// Write signature.\n             \twriteBibFileHeader(fw, encoding);\n             }\n@@ -425,7 +429,7 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n             }\n \n             // Write meta data.\n-            if (!writePlainBibtex && metaData != null) {\n+            if (saveType != DatabaseSaveType.PLAIN_BIBTEX && metaData != null) {\n                 metaData.writeMetaData(fw);\n             }\n , @@ -218,7 +218,7 @@ private boolean saveDatabase(File file, boolean selectedOnly, String encoding) t\n                         Globals.prefs, false, false, encoding, false);\n             else\n                 session = FileActions.savePartOfDatabase(panel.database(), panel.metaData(), file,\n-                        Globals.prefs, panel.getSelectedEntries(), encoding, false);\n+                        Globals.prefs, panel.getSelectedEntries(), encoding, FileActions.DatabaseSaveType.DEFAULT);\n \n         } catch (UnsupportedCharsetException ex2) {\n             JOptionPane.showMessageDialog(frame, Globals.lang(\"Could not save file. \", ", 19, 14, "\"modified, modified, modified, \"", 33], ["Adam Rehn", "Minor UI Fix: Add \"Save selected as plain BibTeX...\" to the list of open database-only actions.\n\nThe \"Save selected as plain BibTeX...\" menu option is now correctly enabled and disabled based on whether or not a database is currently open.", "05/20/15, 05:11:58 AM", "Adam Rehn", "586b695ebf704b4c062f53b295e9ec849f8c8e8d", ["src/main/java/net/sf/jabref/JabRefFrame.java"], "@@ -1686,7 +1686,7 @@ public void stopShowingSearchResults() {\n     protected void initActions() {\n         openDatabaseOnlyActions = new LinkedList<Object>();\n         openDatabaseOnlyActions.addAll(Arrays.asList(manageSelectors,\n-                mergeDatabaseAction, newSubDatabaseAction, close, save, saveAs, saveSelectedAs, undo,\n+                mergeDatabaseAction, newSubDatabaseAction, close, save, saveAs, saveSelectedAs, saveSelectedAsPlain, undo,\n                 redo, cut, delete, copy, paste, mark, unmark, unmarkAll, editEntry,\n                 selectAll, copyKey, copyCiteKey, copyKeyAndTitle, editPreamble, editStrings, toggleGroups, toggleSearch,\n                 makeKeyAction, normalSearch,, ", 1, 1, "\"modified, \"", 2], ["Ward Poelmans", "Trim journal names before looking up the Abbreviation\n\nSome journals put trailing space in the journal names when\nexporting a bibtex citation. This causes the abbreviation\nto fail. This should fix that.", "05/20/15, 08:56:24 AM", "Ward Poelmans", "56f35901bf262d9a1a4dedc2face3b4c0b6b82ca", ["src/main/java/net/sf/jabref/journals/JournalAbbreviations.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -91,7 +91,7 @@ public String dotsToNodots(String name) {\n      * @return The abbreviated name, or null if it couldn't be found.\n      */\n     public String getAbbreviatedName(String journalName, boolean withDots) {\n-        String s = journalName.toLowerCase();\n+        String s = journalName.toLowerCase().trim();\n         String abbr;\n         if (fullNameKeyed.containsKey(s)) {\n             abbr = fullNameKeyed.get(s);, ", 2, 2, "\"modified, \"", 4], ["Ward Poelmans", "update journal list", "05/20/15, 09:18:13 AM", "Ward Poelmans", "b01d00dfb78db358290b45ddb00c66837fc59b78", ["src/main/resources/resource/journalList.txt"], "None, ", 5301, 100, "\"modified, \"", 5401], ["Ward Poelmans", "Clean up journallist\n\nSome journal names has weird suffix. Probably left over\nfrom the HTML from which they were fetched.", "05/24/15, 03:16:46 PM", "Ward Poelmans", "a1158d814034241e670ee31ef2bca2f9fefb8dd0", ["src/main/resources/resource/journalList.txt"], "None, ", 1063, 1063, "\"modified, \"", 2126], ["Tobias", "Add some predefined look and feels in preference window (some of them are documented here https://sourceforge.net/p/jabref/mailman/message/32703401/, but are not working by default on windows)", "05/26/15, 08:31:26 PM", "Tobias", "17463147a4ce6b664a0dbb84477770ed61dbe128", ["CHANGELOG", "src/main/java/net/sf/jabref/AdvancedTab.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Add some predefined look and feels in preference window\n     - Fixes #1131: MacOSX: JabRef minimizes when clicking on x\n     - Dropped jayatana version 1.2.4 as version 2.x superseeds it\n     - Feature: Trim journal names before looking up the abbreviation, @@ -40,7 +40,8 @@\n     JLabel lab;\n     JCheckBox useDefault, useRemoteServer, useNativeFileDialogOnMac, filechooserDisableRename,\n             useIEEEAbrv, biblatexMode;\n-    JTextField className, remoteServerPort;\n+    JComboBox<String> className;\n+    JTextField remoteServerPort;\n     JButton def1 = new JButton(Globals.lang(\"Default\")),\n         def2 = new JButton(Globals.lang(\"Default\"));\n     JPanel p1 = new JPanel(),\n@@ -69,8 +70,17 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag) {\n     useIEEEAbrv = new JCheckBox(Globals.lang(\"Use IEEE LaTeX abbreviations\"));\n     biblatexMode = new JCheckBox(Globals.lang(\"BibLaTeX mode\"));\n     remoteServerPort = new JTextField();\n-    className = new JTextField(50);\n-    final JTextField clName = className;\n+    String[] lookAndFeels = {\n+    \t\"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\",\n+    \t\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\",\n+    \t\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\",\n+    \t\"javax.swing.plaf.mac.MacLookAndFeel\",\n+    \t\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\",\n+    \t\"javax.swing.plaf.metal.MetalLookAndFeel\"\n+    };\n+    className = new JComboBox<String>(lookAndFeels);\n+    className.setEditable(true);\n+    final JComboBox<String> clName = className;\n     useDefault.addChangeListener(new ChangeListener() {\n         public void stateChanged(ChangeEvent e) {\n             clName.setEnabled(((JCheckBox)e.getSource()).isSelected());\n@@ -173,7 +183,7 @@ public void setValues() {\n         oldUseDef = _prefs.getBoolean(\"useDefaultLookAndFeel\");\n         oldLnf = _prefs.get(\"lookAndFeel\");\n         useDefault.setSelected(!oldUseDef);\n-        className.setText(oldLnf);\n+        className.setSelectedItem(oldLnf);\n         className.setEnabled(!oldUseDef);\n         useRemoteServer.setSelected(_prefs.getBoolean(\"useRemoteServer\"));\n         oldPort = _prefs.getInt(\"remoteServerPort\");\n@@ -193,7 +203,7 @@ public void setValues() {\n \n     public void storeSettings() {\n         _prefs.putBoolean(\"useDefaultLookAndFeel\", !useDefault.isSelected());\n-        _prefs.put(\"lookAndFeel\", className.getText());\n+        _prefs.put(\"lookAndFeel\", className.getSelectedItem().toString());\n         _prefs.putBoolean(\"useNativeFileDialogOnMac\", useNativeFileDialogOnMac.isSelected());\n         _prefs.putBoolean(\"filechooserDisableRename\", filechooserDisableRename.isSelected());\n         UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n@@ -228,7 +238,7 @@ public void storeSettings() {\n         _prefs.putBoolean(\"biblatexMode\", biblatexMode.isSelected());\n \n         if ((useDefault.isSelected() == oldUseDef) ||\n-            !oldLnf.equals(className.getText())) {\n+            !oldLnf.equals(className.getSelectedItem().toString())) {\n             JOptionPane.showMessageDialog(null, \n             \t\tGlobals.lang(\"You have changed the look and feel setting.\")\n             \t\t.concat(\" \"), ", 17, 6, "\"modified, modified, \"", 23], ["Tobias", "Fix for Bug #1278 Crash after changing LookAndFeel.\nNow a proper error message is shown at start if the L&F is not available.\nMoreover, only available L&Fs are listed in the preference window.", "05/29/15, 08:12:05 PM", "Tobias", "6f23b7f8bf393826924f3755579dc546c044b091", ["CHANGELOG", "src/main/java/net/sf/jabref/AdvancedTab.java", "src/main/java/net/sf/jabref/JabRef.java"], "@@ -1,5 +1,6 @@\n [master]\n-    - Add some predefined look and feels in preference window\n+    - Fix for bug #1278 Crash after changing LookAndFeel (showing a proper error message if L&F is not available)\n+    - Adds some predefined look and feels in preference window (lists only available L&Fs)\n     - Fixes #1131: MacOSX: JabRef minimizes when clicking on x\n     - Dropped jayatana version 1.2.4 as version 2.x superseeds it\n     - Feature: Trim journal names before looking up the abbreviation, @@ -16,6 +16,8 @@\n package net.sf.jabref;\n \n import java.awt.BorderLayout;\n+import java.util.ArrayList;\n+import java.util.List;\n \n import javax.swing.*;\n import javax.swing.event.ChangeEvent;\n@@ -70,15 +72,24 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag) {\n     useIEEEAbrv = new JCheckBox(Globals.lang(\"Use IEEE LaTeX abbreviations\"));\n     biblatexMode = new JCheckBox(Globals.lang(\"BibLaTeX mode\"));\n     remoteServerPort = new JTextField();\n-    String[] lookAndFeels = {\n+    String[] possibleLookAndFeels = {\n     \t\"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\",\n     \t\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\",\n     \t\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\",\n     \t\"javax.swing.plaf.mac.MacLookAndFeel\",\n     \t\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\",\n     \t\"javax.swing.plaf.metal.MetalLookAndFeel\"\n     };\n-    className = new JComboBox<String>(lookAndFeels);\n+    // Only list L&F which are available\n+    List<String> lookAndFeels = new ArrayList<String>();\n+    for (String lf : possibleLookAndFeels) {\n+    \ttry {\n+    \t\t// Try to find L&F, throws exception if not successful\n+    \t\tClass.forName(lf);\n+    \t\tlookAndFeels.add(lf);\n+    \t} catch(ClassNotFoundException e) {}\n+    }\n+    className = new JComboBox<String>(lookAndFeels.toArray(new String[lookAndFeels.size()]));\n     className.setEditable(true);\n     final JComboBox<String> clName = className;\n     useDefault.addChangeListener(new ChangeListener() {, @@ -614,24 +614,36 @@ protected ParserResult fetch(String fetchCommand) {\n     \n     private void setLookAndFeel() {\n         try {\n-            String systemLnF;\n-            // * Look first into the Preferences\n-            // * Fallback to the System Look & Fell\n+            String lookFeel;\n+        \tString systemLnF = UIManager.getSystemLookAndFeelClassName();\n+            \n             if (Globals.prefs.getBoolean(\"useDefaultLookAndFeel\")) {\n-                systemLnF = UIManager.getSystemLookAndFeelClassName();\n+            \t// Use system Look & Feel by default\n+            \tlookFeel = systemLnF;\n             } else {\n-                systemLnF = Globals.prefs.get(\"lookAndFeel\");\n+            \tlookFeel = Globals.prefs.get(\"lookAndFeel\");\n             }\n \n             // At all cost, avoid ending up with the Metal look and feel:\n-            if (systemLnF.equals(\"javax.swing.plaf.metal.MetalLookAndFeel\")) {\n+            if (lookFeel.equals(\"javax.swing.plaf.metal.MetalLookAndFeel\")) {\n                 Plastic3DLookAndFeel lnf = new Plastic3DLookAndFeel();\n                 Plastic3DLookAndFeel.setCurrentTheme(new SkyBluer());\n                 com.jgoodies.looks.Options.setPopupDropShadowEnabled(true);\n                 UIManager.setLookAndFeel(lnf);\n             }\n             else {\n-                UIManager.setLookAndFeel(systemLnF);\n+            \ttry {\n+            \t\tUIManager.setLookAndFeel(lookFeel);\n+            \t} catch(ClassNotFoundException e) {\n+            \t\t// specified look and feel does not exist on the classpath, so use system l&f\n+            \t\tUIManager.setLookAndFeel(systemLnF);\n+            \t\t// also set system l&f as default\n+            \t\tGlobals.prefs.put(\"lookAndFeel\", systemLnF);\n+            \t\t// notify the user\n+            \t\tJOptionPane.showMessageDialog(jrf, Globals.lang(\"Unable to find the requested Look & Feel and thus the default one is used.\"),\n+                            Globals.lang(\"Warning\"),\n+                            JOptionPane.WARNING_MESSAGE);\n+            \t}\n             }\n         } catch (Exception e) {\n             e.printStackTrace();, ", 34, 10, "\"modified, modified, modified, \"", 44], ["Nicolas Pavillon", "Move registration of Apple events to fix document opening when application starts", "05/31/15, 04:14:09 AM", "Nicolas Pavillon", "d9f0c86f36d3e104d11ec602afdcd68709b1c89d", ["src/main/java/net/sf/jabref/JabRefFrame.java"], "@@ -449,8 +449,6 @@ public JabRefFrame() {\n   private void init() {\n \t    tabbedPane = new DragDropPopupPane(manageSelectors, databaseProperties, bibtexKeyPattern);\n \n-        macOSXRegistration();\n-\n         UIManager.put(\"FileChooser.readOnly\", Globals.prefs.getBoolean(\"filechooserDisableRename\"));\n \n         MyGlassPane glassPane = new MyGlassPane();\n@@ -580,6 +578,11 @@ public void stateChanged(ChangeEvent e) {\n                 }\n             }\n         });\n+        \n+        //Note: The registration of Apple event is at the end of initialization, because\n+        //if the events happen too early (ie when the window is not initialized yet), the\n+        //opened (double-clicked) documents are not displayed.\n+        macOSXRegistration();\n     }\n \n     public void setWindowTitle() {, ", 5, 2, "\"modified, \"", 7], ["The Gitter Badger", "Added Gitter badge", "06/15/15, 11:38:36 AM", "The Gitter Badger", "d2e5463976b26da8ddc6a973696fb906146b432a", ["README.md"], "@@ -1,5 +1,7 @@\n # JabRef 2.11 development version\n \n+[![Join the chat at https://gitter.im/JabRef/jabref](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/JabRef/jabref?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n+\n [![Build Status](https://api.travis-ci.org/JabRef/jabref.png?branch=master)](https://travis-ci.org/JabRef/jabref)\n \n This version is a development version. Features may not work as expected., ", 2, 0, "\"modified, \"", 2], ["nikmilpv", "Fixed typo that prevented ant builds", "06/20/15, 11:07:32 PM", "nikmilpv", "990e2ab837c66b6070848a40e2e3335d6aef27a0", ["build.gradle"], "@@ -97,7 +97,7 @@ dependencies {\n // use ant targets with prefix antTargets.XXXXX\n ant.importBuild \"build-wrapper.xml\"\n // add jars from this classpath to the classpath for the ant build\n-ant.references.jars.setFiles(configurations.compile.asPath.replace(\";\",\" \"))\n+ant.references.jars.setFiles(configurations.compile.asPath.replace(\":\",\" \"))\n \n sourceCompatibility = 1.6\n mainClassName = \"net.sf.jabref.JabRefMain\", ", 1, 1, "\"modified, \"", 2], ["Igor Steinmacher", "Updated missing pt_BR entries", "10/01/15, 03:48:53 PM", "Igor Steinmacher", "ef589a8cf1ad6fd842a5ab6465444bf226f46937", ["src/main/resources/l10n/JabRef_pt_BR.properties"], "@@ -1549,7 +1549,7 @@ Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=\n Use_custom_proxy_configuration=Usar_configura\\u00e7\\u00f5es_personalizadas_de_proxy\n Clear_connection_settings=Limpar_configura\\u00e7\\u00f5es_da_conex\\u00e3o\n Cleared_connection_settings.=Configura\\u00e7\\u00f5es_de_conex\\u00e3o_foram_limpas.\n-Rebind_C-a,_too=\n+Rebind_C-a,_too=Voltar_a_combinar_C_com_a_tamb\\u00e9m.\n \n Show_number_of_elements_contained_in_each_group=Mostrar_n\\u00famero_de_elementos_em_cada_grupo\n Open_folder=Abrir_pasta\n@@ -1621,13 +1621,14 @@ Unable_to_find_the_requested_Look_&_Feel_and_thus_the_default_one_is_used.=N\\u00\n \n Could_not_open_browser.=N\\u00e3o_foi_poss\\u00edvel_abrir_o_navegador.\n Opens_JabRef's_GitHub_page=Abrir_a_p\\u00e1gina_do_JabRef_no_GitHub\n-Please_open_http\\://github.com/JabRef/jabref_manually.=\n+Please_open_http\\://github.com/JabRef/jabref_manually.=Por_favor,_abra_http\\://github.com/JabRef/jabref_manualmente.\n \n-Rebind_C-f,_too=\n-Duplicate_Journal_Abbreviation_-_old_one_will_be_overwritten_by_new_one\\nOLD\\:_%0\\nNEW\\:_%1=\n-Found_%0_broken_links=\n-This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n+Rebind_C-f,_too=Voltar_a_combinar_C-f_tamb\\u00e9m.\n \n-Invalid_ISBN=\n+Duplicate_Journal_Abbreviation_-_old_one_will_be_overwritten_by_new_one\\nOLD\\:_%0\\nNEW\\:_%1=Abrevia\\u00e7\\u00e3o_de_Journal_duplicada_-_A_antiga_vai_ser_sobrescrita_pela_nova\n+Found_%0_broken_links=%0_links_quebrados_foram_encontradas\n+This_group_contains_all_entries._It_cannot_be_edited_or_removed.=Este_grupo_possui_todas_as_entradas._Ele_n\\u00e3o_pode_ser_editado_ou_removido.\n+\n+Invalid_ISBN=ISBN_invalido.\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=Abrir_arquivo_%0, ", 9, 8, "\"modified, \"", 17], ["Igor Steinmacher", "Updated missing entries (last 2)", "07/02/15, 05:46:27 PM", "Igor Steinmacher", "4ffdb4250cedf718ce96615d903b1c0590b12180", ["src/main/resources/resource/Menu_pt_BR.properties"], "@@ -128,6 +128,6 @@ Merge_entries=Unir_entradas\n Open_folder=Abrir_diret\\u00f3rio\n Find_unlinked_files...=Encontrar_arquivos_n\\u00e3o_referenciados\n \n-Hide/show_toolbar=\n+Hide/show_toolbar=Mostrar/esconder_barra_de_ferramentas\n \n-Fork_me_on_GitHub=\n+Fork_me_on_GitHub=Criar_um_fork_no_GitHub, ", 2, 2, "\"modified, \"", 4], ["Joerg Lenhard", "Add comment for DateFormat changes", "07/17/15, 12:00:51 PM", "Joerg Lenhard", "b5ef0c700b198b25e4944bb02767ce9d4c2aa904", ["src/main/java/net/sf/jabref/net/Cookie.java"], "@@ -28,8 +28,11 @@\n     private Date expires;\n     private String path;\n \n+    /**\n+     * DateFormats should not be reused among instances (or rather among threads), because they are not thread-safe.\n+     * If they are shared, their usage should be synchronized.\n+     */\n     private final DateFormat expiresFormat1 = new SimpleDateFormat(\"E, dd MMM yyyy k:m:s 'GMT'\", Locale.US);\n-\n     private final DateFormat expiresFormat2 = new SimpleDateFormat(\"E, dd-MMM-yyyy k:m:s 'GMT'\", Locale.US);\n \n , ", 4, 1, "\"modified, \"", 5], ["Joerg Lenhard", "Update library documentation", "07/21/15, 09:56:42 AM", "Joerg Lenhard", "2cbf542654db3384e2c263686d186e9433f973fa", ["used-libaries.txt"], "@@ -64,7 +64,7 @@ Note:    This should fetch org.jvnet.mimepull:mimepull; maybe that version is br\n Id:      mysql:mysql-connector-java\n Project: MySQL Connector/J\n URL:     http://www.mysql.de/downloads/connector/j/\n-License: GPLv2! and Oracle\ufffds FOSS License Exception (http://www.mysql.com/about/legal/licensing/foss-exception/) allowing GPLv3\n+License: GPLv2! and Oracle\ufffds FOSS License Exception (http://www.mysql.com/about/legal/licensing/foss-exception/) allowing GPLv3\n \n Id:      net.java.dev.glazedlists:glazedlists_java15\n Project: Glazed Lists\n@@ -111,18 +111,16 @@ Project: OpenOffice.org\n URL:     http://www.openoffice.org/api/SDK\n License: LGPL 3.0\n \n+Id:      org.swinglabs:swingx\n+Project: SwingX\n+URL:     https://swingx.java.net/\n+License: LGPL 3.0\n+\n Path:    org.postgresql:postgresql\n Project: PostgreSQL JDBC Driver\n URL:     http://jdbc.postgresql.org/download.html\n License: BSD\n \n-\n-\n-Path:    lib/jgoodies/com.jgoodies.uif_lite-2.1.4.jar\n-Project: com.jgoodies.uif_lite\n-URL:     https://github.com/JabRef/com.jgoodies.uif_lite\n-License: BSD\n-\n Path:    lib/microba.jar\n Project: Microba\n URL:     https://github.com/tdbear/microba, ", 6, 8, "\"modified, \"", 14], ["Joerg Lenhard", "Document changes", "07/21/15, 12:58:51 PM", "Joerg Lenhard", "0957ffd0ad11fb9f2b7df08374938eca385ebac6", ["CHANGELOG"], "@@ -1,4 +1,5 @@\n [master]\n+    - Refactored preferences\n     - Remove local jgoodies dependency: replace SimpleInteralFrame with swingx JXTitledPanel and UIFSplitPane by JSplitPane\n     - Fix several FindBugs warnings\n     - Fix for bug #1276: OO styles do not consider editor fields anymore for sorting, ", 1, 0, "\"modified, \"", 1], ["Joerg Lenhard", "Document changes", "07/21/15, 02:07:15 PM", "Joerg Lenhard", "cce4784f423a564cd54effc52b93de0a4bcde1de", ["CHANGELOG"], "@@ -1,4 +1,5 @@\n [master]\n+    - Update dependencies: jersey, commons.logging, pdfbox, jgoodies, lazedlists, JDBC connectors\n     - Refactored preferences\n     - Remove local jgoodies dependency: replace SimpleInteralFrame with swingx JXTitledPanel and UIFSplitPane by JSplitPane\n     - Fix several FindBugs warnings, ", 1, 0, "\"modified, \"", 1], ["Joerg Lenhard", "Replace occurrences of remaining default preferences 221 - 253", "07/22/15, 02:41:35 PM", "Joerg Lenhard", "8ac00be7468db13a93fb4781f669a7484a45ab30", ["src/main/java/net/sf/jabref/AdvancedTab.java", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/BibtexEntryType.java", "src/main/java/net/sf/jabref/BibtexEntryWriter.java", "src/main/java/net/sf/jabref/BibtexFields.java", "src/main/java/net/sf/jabref/EntryEditor.java", "src/main/java/net/sf/jabref/ExternalTab.java", "src/main/java/net/sf/jabref/FileTab.java", "src/main/java/net/sf/jabref/Globals.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/MetaData.java", "src/main/java/net/sf/jabref/TabLabelPattern.java", "src/main/java/net/sf/jabref/TablePrefsTab.java", "src/main/java/net/sf/jabref/export/AutoSaveManager.java", "src/main/java/net/sf/jabref/export/SaveSession.java", "src/main/java/net/sf/jabref/gui/EntryCustomizationDialog2.java", "src/main/java/net/sf/jabref/gui/FileListEntryEditor.java", "src/main/java/net/sf/jabref/imports/ACMPortalFetcher.java", "src/main/java/net/sf/jabref/imports/AutosaveStartupPrompter.java", "src/main/java/net/sf/jabref/imports/DOItoBibTeXFetcher.java", "src/main/java/net/sf/jabref/imports/DiVAtoBibTeXFetcher.java", "src/main/java/net/sf/jabref/imports/GeneralFetcher.java", "src/main/java/net/sf/jabref/imports/HTMLConverter.java", "src/main/java/net/sf/jabref/imports/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/imports/OpenDatabaseAction.java", "src/main/java/net/sf/jabref/imports/fetcher/ISBNtoBibTeXFetcher.java", "src/main/java/net/sf/jabref/labelPattern/LabelPatternUtil.java", "src/main/java/net/sf/jabref/plugin/PluginInstaller.java", "src/main/java/net/sf/jabref/sql/DBStrings.java", "src/main/java/net/sf/jabref/util/Util.java"], "@@ -218,12 +218,12 @@ public void setValues() {\n         remoteServerPort.setText(String.valueOf(oldPort));\n         useNativeFileDialogOnMac.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC));\n         filechooserDisableRename.setSelected(Globals.prefs.getBoolean(JabRefPreferences.FILECHOOSER_DISABLE_RENAME));\n-        useIEEEAbrv.setSelected(Globals.prefs.getBoolean(\"useIEEEAbrv\"));\n-        oldBiblMode = Globals.prefs.getBoolean(\"biblatexMode\");\n+        useIEEEAbrv.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV));\n+        oldBiblMode = Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE);\n         biblatexMode.setSelected(oldBiblMode);\n-        useConvertToEquation.setSelected(Globals.prefs.getBoolean(\"useConvertToEquation\"));\n-        useCaseKeeperOnSearch.setSelected(Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\"));\n-        useUnitFormatterOnSearch.setSelected(Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\"));\n+        useConvertToEquation.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION));\n+        useCaseKeeperOnSearch.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH));\n+        useUnitFormatterOnSearch.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH));\n     }\n \n     @Override\n@@ -233,14 +233,14 @@ public void storeSettings() {\n         preferences.putBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC, useNativeFileDialogOnMac.isSelected());\n         preferences.putBoolean(JabRefPreferences.FILECHOOSER_DISABLE_RENAME, filechooserDisableRename.isSelected());\n         UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n-        preferences.putBoolean(\"useIEEEAbrv\", useIEEEAbrv.isSelected());\n+        preferences.putBoolean(JabRefPreferences.USE_IEEE_ABRV, useIEEEAbrv.isSelected());\n         if (useIEEEAbrv.isSelected()) {\n             Globals.journalAbbrev = new JournalAbbreviationRepository();\n             Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_IEEE_INTERNAL_LIST);\n         }\n         storeRemoteSettings();\n \n-        preferences.putBoolean(\"biblatexMode\", biblatexMode.isSelected());\n+        preferences.putBoolean(JabRefPreferences.BIBLATEX_MODE, biblatexMode.isSelected());\n \n         if ((useDefault.isSelected() == oldUseDef) ||\n                 !oldLnf.equals(className.getSelectedItem().toString())) {\n@@ -260,9 +260,9 @@ public void storeSettings() {\n                     Globals.lang(\"BibLaTeX mode\"), JOptionPane.WARNING_MESSAGE);\n         }\n \n-        preferences.putBoolean(\"useConvertToEquation\", useConvertToEquation.isSelected());\n-        preferences.putBoolean(\"useCaseKeeperOnSearch\", useCaseKeeperOnSearch.isSelected());\n-        preferences.putBoolean(\"useUnitFormatterOnSearch\", useUnitFormatterOnSearch.isSelected());\n+        preferences.putBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION, useConvertToEquation.isSelected());\n+        preferences.putBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH, useCaseKeeperOnSearch.isSelected());\n+        preferences.putBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH, useUnitFormatterOnSearch.isSelected());\n     }\n \n     public void storeRemoteSettings() {, @@ -1190,7 +1190,7 @@ public void run() {\n                             if (link != null) {\n                                 filepath = link.toString();\n                             } else {\n-                                if (Globals.prefs.getBoolean(\"runAutomaticFileSearch\")) {\n+                                if (Globals.prefs.getBoolean(JabRefPreferences.RUN_AUTOMATIC_FILE_SEARCH)) {\n \n                                     /*  The search can lead to an unexpected 100% CPU usage which is perceived\n                                         as a bug, if the search incidentally starts at a directory with lots, @@ -1048,7 +1048,7 @@ public boolean isVisibleAtNewEntryDialog() {\n     private static final TreeMap<String, BibtexEntryType> STANDARD_TYPES;\n     static {\n         // Put the standard entry types into the type map.\n-        if (!Globals.prefs.getBoolean(\"biblatexMode\")) {\n+        if (!Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n             BibtexEntryType.ALL_TYPES.put(\"article\", BibtexEntryType.ARTICLE);\n             BibtexEntryType.ALL_TYPES.put(\"inbook\", BibtexEntryType.INBOOK);\n             BibtexEntryType.ALL_TYPES.put(\"book\", BibtexEntryType.BOOK);, @@ -54,7 +54,7 @@\n     private final boolean write;\n     private final boolean writeFieldCameCaseName = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_CAMELCASENAME);\n     private final boolean writeFieldAddSpaces = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_ADDSPACES);\n-    private final boolean includeEmptyFields = Globals.prefs.getBoolean(\"includeEmptyFields\");\n+    private final boolean includeEmptyFields = Globals.prefs.getBoolean(JabRefPreferences.INCLUDE_EMPTY_FIELDS);\n     private final int writeFieldSortStype = Globals.prefs.getInt(JabRefPreferences.WRITEFIELD_SORTSTYLE);\n \n , @@ -266,7 +266,7 @@ private BibtexFields()\n      * add a field descriptor for the new field.\n      */\n     public static void setNumericFieldsFromPrefs() {\n-        String[] numFields = Globals.prefs.getStringArray(\"numericFields\");\n+        String[] numFields = Globals.prefs.getStringArray(JabRefPreferences.NUMERIC_FIELDS);\n         if (numFields == null) {\n             return;\n         }, @@ -228,7 +228,7 @@ private void setupFieldPanels() {\n \n         if ((entry.getOptionalFields() != null) && (entry.getOptionalFields().length >= 1)) {\n             EntryEditorTab optPan;\n-            if (!prefs.getBoolean(\"biblatexMode\")) {\n+            if (!prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n                 optPan = new EntryEditorTab(frame, panel, java.util.Arrays.asList(entry.getOptionalFields()), this,\n                         false, false, Globals.lang(\"Optional fields\"));\n                 if (optPan.fileListEditor != null) {, @@ -235,12 +235,12 @@ public void setValues() {\n         pdfDir.setText(_prefs.get(\"pdfDirectory\"));\n         psDir.setText(_prefs.get(\"psDirectory\"));\n         fileDir.setText(_prefs.get(GUIGlobals.FILE_FIELD + \"Directory\"));\n-        bibLocationAsFileDir.setSelected(_prefs.getBoolean(\"bibLocationAsFileDir\"));\n-        bibLocAsPrimaryDir.setSelected(_prefs.getBoolean(\"bibLocAsPrimaryDir\"));\n+        bibLocationAsFileDir.setSelected(_prefs.getBoolean(JabRefPreferences.BIB_LOCATION_AS_FILE_DIR));\n+        bibLocAsPrimaryDir.setSelected(_prefs.getBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR));\n         bibLocAsPrimaryDir.setEnabled(bibLocationAsFileDir.isSelected());\n-        runAutoFileSearch.setSelected(_prefs.getBoolean(\"runAutomaticFileSearch\"));\n+        runAutoFileSearch.setSelected(_prefs.getBoolean(JabRefPreferences.RUN_AUTOMATIC_FILE_SEARCH));\n         regExpTextField.setText(_prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY));\n-        allowFileAutoOpenBrowse.setSelected(_prefs.getBoolean(\"allowFileAutoOpenBrowse\"));\n+        allowFileAutoOpenBrowse.setSelected(_prefs.getBoolean(JabRefPreferences.ALLOW_FILE_AUTO_OPEN_BROWSE));\n \n         emailSubject.setText(_prefs.get(JabRefPreferences.EMAIL_SUBJECT));\n         openFoldersOfAttachedFiles.setSelected(_prefs.getBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES));\n@@ -266,11 +266,11 @@ public void storeSettings() {\n         _prefs.put(\"pdfDirectory\", pdfDir.getText());\n         _prefs.put(\"psDirectory\", psDir.getText());\n         _prefs.put(GUIGlobals.FILE_FIELD + \"Directory\", fileDir.getText());\n-        _prefs.putBoolean(\"bibLocationAsFileDir\", bibLocationAsFileDir.isSelected());\n-        _prefs.putBoolean(\"bibLocAsPrimaryDir\", bibLocAsPrimaryDir.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.BIB_LOCATION_AS_FILE_DIR, bibLocationAsFileDir.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR, bibLocAsPrimaryDir.isSelected());\n         _prefs.putBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY, matchExactKeyOnly.isSelected());\n-        _prefs.putBoolean(\"runAutomaticFileSearch\", runAutoFileSearch.isSelected());\n-        _prefs.putBoolean(\"allowFileAutoOpenBrowse\", allowFileAutoOpenBrowse.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.RUN_AUTOMATIC_FILE_SEARCH, runAutoFileSearch.isSelected());\n+        _prefs.putBoolean(JabRefPreferences.ALLOW_FILE_AUTO_OPEN_BROWSE, allowFileAutoOpenBrowse.isSelected());\n         _prefs.put(JabRefPreferences.EMAIL_SUBJECT, emailSubject.getText());\n         _prefs.putBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES, openFoldersOfAttachedFiles.isSelected());\n     }, @@ -85,7 +85,7 @@ public FileTab(JabRefFrame frame, JabRefPreferences prefs) {\n                 GUIGlobals.getIconUrl(\"helpSmall\"));\n         openLast = new JCheckBox(Globals.lang(\"Open last edited databases at startup\"));\n         backup = new JCheckBox(Globals.lang(\"Backup old file when saving\"));\n-        autoSave = new JCheckBox(Globals.lang(\"Autosave\"));\n+        autoSave = new JCheckBox(Globals.lang(JabRefPreferences.AUTO_SAVE));\n         promptBeforeUsingAutoSave = new JCheckBox(Globals.lang(\"Prompt before recovering a database from an autosave file\"));\n         autoSaveInterval = new JSpinner(new SpinnerNumberModel(1, 1, 60, 1));\n         valueDelimiter = new JComboBox(new String[] {\n@@ -300,12 +300,12 @@ public void setValues() {\n         bracesAroundCapitalsFields.setText(_prefs.get(JabRefPreferences.PUT_BRACES_AROUND_CAPITALS));\n         nonWrappableFields.setText(_prefs.get(JabRefPreferences.NON_WRAPPABLE_FIELDS));\n \n-        autoSave.setSelected(_prefs.getBoolean(\"autoSave\"));\n-        promptBeforeUsingAutoSave.setSelected(_prefs.getBoolean(\"promptBeforeUsingAutosave\"));\n-        autoSaveInterval.setValue(_prefs.getInt(\"autoSaveInterval\"));\n+        autoSave.setSelected(_prefs.getBoolean(JabRefPreferences.AUTO_SAVE));\n+        promptBeforeUsingAutoSave.setSelected(_prefs.getBoolean(JabRefPreferences.PROMPT_BEFORE_USING_AUTOSAVE));\n+        autoSaveInterval.setValue(_prefs.getInt(JabRefPreferences.AUTO_SAVE_INTERVAL));\n         origAutoSaveSetting = autoSave.isSelected();\n-        valueDelimiter.setSelectedIndex(_prefs.getInt(\"valueDelimiters\"));\n-        includeEmptyFields.setSelected(_prefs.getBoolean(\"includeEmptyFields\"));\n+        valueDelimiter.setSelectedIndex(_prefs.getInt(JabRefPreferences.VALUE_DELIMITERS2));\n+        includeEmptyFields.setSelected(_prefs.getBoolean(JabRefPreferences.INCLUDE_EMPTY_FIELDS));\n         camelCase.setSelected(_prefs.getBoolean(JabRefPreferences.WRITEFIELD_CAMELCASENAME));\n         sameColumn.setSelected(_prefs.getBoolean(JabRefPreferences.WRITEFIELD_ADDSPACES));\n \n@@ -341,7 +341,7 @@ public void storeSettings() {\n         _prefs.putBoolean(JabRefPreferences.AUTO_SAVE, autoSave.isSelected());\n         _prefs.putBoolean(JabRefPreferences.PROMPT_BEFORE_USING_AUTOSAVE, promptBeforeUsingAutoSave.isSelected());\n         _prefs.putInt(JabRefPreferences.AUTO_SAVE_INTERVAL, (Integer) autoSaveInterval.getValue());\n-        _prefs.putInt(\"valueDelimiters\", valueDelimiter.getSelectedIndex());\n+        _prefs.putInt(JabRefPreferences.VALUE_DELIMITERS2, valueDelimiter.getSelectedIndex());\n         _prefs.putBoolean(JabRefPreferences.INCLUDE_EMPTY_FIELDS, includeEmptyFields.isSelected());\n         _prefs.putBoolean(JabRefPreferences.WRITEFIELD_CAMELCASENAME, camelCase.isSelected());\n         _prefs.putBoolean(JabRefPreferences.WRITEFIELD_ADDSPACES, sameColumn.isSelected());, @@ -1298,7 +1298,7 @@ public static void initializeJournalNames() {\n         // Read internal lists:\n         Globals.journalAbbrev = new JournalAbbreviationRepository();\n         Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-        if (Globals.prefs.getBoolean(\"useIEEEAbrv\")) {\n+        if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n             Globals.journalAbbrev.readJournalListFromResource(JOURNALS_IEEE_INTERNAL_LIST);\n         }\n , @@ -801,7 +801,7 @@ else if (!pr.isPostponedAutosaveFound()) {\n                 Globals.lang(\"Beta version\"), JOptionPane.WARNING_MESSAGE);*/\n \n         // Start auto save timer:\n-        if (Globals.prefs.getBoolean(\"autoSave\")) {\n+        if (Globals.prefs.getBoolean(JabRefPreferences.AUTO_SAVE)) {\n             Globals.startAutoSaveManager(JabRef.jrf);\n         }\n , @@ -1432,7 +1432,7 @@ private void fillMenu() {\n         search.addSeparator();\n         GeneralFetcher generalFetcher = new GeneralFetcher(sidePaneManager, this, fetchers);\n         search.add(generalFetcher.getAction());\n-        if (prefs.getBoolean(\"webSearchVisible\")) {\n+        if (prefs.getBoolean(JabRefPreferences.WEB_SEARCH_VISIBLE)) {\n             sidePaneManager.register(generalFetcher.getTitle(), generalFetcher);\n             sidePaneManager.show(generalFetcher.getTitle());\n         }, @@ -204,9 +204,9 @@ public void putData(String key, Vector<String> orderedData) {\n         }\n \n         // Check if the bib file location should be included, and if so, if it is set:\n-        if (Globals.prefs.getBoolean(\"bibLocationAsFileDir\") && (getFile() != null)) {\n+        if (Globals.prefs.getBoolean(JabRefPreferences.BIB_LOCATION_AS_FILE_DIR) && (getFile() != null)) {\n             // Check if we should add it as primary file dir (first in the list) or not:\n-            if (Globals.prefs.getBoolean(\"bibLocAsPrimaryDir\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR)) {\n                 dirs.add(0, getFile().getParent());\n             } else {\n                 dirs.add(getFile().getParent());, @@ -83,11 +83,11 @@ public void storeSettings() {\n         if (alwaysAddLetter.isSelected()) {\n             Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER, true);\n         } else if (letterStartA.isSelected()) {\n-            Globals.prefs.putBoolean(\"keyGenFirstLetterA\", true);\n+            Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A, true);\n             Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER, false);\n         }\n         else {\n-            Globals.prefs.putBoolean(\"keyGenFirstLetterA\", false);\n+            Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A, false);\n             Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER, false);\n         }\n , @@ -323,7 +323,7 @@ public void storeSettings() {\n         if (((newVal != null) && (oldVal == null))\n                 || ((newVal == null) && (oldVal != null))\n                 || ((newVal != null) && !newVal.equals(oldVal))) {\n-            _prefs.put(\"numericFields\", newVal);\n+            _prefs.put(JabRefPreferences.NUMERIC_FIELDS, newVal);\n             BibtexFields.setNumericFieldsFromPrefs();\n         }\n , @@ -18,6 +18,7 @@\n import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.BasePanel;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n \n import java.util.Timer;\n import java.util.TimerTask;\n@@ -47,7 +48,7 @@ public void startAutoSaveTimer() {\n \n         TimerTask task = new AutoSaveTask();\n         t = new Timer();\n-        long interval = 60000 * Globals.prefs.getInt(\"autoSaveInterval\");\n+        long interval = 60000 * Globals.prefs.getInt(JabRefPreferences.AUTO_SAVE_INTERVAL);\n         t.scheduleAtFixedRate(task, interval, interval);\n     }\n , @@ -15,6 +15,7 @@\n */\n package net.sf.jabref.export;\n \n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.util.FileBasedLock;\n import net.sf.jabref.util.FileUtil;\n import net.sf.jabref.Globals;\n@@ -62,7 +63,7 @@ public SaveSession(File file, String encoding, boolean backup) throws IOExceptio\n             UnsupportedCharsetException {\n         this.file = file;\n         tmp = File.createTempFile(SaveSession.TEMP_PREFIX, SaveSession.TEMP_SUFFIX);\n-        useLockFile = Globals.prefs.getBoolean(\"useLockFiles\");\n+        useLockFile = Globals.prefs.getBoolean(JabRefPreferences.USE_LOCK_FILES);\n         this.backup = backup;\n         this.encoding = encoding;\n         writer = new VerifyingWriter(new FileOutputStream(tmp), encoding);, @@ -71,7 +71,7 @@ private void initGui() {\n         Container pane = getContentPane();\n         pane.setLayout(new BorderLayout());\n \n-        biblatexMode = Globals.prefs.getBoolean(\"biblatexMode\");\n+        biblatexMode = Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE);\n \n         JPanel main = new JPanel(), buttons = new JPanel(), right = new JPanel();\n         main.setLayout(new BorderLayout());, @@ -278,7 +278,7 @@ public void setEntry(FileListEntry entry) {\n     }\n \n     public void setVisible(boolean visible, boolean openBrowse) {\n-        openBrowseWhenShown = openBrowse && Globals.prefs.getBoolean(\"allowFileAutoOpenBrowse\");\n+        openBrowseWhenShown = openBrowse && Globals.prefs.getBoolean(JabRefPreferences.ALLOW_FILE_AUTO_OPEN_BROWSE);\n         if (visible) {\n             okPressed = false;\n         }, @@ -15,19 +15,37 @@\n */\n package net.sf.jabref.imports;\n \n-import java.awt.*;\n-import java.io.*;\n+import java.awt.Dimension;\n+import java.awt.GridLayout;\n+import java.io.BufferedInputStream;\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n import java.net.ConnectException;\n import java.net.MalformedURLException;\n import java.net.URL;\n-import java.util.*;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import javax.swing.*;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JCheckBox;\n+import javax.swing.JLabel;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n \n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.OutputPrinter;\n import net.sf.jabref.gui.FetcherPreviewDialog;\n \n@@ -176,12 +194,12 @@ public void getEntries(Map<String, Boolean> selection, ImportInspector inspector\n                         title = convertHTMLChars(title);\n \n                         // Unit formatting\n-                        if (Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\")) {\n+                        if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {\n                             title = unitFormatter.format(title);\n                         }\n \n                         // Case keeping\n-                        if (Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\")) {\n+                        if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {\n                             title = caseKeeper.format(title);\n                         }\n                         entry.setField(\"title\", title);, @@ -54,7 +54,7 @@ public void run() {\n         for (File file : files) {\n             File fileToLoad = file;\n             boolean tryingAutosave;\n-            if (Globals.prefs.getBoolean(\"promptBeforeUsingAutosave\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.PROMPT_BEFORE_USING_AUTOSAVE)) {\n                 int answer = JOptionPane.showConfirmDialog(null, \"<html>\" +\n                         Globals.lang(\"An autosave file was found for this database. This could indicate \")\n                         + Globals.lang(\"that JabRef didn't shut down cleanly last time the file was used.\") + \"<br>\", @@ -14,19 +14,20 @@\n */\n package net.sf.jabref.imports;\n \n-import java.io.IOException;\n import java.io.FileNotFoundException;\n+import java.io.IOException;\n import java.io.UnsupportedEncodingException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLEncoder;\n-import javax.swing.JOptionPane;\n \n+import javax.swing.JOptionPane;\n import javax.swing.JPanel;\n \n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.OutputPrinter;\n import net.sf.jabref.util.Util;\n \n@@ -135,12 +136,12 @@ private BibtexEntry getEntryFromDOI(String doi, OutputPrinter status) {\n             if (title != null) {\n \n                 // Unit formatting\n-                if (Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {\n                     title = unitFormatter.format(title);\n                 }\n \n                 // Case keeping\n-                if (Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {\n                     title = caseKeeper.format(title);\n                 }\n                 entry.setField(\"title\", title);, @@ -14,19 +14,20 @@\n */\n package net.sf.jabref.imports;\n \n-import java.io.IOException;\n import java.io.FileNotFoundException;\n+import java.io.IOException;\n import java.io.UnsupportedEncodingException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLEncoder;\n-import javax.swing.JOptionPane;\n \n+import javax.swing.JOptionPane;\n import javax.swing.JPanel;\n \n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.OutputPrinter;\n import net.sf.jabref.util.Util;\n \n@@ -96,12 +97,12 @@ public boolean processQuery(String query, ImportInspector inspector, OutputPrint\n             String title = entry.getField(\"title\");\n             if (title != null) {\n                 // Unit formatting\n-                if (Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {\n                     title = unitFormatter.format(title);\n                 }\n \n                 // Case keeping\n-                if (Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {\n                     title = caseKeeper.format(title);\n                 }\n                 entry.setField(\"title\", title);, @@ -88,7 +88,7 @@ public GeneralFetcher(SidePaneManager p0, JabRefFrame frame, final List<EntryFet\n                 optionsPanel.add(new JPanel(), String.valueOf(i));*/\n         }\n         fetcherChoice = new JComboBox(choices);\n-        int defaultFetcher = Globals.prefs.getInt(\"selectedFetcherIndex\");\n+        int defaultFetcher = Globals.prefs.getInt(JabRefPreferences.SELECTED_FETCHER_INDEX);\n         if (defaultFetcher >= fetcherArray.length) {\n             defaultFetcher = 0;\n         }\n@@ -123,7 +123,7 @@ public Component getListCellRendererComponent(JList jList, Object o, int i, bool\n             @Override\n             public void actionPerformed(ActionEvent actionEvent) {\n                 activeFetcher = fetcherArray[fetcherChoice.getSelectedIndex()];\n-                Globals.prefs.putInt(\"selectedFetcherIndex\", fetcherChoice.getSelectedIndex());\n+                Globals.prefs.putInt(JabRefPreferences.SELECTED_FETCHER_INDEX, fetcherChoice.getSelectedIndex());\n                 if (activeFetcher.getHelpPage() != null) {\n                     help.setHelpFile(activeFetcher.getHelpPage());\n                     helpBut.setEnabled(true);\n@@ -328,13 +328,13 @@ public void actionPerformed(ActionEvent e) {\n     @Override\n     public void componentClosing() {\n         super.componentClosing();\n-        Globals.prefs.putBoolean(\"webSearchVisible\", Boolean.FALSE);\n+        Globals.prefs.putBoolean(JabRefPreferences.WEB_SEARCH_VISIBLE, Boolean.FALSE);\n     }\n \n     @Override\n     public void componentOpening() {\n         super.componentOpening();\n-        Globals.prefs.putBoolean(\"webSearchVisible\", Boolean.TRUE);\n+        Globals.prefs.putBoolean(JabRefPreferences.WEB_SEARCH_VISIBLE, Boolean.TRUE);\n     }\n \n , @@ -20,8 +20,9 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import net.sf.jabref.export.layout.LayoutFormatter;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.export.layout.LayoutFormatter;\n \n public class HTMLConverter implements LayoutFormatter {\n \n@@ -790,7 +791,7 @@ public String format(String text) {\n         // Deal with the form <sup>k</sup>and <sub>k</sub>\n         // If the result is in text or equation form can be controlled\n         // From the \"Advanced settings\" tab\n-        if (Globals.prefs.getBoolean(\"useConvertToEquation\")) {\n+        if (Globals.prefs.getBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION)) {\n             text = text.replaceAll(\"<[ ]?sup>([^<]+)</sup>\", \"\\\\$\\\\^\\\\{$1\\\\}\\\\$\");\n             text = text.replaceAll(\"<[ ]?sub>([^<]+)</sub>\", \"\\\\$_\\\\{$1\\\\}\\\\$\");\n         } else {, @@ -351,7 +351,7 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n             // Replace general expressions\n             title = title.replaceAll(\"/[sS]pl ([^/]+)/\", \"\\\\$\\\\\\\\$1\\\\$\");\n             // Deal with subscripts and superscripts       \n-            if (Globals.prefs.getBoolean(\"useConvertToEquation\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION)) {\n                 title = title.replaceAll(\"/sup ([^/]+)/\", \"\\\\$\\\\^\\\\{$1\\\\}\\\\$\");\n                 title = title.replaceAll(\"/sub ([^/]+)/\", \"\\\\$_\\\\{$1\\\\}\\\\$\");\n                 title = title.replaceAll(\"\\\\(sup\\\\)([^(]+)\\\\(/sup\\\\)\", \"\\\\$\\\\^\\\\{$1\\\\}\\\\$\");\n@@ -367,12 +367,12 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n             title = title.replaceAll(\"\\\\\\\\infin\", \"\\\\\\\\infty\");\n \n             // Unit formatting\n-            if (Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {\n                 title = unitFormatter.format(title);\n             }\n \n             // Automatic case keeping\n-            if (Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {\n                 title = caseKeeper.format(title);\n             }\n             // Write back\n@@ -513,7 +513,7 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n                 fullName = fullName.replace(\" - \", \"-\"); //IEE Proceedings-\n \n                 fullName = fullName.trim();\n-                if (Globals.prefs.getBoolean(\"useIEEEAbrv\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n                     fullName = Globals.journalAbbrev.getMedlineAbbreviation(fullName).or(fullName);\n                 }\n             }\n@@ -566,7 +566,7 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n             // Replace general expressions\n             abstr = abstr.replaceAll(\"/[sS]pl ([^/]+)/\", \"\\\\$\\\\\\\\$1\\\\$\");\n             // Deal with subscripts and superscripts       \n-            if (Globals.prefs.getBoolean(\"useConvertToEquation\")) {\n+            if (Globals.prefs.getBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION)) {\n                 abstr = abstr.replaceAll(\"/sup ([^/]+)/\", \"\\\\$\\\\^\\\\{$1\\\\}\\\\$\");\n                 abstr = abstr.replaceAll(\"/sub ([^/]+)/\", \"\\\\$_\\\\{$1\\\\}\\\\$\");\n                 abstr = abstr.replaceAll(\"\\\\(sup\\\\)([^(]+)\\\\(/sup\\\\)\", \"\\\\$\\\\^\\\\{$1\\\\}\\\\$\");, @@ -179,7 +179,7 @@ public void openIt(File file, boolean raisePanel) {\n             frame.output(Globals.lang(\"Opening\") + \": '\" + file.getPath() + \"'\");\n             boolean tryingAutosave = false;\n             boolean autoSaveFound = AutoSaveManager.newerAutoSaveExists(file);\n-            if (autoSaveFound && !Globals.prefs.getBoolean(\"promptBeforeUsingAutosave\")) {\n+            if (autoSaveFound && !Globals.prefs.getBoolean(JabRefPreferences.PROMPT_BEFORE_USING_AUTOSAVE)) {\n                 // We have found a newer autosave, and the preferences say we should load\n                 // it without prompting, so we replace the fileToLoad:\n                 fileToLoad = AutoSaveManager.getAutoSaveFile(file);, @@ -27,6 +27,7 @@\n \n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.OutputPrinter;\n import net.sf.jabref.imports.BibtexParser;\n import net.sf.jabref.imports.CaseKeeper;\n@@ -100,12 +101,12 @@ public boolean processQuery(String query, ImportInspector inspector, OutputPrint\n             String title = entry.getField(\"title\");\n             if (title != null) {\n                 // Unit formatting\n-                if (Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {\n                     title = unitFormatter.format(title);\n                 }\n \n                 // Case keeping\n-                if (Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\")) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {\n                     title = caseKeeper.format(title);\n                 }\n                 entry.setField(\"title\", title);, @@ -526,7 +526,7 @@ public static BibtexEntry makeLabel(MetaData metaData, BibtexDatabase database,\n             occurences--; // No change, so we can accept one dupe.\n         }\n \n-        boolean alwaysAddLetter = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER), firstLetterA = Globals.prefs.getBoolean(\"keyGenFirstLetterA\");\n+        boolean alwaysAddLetter = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER), firstLetterA = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A);\n \n         if (!alwaysAddLetter && (occurences == 0)) {\n             // No dupes found, so we can just go ahead., @@ -17,6 +17,7 @@\n \n import ca.odell.glazedlists.BasicEventList;\n import ca.odell.glazedlists.EventList;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.net.URLDownload;\n import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.Globals;\n@@ -349,13 +350,13 @@ public boolean accept(File file, String s) {\n      * @param filename The path to the file to delete.\n      */\n     private static void schedulePluginForDeletion(String filename) {\n-        String[] oldValues = Globals.prefs.getStringArray(\"deletePlugins\");\n+        String[] oldValues = Globals.prefs.getStringArray(JabRefPreferences.DELETE_PLUGINS);\n         String[] newValues = oldValues == null ? new String[1] : new String[oldValues.length + 1];\n         if (oldValues != null) {\n             System.arraycopy(oldValues, 0, newValues, 0, oldValues.length);\n         }\n         newValues[newValues.length - 1] = filename;\n-        Globals.prefs.putStringArray(\"deletePlugins\", newValues);\n+        Globals.prefs.putStringArray(JabRefPreferences.DELETE_PLUGINS, newValues);\n     }\n \n     /**, @@ -128,9 +128,9 @@ public void isConfigValid(boolean configValid) {\n      * Store these db strings into JabRef preferences.\n      */\n     public void storeToPreferences() {\n-        Globals.prefs.put(\"dbConnectServerType\", getServerType());\n-        Globals.prefs.put(\"dbConnectHostname\", getServerHostname());\n-        Globals.prefs.put(\"dbConnectDatabase\", getDatabase());\n-        Globals.prefs.put(\"dbConnectUsername\", getUsername());\n+        Globals.prefs.put(JabRefPreferences.DB_CONNECT_SERVER_TYPE, getServerType());\n+        Globals.prefs.put(JabRefPreferences.DB_CONNECT_HOSTNAME, getServerHostname());\n+        Globals.prefs.put(JabRefPreferences.DB_CONNECT_DATABASE, getDatabase());\n+        Globals.prefs.put(JabRefPreferences.DB_CONNECT_USERNAME, getUsername());\n     }\n }, @@ -211,7 +211,7 @@ public static String checkLegalKey(String key) {\n         if (key == null) {\n             return null;\n         }\n-        if (!JabRefPreferences.getInstance().getBoolean(\"enforceLegalBibtexKey\")) {\n+        if (!JabRefPreferences.getInstance().getBoolean(JabRefPreferences.ENFORCE_LEGAL_BIBTEX_KEY)) {\n             // User doesn't want us to enforce legal characters. We must still look\n             // for whitespace and some characters such as commas, since these would\n             // interfere with parsing:, ", 104, 79, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 183], ["Stefano", "Update INSPIREBibtexFilterReader.java", "07/23/15, 12:11:30 PM", "Stefano", "84aa6e0bc79450070048989e3c9b342780361ffc", ["src/main/java/net/sf/jabref/imports/INSPIREBibtexFilterReader.java"], "@@ -57,11 +57,11 @@ private String readpreLine() throws IOException {\n             if (l == null) {\n                 return null;\n             }\n-            if (l.indexOf(\"<pre>\") != -1) {\n+            if (l.contains(\"<pre>\")) {\n                 pre = true;\n                 l = in.readLine();\n             }\n-            if (l.indexOf(\"</pre>\") != -1) {\n+            if (l.contains(\"</pre>\")) {\n                 pre = false;\n             }\n         } while (!pre);, ", 2, 2, "\"modified, \"", 4], ["Stefano", "deprecated url", "07/23/15, 11:26:29 AM", "Stefano", "82890963d42f90460fc51d479ddacffe0da66bf9", ["src/main/java/net/sf/jabref/imports/INSPIREFetcher.java"], "@@ -47,7 +47,7 @@\n  */\n public class INSPIREFetcher implements EntryFetcher {\n \n-    private static final String INSPIRE_HOST = \"inspirebeta.net\";\n+    private static final String INSPIRE_HOST = \"inspirehep.net\";\n \n \n     public INSPIREFetcher() {, ", 1, 1, "\"modified, \"", 2], ["Stefano", "Update SPIRESBibtexFilterReader.java", "07/23/15, 11:24:35 AM", "Stefano", "c004311545afcfed7aa51bae678f11c51aaac405", ["src/main/java/net/sf/jabref/imports/SPIRESBibtexFilterReader.java"], "@@ -54,11 +54,11 @@ private String readpreLine() throws IOException {\n             if (l == null) {\n                 return null;\n             }\n-            if (l.equals(\"<pre>\")) {\n+            if (l.indexOf(\"<pre>\") != -1) {\n                 pre = true;\n                 l = in.readLine();\n             }\n-            if (l.equals(\"</pre>\")) {\n+            if (l.indexOf(\"</pre>\") != -1) {\n                 pre = false;\n             }\n         } while (!pre);, ", 2, 2, "\"modified, \"", 4], ["Stefano", "Update CHANGELOG", "07/23/15, 12:39:01 PM", "Stefano", "8ceb537f09ca7d9da8fa1a4a973023e90db8b57f", ["CHANGELOG"], "@@ -11,6 +11,7 @@\n     - JabRef metadata (\"jabref-meta\") @comments are now always written in alphabetical order\n     - Switch vom antlr2 grammar to antlr4 for capturing the search expressions. Should be backwards compatible.\n     - Changed html description of search expressions, expressing the conditional logic more explicitly with brackets.\n+    - Fixed INSPIRE searches compatibility problem (by Stefano Gariazzo).\n 2.11 beta 3\n     - New MacOSX integration\n     - Two releases for MacOSX: OSX-Java6 for Apple Java 1.6 and OSX for Oracle Java 1.7+, ", 1, 0, "\"modified, \"", 1], ["Stefano", "Update About.html", "07/23/15, 12:40:50 PM", "Stefano", "3114a35a17dec203e03e870e27a62dfc4652f4a1", ["src/main/resources/help/About.html"], "@@ -66,6 +66,7 @@ <h2>Contributions from:</h2>\n         Brian Van Essen,\n         Michael Falkenthal,\n         Alexis Gallagher,\n+        Stefano Gariazzo,\n         David Gleich,\n         Eduardo Roberto Greco,\n         Yara Grassi Gouffon,, ", 1, 0, "\"modified, \"", 1], ["Joerg Lenhard", "Logging system initialization not needed, since commons chooses it by default", "07/29/15, 10:47:39 AM", "Joerg Lenhard", "24a194fc8ce20bf58e8f1ab6bf785709d2b33127", ["src/main/java/net/sf/jabref/JabRef.java"], "@@ -80,13 +80,6 @@\n     private boolean graphicFailure = false;\n     private JabRefCLI cli;\n     private SplashScreenLifecycle splashScreen = new SplashScreenLifecycle();\n-    \n-    //initialize logging system\n-    static {\n-        LogFactory factory = LogFactory.getFactory();\n-        //tell commons logging to default to Java's internal logging implementation\n-        factory.setAttribute(\"org.apache.commons.logging.Log\", \"org.apache.commons.logging.impl.Jdk14Logger\");\n-    }\n \n     public void start(String[] args) {\n         JabRefPreferences prefs = JabRefPreferences.getInstance();, ", 0, 7, "\"modified, \"", 7], ["Joerg Lenhard", "Use absolute version numbers for pdfbox dependencies", "07/29/15, 12:50:11 PM", "Joerg Lenhard", "4c3e0d5d02ce60780e6a83abcef03d42b769588f", ["build.gradle"], "@@ -76,9 +76,9 @@ dependencies {\n     \n     compile 'org.swinglabs:swingx:1.6.1'\n \n-    compile 'org.apache.pdfbox:pdfbox:1.8.+'\n-    compile 'org.apache.pdfbox:fontbox:1.8.+'\n-    compile 'org.apache.pdfbox:jempbox:1.8.+'\n+    compile 'org.apache.pdfbox:pdfbox:1.8.10'\n+    compile 'org.apache.pdfbox:fontbox:1.8.10'\n+    compile 'org.apache.pdfbox:jempbox:1.8.10'\n \n     compile 'commons-cli:commons-cli:1.3.1'\n , ", 3, 3, "\"modified, \"", 6], ["stefan-kolb", "Removes old TODO file", "07/29/15, 01:55:59 PM", "stefan-kolb", "982e9e0c0fb10fc0867d4c996cabe0160f3e4800", ["TODO"], "@@ -1,28 +0,0 @@\n-\n-Chris:\n-------\n-  * Think about synchronizing XMP.\n-  * Document data schema used (BibteXmp)\n-  * Add build.xml target to export standalone XMPUtil for the CLI.\n-  * Allow search relativ to bibtex-file\n-  * Plugin-System may crash...\n-  \n-Morten:\n-\n-* Encoding used for reading URLs. URLDownload.java\n-\n-* Look into whether incremental search could be made more persistent when search panel loses focus.\n-* Problem: when looking at group with hiding non-hits, newly created entry doesn't appear in entry editor.\n-\n-* Plugins like SVN plugin might need hooks for performing actions before a database is\n-  closed, and may need the ability to cancel the closing, and to avoid questions about\n-  saving changes.\n-\n-* Enable \"Open spires entry\" (\"openSpires\" action)? Think about better integration of this?\n-  Look into which viewer is used.\n-* Add \"Copy all externally linked files for this set of entries\"-feature.\n-  Basic functionality in AccessLinksForEntries.\n-* Problem setting today with Microba calendar.\n-\n-* [POSTPONE] Icon selection for external file types: - select arbitrary images from disk?\n-, ", 0, 28, "\"removed, \"", 28], ["Joerg Lenhard", "Undo rename of Formatter classes since they might be loaded by forName()", "07/29/15, 02:30:16 PM", "Joerg Lenhard", "bff0d3e5368254a52d716b4282bd8f66e54bb51d", ["src/main/java/net/sf/jabref/export/layout/format/CreateDocBookAuthors.java", "src/main/java/net/sf/jabref/export/layout/format/HTMLChars.java", "src/main/java/net/sf/jabref/export/layout/format/RTFChars.java", "src/main/java/net/sf/jabref/export/layout/format/XMLChars.java", "src/main/java/net/sf/jabref/mods/MODSEntry.java", "src/main/java/net/sf/jabref/msbib/MSBibEntry.java", "src/test/java/net/sf/jabref/export/layout/HTMLCharsTest.java", "src/test/java/net/sf/jabref/export/layout/LayoutEntryTest.java", "src/test/java/net/sf/jabref/export/layout/RTFCharsTest.java"], "@@ -49,7 +49,7 @@\n public class CreateDocBookAuthors implements LayoutFormatter\n {\n \n-    private static final XMLCharFormatter xc = new XMLCharFormatter();\n+    private static final XMLChars xc = new XMLChars();\n \n \n     @Override, @@ -22,7 +22,7 @@\n /**\n  * This formatter escapes characters so they are suitable for HTML.\n  */\n-public class HTMLCharFormatter implements LayoutFormatter {\n+public class HTMLChars implements LayoutFormatter {\n     \n     private static final HtmlCharsMap HTML_CHARS = new HtmlCharsMap();\n , @@ -35,7 +35,7 @@\n  *\n  *   5.) Replace --- by \\emdash and -- by \\endash.\n  */\n-public class RTFCharFormatter implements LayoutFormatter {\n+public class RTFChars implements LayoutFormatter {\n \n     // Instantiate logger:\n     private static final Log LOGGER = LogFactory.getLog(LayoutFormatter.class);, @@ -45,7 +45,7 @@\n /**\n  * Changes {\\^o} or {\\^{o}} to ?\n  */\n-public class XMLCharFormatter implements LayoutFormatter {\n+public class XMLChars implements LayoutFormatter {\n \n     private final static XmlCharsMap XML_CHARS = new XmlCharsMap();\n     , @@ -29,7 +29,7 @@\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.export.layout.LayoutFormatter;\n-import net.sf.jabref.export.layout.format.XMLCharFormatter;\n+import net.sf.jabref.export.layout.format.XMLChars;\n \n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n@@ -83,7 +83,7 @@ public MODSEntry(BibtexEntry bibtex) {\n     }\n \n     private void populateFromBibtex(BibtexEntry bibtex) {\n-        LayoutFormatter chars = new XMLCharFormatter();\n+        LayoutFormatter chars = new XMLChars();\n         if (bibtex.getField(\"title\") != null) {\n             if (CHARFORMAT) {\n                 title = chars.format(bibtex.getField(\"title\"));\n@@ -149,7 +149,7 @@ private void populateExtensionFields(BibtexEntry e) {\n \n     private List<PersonName> getAuthors(String authors) {\n         List<PersonName> result = new LinkedList<PersonName>();\n-        LayoutFormatter chars = new XMLCharFormatter();\n+        LayoutFormatter chars = new XMLChars();\n \n         if (!authors.contains(\" and \")) {\n             if (CHARFORMAT) {, @@ -34,7 +34,7 @@\n import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.BibtexFields;\n import net.sf.jabref.export.layout.LayoutFormatter;\n-import net.sf.jabref.export.layout.format.XMLCharFormatter;\n+import net.sf.jabref.export.layout.format.XMLChars;\n import net.sf.jabref.mods.PageNumbers;\n import net.sf.jabref.mods.PersonName;\n \n@@ -566,7 +566,7 @@ private String format(String value)\n             return null;\n         }\n         String result = null;\n-        LayoutFormatter chars = new XMLCharFormatter();\n+        LayoutFormatter chars = new XMLChars();\n         result = chars.format(value);\n         return result;\n     }, @@ -1,6 +1,6 @@\n package net.sf.jabref.export.layout;\n \n-import net.sf.jabref.export.layout.format.HTMLCharFormatter;\n+import net.sf.jabref.export.layout.format.HTMLChars;\n \n import org.junit.Assert;\n import org.junit.Test;\n@@ -12,7 +12,7 @@\n     @Test\n     public void testBasicFormat() {\n \n-        LayoutFormatter layout = new HTMLCharFormatter();\n+        LayoutFormatter layout = new HTMLChars();\n \n         Assert.assertEquals(\"\", layout.format(\"\"));\n \n@@ -36,7 +36,7 @@ public void testBasicFormat() {\n     @Test\n     public void testLaTeXHighlighting() {\n \n-        LayoutFormatter layout = new HTMLCharFormatter();\n+        LayoutFormatter layout = new HTMLChars();\n \n         Assert.assertEquals(\"<em>hallo</em>\", layout.format(\"\\\\emph{hallo}\"));\n         Assert.assertEquals(\"<em>hallo</em>\", layout.format(\"{\\\\emph hallo}\"));, @@ -105,7 +105,7 @@ public void testNoHighlighting() throws Exception {\n         // define the highlighting settings\n         Globals.prefs.putBoolean(\"caseSensitiveSearch\", false);\n \n-        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLCharFormatter]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, new ArrayList<String>());\n+        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, new ArrayList<String>());\n         String expecting = \"<font face=\\\"arial\\\"><BR><BR><b>Abstract: </b> In this paper, we initiate a formal study of security on Android: Google's new open-source platform for mobile devices. Tags: Paper android google Open-Source Devices</font>\";\n \n         Assert.assertEquals(expecting, result);\n@@ -126,7 +126,7 @@ public void testHighlightingOneWordCaseInsesitive() throws Exception {\n         // define the highlighting settings\n         Globals.prefs.putBoolean(\"caseSensitiveSearch\", false);\n \n-        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLCharFormatter]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n+        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n         String containing = \"<span style=\\\"background-color:#3399FF;\\\">Google</span>\";\n \n         // check\n@@ -149,7 +149,7 @@ public void testHighlightingTwoWordsCaseInsesitive() throws Exception {\n         // define the highlighting settings\n         Globals.prefs.putBoolean(\"caseSensitiveSearch\", false);\n \n-        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLCharFormatter]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n+        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n \n         String containing = \"<span style=\\\"background-color:#3399FF;\\\">Android</span>\";\n         String containing2 = \"<span style=\\\"background-color:#3399FF;\\\">study</span>\";\n@@ -174,7 +174,7 @@ public void testHighlightingOneWordCaseSesitive() throws Exception {\n         // define the highlighting settings\n         Globals.prefs.putBoolean(\"caseSensitiveSearch\", true);\n \n-        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLCharFormatter]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n+        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n         String expected = \"<font face=\\\"arial\\\"><BR><BR><b>Abstract: </b> In this paper, we initiate a formal study of security on Android: Google's new open-source platform for mobile devices. Tags: Paper android <span style=\\\"background-color:#3399FF;\\\">google</span> Open-Source Devices</font>\";\n \n         // check\n@@ -199,7 +199,7 @@ public void testHighlightingMoreWordsCaseSesitive() throws Exception {\n         Globals.prefs.putBoolean(\"caseSensitiveSearch\", false);\n \n         String highlightColor = \"#3399FF;\";\n-        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLCharFormatter]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n+        String result = this.layout(\"<font face=\\\"arial\\\">\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract}\\\\end{abstract}</font>\", mBTE, words);\n         String expected = \"<font face=\\\"arial\\\"><BR><BR><b>Abstract: </b> In this paper, we initiate a formal <span style=\\\"background-color:\" + highlightColor + \"\\\">study</span> of security on <span style=\\\"background-color:\" + highlightColor + \"\\\">Android</span>: Google's new <span style=\\\"background-color:\" + highlightColor + \"\\\">open</span>-source platform for mobile devices. Tags: Paper <span style=\\\"background-color:\" + highlightColor + \"\\\">android</span> google <span style=\\\"background-color:\" + highlightColor + \"\\\">Open</span>-Source Devices</font>\";\n \n         // check, @@ -1,6 +1,6 @@\n package net.sf.jabref.export.layout;\n \n-import net.sf.jabref.export.layout.format.RTFCharFormatter;\n+import net.sf.jabref.export.layout.format.RTFChars;\n \n import org.junit.Assert;\n import org.junit.Ignore;\n@@ -13,7 +13,7 @@\n     @Test\n     public void testBasicFormat() {\n \n-        LayoutFormatter layout = new RTFCharFormatter();\n+        LayoutFormatter layout = new RTFChars();\n \n         Assert.assertEquals(\"\", layout.format(\"\"));\n \n@@ -29,7 +29,7 @@ public void testBasicFormat() {\n     @Test\n     public void testLaTeXHighlighting() {\n \n-        LayoutFormatter layout = new RTFCharFormatter();\n+        LayoutFormatter layout = new RTFChars();\n \n         Assert.assertEquals(\"{\\\\i hallo}\", layout.format(\"\\\\emph{hallo}\"));\n         Assert.assertEquals(\"{\\\\i hallo}\", layout.format(\"{\\\\emph hallo}\"));\n@@ -44,7 +44,7 @@ public void testLaTeXHighlighting() {\n     @Test\n     @Ignore\n     public void testComplicated() {\n-        LayoutFormatter layout = new RTFCharFormatter();\n+        LayoutFormatter layout = new RTFChars();\n \n         Assert.assertEquals(\"R\\\\u233eflexions sur le timing de la quantit\\\\u233e \\\\u230ae should be \\\\u230ae\", layout.format(\"R\u00e9flexions sur le timing de la quantit\u00e9 \\\\ae should be \u00e6\"));\n \n@@ -55,7 +55,7 @@ public void testComplicated() {\n     @Ignore\n     public void testSpecialCharacters() {\n \n-        LayoutFormatter layout = new RTFCharFormatter();\n+        LayoutFormatter layout = new RTFChars();\n \n         Assert.assertEquals(\"\\\\u243o\", layout.format(\"\\\\'{o}\")); // \u00f3\n         Assert.assertEquals(\"\\\\'f2\", layout.format(\"\\\\`{o}\")); // \u00f2, ", 22, 22, "\"modified, renamed, renamed, renamed, modified, modified, modified, modified, modified, \"", 44], ["stefan-kolb", "Redundant local variable", "07/29/15, 02:49:26 PM", "stefan-kolb", "973b01581f3dfdbf26aca08fd6756280da5d3852", ["src/main/java/net/sf/jabref/PreambleEditor.java"], "@@ -37,7 +37,6 @@ public PreambleEditor(JabRefFrame baseFrame,\n             BasePanel panel, BibtexDatabase base,\n             JabRefPreferences prefs) {\n         super(baseFrame);\n-        JabRefFrame baseFrame1 = baseFrame;\n         this.panel = panel;\n         this.base = base;\n         this.prefs = prefs;, ", 0, 1, "\"modified, \"", 1], ["stefan-kolb", "Fix typo", "07/29/15, 05:06:44 PM", "stefan-kolb", "04d55f1ad757cab66534c71cd509a6f58d8ae669", ["external-libraries.txt"], "None, ", 0, 0, "\"renamed, \"", 0], ["stefan-kolb", "Remove unnecessary braces around code blocks", "07/29/15, 04:51:44 PM", "stefan-kolb", "4e071e9831c1913ce08a7943e1e5e1d6b5725370", ["src/main/java/net/sf/jabref/FileSortTab.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/export/layout/LayoutEntry.java", "src/main/java/net/sf/jabref/groups/GroupSelector.java", "src/main/java/net/sf/jabref/gui/MainTableSelectionListener.java", "src/main/java/net/sf/jabref/imports/CopacImporter.java", "src/main/java/net/sf/jabref/util/XMPUtil.java", "src/test/java/net/sf/jabref/AuthorListTest.java", "src/test/java/net/sf/jabref/bst/BibtexNameFormatterTest.java", "src/test/java/net/sf/jabref/bst/TestVM.java", "src/test/java/net/sf/jabref/export/layout/format/CompositeFormatTest.java", "src/test/java/net/sf/jabref/imports/BibtexParserTest.java", "src/test/java/net/sf/jabref/imports/OAI2ImportTest.java", "src/test/java/net/sf/jabref/util/UtilFindFileTest.java", "src/test/java/net/sf/jabref/util/XMPSchemaBibtexTest.java", "src/test/java/net/sf/jabref/util/XMPUtilTest.java"], "@@ -182,124 +182,123 @@ public void actionPerformed(ActionEvent e) {\n             builder.nextLine();\n         }\n \n-        { // EXPORT SORT ORDER\n-          // create Components\n-            exportInOriginalOrder = new JRadioButton(Globals.lang(\"Export entries in their original order\"));\n-            exportInTableOrder = new JRadioButton(Globals.lang(\"Export in current table sort order\"));\n-            exportInSpecifiedOrder = new JRadioButton(Globals.lang(\"Export entries ordered as specified\"));\n-\n-            ButtonGroup bg = new ButtonGroup();\n-            bg.add(exportInOriginalOrder);\n-            bg.add(exportInTableOrder);\n-            bg.add(exportInSpecifiedOrder);\n-\n-            ActionListener listener = new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    boolean selected = e.getSource() == exportInSpecifiedOrder;\n-                    exportPriSort.setEnabled(selected);\n-                    exportPriField.setEnabled(selected);\n-                    exportPriDesc.setEnabled(selected);\n-                    exportSecSort.setEnabled(selected);\n-                    exportSecField.setEnabled(selected);\n-                    exportSecDesc.setEnabled(selected);\n-                    exportTerSort.setEnabled(selected);\n-                    exportTerField.setEnabled(selected);\n-                    exportTerDesc.setEnabled(selected);\n+        // EXPORT SORT ORDER\n+        // create Components\n+        exportInOriginalOrder = new JRadioButton(Globals.lang(\"Export entries in their original order\"));\n+        exportInTableOrder = new JRadioButton(Globals.lang(\"Export in current table sort order\"));\n+        exportInSpecifiedOrder = new JRadioButton(Globals.lang(\"Export entries ordered as specified\"));\n+\n+        ButtonGroup bg = new ButtonGroup();\n+        bg.add(exportInOriginalOrder);\n+        bg.add(exportInTableOrder);\n+        bg.add(exportInSpecifiedOrder);\n+\n+        ActionListener listener = new ActionListener() {\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                boolean selected = e.getSource() == exportInSpecifiedOrder;\n+                exportPriSort.setEnabled(selected);\n+                exportPriField.setEnabled(selected);\n+                exportPriDesc.setEnabled(selected);\n+                exportSecSort.setEnabled(selected);\n+                exportSecField.setEnabled(selected);\n+                exportSecDesc.setEnabled(selected);\n+                exportTerSort.setEnabled(selected);\n+                exportTerField.setEnabled(selected);\n+                exportTerDesc.setEnabled(selected);\n+            }\n+        };\n+        exportInOriginalOrder.addActionListener(listener);\n+        exportInTableOrder.addActionListener(listener);\n+        exportInSpecifiedOrder.addActionListener(listener);\n+\n+        ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n+        v.add(BibtexFields.KEY_FIELD);\n+        Collections.sort(v);\n+        String[] allPlusKey = v.toArray(new String[v.size()]);\n+        exportPriSort = new JComboBox(allPlusKey);\n+        exportSecSort = new JComboBox(allPlusKey);\n+        exportTerSort = new JComboBox(allPlusKey);\n+\n+        exportPriField = new JTextField(10);\n+        exportSecField = new JTextField(10);\n+        exportTerField = new JTextField(10);\n+\n+        exportPriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+        exportSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+        exportTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n+\n+        exportPriSort.addActionListener(new ActionListener() {\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (exportPriSort.getSelectedIndex() > 0) {\n+                    exportPriField.setText(exportPriSort.getSelectedItem().toString());\n+                    exportPriSort.setSelectedIndex(0);\n                 }\n-            };\n-            exportInOriginalOrder.addActionListener(listener);\n-            exportInTableOrder.addActionListener(listener);\n-            exportInSpecifiedOrder.addActionListener(listener);\n-\n-            ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n-            v.add(BibtexFields.KEY_FIELD);\n-            Collections.sort(v);\n-            String[] allPlusKey = v.toArray(new String[v.size()]);\n-            exportPriSort = new JComboBox(allPlusKey);\n-            exportSecSort = new JComboBox(allPlusKey);\n-            exportTerSort = new JComboBox(allPlusKey);\n-\n-            exportPriField = new JTextField(10);\n-            exportSecField = new JTextField(10);\n-            exportTerField = new JTextField(10);\n-\n-            exportPriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            exportSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            exportTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-\n-            exportPriSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportPriSort.getSelectedIndex() > 0) {\n-                        exportPriField.setText(exportPriSort.getSelectedItem().toString());\n-                        exportPriSort.setSelectedIndex(0);\n-                    }\n+            }\n+        });\n+        exportSecSort.addActionListener(new ActionListener() {\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (exportSecSort.getSelectedIndex() > 0) {\n+                    exportSecField.setText(exportSecSort.getSelectedItem().toString());\n+                    exportSecSort.setSelectedIndex(0);\n                 }\n-            });\n-            exportSecSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportSecSort.getSelectedIndex() > 0) {\n-                        exportSecField.setText(exportSecSort.getSelectedItem().toString());\n-                        exportSecSort.setSelectedIndex(0);\n-                    }\n+            }\n+        });\n+        exportTerSort.addActionListener(new ActionListener() {\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (exportTerSort.getSelectedIndex() > 0) {\n+                    exportTerField.setText(exportTerSort.getSelectedItem().toString());\n+                    exportTerSort.setSelectedIndex(0);\n                 }\n-            });\n-            exportTerSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportTerSort.getSelectedIndex() > 0) {\n-                        exportTerField.setText(exportTerSort.getSelectedItem().toString());\n-                        exportTerSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-\n-            exportPriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            exportSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            exportTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-\n-            // create GUI\n-            JLabel lab;\n-\n-            builder.appendSeparator(Globals.lang(\"Export sort order\"));\n-            builder.append(exportInOriginalOrder, 1);\n-            builder.nextLine();\n-            builder.append(exportInTableOrder, 1);\n-            builder.nextLine();\n-            builder.append(exportInSpecifiedOrder, 1);\n-            builder.nextLine();\n-\n-            // Create a new panel with its own FormLayout for these items:\n-            FormLayout layout2 = new FormLayout(\n-                    \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n-            DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n-            lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportPriSort);\n-            builder2.append(exportPriField);\n-            builder2.append(exportPriDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportSecSort);\n-            builder2.append(exportSecField);\n-            builder2.append(exportSecDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportTerSort);\n-            builder2.append(exportTerField);\n-            builder2.append(exportTerDesc);\n-\n-            builder.append(builder2.getPanel());\n-            builder.nextLine();\n-        }\n+            }\n+        });\n+\n+        exportPriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+        exportSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+        exportTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n+\n+        // create GUI\n+        JLabel lab;\n+\n+        builder.appendSeparator(Globals.lang(\"Export sort order\"));\n+        builder.append(exportInOriginalOrder, 1);\n+        builder.nextLine();\n+        builder.append(exportInTableOrder, 1);\n+        builder.nextLine();\n+        builder.append(exportInSpecifiedOrder, 1);\n+        builder.nextLine();\n+\n+        // Create a new panel with its own FormLayout for these items:\n+        FormLayout layout2 = new FormLayout(\n+                \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n+        DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n+        lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n+        builder2.append(lab);\n+        builder2.append(exportPriSort);\n+        builder2.append(exportPriField);\n+        builder2.append(exportPriDesc);\n+        builder2.nextLine();\n+        lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n+        builder2.append(lab);\n+        builder2.append(exportSecSort);\n+        builder2.append(exportSecField);\n+        builder2.append(exportSecDesc);\n+        builder2.nextLine();\n+        lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n+        builder2.append(lab);\n+        builder2.append(exportTerSort);\n+        builder2.append(exportTerField);\n+        builder2.append(exportTerDesc);\n+\n+        builder.append(builder2.getPanel());\n+        builder.nextLine();\n \n         // COMBINE EVERYTHING\n         JPanel pan = builder.getPanel();\n@@ -351,18 +350,16 @@ public void setValues() {\n             exportInTableOrder.setSelected(true);\n         }\n \n-        {\n-            boolean selected = _prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER);\n-            exportPriSort.setEnabled(selected);\n-            exportPriField.setEnabled(selected);\n-            exportPriDesc.setEnabled(selected);\n-            exportSecSort.setEnabled(selected);\n-            exportSecField.setEnabled(selected);\n-            exportSecDesc.setEnabled(selected);\n-            exportTerSort.setEnabled(selected);\n-            exportTerField.setEnabled(selected);\n-            exportTerDesc.setEnabled(selected);\n-        }\n+        boolean selected = _prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER);\n+        exportPriSort.setEnabled(selected);\n+        exportPriField.setEnabled(selected);\n+        exportPriDesc.setEnabled(selected);\n+        exportSecSort.setEnabled(selected);\n+        exportSecField.setEnabled(selected);\n+        exportSecDesc.setEnabled(selected);\n+        exportTerSort.setEnabled(selected);\n+        exportTerField.setEnabled(selected);\n+        exportTerDesc.setEnabled(selected);\n \n         exportPriField.setText(_prefs.get(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD));\n         exportSecField.setText(_prefs.get(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD));, @@ -395,19 +395,16 @@ private static void setCurrentProcessExplicitAppUserModelID(final String appID)\n \n                     //read in the export format, take default format if no format entered\n                     switch (data.length) {\n-                    case (3): {\n+                    case (3):\n                         formatName = data[2];\n                         break;\n-                    }\n-                    case (2): {\n-                        //default ExportFormat: HTML table (with Abstract & BibTeX)\n-                        formatName = \"tablerefsabsbib\";\n-                        break;\n-                    }\n-                    default: {\n-                        System.err.println(Globals.lang(\"Output file missing\").concat(\". \\n \\t \").concat(\"Usage\").concat(\": \") + JabRefCLI.getExportMatchesSyntax());\n-                        return null; // TODO replace with optional one day\n-                    }\n+                        case (2):\n+                            //default ExportFormat: HTML table (with Abstract & BibTeX)\n+                            formatName = \"tablerefsabsbib\";\n+                            break;\n+                        default:\n+                            System.err.println(Globals.lang(\"Output file missing\").concat(\". \\n \\t \").concat(\"Usage\").concat(\": \") + JabRefCLI.getExportMatchesSyntax());\n+                            return null; // TODO replace with optional one day\n                     } //end switch\n \n                     //export new database, @@ -652,7 +652,7 @@ public void stateChanged(ChangeEvent e) {\n                 Method method = macreg.getMethod(\"registerMacEvents\", JabRefFrame.class);\n                 method.invoke(macreg.newInstance(), this);\n             } catch (Exception e) {\n-                System.err.println(\"Exception (\" + e.getClass().toString() + \"): \" + e.getMessage());\n+                System.err.println(\"Exception (\" + e.getClass() + \"): \" + e.getMessage());\n             }\n         }\n     }, @@ -278,7 +278,7 @@ public String doLayout(BibtexEntry bibtex, BibtexDatabase database, ArrayList<St\n         case LayoutHelper.IS_FIELD_END:\n         case LayoutHelper.IS_GROUP_END:\n             return \"\";\n-        case LayoutHelper.IS_OPTION_FIELD: {\n+        case LayoutHelper.IS_OPTION_FIELD:\n             String fieldEntry;\n \n             if (text.equals(\"bibtextype\")) {\n@@ -309,14 +309,12 @@ public String doLayout(BibtexEntry bibtex, BibtexDatabase database, ArrayList<St\n             }\n \n             return fieldEntry;\n-        }\n-        case LayoutHelper.IS_ENCODING_NAME: {\n-            // Printing the encoding name is not supported in entry layouts, only\n-            // in begin/end layouts. This prevents breakage if some users depend\n-            // on a field called \"encoding\". We simply return this field instead:\n-            return BibtexDatabase.getResolvedField(\"encoding\", bibtex, database);\n-        }\n-        default:\n+            case LayoutHelper.IS_ENCODING_NAME:\n+                // Printing the encoding name is not supported in entry layouts, only\n+                // in begin/end layouts. This prevents breakage if some users depend\n+                // on a field called \"encoding\". We simply return this field instead:\n+                return BibtexDatabase.getResolvedField(\"encoding\", bibtex, database);\n+            default:\n             return \"\";\n         }\n     }, @@ -677,10 +677,10 @@ private void updateGroupContent(GroupTreeNode node) {\n         for (BibtexEntry entry : entries) {\n             // Sort according to current state of the entries\n             if (group.contains(entry)) {\n-                LOGGER.info(\"Removing entry \" + entry.toString());\n+                LOGGER.info(\"Removing entry \" + entry);\n                 toRemove.add(entry);\n             } else {\n-                LOGGER.info(\"Adding entry \" + entry.toString());\n+                LOGGER.info(\"Adding entry \" + entry);\n                 toAdd.add(entry);\n             }\n         }\n@@ -722,7 +722,7 @@ public void updateGroupContentIfEnabled(boolean deletion) {\n     }\n \n     private void annotationEvent(GroupTreeNode node) {\n-        LOGGER.info(\"Performing annotation \" + node.toString());\n+        LOGGER.info(\"Performing annotation \" + node);\n         if (editModeIndicator) {\n             updateGroupContent(node);\n             panel.markBaseChanged();, @@ -346,70 +346,68 @@ public void run() {\n                         return; // There is an icon, but the field is not set.\n                     }\n \n-                    {\n-                        // See if this is a simple file link field, or if it is a file-list\n-                        // field that can specify a list of links:\n-                        if (fieldName.equals(GUIGlobals.FILE_FIELD)) {\n-\n-                            // We use a FileListTableModel to parse the field content:\n-                            FileListTableModel fileList = new FileListTableModel();\n-                            fileList.setContent((String) link);\n-\n-                            FileListEntry flEntry = null;\n-                            // If there are one or more links of the correct type,\n-                            // open the first one:\n-                            if (!listOfFileTypes.isEmpty()) {\n-                                for (int i = 0; i < fileList.getRowCount(); i++) {\n-                                    flEntry = fileList.getEntry(i);\n-                                    boolean correctType = false;\n-                                    for (String listOfFileType : listOfFileTypes) {\n-                                        if (flEntry.getType().toString().equals(listOfFileType)) {\n-                                            correctType = true;\n-                                        }\n+                    // See if this is a simple file link field, or if it is a file-list\n+                    // field that can specify a list of links:\n+                    if (fieldName.equals(GUIGlobals.FILE_FIELD)) {\n+\n+                        // We use a FileListTableModel to parse the field content:\n+                        FileListTableModel fileList = new FileListTableModel();\n+                        fileList.setContent((String) link);\n+\n+                        FileListEntry flEntry = null;\n+                        // If there are one or more links of the correct type,\n+                        // open the first one:\n+                        if (!listOfFileTypes.isEmpty()) {\n+                            for (int i = 0; i < fileList.getRowCount(); i++) {\n+                                flEntry = fileList.getEntry(i);\n+                                boolean correctType = false;\n+                                for (String listOfFileType : listOfFileTypes) {\n+                                    if (flEntry.getType().toString().equals(listOfFileType)) {\n+                                        correctType = true;\n                                     }\n-                                    if (correctType) {\n-                                        break;\n-                                    }\n-                                    flEntry = null;\n                                 }\n-                            }\n-                            //If there are no file types specified, consider all files.\n-                            else if (fileList.getRowCount() > 0) {\n-                                flEntry = fileList.getEntry(0);\n-                            }\n-                            if (flEntry != null) {\n-                                //                            if (fileList.getRowCount() > 0) {\n-                                //                                FileListEntry flEntry = fileList.getEntry(0);\n-\n-                                ExternalFileMenuItem item = new ExternalFileMenuItem\n-                                        (panel.frame(), entry, \"\",\n-                                                flEntry.getLink(), flEntry.getType().getIcon(),\n-                                                panel.metaData(), flEntry.getType());\n-                                boolean success = item.openLink();\n-                                if (!success) {\n-                                    panel.output(Globals.lang(\"Unable to open link.\"));\n+                                if (correctType) {\n+                                    break;\n                                 }\n+                                flEntry = null;\n                             }\n-                        } else {\n-                            try {\n-                                Util.openExternalViewer(panel.metaData(), (String) link, fieldName);\n-                            } catch (IOException ex) {\n-                                panel.output(Globals.lang(\"Unable to open link.\"));\n-                            }\n+                        }\n+                        //If there are no file types specified, consider all files.\n+                        else if (fileList.getRowCount() > 0) {\n+                            flEntry = fileList.getEntry(0);\n+                        }\n+                        if (flEntry != null) {\n+                            //                            if (fileList.getRowCount() > 0) {\n+                            //                                FileListEntry flEntry = fileList.getEntry(0);\n \n-                            /*ExternalFileType type = Globals.prefs.getExternalFileTypeByMimeType(\"text/html\");\n                             ExternalFileMenuItem item = new ExternalFileMenuItem\n                                     (panel.frame(), entry, \"\",\n-                                    (String)link, type.getIcon(),\n-                                    panel.metaData(), type);\n+                                            flEntry.getLink(), flEntry.getType().getIcon(),\n+                                            panel.metaData(), flEntry.getType());\n                             boolean success = item.openLink();\n                             if (!success) {\n                                 panel.output(Globals.lang(\"Unable to open link.\"));\n-                            } */\n-                            //Util.openExternalViewer(panel.metaData(), (String)link, fieldName);\n+                            }\n+                        }\n+                    } else {\n+                        try {\n+                            Util.openExternalViewer(panel.metaData(), (String) link, fieldName);\n+                        } catch (IOException ex) {\n+                            panel.output(Globals.lang(\"Unable to open link.\"));\n                         }\n \n+                        /*ExternalFileType type = Globals.prefs.getExternalFileTypeByMimeType(\"text/html\");\n+                        ExternalFileMenuItem item = new ExternalFileMenuItem\n+                                (panel.frame(), entry, \"\",\n+                                (String)link, type.getIcon(),\n+                                panel.metaData(), type);\n+                        boolean success = item.openLink();\n+                        if (!success) {\n+                            panel.output(Globals.lang(\"Unable to open link.\"));\n+                        } */\n+                        //Util.openExternalViewer(panel.metaData(), (String)link, fieldName);\n                     }\n+\n                     //catch (IOException ex) {\n                     //    panel.output(Globals.lang(\"Error\") + \": \" + ex.getMessage());\n                     //}, @@ -91,35 +91,34 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n \n         List<String> entries = new LinkedList<String>();\n \n-        { // Preprocess entries\n-            String str;\n-            StringBuffer sb = new StringBuffer();\n+        // Preprocess entries\n+        String str;\n+        StringBuffer sb = new StringBuffer();\n \n-            while ((str = in.readLine()) != null) {\n+        while ((str = in.readLine()) != null) {\n \n-                if (str.length() < 4) {\n-                    continue;\n-                }\n+            if (str.length() < 4) {\n+                continue;\n+            }\n \n-                String code = str.substring(0, 4);\n+            String code = str.substring(0, 4);\n \n-                if (code.equals(\"    \")) {\n-                    sb.append(\" \").append(str.trim());\n-                } else {\n+            if (code.equals(\"    \")) {\n+                sb.append(\" \").append(str.trim());\n+            } else {\n \n-                    // begining of a new item\n-                    if (str.substring(0, 4).equals(\"TI- \")) {\n-                        if (sb.length() > 0) {\n-                            entries.add(sb.toString());\n-                        }\n-                        sb = new StringBuffer();\n+                // begining of a new item\n+                if (str.substring(0, 4).equals(\"TI- \")) {\n+                    if (sb.length() > 0) {\n+                        entries.add(sb.toString());\n                     }\n-                    sb.append('\\n').append(str);\n+                    sb = new StringBuffer();\n                 }\n+                sb.append('\\n').append(str);\n             }\n-            if (sb.length() > 0) {\n-                entries.add(sb.toString());\n-            }\n+        }\n+        if (sb.length() > 0) {\n+            entries.add(sb.toString());\n         }\n \n         List<BibtexEntry> results = new LinkedList<BibtexEntry>();, @@ -1211,7 +1211,7 @@ public static void main(String[] args) throws IOException,\n         case 0:\n             XMPUtil.usage();\n             break;\n-        case 1: {\n+        case 1:\n \n             if (args[0].endsWith(\".pdf\")) {\n                 // Read from pdf and write as BibTex\n@@ -1245,64 +1245,61 @@ public static void main(String[] args) throws IOException,\n                 XMPUtil.usage();\n             }\n             break;\n-        }\n-        case 2: {\n-            if (args[0].equals(\"-x\") && args[1].endsWith(\".pdf\")) {\n-                // Read from pdf and write as BibTex\n-                XMPMetadata meta = XMPUtil.readRawXMP(new File(args[1]));\n-\n-                if (meta == null) {\n-                    System.err\n-                            .println(\"The given pdf does not contain any XMP-metadata.\");\n-                } else {\n-                    XMLUtil.save(meta.getXMPDocument(), System.out, \"UTF-8\");\n+            case 2:\n+                if (args[0].equals(\"-x\") && args[1].endsWith(\".pdf\")) {\n+                    // Read from pdf and write as BibTex\n+                    XMPMetadata meta = XMPUtil.readRawXMP(new File(args[1]));\n+\n+                    if (meta == null) {\n+                        System.err\n+                                .println(\"The given pdf does not contain any XMP-metadata.\");\n+                    } else {\n+                        XMLUtil.save(meta.getXMPDocument(), System.out, \"UTF-8\");\n+                    }\n+                    break;\n                 }\n-                break;\n-            }\n \n-            if (args[0].endsWith(\".bib\") && args[1].endsWith(\".pdf\")) {\n-                ParserResult result = BibtexParser\n-                        .parse(new FileReader(args[0]));\n+                if (args[0].endsWith(\".bib\") && args[1].endsWith(\".pdf\")) {\n+                    ParserResult result = BibtexParser\n+                            .parse(new FileReader(args[0]));\n \n-                Collection<BibtexEntry> entries = result.getDatabase()\n-                        .getEntries();\n+                    Collection<BibtexEntry> entries = result.getDatabase()\n+                            .getEntries();\n \n-                if (entries.isEmpty()) {\n-                    System.err.println(\"Could not find BibtexEntry in \"\n-                            + args[0]);\n-                } else {\n-                    XMPUtil.writeXMP(new File(args[1]), entries, result\n-                            .getDatabase(), false);\n-                    System.out.println(\"XMP written.\");\n+                    if (entries.isEmpty()) {\n+                        System.err.println(\"Could not find BibtexEntry in \"\n+                                + args[0]);\n+                    } else {\n+                        XMPUtil.writeXMP(new File(args[1]), entries, result\n+                                .getDatabase(), false);\n+                        System.out.println(\"XMP written.\");\n+                    }\n+                    break;\n                 }\n-                break;\n-            }\n \n-            XMPUtil.usage();\n-            break;\n-        }\n-        case 3: {\n-            if (!args[1].endsWith(\".bib\") && !args[2].endsWith(\".pdf\")) {\n                 XMPUtil.usage();\n                 break;\n-            }\n+            case 3:\n+                if (!args[1].endsWith(\".bib\") && !args[2].endsWith(\".pdf\")) {\n+                    XMPUtil.usage();\n+                    break;\n+                }\n \n-            ParserResult result = BibtexParser.parse(new FileReader(args[1]));\n+                ParserResult result = BibtexParser.parse(new FileReader(args[1]));\n \n-            BibtexEntry e = result.getDatabase().getEntryByKey(args[0]);\n+                BibtexEntry e = result.getDatabase().getEntryByKey(args[0]);\n \n-            if (e == null) {\n-                System.err.println(\"Could not find BibtexEntry \" + args[0]\n-                        + \" in \" + args[0]);\n-            } else {\n-                XMPUtil.writeXMP(new File(args[2]), e, result.getDatabase());\n+                if (e == null) {\n+                    System.err.println(\"Could not find BibtexEntry \" + args[0]\n+                            + \" in \" + args[0]);\n+                } else {\n+                    XMPUtil.writeXMP(new File(args[2]), e, result.getDatabase());\n \n-                System.out.println(\"XMP written.\");\n-            }\n-            break;\n-        }\n+                    System.out.println(\"XMP written.\");\n+                }\n+                break;\n \n-        default:\n+            default:\n             XMPUtil.usage();\n         }\n     }, @@ -39,71 +39,69 @@ public void testGetAuthorList() {\n     @Test\n     public void testFixAuthor_firstNameFirstCommas() {\n \n-        { // No Commas\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", true, false));\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", false, false));\n+        // No Commas\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", true, false));\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", false, false));\n \n-            Assert.assertEquals(\"John Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\",\n-                    false, false));\n-            Assert.assertEquals(\"J. Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\", true,\n-                    false));\n-\n-            // Check caching\n-            Assert.assertTrue(AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\", true, false).equals(AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n-                            + \"John Smith and Black Brown, Peter\", true, false)));\n-\n-            Assert.assertEquals(\"John Smith and Peter Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\"John Smith and Black Brown, Peter\", false, false));\n-            Assert.assertEquals(\"J. Smith and P. Black Brown\", AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John Smith and Black Brown, Peter\", true, false));\n-\n-            // Method description is different than code -> additional comma\n-            // there\n-            Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", false, false));\n-            Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", true, false));\n-\n-            Assert.assertEquals(\"J. P. von Neumann\", AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John Peter von Neumann\", true, false));\n-        }\n-        { // Oxford Commas\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", true, true));\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", false, true));\n-\n-            Assert.assertEquals(\"John Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\",\n-                    false, true));\n-            Assert.assertEquals(\"J. Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\", true,\n-                    true));\n+        Assert.assertEquals(\"John Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\",\n+                false, false));\n+        Assert.assertEquals(\"J. Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\", true,\n+                false));\n \n-            // Check caching\n-            Assert.assertTrue(AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\", true, true).equals(AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n-                            + \"John Smith and Black Brown, Peter\", true, true)));\n+        // Check caching\n+        Assert.assertTrue(AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John von Neumann and John Smith and Black Brown, Peter\", true, false).equals(AuthorList\n+                .fixAuthor_firstNameFirstCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n+                        + \"John Smith and Black Brown, Peter\", true, false)));\n \n-            Assert.assertEquals(\"John Smith and Peter Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\"John Smith and Black Brown, Peter\", false, true));\n-            Assert.assertEquals(\"J. Smith and P. Black Brown\", AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John Smith and Black Brown, Peter\", true, true));\n+        Assert.assertEquals(\"John Smith and Peter Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\"John Smith and Black Brown, Peter\", false, false));\n+        Assert.assertEquals(\"J. Smith and P. Black Brown\", AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John Smith and Black Brown, Peter\", true, false));\n+\n+        // Method description is different than code -> additional comma\n+        // there\n+        Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", false, false));\n+        Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", true, false));\n+\n+        Assert.assertEquals(\"J. P. von Neumann\", AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John Peter von Neumann\", true, false));\n+        // Oxford Commas\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", true, true));\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_firstNameFirstCommas(\"\", false, true));\n+\n+        Assert.assertEquals(\"John Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\",\n+                false, true));\n+        Assert.assertEquals(\"J. Smith\", AuthorList.fixAuthor_firstNameFirstCommas(\"John Smith\", true,\n+                true));\n \n-            // Method description is different than code -> additional comma\n-            // there\n-            Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", false, true));\n-            Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", AuthorList\n-                    .fixAuthor_firstNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", true, true));\n+        // Check caching\n+        Assert.assertTrue(AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John von Neumann and John Smith and Black Brown, Peter\", true, true).equals(AuthorList\n+                .fixAuthor_firstNameFirstCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n+                        + \"John Smith and Black Brown, Peter\", true, true)));\n \n-            Assert.assertEquals(\"J. P. von Neumann\", AuthorList.fixAuthor_firstNameFirstCommas(\n-                    \"John Peter von Neumann\", true, true));\n+        Assert.assertEquals(\"John Smith and Peter Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\"John Smith and Black Brown, Peter\", false, true));\n+        Assert.assertEquals(\"J. Smith and P. Black Brown\", AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John Smith and Black Brown, Peter\", true, true));\n+\n+        // Method description is different than code -> additional comma\n+        // there\n+        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", false, true));\n+        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", AuthorList\n+                .fixAuthor_firstNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", true, true));\n+\n+        Assert.assertEquals(\"J. P. von Neumann\", AuthorList.fixAuthor_firstNameFirstCommas(\n+                \"John Peter von Neumann\", true, true));\n \n-        }\n     }\n \n     @Test\n@@ -163,39 +161,38 @@ public void testFixAuthor_lastNameFirstCommas() {\n             Assert.assertEquals(\"von Neumann, J. P.\", AuthorList.fixAuthor_lastNameFirstCommas(\n                     \"John Peter von Neumann\", true, false));\n         }\n-        { // Oxford Commas\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameFirstCommas(\"\", true, true));\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameFirstCommas(\"\", false, true));\n-\n-            Assert.assertEquals(\"Smith, John\", AuthorList.fixAuthor_lastNameFirstCommas(\"John Smith\",\n-                    false, true));\n-            Assert.assertEquals(\"Smith, J.\", AuthorList.fixAuthor_lastNameFirstCommas(\"John Smith\", true,\n-                    true));\n+        // Oxford Commas\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameFirstCommas(\"\", true, true));\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameFirstCommas(\"\", false, true));\n \n-            String a = AuthorList.fixAuthor_lastNameFirstCommas(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\", true, true);\n-            String b = AuthorList.fixAuthor_lastNameFirstCommas(\"John von Neumann\"\n-                    + (0 == 1 ? \"\" : \" and \") + \"John Smith and Black Brown, Peter\", true, true);\n+        Assert.assertEquals(\"Smith, John\", AuthorList.fixAuthor_lastNameFirstCommas(\"John Smith\",\n+                false, true));\n+        Assert.assertEquals(\"Smith, J.\", AuthorList.fixAuthor_lastNameFirstCommas(\"John Smith\", true,\n+                true));\n \n-            // Check caching\n-            Assert.assertEquals(a, b);\n-            Assert.assertTrue(a.equals(b));\n+        String a = AuthorList.fixAuthor_lastNameFirstCommas(\n+                \"John von Neumann and John Smith and Black Brown, Peter\", true, true);\n+        String b = AuthorList.fixAuthor_lastNameFirstCommas(\"John von Neumann\"\n+                + (0 == 1 ? \"\" : \" and \") + \"John Smith and Black Brown, Peter\", true, true);\n \n-            Assert.assertEquals(\"Smith, John and Black Brown, Peter\", AuthorList\n-                    .fixAuthor_lastNameFirstCommas(\"John Smith and Black Brown, Peter\", false, true));\n-            Assert.assertEquals(\"Smith, J. and Black Brown, P.\", AuthorList.fixAuthor_lastNameFirstCommas(\n-                    \"John Smith and Black Brown, Peter\", true, true));\n-\n-            Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", AuthorList\n-                    .fixAuthor_lastNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", false, true));\n-            Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", AuthorList\n-                    .fixAuthor_lastNameFirstCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", true, true));\n+        // Check caching\n+        Assert.assertEquals(a, b);\n+        Assert.assertTrue(a.equals(b));\n \n-            Assert.assertEquals(\"von Neumann, J. P.\", AuthorList.fixAuthor_lastNameFirstCommas(\n-                    \"John Peter von Neumann\", true, true));\n-        }\n+        Assert.assertEquals(\"Smith, John and Black Brown, Peter\", AuthorList\n+                .fixAuthor_lastNameFirstCommas(\"John Smith and Black Brown, Peter\", false, true));\n+        Assert.assertEquals(\"Smith, J. and Black Brown, P.\", AuthorList.fixAuthor_lastNameFirstCommas(\n+                \"John Smith and Black Brown, Peter\", true, true));\n+\n+        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", AuthorList\n+                .fixAuthor_lastNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", false, true));\n+        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", AuthorList\n+                .fixAuthor_lastNameFirstCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", true, true));\n+\n+        Assert.assertEquals(\"von Neumann, J. P.\", AuthorList.fixAuthor_lastNameFirstCommas(\n+                \"John Peter von Neumann\", true, true));\n     }\n \n     @Test\n@@ -260,34 +257,32 @@ public void testFixAuthor_lastNameFirst() {\n     @Test\n     public void testFixAuthor_lastNameOnlyCommas() {\n \n-        { // No comma before and\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameOnlyCommas(\"\", false));\n-            Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"John Smith\", false));\n-            Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"Smith, Jr, John\", false));\n+        // No comma before and\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameOnlyCommas(\"\", false));\n+        Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"John Smith\", false));\n+        Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"Smith, Jr, John\", false));\n+\n+        Assert.assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas(\n+                \"John von Neumann and John Smith and Black Brown, Peter\", false).equals(AuthorList\n+                .fixAuthor_lastNameOnlyCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n+                        + \"John Smith and Black Brown, Peter\", false)));\n+\n+        Assert.assertEquals(\"von Neumann, Smith and Black Brown\", AuthorList\n+                .fixAuthor_lastNameOnlyCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", false));\n+        // Oxford Comma\n+        Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameOnlyCommas(\"\", true));\n+        Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"John Smith\", true));\n+        Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"Smith, Jr, John\", true));\n \n-            Assert.assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\", false).equals(AuthorList\n-                    .fixAuthor_lastNameOnlyCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n-                            + \"John Smith and Black Brown, Peter\", false)));\n+        Assert.assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas(\n+                \"John von Neumann and John Smith and Black Brown, Peter\", true).equals(AuthorList\n+                .fixAuthor_lastNameOnlyCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n+                        + \"John Smith and Black Brown, Peter\", true)));\n \n-            Assert.assertEquals(\"von Neumann, Smith and Black Brown\", AuthorList\n-                    .fixAuthor_lastNameOnlyCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", false));\n-        }\n-        { // Oxford Comma\n-            Assert.assertEquals(\"\", AuthorList.fixAuthor_lastNameOnlyCommas(\"\", true));\n-            Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"John Smith\", true));\n-            Assert.assertEquals(\"Smith\", AuthorList.fixAuthor_lastNameOnlyCommas(\"Smith, Jr, John\", true));\n-\n-            Assert.assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\", true).equals(AuthorList\n-                    .fixAuthor_lastNameOnlyCommas(\"John von Neumann\" + (0 == 1 ? \"\" : \" and \")\n-                            + \"John Smith and Black Brown, Peter\", true)));\n-\n-            Assert.assertEquals(\"von Neumann, Smith, and Black Brown\", AuthorList\n-                    .fixAuthor_lastNameOnlyCommas(\n-                            \"John von Neumann and John Smith and Black Brown, Peter\", true));\n-        }\n+        Assert.assertEquals(\"von Neumann, Smith, and Black Brown\", AuthorList\n+                .fixAuthor_lastNameOnlyCommas(\n+                        \"John von Neumann and John Smith and Black Brown, Peter\", true));\n     }\n \n     @Test\n@@ -397,24 +392,22 @@ public void testGetAuthorsNatbib() {\n     @Test\n     public void testGetAuthorsLastOnly() {\n \n-        { // No comma before and\n-            Assert.assertEquals(\"\", AuthorList.getAuthorList(\"\").getAuthorsLastOnly(false));\n-            Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"John Smith\").getAuthorsLastOnly(false));\n-            Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"Smith, Jr, John\").getAuthorsLastOnly(\n-                    false));\n+        // No comma before and\n+        Assert.assertEquals(\"\", AuthorList.getAuthorList(\"\").getAuthorsLastOnly(false));\n+        Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"John Smith\").getAuthorsLastOnly(false));\n+        Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"Smith, Jr, John\").getAuthorsLastOnly(\n+                false));\n \n-            Assert.assertEquals(\"von Neumann, Smith and Black Brown\", AuthorList.getAuthorList(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\").getAuthorsLastOnly(false));\n-        }\n-        { // Oxford comma\n-            Assert.assertEquals(\"\", AuthorList.getAuthorList(\"\").getAuthorsLastOnly(true));\n-            Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"John Smith\").getAuthorsLastOnly(true));\n-            Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"Smith, Jr, John\").getAuthorsLastOnly(\n-                    true));\n-\n-            Assert.assertEquals(\"von Neumann, Smith, and Black Brown\", AuthorList.getAuthorList(\n-                    \"John von Neumann and John Smith and Black Brown, Peter\").getAuthorsLastOnly(true));\n-        }\n+        Assert.assertEquals(\"von Neumann, Smith and Black Brown\", AuthorList.getAuthorList(\n+                \"John von Neumann and John Smith and Black Brown, Peter\").getAuthorsLastOnly(false));\n+        // Oxford comma\n+        Assert.assertEquals(\"\", AuthorList.getAuthorList(\"\").getAuthorsLastOnly(true));\n+        Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"John Smith\").getAuthorsLastOnly(true));\n+        Assert.assertEquals(\"Smith\", AuthorList.getAuthorList(\"Smith, Jr, John\").getAuthorsLastOnly(\n+                true));\n+\n+        Assert.assertEquals(\"von Neumann, Smith, and Black Brown\", AuthorList.getAuthorList(\n+                \"John von Neumann and John Smith and Black Brown, Peter\").getAuthorsLastOnly(true));\n     }\n \n     @Test\n@@ -445,30 +438,29 @@ public void testGetAuthorsLastFirst() {\n             al = AuthorList.getAuthorList(\"John Peter von Neumann\");\n             Assert.assertEquals(\"von Neumann, J. P.\", al.getAuthorsLastFirst(true, false));\n         }\n-        { // Oxford comma\n-            AuthorList al;\n+        // Oxford comma\n+        AuthorList al;\n \n-            al = AuthorList.getAuthorList(\"\");\n-            Assert.assertEquals(\"\", al.getAuthorsLastFirst(true, true));\n-            Assert.assertEquals(\"\", al.getAuthorsLastFirst(false, true));\n+        al = AuthorList.getAuthorList(\"\");\n+        Assert.assertEquals(\"\", al.getAuthorsLastFirst(true, true));\n+        Assert.assertEquals(\"\", al.getAuthorsLastFirst(false, true));\n \n-            al = AuthorList.getAuthorList(\"John Smith\");\n-            Assert.assertEquals(\"Smith, John\", al.getAuthorsLastFirst(false, true));\n-            Assert.assertEquals(\"Smith, J.\", al.getAuthorsLastFirst(true, true));\n+        al = AuthorList.getAuthorList(\"John Smith\");\n+        Assert.assertEquals(\"Smith, John\", al.getAuthorsLastFirst(false, true));\n+        Assert.assertEquals(\"Smith, J.\", al.getAuthorsLastFirst(true, true));\n \n-            al = AuthorList.getAuthorList(\"John Smith and Black Brown, Peter\");\n-            Assert.assertEquals(\"Smith, John and Black Brown, Peter\", al.getAuthorsLastFirst(false, true));\n-            Assert.assertEquals(\"Smith, J. and Black Brown, P.\", al.getAuthorsLastFirst(true, true));\n+        al = AuthorList.getAuthorList(\"John Smith and Black Brown, Peter\");\n+        Assert.assertEquals(\"Smith, John and Black Brown, Peter\", al.getAuthorsLastFirst(false, true));\n+        Assert.assertEquals(\"Smith, J. and Black Brown, P.\", al.getAuthorsLastFirst(true, true));\n \n-            al = AuthorList.getAuthorList(\"John von Neumann and John Smith and Black Brown, Peter\");\n-            Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n-                    .getAuthorsLastFirst(false, true));\n-            Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAuthorsLastFirst(\n-                    true, true));\n+        al = AuthorList.getAuthorList(\"John von Neumann and John Smith and Black Brown, Peter\");\n+        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n+                .getAuthorsLastFirst(false, true));\n+        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAuthorsLastFirst(\n+                true, true));\n \n-            al = AuthorList.getAuthorList(\"John Peter von Neumann\");\n-            Assert.assertEquals(\"von Neumann, J. P.\", al.getAuthorsLastFirst(true, true));\n-        }\n+        al = AuthorList.getAuthorList(\"John Peter von Neumann\");\n+        Assert.assertEquals(\"von Neumann, J. P.\", al.getAuthorsLastFirst(true, true));\n     }\n \n     @Test, @@ -54,20 +54,18 @@ public void warn(String s) {\n             }));\n         }\n \n-        {\n-            AuthorList al = AuthorList\n-                    .getAuthorList(\"Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\");\n+        AuthorList al = AuthorList\n+                .getAuthorList(\"Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\");\n \n-            Assert.assertEquals(\"dlVP\", BibtexNameFormatter.formatName(al.getAuthor(0), \"{v{}}{l{}}\",\n-                    new Warn() {\n+        Assert.assertEquals(\"dlVP\", BibtexNameFormatter.formatName(al.getAuthor(0), \"{v{}}{l{}}\",\n+                new Warn() {\n \n-                        @Override\n-                        public void warn(String s) {\n-                            Assert.fail(s);\n-                        }\n+                    @Override\n+                    public void warn(String s) {\n+                        Assert.fail(s);\n                     }\n-                    ));\n-        }\n+                }\n+                ));\n \n         assertNameFormatA(\"Meyer, J?\", \"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\");\n         assertNameFormatB(\"J.~Meyer\", \"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\");\n@@ -122,12 +120,10 @@ public void testConsumeToMatchingBrace() {\n                     .toCharArray(), 12));\n             Assert.assertEquals(\"{WORLD}\", sb.toString());\n         }\n-        {\n-            StringBuffer sb = new StringBuffer();\n-            Assert.assertEquals(10, BibtexNameFormatter.consumeToMatchingBrace(sb, \"{HE{L{}L}O} {WORLD}\"\n-                    .toCharArray(), 0));\n-            Assert.assertEquals(\"{HE{L{}L}O}\", sb.toString());\n-        }\n+        StringBuffer sb = new StringBuffer();\n+        Assert.assertEquals(10, BibtexNameFormatter.consumeToMatchingBrace(sb, \"{HE{L{}L}O} {WORLD}\"\n+                .toCharArray(), 0));\n+        Assert.assertEquals(\"{HE{L{}L}O}\", sb.toString());\n     }\n \n     @Test, @@ -110,26 +110,24 @@ public void testVMExecuteSimple() throws RecognitionException, IOException {\n             vm.run(v);\n             Assert.assertEquals(new Integer(5), vm.getIntegers().get(\"variable.a\"));\n         }\n-        {\n-            VM vm = new VM(\"FUNCTION {a}{ #5 #5 = \" + \"#1 #2 = \" + \"#3 #4 < \" + \"#4 #3 < \"\n-                    + \"#4 #4 < \" + \"#3 #4 > \" + \"#4 #3 > \" + \"#4 #4 > \" + \"\\\"H\\\" \\\"H\\\" = \"\n-                    + \"\\\"H\\\" \\\"Ha\\\" = } \" + \"EXECUTE {a}\");\n+        VM vm = new VM(\"FUNCTION {a}{ #5 #5 = \" + \"#1 #2 = \" + \"#3 #4 < \" + \"#4 #3 < \"\n+                + \"#4 #4 < \" + \"#3 #4 > \" + \"#4 #3 > \" + \"#4 #4 > \" + \"\\\"H\\\" \\\"H\\\" = \"\n+                + \"\\\"H\\\" \\\"Ha\\\" = } \" + \"EXECUTE {a}\");\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n-            vm.run(v);\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        vm.run(v);\n \n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n-            Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n-            Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n-            Assert.assertEquals(0, vm.getStack().size());\n-        }\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n+        Assert.assertEquals(VM.FALSE, vm.getStack().pop());\n+        Assert.assertEquals(VM.TRUE, vm.getStack().pop());\n+        Assert.assertEquals(0, vm.getStack().size());\n     }\n \n     @Test\n@@ -166,17 +164,15 @@ public void testVMArithmetic() throws RecognitionException, IOException {\n             Assert.assertEquals(2, vm.getStack().pop());\n             Assert.assertEquals(0, vm.getStack().size());\n         }\n-        {\n-            VM vm = new VM(\"FUNCTION {test} { \" + \"#1 \\\"HELLO\\\" + #5 #2 - }\" + \"EXECUTE {test}\");\n+        VM vm = new VM(\"FUNCTION {test} { \" + \"#1 \\\"HELLO\\\" + #5 #2 - }\" + \"EXECUTE {test}\");\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n \n-            try {\n-                vm.run(v);\n-                Assert.fail();\n-            } catch (VMException ignored) {\n+        try {\n+            vm.run(v);\n+            Assert.fail();\n+        } catch (VMException ignored) {\n \n-            }\n         }\n     }\n \n@@ -191,40 +187,36 @@ public void testNumNames() throws RecognitionException, IOException {\n             Assert.assertEquals(2, vm.getStack().pop());\n             Assert.assertEquals(0, vm.getStack().size());\n         }\n-        {\n-            VM vm = new VM(\"FUNCTION {test} { \\\"Johnny Foo { and } Mary Bar\\\" num.names$ }\"\n-                    + \"EXECUTE {test}\");\n+        VM vm = new VM(\"FUNCTION {test} { \\\"Johnny Foo { and } Mary Bar\\\" num.names$ }\"\n+                + \"EXECUTE {test}\");\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n-            vm.run(v);\n-            Assert.assertEquals(1, vm.getStack().pop());\n-            Assert.assertEquals(0, vm.getStack().size());\n-        }\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        vm.run(v);\n+        Assert.assertEquals(1, vm.getStack().pop());\n+        Assert.assertEquals(0, vm.getStack().size());\n     }\n \n     @Test\n     public void testVMStringOps1() throws RecognitionException, IOException {\n-        {\n-            VM vm = new VM(\n-                    \"FUNCTION {test} { \\\"H\\\" \\\"allo\\\" * \\\"Johnny\\\" add.period$ \\\"Johnny.\\\" add.period$\"\n-                            + \"\\\"Johnny!\\\" add.period$ \\\"Johnny?\\\" add.period$ \\\"Johnny} }}}\\\" add.period$\"\n-                            + \"\\\"Johnny!}\\\" add.period$ \\\"Johnny?}\\\" add.period$ \\\"Johnny.}\\\" add.period$ }\"\n-                            + \"EXECUTE {test}\"\n-                    );\n+        VM vm = new VM(\n+                \"FUNCTION {test} { \\\"H\\\" \\\"allo\\\" * \\\"Johnny\\\" add.period$ \\\"Johnny.\\\" add.period$\"\n+                        + \"\\\"Johnny!\\\" add.period$ \\\"Johnny?\\\" add.period$ \\\"Johnny} }}}\\\" add.period$\"\n+                        + \"\\\"Johnny!}\\\" add.period$ \\\"Johnny?}\\\" add.period$ \\\"Johnny.}\\\" add.period$ }\"\n+                        + \"EXECUTE {test}\"\n+                );\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n-            vm.run(v);\n-            Assert.assertEquals(\"Johnny.}\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny?}\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny!}\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny.}\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny?\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny!\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny.\", vm.getStack().pop());\n-            Assert.assertEquals(\"Johnny.\", vm.getStack().pop());\n-            Assert.assertEquals(\"Hallo\", vm.getStack().pop());\n-            Assert.assertEquals(0, vm.getStack().size());\n-        }\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        vm.run(v);\n+        Assert.assertEquals(\"Johnny.}\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny?}\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny!}\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny.}\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny?\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny!\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny.\", vm.getStack().pop());\n+        Assert.assertEquals(\"Johnny.\", vm.getStack().pop());\n+        Assert.assertEquals(\"Hallo\", vm.getStack().pop());\n+        Assert.assertEquals(0, vm.getStack().size());\n     }\n \n     @Test\n@@ -363,14 +355,12 @@ public void testVMChrToInt() throws RecognitionException, IOException {\n             Assert.assertEquals(72, vm.getStack().pop());\n             Assert.assertEquals(0, vm.getStack().size());\n         }\n-        {\n-            VM vm = new VM(\"FUNCTION {test} { \\\"H\\\" chr.to.int$ int.to.chr$ }\" + \"EXECUTE {test}\");\n+        VM vm = new VM(\"FUNCTION {test} { \\\"H\\\" chr.to.int$ int.to.chr$ }\" + \"EXECUTE {test}\");\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n-            vm.run(v);\n-            Assert.assertEquals(\"H\", vm.getStack().pop());\n-            Assert.assertEquals(0, vm.getStack().size());\n-        }\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        vm.run(v);\n+        Assert.assertEquals(\"H\", vm.getStack().pop());\n+        Assert.assertEquals(0, vm.getStack().size());\n     }\n \n     @Test\n@@ -520,21 +510,19 @@ public void testFormatName() throws RecognitionException, IOException {\n             Assert.assertEquals(\"de~la Vall{\\\\'e}e~Poussin, C.~L. X.~J?\", vm.getStack().pop());\n             Assert.assertEquals(0, vm.getStack().size());\n         }\n-        {\n-            VM vm = new VM(\"ENTRY  { author }  { }  { label } \"\n-                    + \"FUNCTION {presort} { cite$ 'sort.key$ := } \" + \"ITERATE { presort } \" + \"READ \"\n-                    + \"SORT \" + \"FUNCTION {format}{ author #2 \\\"{vv~}{ll}{, jj}{, f}?\\\" format.name$ }\"\n-                    + \"ITERATE {format}\");\n+        VM vm = new VM(\"ENTRY  { author }  { }  { label } \"\n+                + \"FUNCTION {presort} { cite$ 'sort.key$ := } \" + \"ITERATE { presort } \" + \"READ \"\n+                + \"SORT \" + \"FUNCTION {format}{ author #2 \\\"{vv~}{ll}{, jj}{, f}?\\\" format.name$ }\"\n+                + \"ITERATE {format}\");\n \n-            Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n-            v.add(t1BibtexEntry());\n-            v\n-                    .add(TestVM.bibtexString2BibtexEntry(\"@book{test, author=\\\"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\\\"}\"));\n-            vm.run(v);\n-            Assert.assertEquals(\"de~la Vall{\\\\'e}e~Poussin, C.~L. X.~J?\", vm.getStack().pop());\n-            Assert.assertEquals(\"Annabi, H?\", vm.getStack().pop());\n-            Assert.assertEquals(0, vm.getStack().size());\n-        }\n+        Vector<BibtexEntry> v = new Vector<BibtexEntry>();\n+        v.add(t1BibtexEntry());\n+        v\n+                .add(TestVM.bibtexString2BibtexEntry(\"@book{test, author=\\\"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\\\'e}e Poussin\\\"}\"));\n+        vm.run(v);\n+        Assert.assertEquals(\"de~la Vall{\\\\'e}e~Poussin, C.~L. X.~J?\", vm.getStack().pop());\n+        Assert.assertEquals(\"Annabi, H?\", vm.getStack().pop());\n+        Assert.assertEquals(0, vm.getStack().size());\n     }\n \n     @Test, @@ -43,15 +43,13 @@ public String format(String fieldText) {\n             Assert.assertEquals(\"BAff\", f.format(\"f\"));\n         }\n \n-        {\n-            LayoutFormatter f = new CompositeFormat(new AuthorOrgSci(),\n-                    new NoSpaceBetweenAbbreviations());\n-            LayoutFormatter first = new AuthorOrgSci();\n-            LayoutFormatter second = new NoSpaceBetweenAbbreviations();\n+        LayoutFormatter f = new CompositeFormat(new AuthorOrgSci(),\n+                new NoSpaceBetweenAbbreviations());\n+        LayoutFormatter first = new AuthorOrgSci();\n+        LayoutFormatter second = new NoSpaceBetweenAbbreviations();\n \n-            Assert.assertEquals(second.format(first.format(\"John Flynn and Sabine Gartska\")), f.format(\"John Flynn and Sabine Gartska\"));\n-            Assert.assertEquals(second.format(first.format(\"Sa Makridakis and Sa Ca Wheelwright and Va Ea McGee\")), f.format(\"Sa Makridakis and Sa Ca Wheelwright and Va Ea McGee\"));\n-        }\n+        Assert.assertEquals(second.format(first.format(\"John Flynn and Sabine Gartska\")), f.format(\"John Flynn and Sabine Gartska\"));\n+        Assert.assertEquals(second.format(first.format(\"Sa Makridakis and Sa Ca Wheelwright and Va Ea McGee\")), f.format(\"Sa Makridakis and Sa Ca Wheelwright and Va Ea McGee\"));\n     }\n \n }, @@ -123,10 +123,9 @@ public void testFromString() throws Exception {\n             Assert.assertEquals(0, c.size());\n \n         }\n-        { // Error\n-            Collection<BibtexEntry> c = BibtexParser.fromString(\"@@article@@{{{{{{}\");\n-            Assert.assertEquals(null, c);\n-        }\n+        // Error\n+        Collection<BibtexEntry> c = BibtexParser.fromString(\"@@article@@{{{{{{}\");\n+        Assert.assertEquals(null, c);\n \n     }\n , @@ -167,14 +167,12 @@ public void testOnline() throws InterruptedException {\n             Thread.sleep(20000);\n         }\n \n-        {\n-            OAI2Fetcher fetcher = new OAI2Fetcher();\n-            be = fetcher.importOai2Entry(\"0709.3040\");\n-            Assert.assertNotNull(be);\n+        OAI2Fetcher fetcher = new OAI2Fetcher();\n+        be = fetcher.importOai2Entry(\"0709.3040\");\n+        Assert.assertNotNull(be);\n \n-            Assert.assertEquals(\"2007\", be.getField(\"year\"));\n-            Assert.assertEquals(\"#sep#\", be.getField(\"month\"));\n-        }\n+        Assert.assertEquals(\"2007\", be.getField(\"year\"));\n+        Assert.assertEquals(\"#sep#\", be.getField(\"month\"));\n \n     }\n }, @@ -127,37 +127,35 @@ public void testFindPdfInMultiple() throws IOException {\n                     .getAbsolutePath());\n         }\n \n-        {\n-            String[] dirsToSearch = new String[]{root.getAbsolutePath() + \"/pdfs/\",\n-                    root.getAbsolutePath()};\n-            String pdf = UtilFindFiles.findPdf(entry, \"pdf\", dirsToSearch);\n-            AssertUtil.assertEqualPaths(\"sub/HipKro03-sub.pdf\", pdf);\n+        String[] dirsToSearch = new String[]{root.getAbsolutePath() + \"/pdfs/\",\n+                root.getAbsolutePath()};\n+        String pdf = UtilFindFiles.findPdf(entry, \"pdf\", dirsToSearch);\n+        AssertUtil.assertEqualPaths(\"sub/HipKro03-sub.pdf\", pdf);\n \n-            File fullPath = FileUtil.expandFilename(pdf, dirsToSearch);\n-            Assert.assertNotNull(fullPath);\n-            Assert.assertTrue(fullPath.exists());\n-            AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n-                    .getAbsolutePath());\n+        File fullPath = FileUtil.expandFilename(pdf, dirsToSearch);\n+        Assert.assertNotNull(fullPath);\n+        Assert.assertTrue(fullPath.exists());\n+        AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n+                .getAbsolutePath());\n \n-            String tmp = dirsToSearch[1];\n-            dirsToSearch[1] = dirsToSearch[0];\n-            dirsToSearch[0] = tmp;\n+        String tmp = dirsToSearch[1];\n+        dirsToSearch[1] = dirsToSearch[0];\n+        dirsToSearch[0] = tmp;\n \n-            fullPath = FileUtil.expandFilename(pdf, dirsToSearch);\n-            Assert.assertNotNull(fullPath);\n-            Assert.assertTrue(fullPath.exists());\n-            AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n-                    .getAbsolutePath());\n+        fullPath = FileUtil.expandFilename(pdf, dirsToSearch);\n+        Assert.assertNotNull(fullPath);\n+        Assert.assertTrue(fullPath.exists());\n+        AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n+                .getAbsolutePath());\n \n-            fullPath = FileUtil.expandFilename(pdf, new String[]{dirsToSearch[0]});\n-            Assert.assertNull(fullPath);\n+        fullPath = FileUtil.expandFilename(pdf, new String[]{dirsToSearch[0]});\n+        Assert.assertNull(fullPath);\n \n-            fullPath = FileUtil.expandFilename(pdf, new String[]{dirsToSearch[1]});\n-            Assert.assertNotNull(fullPath);\n-            Assert.assertTrue(fullPath.exists());\n-            AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n-                    .getAbsolutePath());\n-        }\n+        fullPath = FileUtil.expandFilename(pdf, new String[]{dirsToSearch[1]});\n+        Assert.assertNotNull(fullPath);\n+        Assert.assertTrue(fullPath.exists());\n+        AssertUtil.assertEqualPaths(root.getAbsolutePath() + \"/pdfs/sub/HipKro03-sub.pdf\", fullPath\n+                .getAbsolutePath());\n \n     }\n , @@ -157,11 +157,10 @@ public void testSetGetBagListString() throws IOException {\n             Assert.assertTrue(l.get(0).equals(\"Tom DeMarco\"));\n             Assert.assertTrue(l.get(1).equals(\"Tom DeMarco\"));\n         }\n-        { // Removes both\n-            bibtex.removeBagValue(\"author\", \"Tom DeMarco\");\n-            List<String> l = bibtex.getBagList(\"author\");\n-            Assert.assertEquals(0, l.size());\n-        }\n+        // Removes both\n+        bibtex.removeBagValue(\"author\", \"Tom DeMarco\");\n+        List<String> l = bibtex.getBagList(\"author\");\n+        Assert.assertEquals(0, l.size());\n     }\n \n     @Test\n@@ -200,11 +199,10 @@ public void testGetSequenceListString() throws IOException {\n             Assert.assertTrue(l.get(0).equals(\"Kent Beck\"));\n             Assert.assertTrue(l.get(1).equals(\"Kent Beck\"));\n         }\n-        { // Remvoes all\n-            bibtex.removeSequenceValue(\"author\", \"Kent Beck\");\n-            List<String> l = bibtex.getSequenceList(\"author\");\n-            Assert.assertEquals(0, l.size());\n-        }\n+        // Remvoes all\n+        bibtex.removeSequenceValue(\"author\", \"Kent Beck\");\n+        List<String> l = bibtex.getSequenceList(\"author\");\n+        Assert.assertEquals(0, l.size());\n     }\n \n     @Test, @@ -351,28 +351,27 @@ public void testPrivacyFilter() throws IOException, TransformerException {\n \n             Assert.assertEquals(expectedFields, x.getAllFields());\n         }\n-        { // First set:\n-            prefs.putBoolean(\"useXmpPrivacyFilter\", true);\n-            prefs\n-                    .putStringArray(\n-                            JabRefPreferences.XMP_PRIVACY_FILTERS,\n-                            new String[] {\"author;title;note;booktitle;year;owner;timestamp\"});\n+        // First set:\n+        prefs.putBoolean(\"useXmpPrivacyFilter\", true);\n+        prefs\n+                .putStringArray(\n+                        JabRefPreferences.XMP_PRIVACY_FILTERS,\n+                        new String[] {\"author;title;note;booktitle;year;owner;timestamp\"});\n \n-            BibtexEntry e = t1BibtexEntry();\n+        BibtexEntry e = t1BibtexEntry();\n \n-            XMPUtil.writeXMP(pdfFile, e, null);\n+        XMPUtil.writeXMP(pdfFile, e, null);\n \n-            List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n-            Assert.assertEquals(1, l.size());\n-            BibtexEntry x = l.get(0);\n-            Set<String> ts = x.getAllFields();\n-            Assert.assertEquals(8, ts.size());\n+        List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n+        Assert.assertEquals(1, l.size());\n+        BibtexEntry x = l.get(0);\n+        Set<String> ts = x.getAllFields();\n+        Assert.assertEquals(8, ts.size());\n \n-            ts.contains(\"bibtextype\");\n-            ts.contains(\"bibtexkey\");\n-            ts.contains(\"year\");\n-            ts.contains(\"url\");\n-        }\n+        ts.contains(\"bibtextype\");\n+        ts.contains(\"bibtexkey\");\n+        ts.contains(\"year\");\n+        ts.contains(\"url\");\n \n     }\n \n@@ -538,25 +537,23 @@ public void testReadWriteXMP() throws Exception {\n     @Test\n     public void testNewlineHandling() throws Exception {\n \n-        {\n-            String bibtex = \"<bibtex:title>\\nHallo\\nWorld \\nthis \\n is\\n\\nnot \\n\\nan \\n\\n exercise \\n \\n.\\n \\n\\n</bibtex:title>\\n\"\n-                    + \"<bibtex:tabs>\\nHallo\\tWorld \\tthis \\t is\\t\\tnot \\t\\tan \\t\\n exercise \\t \\n.\\t \\n\\t</bibtex:tabs>\\n\"\n-                    + \"<bibtex:abstract>\\n\\nAbstract preserve\\n\\t Whitespace\\n\\n</bibtex:abstract>\";\n+        String bibtex = \"<bibtex:title>\\nHallo\\nWorld \\nthis \\n is\\n\\nnot \\n\\nan \\n\\n exercise \\n \\n.\\n \\n\\n</bibtex:title>\\n\"\n+                + \"<bibtex:tabs>\\nHallo\\tWorld \\tthis \\t is\\t\\tnot \\t\\tan \\t\\n exercise \\t \\n.\\t \\n\\t</bibtex:tabs>\\n\"\n+                + \"<bibtex:abstract>\\n\\nAbstract preserve\\n\\t Whitespace\\n\\n</bibtex:abstract>\";\n \n-            writeManually(pdfFile, XMPUtilTest.bibtexXPacket(XMPUtilTest.bibtexDescription(bibtex)));\n+        writeManually(pdfFile, XMPUtilTest.bibtexXPacket(XMPUtilTest.bibtexDescription(bibtex)));\n \n-            List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n-            Assert.assertEquals(1, l.size());\n-            BibtexEntry e = l.get(0);\n+        List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n+        Assert.assertEquals(1, l.size());\n+        BibtexEntry e = l.get(0);\n \n-            Assert.assertNotNull(e);\n-            Assert.assertEquals(\"Hallo World this is not an exercise .\", e\n-                    .getField(\"title\"));\n-            Assert.assertEquals(\"Hallo World this is not an exercise .\", e\n-                    .getField(\"tabs\"));\n-            Assert.assertEquals(\"\\n\\nAbstract preserve\\n\\t Whitespace\\n\\n\", e\n-                    .getField(\"abstract\"));\n-        }\n+        Assert.assertNotNull(e);\n+        Assert.assertEquals(\"Hallo World this is not an exercise .\", e\n+                .getField(\"title\"));\n+        Assert.assertEquals(\"Hallo World this is not an exercise .\", e\n+                .getField(\"tabs\"));\n+        Assert.assertEquals(\"\\n\\nAbstract preserve\\n\\t Whitespace\\n\\n\", e\n+                .getField(\"abstract\"));\n     }\n \n     /**\n@@ -735,92 +732,91 @@ public void testSimpleUpdate() throws Exception {\n             }\n         }\n \n-        { // Now alter the Bibtex entry, write it and do all the checks again\n-            BibtexEntry toSet = t1BibtexEntry();\n-            toSet.setField(\"author\", \"Pokemon!\");\n-\n-            XMPUtil.writeXMP(pdfFile, toSet, null);\n-\n-            List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n-            Assert.assertEquals(1, l.size());\n-            BibtexEntry e = l.get(0);\n-\n-            assertEqualsBibtexEntry(toSet, e);\n+        // Now alter the Bibtex entry, write it and do all the checks again\n+        BibtexEntry toSet = t1BibtexEntry();\n+        toSet.setField(\"author\", \"Pokemon!\");\n \n-            // This is what we really want to test: Is the rest of the\n-            // descriptions still there?\n+        XMPUtil.writeXMP(pdfFile, toSet, null);\n \n-            PDDocument document = null;\n-            try {\n-                document = PDDocument.load(pdfFile.getAbsoluteFile());\n-                if (document.isEncrypted()) {\n-                    throw new IOException(\n-                            \"Error: Cannot read metadata from encrypted document.\");\n-                }\n-                PDDocumentCatalog catalog = document.getDocumentCatalog();\n-                PDMetadata metaRaw = catalog.getMetadata();\n+        List<BibtexEntry> l = XMPUtil.readXMP(pdfFile.getAbsoluteFile());\n+        Assert.assertEquals(1, l.size());\n+        BibtexEntry e = l.get(0);\n \n-                XMPMetadata meta;\n-                if (metaRaw != null) {\n-                    meta = new XMPMetadata(XMLUtil.parse(metaRaw\n-                            .createInputStream()));\n-                } else {\n-                    meta = new XMPMetadata();\n-                }\n-                meta.addXMLNSMapping(XMPSchemaBibtex.NAMESPACE,\n-                        XMPSchemaBibtex.class);\n+        assertEqualsBibtexEntry(toSet, e);\n \n-                List<XMPSchema> schemas = meta.getSchemas();\n+        // This is what we really want to test: Is the rest of the\n+        // descriptions still there?\n \n-                Assert.assertEquals(4, schemas.size());\n+        PDDocument document = null;\n+        try {\n+            document = PDDocument.load(pdfFile.getAbsoluteFile());\n+            if (document.isEncrypted()) {\n+                throw new IOException(\n+                        \"Error: Cannot read metadata from encrypted document.\");\n+            }\n+            PDDocumentCatalog catalog = document.getDocumentCatalog();\n+            PDMetadata metaRaw = catalog.getMetadata();\n \n-                schemas = meta\n-                        .getSchemasByNamespaceURI(XMPSchemaBibtex.NAMESPACE);\n-                Assert.assertEquals(1, schemas.size());\n+            XMPMetadata meta;\n+            if (metaRaw != null) {\n+                meta = new XMPMetadata(XMLUtil.parse(metaRaw\n+                        .createInputStream()));\n+            } else {\n+                meta = new XMPMetadata();\n+            }\n+            meta.addXMLNSMapping(XMPSchemaBibtex.NAMESPACE,\n+                    XMPSchemaBibtex.class);\n \n-                schemas = meta\n-                        .getSchemasByNamespaceURI(XMPSchemaDublinCore.NAMESPACE);\n-                Assert.assertEquals(1, schemas.size());\n-                XMPSchemaDublinCore dc = (XMPSchemaDublinCore) schemas.get(0);\n-                Assert.assertEquals(\"application/pdf\", dc.getFormat());\n+            List<XMPSchema> schemas = meta.getSchemas();\n \n-                schemas = meta\n-                        .getSchemasByNamespaceURI(XMPSchemaBasic.NAMESPACE);\n-                Assert.assertEquals(1, schemas.size());\n-                XMPSchemaBasic bs = (XMPSchemaBasic) schemas.get(0);\n-                Assert.assertEquals(\"Acrobat PDFMaker 7.0.7\", bs.getCreatorTool());\n+            Assert.assertEquals(4, schemas.size());\n \n-                Calendar c = Calendar.getInstance();\n-                c.clear();\n-                c.set(Calendar.YEAR, 2006);\n-                c.set(Calendar.MONTH, 7);\n-                c.set(Calendar.DATE, 7);\n-                c.set(Calendar.HOUR, 14);\n-                c.set(Calendar.MINUTE, 44);\n-                c.set(Calendar.SECOND, 24);\n-                c.setTimeZone(TimeZone.getTimeZone(\"GMT+2\"));\n-\n-                Calendar other = bs.getCreateDate();\n+            schemas = meta\n+                    .getSchemasByNamespaceURI(XMPSchemaBibtex.NAMESPACE);\n+            Assert.assertEquals(1, schemas.size());\n \n-                Assert.assertEquals(c.get(Calendar.YEAR), other.get(Calendar.YEAR));\n-                Assert.assertEquals(c.get(Calendar.MONTH), other.get(Calendar.MONTH));\n-                Assert.assertEquals(c.get(Calendar.DATE), other.get(Calendar.DATE));\n-                Assert.assertEquals(c.get(Calendar.HOUR), other.get(Calendar.HOUR));\n-                Assert.assertEquals(c.get(Calendar.MINUTE), other.get(Calendar.MINUTE));\n-                Assert.assertEquals(c.get(Calendar.SECOND), other.get(Calendar.SECOND));\n-                Assert.assertTrue(c.getTimeZone().hasSameRules(other.getTimeZone()));\n+            schemas = meta\n+                    .getSchemasByNamespaceURI(XMPSchemaDublinCore.NAMESPACE);\n+            Assert.assertEquals(1, schemas.size());\n+            XMPSchemaDublinCore dc = (XMPSchemaDublinCore) schemas.get(0);\n+            Assert.assertEquals(\"application/pdf\", dc.getFormat());\n \n-                schemas = meta\n-                        .getSchemasByNamespaceURI(XMPSchemaMediaManagement.NAMESPACE);\n-                Assert.assertEquals(1, schemas.size());\n-                XMPSchemaMediaManagement mm = (XMPSchemaMediaManagement) schemas\n-                        .get(0);\n-                Assert.assertEquals(\"17\", mm.getSequenceList(\"xapMM:VersionID\").get(0));\n+            schemas = meta\n+                    .getSchemasByNamespaceURI(XMPSchemaBasic.NAMESPACE);\n+            Assert.assertEquals(1, schemas.size());\n+            XMPSchemaBasic bs = (XMPSchemaBasic) schemas.get(0);\n+            Assert.assertEquals(\"Acrobat PDFMaker 7.0.7\", bs.getCreatorTool());\n+\n+            Calendar c = Calendar.getInstance();\n+            c.clear();\n+            c.set(Calendar.YEAR, 2006);\n+            c.set(Calendar.MONTH, 7);\n+            c.set(Calendar.DATE, 7);\n+            c.set(Calendar.HOUR, 14);\n+            c.set(Calendar.MINUTE, 44);\n+            c.set(Calendar.SECOND, 24);\n+            c.setTimeZone(TimeZone.getTimeZone(\"GMT+2\"));\n+\n+            Calendar other = bs.getCreateDate();\n+\n+            Assert.assertEquals(c.get(Calendar.YEAR), other.get(Calendar.YEAR));\n+            Assert.assertEquals(c.get(Calendar.MONTH), other.get(Calendar.MONTH));\n+            Assert.assertEquals(c.get(Calendar.DATE), other.get(Calendar.DATE));\n+            Assert.assertEquals(c.get(Calendar.HOUR), other.get(Calendar.HOUR));\n+            Assert.assertEquals(c.get(Calendar.MINUTE), other.get(Calendar.MINUTE));\n+            Assert.assertEquals(c.get(Calendar.SECOND), other.get(Calendar.SECOND));\n+            Assert.assertTrue(c.getTimeZone().hasSameRules(other.getTimeZone()));\n+\n+            schemas = meta\n+                    .getSchemasByNamespaceURI(XMPSchemaMediaManagement.NAMESPACE);\n+            Assert.assertEquals(1, schemas.size());\n+            XMPSchemaMediaManagement mm = (XMPSchemaMediaManagement) schemas\n+                    .get(0);\n+            Assert.assertEquals(\"17\", mm.getSequenceList(\"xapMM:VersionID\").get(0));\n \n-            } finally {\n-                if (document != null) {\n-                    document.close();\n-                }\n+        } finally {\n+            if (document != null) {\n+                document.close();\n             }\n         }\n     }\n@@ -1288,44 +1284,42 @@ public void testCommandLineSinglePdf() throws Exception {\n \n             assertEqualsBibtexEntry(e, x);\n         }\n-        {\n-            // Write XMP to file\n-            BibtexEntry e = t1BibtexEntry();\n+        // Write XMP to file\n+        BibtexEntry e = t1BibtexEntry();\n \n-            XMPUtil.writeXMP(pdfFile, e, null);\n+        XMPUtil.writeXMP(pdfFile, e, null);\n \n-            ByteArrayOutputStream s = new ByteArrayOutputStream();\n-            PrintStream oldOut = System.out;\n-            System.setOut(new PrintStream(s));\n-            XMPUtil.main(new String[] {\"-x\", pdfFile.getAbsolutePath()});\n-            System.setOut(oldOut);\n-            s.close();\n-            String xmp = s.toString();\n+        ByteArrayOutputStream s = new ByteArrayOutputStream();\n+        PrintStream oldOut = System.out;\n+        System.setOut(new PrintStream(s));\n+        XMPUtil.main(new String[] {\"-x\", pdfFile.getAbsolutePath()});\n+        System.setOut(oldOut);\n+        s.close();\n+        String xmp = s.toString();\n \n             /* Test minimal syntaxical completeness */\n-            Assert.assertTrue(xmp.indexOf(\"xpacket\") > 0);\n-            Assert.assertTrue(xmp.indexOf(\"adobe:ns:meta\") > 0);\n-            Assert.assertTrue((xmp\n-                    .indexOf(\"<bibtex:bibtexkey>canh05</bibtex:bibtexkey>\") > 0)\n-                    || (xmp.indexOf(\"bibtex:bibtexkey=\") > 0));\n-            Assert.assertTrue(xmp.indexOf(\"<rdf:li>K. Crowston</rdf:li>\") > 0);\n-            Assert.assertTrue((xmp.indexOf(\"id='W5M0MpCehiHzreSzNTczkc9d'?>\") > 0)\n-                    || (xmp.indexOf(\"id=\\\"W5M0MpCehiHzreSzNTczkc9d\\\"?>\") > 0));\n-            Assert.assertTrue((xmp\n-                    .indexOf(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\") > 0)\n-                    || (xmp\n-                    .indexOf(\"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\") > 0));\n-            Assert.assertTrue(xmp.indexOf(\"<rdf:Description\") > 0);\n-            Assert.assertTrue((xmp.indexOf(\"<?xpacket end='w'?>\") > 0)\n-                    || (xmp.indexOf(\"<?xpacket end=\\\"w\\\"?>\") > 0));\n+        Assert.assertTrue(xmp.indexOf(\"xpacket\") > 0);\n+        Assert.assertTrue(xmp.indexOf(\"adobe:ns:meta\") > 0);\n+        Assert.assertTrue((xmp\n+                .indexOf(\"<bibtex:bibtexkey>canh05</bibtex:bibtexkey>\") > 0)\n+                || (xmp.indexOf(\"bibtex:bibtexkey=\") > 0));\n+        Assert.assertTrue(xmp.indexOf(\"<rdf:li>K. Crowston</rdf:li>\") > 0);\n+        Assert.assertTrue((xmp.indexOf(\"id='W5M0MpCehiHzreSzNTczkc9d'?>\") > 0)\n+                || (xmp.indexOf(\"id=\\\"W5M0MpCehiHzreSzNTczkc9d\\\"?>\") > 0));\n+        Assert.assertTrue((xmp\n+                .indexOf(\"xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\") > 0)\n+                || (xmp\n+                .indexOf(\"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\") > 0));\n+        Assert.assertTrue(xmp.indexOf(\"<rdf:Description\") > 0);\n+        Assert.assertTrue((xmp.indexOf(\"<?xpacket end='w'?>\") > 0)\n+                || (xmp.indexOf(\"<?xpacket end=\\\"w\\\"?>\") > 0));\n \n             /* Test contents of string */\n-            writeManually(pdfFile, xmp);\n-            List<BibtexEntry> l = XMPUtil.readXMP(pdfFile);\n-            Assert.assertEquals(1, l.size());\n+        writeManually(pdfFile, xmp);\n+        List<BibtexEntry> l = XMPUtil.readXMP(pdfFile);\n+        Assert.assertEquals(1, l.size());\n \n-            assertEqualsBibtexEntry(t1BibtexEntry(), l.get(0));\n-        }\n+        assertEqualsBibtexEntry(t1BibtexEntry(), l.get(0));\n     }\n \n     /**\n@@ -1363,23 +1357,22 @@ public void testCommandLineByKey() throws Exception {\n                 Assert.assertEquals(1, l.size());\n                 assertEqualsBibtexEntry(t1BibtexEntry(), l.get(0));\n             }\n-            { // Now try OezbekC06\n-                ByteArrayOutputStream s = new ByteArrayOutputStream();\n-                PrintStream oldOut = System.out;\n-                System.setOut(new PrintStream(s));\n-                try {\n-                    XMPUtil.main(new String[] {\"OezbekC06\",\n-                            tempBib.getAbsolutePath(), pdfFile.getAbsolutePath()});\n-                } finally {\n-                    System.setOut(oldOut);\n-                    s.close();\n-                }\n-\n-                // PDF should be annotated:\n-                List<BibtexEntry> l = XMPUtil.readXMP(pdfFile);\n-                Assert.assertEquals(1, l.size());\n-                assertEqualsBibtexEntry(t2BibtexEntry(), l.get(0));\n+            // Now try OezbekC06\n+            ByteArrayOutputStream s = new ByteArrayOutputStream();\n+            PrintStream oldOut = System.out;\n+            System.setOut(new PrintStream(s));\n+            try {\n+                XMPUtil.main(new String[] {\"OezbekC06\",\n+                        tempBib.getAbsolutePath(), pdfFile.getAbsolutePath()});\n+            } finally {\n+                System.setOut(oldOut);\n+                s.close();\n             }\n+\n+            // PDF should be annotated:\n+            List<BibtexEntry> l = XMPUtil.readXMP(pdfFile);\n+            Assert.assertEquals(1, l.size());\n+            assertEqualsBibtexEntry(t2BibtexEntry(), l.get(0));\n         } finally {\n             if (fileWriter != null) {\n                 fileWriter.close();, ", 667, 721, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 1388], ["stefan-kolb", "Add myself to the list of contributors", "07/29/15, 05:30:11 PM", "stefan-kolb", "120eae8d1ad95c69edef8345fec2269406ce55e4", ["src/main/resources/help/About.html"], "@@ -75,6 +75,7 @@ <h2>Contributions from:</h2>\n         Philip Johnson,\n         Bernd Kalbfuss,\n         Martin K&auml;hmer,\n+        Stefan Kolb,\n         Ervin Kolenovic,\n         Krzysztof A. Ko&#347;ciuszkiewicz,\n         Christian Kopf,, ", 1, 0, "\"modified, \"", 1], ["stefan-kolb", "Use GPL2 as current license", "07/29/15, 06:14:40 PM", "stefan-kolb", "f54dcec3a86d32ab642b8b97fc7c7ea73478a250", ["LICENSE", "README.md", "build.xml", "gpl3.txt", "src/main/resources/windows/nsis/setup.nsi"], "None, @@ -138,6 +138,7 @@ JabRef is free software: you can redistribute it and/or modify it under the\n terms of the GNU General Public License as published by the Free Software\n Foundation, either version 2 of the License, or (at your option) any later\n version.\n-See the enclosed text files [gpl2.txt](gpl2.txt) and [gpl3.txt](gpl3.txt) for full details.\n+See the [LICENSE](LICENSE) for full details.\n \n-JabRef also uses libraries distributed by other parties; see the About box for details.\n+JabRef also uses libraries distributed by other parties.\n+See [external libraries](external-libraries.txt) for details., @@ -168,8 +168,7 @@\n \t\t\t\t<include name=\"plugins/**\" />\n \t\t\t</fileset>\n \t\t\t<fileset dir=\"${txt.dir}\">\n-\t\t\t\t<include name=\"gpl2.txt\" />\n-\t\t\t\t<include name=\"gpl3.txt\" />\n+\t\t\t\t<include name=\"LICENSE\" />\n \t\t\t\t<include name=\"README.md\" />\n \t\t\t</fileset>\n \t\t\t<manifest>\n@@ -444,10 +443,8 @@ version=${jabref.version}</echo>\n \n \t\t<copy todir=\"${win.installer.dir}/dist\">\n \t\t\t<fileset dir=\"${txt.dir}\">\n-\t\t\t\t<include name=\"gpl2.txt\" />\n-\t\t\t\t<include name=\"gpl3.txt\" />\n-\t\t\t\t<include name=\"lesser.txt\" />\n-\t\t\t\t<include name=\"README\" />\n+\t\t\t\t<include name=\"LICENSE\" />\n+\t\t\t\t<include name=\"README.md\" />\n \t\t\t</fileset>\n \t\t</copy>\n , @@ -1,674 +0,0 @@\n-                    GNU GENERAL PUBLIC LICENSE\n-                       Version 3, 29 June 2007\n-\n- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-                            Preamble\n-\n-  The GNU General Public License is a free, copyleft license for\n-software and other kinds of works.\n-\n-  The licenses for most software and other practical works are designed\n-to take away your freedom to share and change the works.  By contrast,\n-the GNU General Public License is intended to guarantee your freedom to\n-share and change all versions of a program--to make sure it remains free\n-software for all its users.  We, the Free Software Foundation, use the\n-GNU General Public License for most of our software; it applies also to\n-any other work released this way by its authors.  You can apply it to\n-your programs, too.\n-\n-  When we speak of free software, we are referring to freedom, not\n-price.  Our General Public Licenses are designed to make sure that you\n-have the freedom to distribute copies of free software (and charge for\n-them if you wish), that you receive source code or can get it if you\n-want it, that you can change the software or use pieces of it in new\n-free programs, and that you know you can do these things.\n-\n-  To protect your rights, we need to prevent others from denying you\n-these rights or asking you to surrender the rights.  Therefore, you have\n-certain responsibilities if you distribute copies of the software, or if\n-you modify it: responsibilities to respect the freedom of others.\n-\n-  For example, if you distribute copies of such a program, whether\n-gratis or for a fee, you must pass on to the recipients the same\n-freedoms that you received.  You must make sure that they, too, receive\n-or can get the source code.  And you must show them these terms so they\n-know their rights.\n-\n-  Developers that use the GNU GPL protect your rights with two steps:\n-(1) assert copyright on the software, and (2) offer you this License\n-giving you legal permission to copy, distribute and/or modify it.\n-\n-  For the developers' and authors' protection, the GPL clearly explains\n-that there is no warranty for this free software.  For both users' and\n-authors' sake, the GPL requires that modified versions be marked as\n-changed, so that their problems will not be attributed erroneously to\n-authors of previous versions.\n-\n-  Some devices are designed to deny users access to install or run\n-modified versions of the software inside them, although the manufacturer\n-can do so.  This is fundamentally incompatible with the aim of\n-protecting users' freedom to change the software.  The systematic\n-pattern of such abuse occurs in the area of products for individuals to\n-use, which is precisely where it is most unacceptable.  Therefore, we\n-have designed this version of the GPL to prohibit the practice for those\n-products.  If such problems arise substantially in other domains, we\n-stand ready to extend this provision to those domains in future versions\n-of the GPL, as needed to protect the freedom of users.\n-\n-  Finally, every program is threatened constantly by software patents.\n-States should not allow patents to restrict development and use of\n-software on general-purpose computers, but in those that do, we wish to\n-avoid the special danger that patents applied to a free program could\n-make it effectively proprietary.  To prevent this, the GPL assures that\n-patents cannot be used to render the program non-free.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.\n-\n-                       TERMS AND CONDITIONS\n-\n-  0. Definitions.\n-\n-  \"This License\" refers to version 3 of the GNU General Public License.\n-\n-  \"Copyright\" also means copyright-like laws that apply to other kinds of\n-works, such as semiconductor masks.\n-\n-  \"The Program\" refers to any copyrightable work licensed under this\n-License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n-\"recipients\" may be individuals or organizations.\n-\n-  To \"modify\" a work means to copy from or adapt all or part of the work\n-in a fashion requiring copyright permission, other than the making of an\n-exact copy.  The resulting work is called a \"modified version\" of the\n-earlier work or a work \"based on\" the earlier work.\n-\n-  A \"covered work\" means either the unmodified Program or a work based\n-on the Program.\n-\n-  To \"propagate\" a work means to do anything with it that, without\n-permission, would make you directly or secondarily liable for\n-infringement under applicable copyright law, except executing it on a\n-computer or modifying a private copy.  Propagation includes copying,\n-distribution (with or without modification), making available to the\n-public, and in some countries other activities as well.\n-\n-  To \"convey\" a work means any kind of propagation that enables other\n-parties to make or receive copies.  Mere interaction with a user through\n-a computer network, with no transfer of a copy, is not conveying.\n-\n-  An interactive user interface displays \"Appropriate Legal Notices\"\n-to the extent that it includes a convenient and prominently visible\n-feature that (1) displays an appropriate copyright notice, and (2)\n-tells the user that there is no warranty for the work (except to the\n-extent that warranties are provided), that licensees may convey the\n-work under this License, and how to view a copy of this License.  If\n-the interface presents a list of user commands or options, such as a\n-menu, a prominent item in the list meets this criterion.\n-\n-  1. Source Code.\n-\n-  The \"source code\" for a work means the preferred form of the work\n-for making modifications to it.  \"Object code\" means any non-source\n-form of a work.\n-\n-  A \"Standard Interface\" means an interface that either is an official\n-standard defined by a recognized standards body, or, in the case of\n-interfaces specified for a particular programming language, one that\n-is widely used among developers working in that language.\n-\n-  The \"System Libraries\" of an executable work include anything, other\n-than the work as a whole, that (a) is included in the normal form of\n-packaging a Major Component, but which is not part of that Major\n-Component, and (b) serves only to enable use of the work with that\n-Major Component, or to implement a Standard Interface for which an\n-implementation is available to the public in source code form.  A\n-\"Major Component\", in this context, means a major essential component\n-(kernel, window system, and so on) of the specific operating system\n-(if any) on which the executable work runs, or a compiler used to\n-produce the work, or an object code interpreter used to run it.\n-\n-  The \"Corresponding Source\" for a work in object code form means all\n-the source code needed to generate, install, and (for an executable\n-work) run the object code and to modify the work, including scripts to\n-control those activities.  However, it does not include the work's\n-System Libraries, or general-purpose tools or generally available free\n-programs which are used unmodified in performing those activities but\n-which are not part of the work.  For example, Corresponding Source\n-includes interface definition files associated with source files for\n-the work, and the source code for shared libraries and dynamically\n-linked subprograms that the work is specifically designed to require,\n-such as by intimate data communication or control flow between those\n-subprograms and other parts of the work.\n-\n-  The Corresponding Source need not include anything that users\n-can regenerate automatically from other parts of the Corresponding\n-Source.\n-\n-  The Corresponding Source for a work in source code form is that\n-same work.\n-\n-  2. Basic Permissions.\n-\n-  All rights granted under this License are granted for the term of\n-copyright on the Program, and are irrevocable provided the stated\n-conditions are met.  This License explicitly affirms your unlimited\n-permission to run the unmodified Program.  The output from running a\n-covered work is covered by this License only if the output, given its\n-content, constitutes a covered work.  This License acknowledges your\n-rights of fair use or other equivalent, as provided by copyright law.\n-\n-  You may make, run and propagate covered works that you do not\n-convey, without conditions so long as your license otherwise remains\n-in force.  You may convey covered works to others for the sole purpose\n-of having them make modifications exclusively for you, or provide you\n-with facilities for running those works, provided that you comply with\n-the terms of this License in conveying all material for which you do\n-not control copyright.  Those thus making or running the covered works\n-for you must do so exclusively on your behalf, under your direction\n-and control, on terms that prohibit them from making any copies of\n-your copyrighted material outside their relationship with you.\n-\n-  Conveying under any other circumstances is permitted solely under\n-the conditions stated below.  Sublicensing is not allowed; section 10\n-makes it unnecessary.\n-\n-  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n-\n-  No covered work shall be deemed part of an effective technological\n-measure under any applicable law fulfilling obligations under article\n-11 of the WIPO copyright treaty adopted on 20 December 1996, or\n-similar laws prohibiting or restricting circumvention of such\n-measures.\n-\n-  When you convey a covered work, you waive any legal power to forbid\n-circumvention of technological measures to the extent such circumvention\n-is effected by exercising rights under this License with respect to\n-the covered work, and you disclaim any intention to limit operation or\n-modification of the work as a means of enforcing, against the work's\n-users, your or third parties' legal rights to forbid circumvention of\n-technological measures.\n-\n-  4. Conveying Verbatim Copies.\n-\n-  You may convey verbatim copies of the Program's source code as you\n-receive it, in any medium, provided that you conspicuously and\n-appropriately publish on each copy an appropriate copyright notice;\n-keep intact all notices stating that this License and any\n-non-permissive terms added in accord with section 7 apply to the code;\n-keep intact all notices of the absence of any warranty; and give all\n-recipients a copy of this License along with the Program.\n-\n-  You may charge any price or no price for each copy that you convey,\n-and you may offer support or warranty protection for a fee.\n-\n-  5. Conveying Modified Source Versions.\n-\n-  You may convey a work based on the Program, or the modifications to\n-produce it from the Program, in the form of source code under the\n-terms of section 4, provided that you also meet all of these conditions:\n-\n-    a) The work must carry prominent notices stating that you modified\n-    it, and giving a relevant date.\n-\n-    b) The work must carry prominent notices stating that it is\n-    released under this License and any conditions added under section\n-    7.  This requirement modifies the requirement in section 4 to\n-    \"keep intact all notices\".\n-\n-    c) You must license the entire work, as a whole, under this\n-    License to anyone who comes into possession of a copy.  This\n-    License will therefore apply, along with any applicable section 7\n-    additional terms, to the whole of the work, and all its parts,\n-    regardless of how they are packaged.  This License gives no\n-    permission to license the work in any other way, but it does not\n-    invalidate such permission if you have separately received it.\n-\n-    d) If the work has interactive user interfaces, each must display\n-    Appropriate Legal Notices; however, if the Program has interactive\n-    interfaces that do not display Appropriate Legal Notices, your\n-    work need not make them do so.\n-\n-  A compilation of a covered work with other separate and independent\n-works, which are not by their nature extensions of the covered work,\n-and which are not combined with it such as to form a larger program,\n-in or on a volume of a storage or distribution medium, is called an\n-\"aggregate\" if the compilation and its resulting copyright are not\n-used to limit the access or legal rights of the compilation's users\n-beyond what the individual works permit.  Inclusion of a covered work\n-in an aggregate does not cause this License to apply to the other\n-parts of the aggregate.\n-\n-  6. Conveying Non-Source Forms.\n-\n-  You may convey a covered work in object code form under the terms\n-of sections 4 and 5, provided that you also convey the\n-machine-readable Corresponding Source under the terms of this License,\n-in one of these ways:\n-\n-    a) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by the\n-    Corresponding Source fixed on a durable physical medium\n-    customarily used for software interchange.\n-\n-    b) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by a\n-    written offer, valid for at least three years and valid for as\n-    long as you offer spare parts or customer support for that product\n-    model, to give anyone who possesses the object code either (1) a\n-    copy of the Corresponding Source for all the software in the\n-    product that is covered by this License, on a durable physical\n-    medium customarily used for software interchange, for a price no\n-    more than your reasonable cost of physically performing this\n-    conveying of source, or (2) access to copy the\n-    Corresponding Source from a network server at no charge.\n-\n-    c) Convey individual copies of the object code with a copy of the\n-    written offer to provide the Corresponding Source.  This\n-    alternative is allowed only occasionally and noncommercially, and\n-    only if you received the object code with such an offer, in accord\n-    with subsection 6b.\n-\n-    d) Convey the object code by offering access from a designated\n-    place (gratis or for a charge), and offer equivalent access to the\n-    Corresponding Source in the same way through the same place at no\n-    further charge.  You need not require recipients to copy the\n-    Corresponding Source along with the object code.  If the place to\n-    copy the object code is a network server, the Corresponding Source\n-    may be on a different server (operated by you or a third party)\n-    that supports equivalent copying facilities, provided you maintain\n-    clear directions next to the object code saying where to find the\n-    Corresponding Source.  Regardless of what server hosts the\n-    Corresponding Source, you remain obligated to ensure that it is\n-    available for as long as needed to satisfy these requirements.\n-\n-    e) Convey the object code using peer-to-peer transmission, provided\n-    you inform other peers where the object code and Corresponding\n-    Source of the work are being offered to the general public at no\n-    charge under subsection 6d.\n-\n-  A separable portion of the object code, whose source code is excluded\n-from the Corresponding Source as a System Library, need not be\n-included in conveying the object code work.\n-\n-  A \"User Product\" is either (1) a \"consumer product\", which means any\n-tangible personal property which is normally used for personal, family,\n-or household purposes, or (2) anything designed or sold for incorporation\n-into a dwelling.  In determining whether a product is a consumer product,\n-doubtful cases shall be resolved in favor of coverage.  For a particular\n-product received by a particular user, \"normally used\" refers to a\n-typical or common use of that class of product, regardless of the status\n-of the particular user or of the way in which the particular user\n-actually uses, or expects or is expected to use, the product.  A product\n-is a consumer product regardless of whether the product has substantial\n-commercial, industrial or non-consumer uses, unless such uses represent\n-the only significant mode of use of the product.\n-\n-  \"Installation Information\" for a User Product means any methods,\n-procedures, authorization keys, or other information required to install\n-and execute modified versions of a covered work in that User Product from\n-a modified version of its Corresponding Source.  The information must\n-suffice to ensure that the continued functioning of the modified object\n-code is in no case prevented or interfered with solely because\n-modification has been made.\n-\n-  If you convey an object code work under this section in, or with, or\n-specifically for use in, a User Product, and the conveying occurs as\n-part of a transaction in which the right of possession and use of the\n-User Product is transferred to the recipient in perpetuity or for a\n-fixed term (regardless of how the transaction is characterized), the\n-Corresponding Source conveyed under this section must be accompanied\n-by the Installation Information.  But this requirement does not apply\n-if neither you nor any third party retains the ability to install\n-modified object code on the User Product (for example, the work has\n-been installed in ROM).\n-\n-  The requirement to provide Installation Information does not include a\n-requirement to continue to provide support service, warranty, or updates\n-for a work that has been modified or installed by the recipient, or for\n-the User Product in which it has been modified or installed.  Access to a\n-network may be denied when the modification itself materially and\n-adversely affects the operation of the network or violates the rules and\n-protocols for communication across the network.\n-\n-  Corresponding Source conveyed, and Installation Information provided,\n-in accord with this section must be in a format that is publicly\n-documented (and with an implementation available to the public in\n-source code form), and must require no special password or key for\n-unpacking, reading or copying.\n-\n-  7. Additional Terms.\n-\n-  \"Additional permissions\" are terms that supplement the terms of this\n-License by making exceptions from one or more of its conditions.\n-Additional permissions that are applicable to the entire Program shall\n-be treated as though they were included in this License, to the extent\n-that they are valid under applicable law.  If additional permissions\n-apply only to part of the Program, that part may be used separately\n-under those permissions, but the entire Program remains governed by\n-this License without regard to the additional permissions.\n-\n-  When you convey a copy of a covered work, you may at your option\n-remove any additional permissions from that copy, or from any part of\n-it.  (Additional permissions may be written to require their own\n-removal in certain cases when you modify the work.)  You may place\n-additional permissions on material, added by you to a covered work,\n-for which you have or can give appropriate copyright permission.\n-\n-  Notwithstanding any other provision of this License, for material you\n-add to a covered work, you may (if authorized by the copyright holders of\n-that material) supplement the terms of this License with terms:\n-\n-    a) Disclaiming warranty or limiting liability differently from the\n-    terms of sections 15 and 16 of this License; or\n-\n-    b) Requiring preservation of specified reasonable legal notices or\n-    author attributions in that material or in the Appropriate Legal\n-    Notices displayed by works containing it; or\n-\n-    c) Prohibiting misrepresentation of the origin of that material, or\n-    requiring that modified versions of such material be marked in\n-    reasonable ways as different from the original version; or\n-\n-    d) Limiting the use for publicity purposes of names of licensors or\n-    authors of the material; or\n-\n-    e) Declining to grant rights under trademark law for use of some\n-    trade names, trademarks, or service marks; or\n-\n-    f) Requiring indemnification of licensors and authors of that\n-    material by anyone who conveys the material (or modified versions of\n-    it) with contractual assumptions of liability to the recipient, for\n-    any liability that these contractual assumptions directly impose on\n-    those licensors and authors.\n-\n-  All other non-permissive additional terms are considered \"further\n-restrictions\" within the meaning of section 10.  If the Program as you\n-received it, or any part of it, contains a notice stating that it is\n-governed by this License along with a term that is a further\n-restriction, you may remove that term.  If a license document contains\n-a further restriction but permits relicensing or conveying under this\n-License, you may add to a covered work material governed by the terms\n-of that license document, provided that the further restriction does\n-not survive such relicensing or conveying.\n-\n-  If you add terms to a covered work in accord with this section, you\n-must place, in the relevant source files, a statement of the\n-additional terms that apply to those files, or a notice indicating\n-where to find the applicable terms.\n-\n-  Additional terms, permissive or non-permissive, may be stated in the\n-form of a separately written license, or stated as exceptions;\n-the above requirements apply either way.\n-\n-  8. Termination.\n-\n-  You may not propagate or modify a covered work except as expressly\n-provided under this License.  Any attempt otherwise to propagate or\n-modify it is void, and will automatically terminate your rights under\n-this License (including any patent licenses granted under the third\n-paragraph of section 11).\n-\n-  However, if you cease all violation of this License, then your\n-license from a particular copyright holder is reinstated (a)\n-provisionally, unless and until the copyright holder explicitly and\n-finally terminates your license, and (b) permanently, if the copyright\n-holder fails to notify you of the violation by some reasonable means\n-prior to 60 days after the cessation.\n-\n-  Moreover, your license from a particular copyright holder is\n-reinstated permanently if the copyright holder notifies you of the\n-violation by some reasonable means, this is the first time you have\n-received notice of violation of this License (for any work) from that\n-copyright holder, and you cure the violation prior to 30 days after\n-your receipt of the notice.\n-\n-  Termination of your rights under this section does not terminate the\n-licenses of parties who have received copies or rights from you under\n-this License.  If your rights have been terminated and not permanently\n-reinstated, you do not qualify to receive new licenses for the same\n-material under section 10.\n-\n-  9. Acceptance Not Required for Having Copies.\n-\n-  You are not required to accept this License in order to receive or\n-run a copy of the Program.  Ancillary propagation of a covered work\n-occurring solely as a consequence of using peer-to-peer transmission\n-to receive a copy likewise does not require acceptance.  However,\n-nothing other than this License grants you permission to propagate or\n-modify any covered work.  These actions infringe copyright if you do\n-not accept this License.  Therefore, by modifying or propagating a\n-covered work, you indicate your acceptance of this License to do so.\n-\n-  10. Automatic Licensing of Downstream Recipients.\n-\n-  Each time you convey a covered work, the recipient automatically\n-receives a license from the original licensors, to run, modify and\n-propagate that work, subject to this License.  You are not responsible\n-for enforcing compliance by third parties with this License.\n-\n-  An \"entity transaction\" is a transaction transferring control of an\n-organization, or substantially all assets of one, or subdividing an\n-organization, or merging organizations.  If propagation of a covered\n-work results from an entity transaction, each party to that\n-transaction who receives a copy of the work also receives whatever\n-licenses to the work the party's predecessor in interest had or could\n-give under the previous paragraph, plus a right to possession of the\n-Corresponding Source of the work from the predecessor in interest, if\n-the predecessor has it or can get it with reasonable efforts.\n-\n-  You may not impose any further restrictions on the exercise of the\n-rights granted or affirmed under this License.  For example, you may\n-not impose a license fee, royalty, or other charge for exercise of\n-rights granted under this License, and you may not initiate litigation\n-(including a cross-claim or counterclaim in a lawsuit) alleging that\n-any patent claim is infringed by making, using, selling, offering for\n-sale, or importing the Program or any portion of it.\n-\n-  11. Patents.\n-\n-  A \"contributor\" is a copyright holder who authorizes use under this\n-License of the Program or a work on which the Program is based.  The\n-work thus licensed is called the contributor's \"contributor version\".\n-\n-  A contributor's \"essential patent claims\" are all patent claims\n-owned or controlled by the contributor, whether already acquired or\n-hereafter acquired, that would be infringed by some manner, permitted\n-by this License, of making, using, or selling its contributor version,\n-but do not include claims that would be infringed only as a\n-consequence of further modification of the contributor version.  For\n-purposes of this definition, \"control\" includes the right to grant\n-patent sublicenses in a manner consistent with the requirements of\n-this License.\n-\n-  Each contributor grants you a non-exclusive, worldwide, royalty-free\n-patent license under the contributor's essential patent claims, to\n-make, use, sell, offer for sale, import and otherwise run, modify and\n-propagate the contents of its contributor version.\n-\n-  In the following three paragraphs, a \"patent license\" is any express\n-agreement or commitment, however denominated, not to enforce a patent\n-(such as an express permission to practice a patent or covenant not to\n-sue for patent infringement).  To \"grant\" such a patent license to a\n-party means to make such an agreement or commitment not to enforce a\n-patent against the party.\n-\n-  If you convey a covered work, knowingly relying on a patent license,\n-and the Corresponding Source of the work is not available for anyone\n-to copy, free of charge and under the terms of this License, through a\n-publicly available network server or other readily accessible means,\n-then you must either (1) cause the Corresponding Source to be so\n-available, or (2) arrange to deprive yourself of the benefit of the\n-patent license for this particular work, or (3) arrange, in a manner\n-consistent with the requirements of this License, to extend the patent\n-license to downstream recipients.  \"Knowingly relying\" means you have\n-actual knowledge that, but for the patent license, your conveying the\n-covered work in a country, or your recipient's use of the covered work\n-in a country, would infringe one or more identifiable patents in that\n-country that you have reason to believe are valid.\n-\n-  If, pursuant to or in connection with a single transaction or\n-arrangement, you convey, or propagate by procuring conveyance of, a\n-covered work, and grant a patent license to some of the parties\n-receiving the covered work authorizing them to use, propagate, modify\n-or convey a specific copy of the covered work, then the patent license\n-you grant is automatically extended to all recipients of the covered\n-work and works based on it.\n-\n-  A patent license is \"discriminatory\" if it does not include within\n-the scope of its coverage, prohibits the exercise of, or is\n-conditioned on the non-exercise of one or more of the rights that are\n-specifically granted under this License.  You may not convey a covered\n-work if you are a party to an arrangement with a third party that is\n-in the business of distributing software, under which you make payment\n-to the third party based on the extent of your activity of conveying\n-the work, and under which the third party grants, to any of the\n-parties who would receive the covered work from you, a discriminatory\n-patent license (a) in connection with copies of the covered work\n-conveyed by you (or copies made from those copies), or (b) primarily\n-for and in connection with specific products or compilations that\n-contain the covered work, unless you entered into that arrangement,\n-or that patent license was granted, prior to 28 March 2007.\n-\n-  Nothing in this License shall be construed as excluding or limiting\n-any implied license or other defenses to infringement that may\n-otherwise be available to you under applicable patent law.\n-\n-  12. No Surrender of Others' Freedom.\n-\n-  If conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot convey a\n-covered work so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you may\n-not convey it at all.  For example, if you agree to terms that obligate you\n-to collect a royalty for further conveying from those to whom you convey\n-the Program, the only way you could satisfy both those terms and this\n-License would be to refrain entirely from conveying the Program.\n-\n-  13. Use with the GNU Affero General Public License.\n-\n-  Notwithstanding any other provision of this License, you have\n-permission to link or combine any covered work with a work licensed\n-under version 3 of the GNU Affero General Public License into a single\n-combined work, and to convey the resulting work.  The terms of this\n-License will continue to apply to the part which is the covered work,\n-but the special requirements of the GNU Affero General Public License,\n-section 13, concerning interaction through a network will apply to the\n-combination as such.\n-\n-  14. Revised Versions of this License.\n-\n-  The Free Software Foundation may publish revised and/or new versions of\n-the GNU General Public License from time to time.  Such new versions will\n-be similar in spirit to the present version, but may differ in detail to\n-address new problems or concerns.\n-\n-  Each version is given a distinguishing version number.  If the\n-Program specifies that a certain numbered version of the GNU General\n-Public License \"or any later version\" applies to it, you have the\n-option of following the terms and conditions either of that numbered\n-version or of any later version published by the Free Software\n-Foundation.  If the Program does not specify a version number of the\n-GNU General Public License, you may choose any version ever published\n-by the Free Software Foundation.\n-\n-  If the Program specifies that a proxy can decide which future\n-versions of the GNU General Public License can be used, that proxy's\n-public statement of acceptance of a version permanently authorizes you\n-to choose that version for the Program.\n-\n-  Later license versions may give you additional or different\n-permissions.  However, no additional obligations are imposed on any\n-author or copyright holder as a result of your choosing to follow a\n-later version.\n-\n-  15. Disclaimer of Warranty.\n-\n-  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n-APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n-HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n-OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n-THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n-IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. Limitation of Liability.\n-\n-  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n-THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n-GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n-USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n-DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n-PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n-EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n-SUCH DAMAGES.\n-\n-  17. Interpretation of Sections 15 and 16.\n-\n-  If the disclaimer of warranty and limitation of liability provided\n-above cannot be given local legal effect according to their terms,\n-reviewing courts shall apply local law that most closely approximates\n-an absolute waiver of all civil liability in connection with the\n-Program, unless a warranty or assumption of liability accompanies a\n-copy of the Program in return for a fee.\n-\n-                     END OF TERMS AND CONDITIONS\n-\n-            How to Apply These Terms to Your New Programs\n-\n-  If you develop a new program, and you want it to be of the greatest\n-possible use to the public, the best way to achieve this is to make it\n-free software which everyone can redistribute and change under these terms.\n-\n-  To do so, attach the following notices to the program.  It is safest\n-to attach them to the start of each source file to most effectively\n-state the exclusion of warranty; and each file should have at least\n-the \"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the program's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation, either version 3 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-  If the program does terminal interaction, make it output a short\n-notice like this when it starts in an interactive mode:\n-\n-    <program>  Copyright (C) <year>  <name of author>\n-    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n-    This is free software, and you are welcome to redistribute it\n-    under certain conditions; type `show c' for details.\n-\n-The hypothetical commands `show w' and `show c' should show the appropriate\n-parts of the General Public License.  Of course, your program's commands\n-might be different; for a GUI interface, you would use an \"about box\".\n-\n-  You should also get your employer (if you work as a programmer) or school,\n-if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n-For more information on this, and how to apply and follow the GNU GPL, see\n-<http://www.gnu.org/licenses/>.\n-\n-  The GNU General Public License does not permit incorporating your program\n-into proprietary programs.  If your program is a subroutine library, you\n-may consider it more useful to permit linking proprietary applications with\n-the library.  If this is what you want to do, use the GNU Lesser General\n-Public License instead of this License.  But first, please read\n-<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\\ No newline at end of file, @@ -1,5 +1,5 @@\n # owner\t\tJabRef Team\n-# license\tGPL version 3\n+# license\tGPL version 2\n # author\tUwe St\u00f6hr and others\n \n ; To compile this script NSIS 2.23 and newer are required\n@@ -25,7 +25,7 @@ Name \"JabRef ${VERSION}\"\n !define PRODUCT_EXE \"JabRef.exe\"\n !define PRODUCT_NAME \"JabRef\"\n !define PRODUCT_UNINST_KEY \"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n-!define PRODUCT_LICENSE_FILE \"dist\\gpl3.txt\"\n+!define PRODUCT_LICENSE_FILE \"dist\\LICENSE\"\n !define AppUserModelId \"JabRef.${VERSION}\"\n \n # Variables, ", 8, 684, "\"renamed, modified, modified, removed, modified, \"", 692], ["stefan-kolb", "Do not use multiple variables in one declaration", "07/29/15, 08:57:58 PM", "stefan-kolb", "9cd1a712652a536a6aed3194b13dc28b591ea497", ["src/main/java/net/sf/jabref/gui/CleanUpAction.java", "src/main/java/net/sf/jabref/gui/MainTable.java", "src/main/java/net/sf/jabref/oo/OOPreFormatter.java", "src/main/java/net/sf/jabref/oo/OpenOfficePanel.java"], "@@ -236,7 +236,19 @@ public void run() {\n             return;\n         }\n         storeSettings();\n-        boolean choiceCleanUpSuperscripts = cleanUpSuperscrips.isSelected(), choiceCleanUpDOI = cleanUpDOI.isSelected(), choiceCleanUpMonth = cleanUpMonth.isSelected(), choiceCleanUpPageNumbers = cleanUpPageNumbers.isSelected(), choiceCleanUpUpgradeExternalLinks = cleanUpUpgradeExternalLinks.isSelected(), choiceMakePathsRelative = cleanUpMakePathsRelative.isSelected(), choiceRenamePDF = cleanUpRenamePDF.isSelected(), choiceConvertHTML = cleanUpHTML.isSelected(), choiceConvertCase = cleanUpCase.isSelected(), choiceConvertLaTeX = cleanUpLaTeX.isSelected(), choiceConvertUnits = cleanUpUnits.isSelected(), choiceConvertUnicode = cleanUpUnicode.isSelected(), choiceConvertToBiblatex = cleanUpBiblatex.isSelected();\n+        boolean choiceCleanUpSuperscripts = cleanUpSuperscrips.isSelected();\n+        boolean choiceCleanUpDOI = cleanUpDOI.isSelected();\n+        boolean choiceCleanUpMonth = cleanUpMonth.isSelected();\n+        boolean choiceCleanUpPageNumbers = cleanUpPageNumbers.isSelected();\n+        boolean choiceCleanUpUpgradeExternalLinks = cleanUpUpgradeExternalLinks.isSelected();\n+        boolean choiceMakePathsRelative = cleanUpMakePathsRelative.isSelected();\n+        boolean choiceRenamePDF = cleanUpRenamePDF.isSelected();\n+        boolean choiceConvertHTML = cleanUpHTML.isSelected();\n+        boolean choiceConvertCase = cleanUpCase.isSelected();\n+        boolean choiceConvertLaTeX = cleanUpLaTeX.isSelected();\n+        boolean choiceConvertUnits = cleanUpUnits.isSelected();\n+        boolean choiceConvertUnicode = cleanUpUnicode.isSelected();\n+        boolean choiceConvertToBiblatex = cleanUpBiblatex.isSelected();\n \n         if (choiceRenamePDF && Globals.prefs.getBoolean(CleanUpAction.AKS_AUTO_NAMING_PDFS_AGAIN)) {\n             CheckBoxMessage cbm = new CheckBoxMessage(Globals.lang(\"Auto-generating PDF-Names does not support undo. Continue?\"),, @@ -72,7 +72,8 @@\n     private Comparator<BibtexEntry> searchComparator;\n     private Comparator<BibtexEntry> groupComparator;\n     private final Comparator<BibtexEntry> markingComparator = new IsMarkedComparator();\n-    private Matcher<BibtexEntry> searchMatcher, groupMatcher;\n+    private Matcher<BibtexEntry> searchMatcher;\n+    private Matcher<BibtexEntry> groupMatcher;\n \n     // needed to activate/deactivate the listener\n     private final PersistenceTableColumnListener tableColumnListener;\n@@ -620,16 +621,19 @@ public void scrollToCenter(int rowIndex, int vColIndex) {\n     }\n \n \n-    private static GeneralRenderer defRenderer, reqRenderer, optRenderer, grayedOutRenderer,\n-            veryGrayedOutRenderer;\n+    private static GeneralRenderer defRenderer;\n+    private static GeneralRenderer reqRenderer;\n+    private static GeneralRenderer optRenderer;\n+    private static GeneralRenderer grayedOutRenderer;\n+    private static GeneralRenderer veryGrayedOutRenderer;\n \n     private static GeneralRenderer[] markedRenderers;\n \n     private static IncompleteRenderer incRenderer;\n     private static CompleteRenderer\n-            compRenderer,\n-            grayedOutNumberRenderer,\n-            veryGrayedOutNumberRenderer;\n+            compRenderer;\n+    private static CompleteRenderer grayedOutNumberRenderer;\n+    private static CompleteRenderer veryGrayedOutNumberRenderer;\n \n     private static CompleteRenderer[] markedNumberRenderers;\n , @@ -245,7 +245,8 @@ public String format(String field) {\n         StringBuffer currentCommand = null;\n \n         char c;\n-        boolean escaped = false, incommand = false;\n+        boolean escaped = false;\n+        boolean incommand = false;\n \n         for (i = 0; i < field.length(); i++) {\n             c = field.charAt(i);, @@ -95,7 +95,8 @@\n     private static boolean useDefaultAuthoryearStyle = false;\n     private static boolean useDefaultNumericalStyle = false;\n     private StyleSelectDialog styleDialog = null;\n-    private boolean dialogOkPressed = false, autoDetected = false;\n+    private boolean dialogOkPressed = false;\n+    private boolean autoDetected = false;\n     private String sOffice = null;\n     private Throwable connectException = null;\n \n@@ -120,7 +121,8 @@ private OpenOfficePanel() {\n         OpenOfficePanel.selectDocument.setToolTipText(Globals.lang(\"Select Writer document\"));\n         OpenOfficePanel.update = new JButton(GUIGlobals.getImage(\"refresh\"));\n         OpenOfficePanel.update.setToolTipText(Globals.lang(\"Sync OO bibliography\"));\n-        String defExecutable, defJarsDir;\n+        String defExecutable;\n+        String defJarsDir;\n         if (Globals.ON_WIN) {\n             Globals.prefs.putDefaultValue(\"ooPath\", \"C:\\\\Program Files\\\\OpenOffice.org 3\");\n             Globals.prefs.putDefaultValue(\"ooExecutablePath\", \"C:\\\\Program Files\\\\OpenOffice.org 2.3\\\\program\\\\soffice.exe\");\n@@ -490,7 +492,8 @@ private void connect(boolean auto) {\n             return;\n         }*/\n \n-        String unoilDir, ooBaseDirectory;\n+        String unoilDir;\n+        String ooBaseDirectory;\n         if (auto) {\n             AutoDetectPaths adp = new AutoDetectPaths(diag);\n , ", 31, 11, "\"modified, modified, modified, modified, \"", 42], ["Joerg Lenhard", "Merge branch 'master' into move-logic-ui", "07/30/15, 10:41:00 AM", "Joerg Lenhard", "dca8909dafc033bf82226c17ac3de5dd1283ea49", [".gitignore", "CHANGELOG", "CLI", "circle.yml", "src/main/java/net/sf/jabref/export/ExportFormats.java", "src/main/resources/osx/macadapter/MacAdapter.java", "src/main/resources/plugins/net.sf.jabref.export.misq/build.xml", "src/main/resources/plugins/net.sf.jabref.export.misq/plugin.xml", "src/main/resources/plugins/readme.txt", "src/main/resources/resource/.gitignore", "src/main/resources/resource/layout/misq/misq.article.layout", "src/main/resources/resource/layout/misq/misq.begin.layout", "src/main/resources/resource/layout/misq/misq.book.layout", "src/main/resources/resource/layout/misq/misq.end.layout", "src/main/resources/resource/layout/misq/misq.layout", "src/main/resources/resource/layout/misq/readme.txt"], "@@ -1,8 +1,12 @@\n # no generated files in version control\n src/main/gen/\n \n+# JVM errors\n hs_err*.log\n \n+# backup files from JabRef itself\n+*.bak\n+\n # Ant\n buildant/\n build.number, @@ -18,7 +18,6 @@\n     - BREAKING: Search groups now use same search logic as UI --> avoids confusion when converting a UI search into a search group. Behaviour before: contains/regex check of whole search string; behaviour after: contains/regex check of every word of the search string. The new search is more powerful and con simulate the old behaviour: enclose everything in double quotes, e.g., process language --> \"process language\".\n     - Change default of use IEEE abbreviations from TRUE to FALSE\n     - BREAKING: Remove plugin functionality.\n->>>>>>> no-plugins\n 2.11 beta 3\n     - New MacOSX integration\n     - Two releases for MacOSX: OSX-Java6 for Apple Java 1.6 and OSX for Oracle Java 1.7+, @@ -1,51 +0,0 @@\n-usage: jabref [OPTIONS] [BIBTEX_FILE]\n-\n-Options: [-a <FILE>] [-b] [-d <FILE>] [-f <FILE>] [-h] [-i <FILE>]\n-       [--importToOpen <FILE>] [-l] [-m <FILE>] [-n] [-o <FILE>] [-p\n-       <FILE>] [-s] [-v] [-x <FILE>]\n- -a,--aux <FILE>             Subdatabase from aux: file[.aux],new[.bib]\n- -b,--blank                  Do not open any files at startup\n- -d,--prdef <FILE>           Reset preferences (key1,key2,... or 'all')\n- -f,--fetch <FILE>           Run Fetcher, e.g. \"--fetch=Medline:cancer\"\n- -h,--help                   Display help on command line options\n- -i,--import <FILE>          Import file: filename[,import format]\n-    --importToOpen <FILE>    Import to open tab\n- -l,--loads                  Load session\n- -m,--exportMatches <FILE>   [field]searchTerm,outputFile:\n-                             file[,exportFormat]\n- -n,--nogui                  No GUI. Only process command line options.\n- -o,--output <FILE>          Output or export file: filename[,export\n-                             format]\n- -p,--primp <FILE>           Import preferences from file\n- -s,--nosplash               Do not show splash window at startup\n- -v,--version                Display version\n- -x,--prexp <FILE>           Export preferences to file\n-\n-Available import formats:\n-  BibTeX         : bibtex\n-  BibTeXML       : bibtexml\n-  Biblioscape    : biblioscape\n-  Biomail        : biomail\n-  CSA            : csa\n-  Copac          : cpc\n-  INSPEC         : inspec\n-  ISI            : isi\n-  JStor (tab delimited) : jstor\n-  MSBib          : msbib\n-  Medline        : medline\n-  MedlinePlain   : medlineplain\n-  Ovid           : ovid\n-  REPEC New Economic Papers (NEP) : repecnep\n-  RIS            : ris\n-  Refer/Endnote  : refer\n-  Scifinder      : scifinder\n-  SilverPlatter  : silverplatter\n-  Sixpack        : sixpack\n-  XMP-annotated PDF : xmpannotatedpdf\n-\n-Available export formats: MSBib, bibordf, bibtexml, din1505, docbook,\n-endnote, harvard, html, iso690rtf, iso690txt, listrefs, misq, mods,\n-mysql, ods, oocalc, oocsv, postgresql, ris, simplehtml, tablerefs,\n-tablerefsabsbib\n-\n-Please report issues at http://sourceforge.net/p/jabref/bugs/\n\\ No newline at end of file, @@ -1,6 +1,6 @@\n machine:\n   java:\n-    version: openjdk8\n+    version: oraclejdk8\n \n dependencies:\n   override:, @@ -69,6 +69,7 @@ public static void initAllExports() {\n         ExportFormat ef = new ExportFormat(Globals.lang(\"RIS\"), \"ris\", \"ris\", \"ris\", \".ris\");\n         ef.encoding = \"UTF-8\";\n         ExportFormats.putFormat(ef);\n+        ExportFormats.putFormat(new ExportFormat(Globals.lang(\"MIS Quarterly\"), \"misq\", \"misq\", \"misq\",\".rtf\"));\n \n         ExportFormats.putFormat(new OpenOfficeDocumentCreator());\n         ExportFormats.putFormat(new OpenDocumentSpreadsheetCreator());, @@ -20,6 +20,12 @@\n \n import net.sf.jabref.JabRefFrame;\n \n+import com.apple.eawt.*;\n+import com.apple.eawt.AppEvent.AboutEvent;\n+import com.apple.eawt.AppEvent.OpenFilesEvent;\n+import com.apple.eawt.AppEvent.PreferencesEvent;\n+import com.apple.eawt.AppEvent.QuitEvent;\n+\n public class MacAdapter implements PreferencesHandler, AboutHandler, QuitHandler, OpenFilesHandler {\n \n \tprivate JabRefFrame parentFrame = null;, @@ -1,29 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n-\n-   Example Ant build file how to create a jar for distribution \n-   for an export plugin.\n-\n-   Version:  $Revision$\n-             $Date$\n-             $Author$\n-\n-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->\n-<project name=\"net.sf.jabref.export.misq\" default=\"jar\" basedir=\".\">\n-\n-\t<!-- Properties -->\n-\t<property name=\"version\" value=\"1.0\" />\n-\t<property name=\"jar\" value=\"../${ant.project.name}-${version}.jar\" />\n-\n-\t<!-- Jars up project -->\n-\t<target name=\"jar\">\n-\t\t<jar destfile=\"${jar}\">\n-\t\t\t<fileset dir=\".\"/>\n-\t\t</jar>\n-\t</target>\n-\n-\t<target name=\"clean\" description=\"Clean project\">\n-\t\t<delete file=\"${jar}\" />\n-\t</target>\n-\n-</project>, @@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" ?>\n-<!DOCTYPE plugin PUBLIC \"-//JPF//Java Plug-in Manifest 1.0\" \"http://jpf.sourceforge.net/plugin_1_0.dtd\">\n-<plugin id=\"net.sf.jabref.export.misq\" version=\"1.0\">\n-\t\n-\t<requires>\n-\t\t<import plugin-id=\"net.sf.jabref.core\"/>\n-\t</requires>\n-\t\n-\t<runtime>\n-\t\t<library type=\"resources\" path=\"templates/\" id=\"templates\"/>\n-\t</runtime>\n-\t\n-\t<extension id=\"MISQuarterly\" plugin-id=\"net.sf.jabref.core\"\n-\t\tpoint-id=\"ExportFormatTemplate\">\n-\t\t<parameter id=\"displayName\" value=\"MIS Quarterly\" />\n-\t\t<parameter id=\"consoleName\" value=\"misq\" />\n-\t\t<parameter id=\"layoutFilename\" value=\"misq\" />\n-\t\t<parameter id=\"dir\" value=\"templates/\"/>\n-\t\t<parameter id=\"extension\" value=\".rtf\" />\n-\t</extension>\n-\n-</plugin>\n\\ No newline at end of file, @@ -1,9 +0,0 @@\n-Plugins for JabRef that are supposed to be distributed with the system should go here.\n-\n-At the moment we need an ugly hack in \n-\n-net.sf.jabref.plugin.PluginCore.java\n-\n-to add all plugins manually. Since they are loaded from the resulting JabRef jar.\n-\n-To work around this issue, one can add all extension directly to the core plugin instead. \n\\ No newline at end of file, @@ -1 +0,0 @@\n-*.bak\n\\ No newline at end of file, None, None, None, None, None, None, ", 12, 114, "\"modified, modified, removed, modified, modified, modified, removed, removed, removed, removed, renamed, renamed, renamed, renamed, renamed, renamed, \"", 126], ["Joerg Lenhard", "Merge branch 'master' into move-field-editor", "07/30/15, 11:51:59 AM", "Joerg Lenhard", "fc03e2cb9eb0bcf4db6130aaef397e8320274946", ["build.gradle", "gradle/wrapper/gradle-wrapper.jar", "gradle/wrapper/gradle-wrapper.properties"], "@@ -119,7 +119,7 @@ sourceCompatibility = 1.8\n mainClassName = \"net.sf.jabref.JabRefMain\"\n \n task wrapper(type: Wrapper) {\n-    gradleVersion = '2.4'\n+    gradleVersion = '2.5'\n }\n \n compileJava {, None, @@ -1,6 +1,6 @@\n-#Tue Jul 21 17:57:36 CEST 2015\n+#Thu Jul 30 13:20:57 CEST 2015\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.4-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.5-all.zip, ", 3, 3, "\"modified, modified, modified, \"", 6], ["stefan-kolb", "Change source and documentation URL", "08/01/15, 07:31:59 PM", "stefan-kolb", "c59e66a2902b7e1ed3cc05178b927f41982d56f7", ["src/main/resources/help/About.html"], "@@ -15,7 +15,7 @@ <h1>JabRef version ${version}</h1>\n     License</a> as published by the Free Software Foundation, either\n     version 2 of the License, or (at your option) any later version.</p>\n \n-    <p>The source code and documentation can be found at the homepage of JabRef <a href=\"http://jabref.sourceforge.net/\">http://jabref.sourceforge.net/</a>.\n+    <p>The source code and documentation can be found at <a href=\"https://github.com/JabRef/jabref/\">https://github.com/JabRef/jabref/</a>.\n         Please submit bugs and feature requests to\n         <a href=\"https://github.com/JabRef/jabref/issues\">https://github.com/JabRef/jabref/issues</a>.\n     </p>, ", 1, 1, "\"modified, \"", 2], ["Joerg Lenhard", "Use correct package for LabelPatternUtilTest", "08/03/15, 10:08:40 AM", "Joerg Lenhard", "e8b8afb984cf53fb028c730e10d641833109999a", ["src/test/java/net/sf/jabref/logic/labelPattern/LabelPatternUtilTest.java"], "@@ -1,4 +1,4 @@\n-package net.sf.jabref.gui.labelPattern;\n+package net.sf.jabref.logic.labelPattern;\n \n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;, ", 1, 1, "\"modified, \"", 2], ["stefan-kolb", "Changelog item for authors script", "08/07/15, 08:19:10 AM", "stefan-kolb", "2b71976aea44a9226fbbd7453986da19b880073a", ["CHANGELOG"], "@@ -1,4 +1,5 @@\n [master]\n+    - List of authors is now auto generated `scripts/generate-authors.sh` and inserted into L10N About.html\n     - Remove Mr.DLib support as MR.DLib will be shut down in 2015\n     - Streamline logging API: Replace usages of java.util.logging with commons.logging\n     - BREAKING: Remove plugin functionality., ", 1, 0, "\"modified, \"", 1], ["Simon Harrer", "Removes splash screen\nRemoves CLI option --nosplash -s", "08/05/15, 12:15:37 PM", "Simon Harrer", "4641d33b3aa7eb47d724c1163856304adb3a4418", ["src/graphics/splash/README.md", "src/graphics/splash/splash-beta.svg", "src/graphics/splash/splash-beta2.svg", "src/graphics/splash/splash-beta3.svg", "src/graphics/splash/splash-dev.svg", "src/graphics/splash/splash-release.svg", "src/graphics/splash/splashBackground.png", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefCLI.java", "src/main/java/net/sf/jabref/gui/splash/SplashScreen.java", "src/main/java/net/sf/jabref/gui/splash/SplashScreenLifecycle.java", "src/main/resources/images/splash.png"], "@@ -1,5 +0,0 @@\n-Release file: splash-release.svg, uses splashBackground.png\n-Beta files: *beta*, base: splash-release.svg\n-Dev file: splash-dev.svg, base:splash-release.svg\n-\n-The target is splash.png contained in /src/main/resources/images/, @@ -1,96 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://creativecommons.org/ns#\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   inkscape:export-ydpi=\"90.000000\"\n-   inkscape:export-xdpi=\"90.000000\"\n-   inkscape:export-filename=\"splash.png\"\n-   sodipodi:docname=\"splash-beta.svg\"\n-   inkscape:version=\"0.91 r13725\"\n-   sodipodi:version=\"0.32\"\n-   id=\"svg2138\"\n-   height=\"432\"\n-   width=\"576\"\n-   inkscape:output_extension=\"org.inkscape.output.svg.inkscape\"\n-   version=\"1.1\">\n-  <sodipodi:namedview\n-     inkscape:window-y=\"0\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-height=\"1155\"\n-     inkscape:window-width=\"1920\"\n-     inkscape:current-layer=\"layer1\"\n-     inkscape:document-units=\"px\"\n-     inkscape:cy=\"225.8697\"\n-     inkscape:cx=\"105.10531\"\n-     inkscape:zoom=\"1\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:pageopacity=\"0.0\"\n-     borderopacity=\"1.0\"\n-     bordercolor=\"#666666\"\n-     pagecolor=\"#ffffff\"\n-     id=\"base\"\n-     showgrid=\"false\"\n-     inkscape:window-maximized=\"1\"\n-     fit-margin-top=\"0\"\n-     fit-margin-left=\"0\"\n-     fit-margin-right=\"0\"\n-     fit-margin-bottom=\"0\" />\n-  <defs\n-     id=\"defs2140\" />\n-  <metadata\n-     id=\"metadata2143\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:title />\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer2\"\n-     inkscape:label=\"release splash\"\n-     style=\"display:inline\">\n-    <image\n-       xlink:href=\"splash-release.svg\"\n-       width=\"576\"\n-       height=\"432\"\n-       id=\"image3653\"\n-       x=\"-0.89468384\"\n-       y=\"-0.86970043\"\n-       style=\"display:inline\" />\n-  </g>\n-  <g\n-     transform=\"translate(-77.5,-170.36218)\"\n-     inkscape:label=\"beta 2\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\"\n-     style=\"display:inline\">\n-    <flowRoot\n-       inkscape:export-ydpi=\"75\"\n-       inkscape:export-xdpi=\"75\"\n-       inkscape:export-filename=\"splash.png\"\n-       transform=\"matrix(0.9688007,-0.2478411,0.2478411,0.9688007,-139.20276,134.59483)\"\n-       style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472;stroke:none\"\n-       id=\"flowRoot2745\"\n-       xml:space=\"preserve\"><flowRegion\n-         id=\"flowRegion2747\"><rect\n-           style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472\"\n-           y=\"470.36218\"\n-           x=\"482\"\n-           height=\"99.498024\"\n-           width=\"246.77605\"\n-           id=\"rect2749\" /></flowRegion><flowPara\n-         id=\"flowPara2751\">beta 2</flowPara></flowRoot>  </g>\n-</svg>, @@ -1,96 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://creativecommons.org/ns#\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   inkscape:export-ydpi=\"90.000000\"\n-   inkscape:export-xdpi=\"90.000000\"\n-   inkscape:export-filename=\"splash.png\"\n-   sodipodi:docname=\"splash-beta.svg\"\n-   inkscape:version=\"0.91 r13725\"\n-   sodipodi:version=\"0.32\"\n-   id=\"svg2138\"\n-   height=\"432\"\n-   width=\"576\"\n-   inkscape:output_extension=\"org.inkscape.output.svg.inkscape\"\n-   version=\"1.1\">\n-  <sodipodi:namedview\n-     inkscape:window-y=\"0\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-height=\"1155\"\n-     inkscape:window-width=\"1920\"\n-     inkscape:current-layer=\"layer1\"\n-     inkscape:document-units=\"px\"\n-     inkscape:cy=\"225.8697\"\n-     inkscape:cx=\"105.10531\"\n-     inkscape:zoom=\"1\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:pageopacity=\"0.0\"\n-     borderopacity=\"1.0\"\n-     bordercolor=\"#666666\"\n-     pagecolor=\"#ffffff\"\n-     id=\"base\"\n-     showgrid=\"false\"\n-     inkscape:window-maximized=\"1\"\n-     fit-margin-top=\"0\"\n-     fit-margin-left=\"0\"\n-     fit-margin-right=\"0\"\n-     fit-margin-bottom=\"0\" />\n-  <defs\n-     id=\"defs2140\" />\n-  <metadata\n-     id=\"metadata2143\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:title />\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer2\"\n-     inkscape:label=\"release splash\"\n-     style=\"display:inline\">\n-    <image\n-       xlink:href=\"splash-release.svg\"\n-       width=\"576\"\n-       height=\"432\"\n-       id=\"image3653\"\n-       x=\"-0.89468384\"\n-       y=\"-0.86970043\"\n-       style=\"display:inline\" />\n-  </g>\n-  <g\n-     transform=\"translate(-77.5,-170.36218)\"\n-     inkscape:label=\"beta 2\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\"\n-     style=\"display:inline\">\n-    <flowRoot\n-       inkscape:export-ydpi=\"75\"\n-       inkscape:export-xdpi=\"75\"\n-       inkscape:export-filename=\"splash.png\"\n-       transform=\"matrix(0.9688007,-0.2478411,0.2478411,0.9688007,-139.20276,134.59483)\"\n-       style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472;stroke:none\"\n-       id=\"flowRoot2745\"\n-       xml:space=\"preserve\"><flowRegion\n-         id=\"flowRegion2747\"><rect\n-           style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472\"\n-           y=\"470.36218\"\n-           x=\"482\"\n-           height=\"99.498024\"\n-           width=\"246.77605\"\n-           id=\"rect2749\" /></flowRegion><flowPara\n-         id=\"flowPara2751\">beta 2</flowPara></flowRoot>  </g>\n-</svg>, @@ -1,96 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://creativecommons.org/ns#\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   inkscape:export-ydpi=\"90.000000\"\n-   inkscape:export-xdpi=\"90.000000\"\n-   inkscape:export-filename=\"splash.png\"\n-   sodipodi:docname=\"splash-beta.svg\"\n-   inkscape:version=\"0.91 r13725\"\n-   sodipodi:version=\"0.32\"\n-   id=\"svg2138\"\n-   height=\"432\"\n-   width=\"576\"\n-   inkscape:output_extension=\"org.inkscape.output.svg.inkscape\"\n-   version=\"1.1\">\n-  <sodipodi:namedview\n-     inkscape:window-y=\"0\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-height=\"1155\"\n-     inkscape:window-width=\"1920\"\n-     inkscape:current-layer=\"layer1\"\n-     inkscape:document-units=\"px\"\n-     inkscape:cy=\"225.8697\"\n-     inkscape:cx=\"105.10531\"\n-     inkscape:zoom=\"1\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:pageopacity=\"0.0\"\n-     borderopacity=\"1.0\"\n-     bordercolor=\"#666666\"\n-     pagecolor=\"#ffffff\"\n-     id=\"base\"\n-     showgrid=\"false\"\n-     inkscape:window-maximized=\"1\"\n-     fit-margin-top=\"0\"\n-     fit-margin-left=\"0\"\n-     fit-margin-right=\"0\"\n-     fit-margin-bottom=\"0\" />\n-  <defs\n-     id=\"defs2140\" />\n-  <metadata\n-     id=\"metadata2143\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:title />\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer2\"\n-     inkscape:label=\"release splash\"\n-     style=\"display:inline\">\n-    <image\n-       xlink:href=\"splash-release.svg\"\n-       width=\"576\"\n-       height=\"432\"\n-       id=\"image3653\"\n-       x=\"-0.89468384\"\n-       y=\"-0.86970043\"\n-       style=\"display:inline\" />\n-  </g>\n-  <g\n-     transform=\"translate(-77.5,-170.36218)\"\n-     inkscape:label=\"beta 3\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\"\n-     style=\"display:inline\">\n-    <flowRoot\n-       inkscape:export-ydpi=\"75\"\n-       inkscape:export-xdpi=\"75\"\n-       inkscape:export-filename=\"splash.png\"\n-       transform=\"matrix(0.9688007,-0.2478411,0.2478411,0.9688007,-139.20276,134.59483)\"\n-       style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472;stroke:none\"\n-       id=\"flowRoot2745\"\n-       xml:space=\"preserve\"><flowRegion\n-         id=\"flowRegion2747\"><rect\n-           style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:56px;line-height:100%;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans Bold';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f91616;fill-opacity:0.65789472\"\n-           y=\"470.36218\"\n-           x=\"482\"\n-           height=\"99.498024\"\n-           width=\"246.77605\"\n-           id=\"rect2749\" /></flowRegion><flowPara\n-         id=\"flowPara2751\">beta 3</flowPara></flowRoot>  </g>\n-</svg>, @@ -1,125 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://creativecommons.org/ns#\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   inkscape:export-ydpi=\"90.000000\"\n-   inkscape:export-xdpi=\"90.000000\"\n-   inkscape:export-filename=\"splash.png\"\n-   sodipodi:docname=\"splash-dev.svg\"\n-   inkscape:version=\"0.91 r13725\"\n-   sodipodi:version=\"0.32\"\n-   id=\"svg2138\"\n-   height=\"432\"\n-   width=\"576\"\n-   inkscape:output_extension=\"org.inkscape.output.svg.inkscape\"\n-   version=\"1.1\">\n-  <defs\n-     id=\"defs2140\" />\n-  <sodipodi:namedview\n-     inkscape:window-y=\"27\"\n-     inkscape:window-x=\"35\"\n-     inkscape:window-height=\"873\"\n-     inkscape:window-width=\"1660\"\n-     inkscape:current-layer=\"layer1\"\n-     inkscape:document-units=\"px\"\n-     inkscape:cy=\"225.8697\"\n-     inkscape:cx=\"165.10531\"\n-     inkscape:zoom=\"1\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:pageopacity=\"0.0\"\n-     borderopacity=\"1.0\"\n-     bordercolor=\"#666666\"\n-     pagecolor=\"#ffffff\"\n-     id=\"base\"\n-     showgrid=\"false\"\n-     inkscape:window-maximized=\"0\"\n-     fit-margin-top=\"0\"\n-     fit-margin-left=\"0\"\n-     fit-margin-right=\"0\"\n-     fit-margin-bottom=\"0\" />\n-  <metadata\n-     id=\"metadata2143\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:title />\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer2\"\n-     inkscape:label=\"Release splash\">\n-    <image\n-       sodipodi:absref=\"/home/koppor/jabref/src/graphics/splash/splash-release.svg\"\n-       xlink:href=\"splash-release.svg\"\n-       width=\"576\"\n-       height=\"432\"\n-       id=\"image3381\"\n-       x=\"1\"\n-       y=\"0\" />\n-  </g>\n-  <g\n-     id=\"layer1\"\n-     inkscape:groupmode=\"layer\"\n-     inkscape:label=\"Dev text\"\n-     transform=\"translate(-77.5,-170.36218)\">\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:41.23898697px;line-height:100%;font-family:'Nimbus Sans L';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#ff0000;fill-opacity:1;stroke:#ff6600;stroke-width:2.8878212;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\"\n-       x=\"210.5853\"\n-       y=\"653.81372\"\n-       id=\"text2911-4\"\n-       sodipodi:linespacing=\"100%\"\n-       transform=\"matrix(0.80568825,-0.44174063,0.52619691,0.95267301,0,0)\"\n-       inkscape:export-filename=\"splash.png\"\n-       inkscape:export-xdpi=\"75\"\n-       inkscape:export-ydpi=\"75\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan2913-0\"\n-         x=\"210.5853\"\n-         y=\"653.81372\"\n-         style=\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:85.91455841px;line-height:100%;font-family:'Bitstream Vera Sans';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#ff0000;fill-opacity:1;stroke:#ff6600;stroke-width:2.8878212;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\">dev</tspan></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:20.00000002px;font-style:normal;font-weight:bold;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans Bold;font-stretch:normal;font-variant:normal\"\n-       x=\"510.92224\"\n-       y=\"226.16539\"\n-       id=\"text3244\"\n-       sodipodi:linespacing=\"125%\"\n-       transform=\"scale(1.0223375,0.97815056)\"><tspan\n-         sodipodi:role=\"line\"\n-         x=\"510.92224\"\n-         y=\"226.16539\"\n-         id=\"tspan3252\"\n-         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">This is a</tspan><tspan\n-         sodipodi:role=\"line\"\n-         x=\"510.92224\"\n-         y=\"256.10031\"\n-         id=\"tspan3256\"\n-         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\"><tspan\n-   style=\"font-weight:bold;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-style:normal;font-stretch:normal;font-variant:normal;font-size:20.00000002px\"\n-   id=\"tspan3266\">development version</tspan>.</tspan><tspan\n-         sodipodi:role=\"line\"\n-         x=\"510.92224\"\n-         y=\"286.03522\"\n-         id=\"tspan3258\"\n-         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">Features may</tspan><tspan\n-         sodipodi:role=\"line\"\n-         x=\"510.92224\"\n-         y=\"315.97015\"\n-         id=\"tspan3260\"\n-         style=\"font-size:20.00000002px;text-align:center;text-anchor:middle;fill:#ff0000;-inkscape-font-specification:Bitstream Vera Sans Bold;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal\">not work as expected.</tspan></text>\n-  </g>\n-</svg>, None, None, @@ -47,7 +47,6 @@\n import net.sf.jabref.logic.remote.RemotePreferences;\n import net.sf.jabref.logic.remote.client.RemoteListenerClient;\n import net.sf.jabref.gui.remote.JabRefMessageHandler;\n-import net.sf.jabref.gui.splash.SplashScreenLifecycle;\n import net.sf.jabref.logic.util.FileBasedLock;\n import net.sf.jabref.logic.util.StringUtil;\n import net.sf.jabref.util.Util;\n@@ -71,9 +70,7 @@\n     \n     private static final Log LOGGER = LogFactory.getLog(JabRef.class);\n \n-    private boolean graphicFailure = false;\n     private JabRefCLI cli;\n-    private SplashScreenLifecycle splashScreen = new SplashScreenLifecycle();\n \n     public void start(String[] args) {\n         JabRefPreferences prefs = JabRefPreferences.getInstance();\n@@ -175,7 +172,7 @@ public void start(String[] args) {\n \n         Vector<ParserResult> loaded = processArguments(args, true);\n \n-        if (loaded == null || graphicFailure || cli.isDisableGui() || cli.isShowVersion()) {\n+        if (loaded == null || cli.isDisableGui() || cli.isShowVersion()) {\n             JabRefExecutorService.INSTANCE.shutdownEverything();\n             return;\n         }\n@@ -254,20 +251,6 @@ private static void setCurrentProcessExplicitAppUserModelID(final String appID)\n \n         boolean commandMode = cli.isDisableGui() || cli.isFetcherEngine();\n \n-        // First we quickly scan the command line parameters for any that signal\n-        // that the GUI\n-        // should not be opened. This is used to decide whether we should show the\n-        // splash screen or not.\n-        if (initialStartup && !commandMode && !cli.isDisableSplash()) {\n-            try {\n-                splashScreen.show();\n-            } catch (Throwable ex) {\n-                graphicFailure = true;\n-                System.err.println(Globals.lang(\"Unable to create graphical interface\")\n-                        + \".\");\n-            }\n-        }\n-\n         // Check if we should reset all preferences to default values:\n         if (cli.isPreferencesReset()) {\n             String value = cli.getPreferencesReset();\n@@ -797,8 +780,6 @@ else if (!pr.isPostponedAutosaveFound()) {\n                     JabRef.jrf, 0, \"\"));\n         }\n \n-        splashScreen.hide();\n-\n         /*JOptionPane.showMessageDialog(null, Globals.lang(\"Please note that this \"\n             +\"is an early beta version. Do not use it without backing up your files!\"),\n                 Globals.lang(\"Beta version\"), JOptionPane.WARNING_MESSAGE);*/, @@ -17,10 +17,6 @@ public boolean isShowVersion() {\n         return cl.hasOption(\"version\");\n     }\n \n-    public boolean isDisableSplash() {\n-        return cl.hasOption(\"nosplash\");\n-    }\n-\n     public boolean isBlank() {\n         return cl.hasOption(\"blank\");\n     }\n@@ -126,7 +122,6 @@ private Options getOptions() {\n         // boolean options\n         options.addOption(\"v\", \"version\", false, Globals.lang(\"Display version\"));\n         options.addOption(\"n\", \"nogui\", false, Globals.lang(\"No GUI. Only process command line options.\"));\n-        options.addOption(\"s\", \"nosplash\", false, Globals.lang(\"Do not show splash window at startup\"));\n         options.addOption(\"h\", \"help\", false, Globals.lang(\"Display help on command line options\"));\n         options.addOption(\"l\", \"loads\", false, Globals.lang(\"Load session\"));\n         options.addOption(\"b\", \"blank\", false, Globals.lang(\"Do not open any files at startup\"));, @@ -1,139 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref.gui.splash;\n-\n-//import javax.swing.*;\n-import java.awt.EventQueue;\n-import java.awt.Frame;\n-import java.awt.Graphics;\n-import java.awt.Image;\n-import java.awt.MediaTracker;\n-import java.awt.Toolkit;\n-import java.awt.Window;\n-import java.net.URL;\n-\n-/**\n- * <p>Title: </p>\n- * <p>Description: </p>\n- * <p>Copyright: Copyright (c) 2003</p>\n- * <p>Company: </p>\n- * @author not attributable\n- * @version 1.0\n- */\n-\n-class SplashScreen extends Window {\n-\n-    private final Image splashImage;\n-    private boolean paintCalled = false;\n-\n-\n-    private SplashScreen(Frame owner) {\n-        super(owner);\n-        URL imageURL = SplashScreen.class.getResource(\"/images/splash.png\");\n-        splashImage = Toolkit.getDefaultToolkit().createImage(imageURL);\n-\n-        // Load the image\n-        MediaTracker mt = new MediaTracker(this);\n-        mt.addImage(splashImage, 0);\n-        try {\n-            mt.waitForID(0);\n-        } catch (InterruptedException ignored) {\n-        }\n-\n-        // Center the window on the screen.\n-        int imgWidth = splashImage.getWidth(this);\n-        int imgHeight = splashImage.getHeight(this);\n-\n-        setSize(imgWidth, imgHeight);\n-        setLocationRelativeTo(null);\n-\n-        /* Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\n-        setLocation(\n-            (screenDim.width - imgWidth) / 2,\n-            (screenDim.height - imgHeight) / 2\n-        );\n-        */\n-\n-    }\n-\n-    /**\n-     * Updates the display area of the window.\n-     */\n-    @Override\n-    public void update(Graphics g) {\n-        // Note: Since the paint method is going to draw an\n-        // image that covers the complete area of the component we\n-        // do not fill the component with its background color\n-        // here. This avoids flickering.\n-\n-        g.setColor(getForeground());\n-        paint(g);\n-    }\n-\n-    /**\n-     * Paints the image on the window.\n-     */\n-\n-    @Override\n-    public void paint(Graphics g) {\n-        g.drawImage(splashImage, 0, 0, this);\n-\n-        // Notify method splash that the window\n-        // has been painted.\n-        if (!paintCalled) {\n-            paintCalled = true;\n-            synchronized (this) {\n-                notifyAll();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Constructs and displays a SplashWindow.<p>\n-     * This method is useful for startup splashs.\n-     * Dispose the returned frame to get rid of the splash window.<p>\n-     *\n-     * @return Returns the frame that owns the SplashWindow.\n-     */\n-\n-    public static Frame splash() {\n-        Frame f = new Frame();\n-        SplashScreen w = new SplashScreen(f);\n-\n-        // Show the window.\n-        w.setVisible(true);\n-        w.toFront();\n-\n-        // Note: To make sure the user gets a chance to see the\n-        // splash window we wait until its paint method has been\n-        // called at least once by the AWT event dispatcher thread.\n-\n-        // sebwills adds: However, just in case the paint method never gets called\n-        // (e.g. if the splashscreen is completely obscured by an 'always on top'\n-        // window of some other application), we time-out after 5 seconds.\n-        if (!EventQueue.isDispatchThread()) {\n-            synchronized (w) {\n-                if (!w.paintCalled) {\n-                    try {\n-                        w.wait(5000);\n-                    } catch (InterruptedException ignored) {\n-                    }\n-                }\n-            }\n-        }\n-        return f;\n-    }\n-}, @@ -1,19 +0,0 @@\n-package net.sf.jabref.gui.splash;\n-\n-import java.awt.Frame;\n-\n-public class SplashScreenLifecycle {\n-\n-    private Frame splashScreen;\n-\n-    public void show() {\n-        splashScreen = SplashScreen.splash();\n-    }\n-\n-    public void hide() {\n-        if (splashScreen != null) {\n-            splashScreen.dispose();\n-            splashScreen = null;\n-        }\n-    }\n-}, None, ", 1, 844, "\"removed, removed, removed, removed, removed, removed, removed, modified, modified, removed, removed, removed, \"", 845], ["Joerg Lenhard", "Merge branch 'master' into logic-improvements", "08/11/15, 11:25:10 AM", "Joerg Lenhard", "2f6fbab4f280b187d99920fba1a62b0fc1f5f6ae", ["src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java", "src/main/java/net/sf/jabref/logic/remote/RemoteUtil.java", "src/test/java/net/sf/jabref/Bug1283.java", "src/test/java/net/sf/jabref/logic/remote/RemoteUtilTest.java", "src/test/java/net/sf/jabref/logic/util/MonthUtilTest.java"], "@@ -296,7 +296,7 @@ public boolean validateSettings() {\n \n         try {\n             int portNumber = Integer.parseInt(remoteServerPort.getText());\n-            if (RemoteUtil.isValidPartNumber(portNumber)) {\n+            if (RemoteUtil.isUserPort(portNumber)) {\n                 return true; // Ok, the number was legal.\n             } else {\n                 throw new NumberFormatException();, @@ -1,7 +1,7 @@\n package net.sf.jabref.logic.remote;\n \n public class RemoteUtil {\n-    public static boolean isValidPartNumber(int portNumber) {\n-        return portNumber > 1024 && portNumber <= 65535;\n+    public static boolean isUserPort(int portNumber) {\n+        return portNumber >= 1024 && portNumber <= 65535;\n     }\n }, @@ -1,16 +0,0 @@\n-package net.sf.jabref;\n-\n-import net.sf.jabref.logic.util.MonthUtil;\n-import org.junit.Assert;\n-import org.junit.Test;\n-\n-import java.io.IOException;\n-\n-public class Bug1283 {\n-\n-    @Test\n-    public void testBug1283() throws IOException {\n-        Assert.assertFalse(MonthUtil.getMonth(\"8,\").isValid());\n-    }\n-\n-}, @@ -0,0 +1,30 @@\n+package net.sf.jabref.logic.remote;\n+\n+import junit.framework.Assert;\n+import org.junit.Test;\n+\n+public class RemoteUtilTest {\n+    @Test\n+    public void rejectPortNumberBelowZero() {\n+        Assert.assertFalse(\"Port number must be non negative.\", RemoteUtil.isUserPort(-55));\n+    }\n+\n+    @Test\n+    public void rejectReservedSystemPorts() {\n+        Assert.assertFalse(\"Port number must be outside reserved system range (0-1023).\", RemoteUtil.isUserPort(0));\n+        Assert.assertFalse(\"Port number must be outside reserved system range (0-1023).\", RemoteUtil.isUserPort(1023));\n+    }\n+\n+    @Test\n+    public void rejectPortsAbove16Bits() {\n+        // 2 ^ 16 - 1 => 65535\n+        Assert.assertFalse(\"Port number should be below 65535.\", RemoteUtil.isUserPort(65536));\n+    }\n+\n+    @Test\n+    public void acceptPortsAboveSystemPorts() {\n+        // ports 1024 -> 65535\n+        Assert.assertTrue(\"Port number in between 1024 and 65535 should be valid.\", RemoteUtil.isUserPort(1024));\n+        Assert.assertTrue(\"Port number in between 1024 and 65535 should be valid.\", RemoteUtil.isUserPort(65535));\n+    }\n+}, @@ -8,7 +8,6 @@\n \n     @Test\n     public void testToMonthNumber() {\n-\n         Assert.assertEquals(0, MonthUtil.getMonth(\"jan\").index);\n         Assert.assertEquals(1, MonthUtil.getMonth(\"feb\").index);\n         Assert.assertEquals(2, MonthUtil.getMonth(\"mar\").index);\n@@ -76,6 +75,6 @@ public void testToMonthNumber() {\n         Assert.assertEquals(-1, MonthUtil.getMonth(\"3.2\").index);\n         Assert.assertEquals(-1, MonthUtil.getMonth(\"#test#\").index);\n         Assert.assertEquals(-1, MonthUtil.getMonth(\"\").index);\n+        Assert.assertFalse(MonthUtil.getMonth(\"8,\").isValid());\n     }\n-\n }\n\\ No newline at end of file, ", 34, 21, "\"modified, modified, removed, added, modified, \"", 55], ["stefan-kolb", "Removes functionality for additional fields via XML file", "08/11/15, 01:08:19 PM", "stefan-kolb", "cc24baf554d89d25d17b5ca99c09a29cbfa9ff85", ["src/main/java/net/sf/jabref/BibtexFields.java"], "@@ -53,11 +53,6 @@\n     public static final String OWNER = \"owner\";\n     public static final String TIMESTAMP = \"timestamp\"; // it's also definied at the JabRefPreferences class\n     private static final String ENTRYTYPE = \"entrytype\";\n-    \n-    /*\n-     * some extra field definitions\n-     */\n-    private static final String ADDITIONAL_FIELDS = \"/resource/fields/fields.xml\";\n \n     public static final String// Using this when I have no database open or when I read\n             // non bibtex file formats (used by the ImportFormatReader.java)\n@@ -244,9 +239,6 @@ private BibtexFields()\n         dummy.setDisplayable(false);\n         add(dummy);\n \n-        // read external field definitions\n-        readXML(ADDITIONAL_FIELDS);\n-\n         // collect all public fields for the PUBLIC_FIELDS array\n         Vector<String> pFields = new Vector<String>(fieldSet.size());\n         for (BibtexSingleField sField : fieldSet.values()) {\n@@ -302,34 +294,6 @@ private void add(BibtexSingleField field)\n         fieldSet.put(key, field);\n     }\n \n-    /** read a xml definiton file and put only NEW fields into the field list */\n-    private void readXML(String resName)\n-    {\n-        TXMLReader reader = new TXMLReader(resName);\n-        if (reader.isReady())\n-        {\n-            // get a list of all fields\n-            NodeList fieldNodes = reader.getNodes(\"field\");\n-\n-            int tagsCount = fieldNodes.getLength();\n-            for (int t = 0; t < tagsCount; t++)\n-            {\n-                Element entry = (Element) fieldNodes.item(t);\n-                String fName = reader.readStringAttribute(entry, \"name\", null);\n-                if (fName != null) // something found ?\n-                {\n-                    fName = fName.toLowerCase();\n-                    BibtexSingleField dummy = fieldSet.get(fName);\n-                    if (dummy == null) // unknown field\n-                    {\n-                        dummy = new BibtexSingleField(reader, entry);\n-                        fieldSet.put(fName, dummy);\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n     // --------------------------------------------------------------------------\n     //  the \"static area\"\n     // --------------------------------------------------------------------------, ", 0, 36, "\"modified, \"", 36], ["Simon Harrer", "Add license headers for new files.", "08/12/15, 10:11:43 AM", "Simon Harrer", "d4f965fb95220d935dfcec6a932e2009f3ce3b50", ["src/main/java/net/sf/jabref/BibtexEntryTypes.java", "src/main/java/net/sf/jabref/logic/l10n/EncodingControl.java", "src/main/java/net/sf/jabref/logic/l10n/Localization.java", "src/main/java/net/sf/jabref/logic/util/OS.java", "src/test/java/net/sf/jabref/logic/remote/RemoteUtilTest.java"], "@@ -1,3 +1,20 @@\n+/**\n+ * Copyright (C) 2015 JabRef contributors\n+ *\n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License along\n+ * with this program; if not, write to the Free Software Foundation, Inc.,\n+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref;\n \n public class BibtexEntryTypes {, @@ -1,3 +1,20 @@\n+/**\n+ * Copyright (C) 2015 JabRef contributors\n+ *\n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License along\n+ * with this program; if not, write to the Free Software Foundation, Inc.,\n+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.logic.l10n;\n \n import java.io.IOException;, @@ -1,3 +1,20 @@\n+/**\n+ * Copyright (C) 2015 JabRef contributors\n+ *\n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License along\n+ * with this program; if not, write to the Free Software Foundation, Inc.,\n+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.logic.l10n;\n \n import org.apache.commons.logging.Log;, @@ -1,3 +1,20 @@\n+/**\n+ * Copyright (C) 2015 JabRef contributors\n+ *\n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License along\n+ * with this program; if not, write to the Free Software Foundation, Inc.,\n+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.logic.util;\n \n /***, @@ -1,3 +1,20 @@\n+/**\n+ * Copyright (C) 2015 JabRef contributors\n+ *\n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License along\n+ * with this program; if not, write to the Free Software Foundation, Inc.,\n+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.logic.remote;\n \n import junit.framework.Assert;, ", 85, 0, "\"modified, modified, modified, modified, modified, \"", 85], ["stefan-kolb", "Retain old formatter protocol", "08/14/15, 09:15:15 AM", "stefan-kolb", "5f8321de146fe226b8de4724fa9568448d1a6d2e", ["src/main/java/net/sf/jabref/export/layout/format/DOICheck.java", "src/main/java/net/sf/jabref/export/layout/format/DOIStrip.java"], "@@ -26,6 +26,10 @@\n public class DOICheck implements LayoutFormatter {\n     @Override\n     public String format(String fieldText) {\n-        return DOI.build(fieldText).map(doi -> doi.getURL()).orElse(\"\");\n+        if (fieldText == null) {\n+            return null;\n+        }\n+\n+        return DOI.build(fieldText).map(doi -> doi.getURL()).orElse(fieldText);\n     }\n }, @@ -24,6 +24,10 @@\n public class DOIStrip implements LayoutFormatter {\n     @Override\n     public String format(String fieldText) {\n-        return DOI.build(fieldText).map(doi -> doi.getDOI()).orElse(\"\");\n+        if (fieldText == null) {\n+            return null;\n+        }\n+\n+        return DOI.build(fieldText).map(doi -> doi.getDOI()).orElse(fieldText);\n     }\n }, ", 10, 2, "\"modified, modified, \"", 12], ["Joerg Lenhard", "Refactor remaining classes in entryeditor", "08/14/15, 09:42:23 AM", "Joerg Lenhard", "b7a07a10aa5a94083357810f047e269c18cda2d7", ["src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTab.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTabFocusListener.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTabList.java", "src/main/java/net/sf/jabref/gui/entryeditor/SimpleUrlDragDrop.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -53,20 +53,23 @@\n \n     private final EntryEditor parent;\n \n-    private final HashMap<String, FieldEditor> editors = new HashMap<String, FieldEditor>();\n+    private final HashMap<String, FieldEditor> editors = new HashMap<>();\n \n     private FieldEditor activeField;\n \n     // UGLY HACK to have a pointer to the fileListEditor to call autoSetLinks()\n     public FileListEditor fileListEditor;\n \n+    private BibtexEntry entry;\n+\n+    private final FocusListener fieldListener = new EntryEditorTabFocusListener(this);\n \n     public EntryEditorTab(JabRefFrame frame, BasePanel panel, List<String> fields, EntryEditor parent,\n-            boolean addKeyField, boolean compressed, String name) {\n+                          boolean addKeyField, boolean compressed, String name) {\n         if (fields != null) {\n             this.fields = fields.toArray(new String[fields.size()]);\n         } else {\n-            this.fields = new String[] {};\n+            this.fields = new String[]{};\n         }\n \n         this.parent = parent;\n@@ -83,49 +86,49 @@ public EntryEditorTab(JabRefFrame frame, BasePanel panel, List<String> fields, E\n     private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField,\n                             boolean compressed, String title) {\n \n-        InputMap im = panel.getInputMap(JComponent.WHEN_FOCUSED);\n-        ActionMap am = panel.getActionMap();\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n-        am.put(\"prev\", parent.prevEntryAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n-        am.put(\"next\", parent.nextEntryAction);\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", parent.storeFieldAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n-        am.put(\"left\", parent.switchLeftAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n-        am.put(\"right\", parent.switchRightAction);\n-        im.put(Globals.prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", parent.helpAction);\n-        im.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n-        am.put(\"save\", parent.saveDatabaseAction);\n-        im.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n-        am.put(\"nexttab\", parent.frame.nextTab);\n-        im.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n-        am.put(\"prevtab\", parent.frame.prevTab);\n+        InputMap inputMap = panel.getInputMap(JComponent.WHEN_FOCUSED);\n+        ActionMap actionMap = panel.getActionMap();\n+\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n+        actionMap.put(\"prev\", parent.prevEntryAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n+        actionMap.put(\"next\", parent.nextEntryAction);\n+\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n+        actionMap.put(\"store\", parent.storeFieldAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n+        actionMap.put(\"left\", parent.switchLeftAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n+        actionMap.put(\"right\", parent.switchRightAction);\n+        inputMap.put(Globals.prefs.getKey(\"Help\"), \"help\");\n+        actionMap.put(\"help\", parent.helpAction);\n+        inputMap.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n+        actionMap.put(\"save\", parent.saveDatabaseAction);\n+        inputMap.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n+        actionMap.put(\"nexttab\", parent.frame.nextTab);\n+        inputMap.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n+        actionMap.put(\"prevtab\", parent.frame.prevTab);\n \n         panel.setName(title);\n \n         int fieldsPerRow = compressed ? 2 : 1;\n-        //String rowSpec = \"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\";\n+\n         String colSpec = compressed ? \"fill:pref, 1dlu, fill:10dlu:grow, 1dlu, fill:pref, \"\n                 + \"8dlu, fill:pref, 1dlu, fill:10dlu:grow, 1dlu, fill:pref\"\n                 : \"fill:pref, 1dlu, fill:pref:grow, 1dlu, fill:pref\";\n-        StringBuilder sb = new StringBuilder();\n+        StringBuilder stringBuilder = new StringBuilder();\n         int rows = (int) Math.ceil((double) fields.length / fieldsPerRow);\n         for (int i = 0; i < rows; i++) {\n-            sb.append(\"fill:pref:grow, \");\n+            stringBuilder.append(\"fill:pref:grow, \");\n         }\n         if (addKeyField) {\n-            sb.append(\"4dlu, fill:pref\");\n-        } else if (sb.length() >= 2) {\n-            sb.delete(sb.length() - 2, sb.length());\n+            stringBuilder.append(\"4dlu, fill:pref\");\n+        } else if (stringBuilder.length() >= 2) {\n+            stringBuilder.delete(stringBuilder.length() - 2, stringBuilder.length());\n         }\n-        String rowSpec = sb.toString();\n+        String rowSpec = stringBuilder.toString();\n \n         DefaultFormBuilder builder = new DefaultFormBuilder\n                 (new FormLayout(colSpec, rowSpec), panel);\n@@ -134,49 +137,47 @@ private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField\n             // Create the text area:\n             int editorType = BibtexFields.getEditorType(fields[i]);\n \n-            final FieldEditor ta;\n+            final FieldEditor fieldEditor;\n             int defaultHeight;\n             int wHeight = (int) (50.0 * BibtexFields.getFieldWeight(fields[i]));\n             if (editorType == GUIGlobals.FILE_LIST_EDITOR) {\n-                ta = new FileListEditor(frame, bPanel.metaData(), fields[i], null, parent);\n-                fileListEditor = (FileListEditor) ta;\n+                fieldEditor = new FileListEditor(frame, bPanel.metaData(), fields[i], null, parent);\n+                fileListEditor = (FileListEditor) fieldEditor;\n                 defaultHeight = 0;\n+            } else {\n+                fieldEditor = new FieldTextArea(fields[i], null);\n+                frame.getSearchManager().addSearchListener((FieldTextArea) fieldEditor);\n+                defaultHeight = fieldEditor.getPane().getPreferredSize().height;\n             }\n-            else {\n-                ta = new FieldTextArea(fields[i], null);\n-                frame.getSearchManager().addSearchListener((FieldTextArea) ta);\n-                defaultHeight = ta.getPane().getPreferredSize().height;\n-            }\n-            //ta.addUndoableEditListener(bPanel.undoListener);\n \n-            JComponent ex = parent.getExtra(fields[i], ta);\n+            JComponent extra = parent.getExtra(fields[i], fieldEditor);\n \n             // Add autocompleter listener, if required for this field:\n-            AutoCompleter autoComp = bPanel.getAutoCompleters().get(fields[i]);\n-            AutoCompleteListener acl = null;\n-            if (autoComp != null) {\n-                acl = new AutoCompleteListener(autoComp);\n+            AutoCompleter autoCompleter = bPanel.getAutoCompleters().get(fields[i]);\n+            AutoCompleteListener autoCompleteListener = null;\n+            if (autoCompleter != null) {\n+                autoCompleteListener = new AutoCompleteListener(autoCompleter);\n             }\n-            setupJTextComponent(ta.getTextComponent(), acl);\n-            ta.setAutoCompleteListener(acl);\n+            setupJTextComponent(fieldEditor.getTextComponent(), autoCompleteListener);\n+            fieldEditor.setAutoCompleteListener(autoCompleteListener);\n \n             // Store the editor for later reference:\n-            editors.put(fields[i], ta);\n+            editors.put(fields[i], fieldEditor);\n             if (i == 0) {\n-                activeField = ta;\n+                activeField = fieldEditor;\n             }\n-            //System.out.println(fields[i]+\": \"+BibtexFields.getFieldWeight(fields[i]));\n+\n             if (!compressed) {\n-                ta.getPane().setPreferredSize(new Dimension(100, Math.max(defaultHeight, wHeight)));\n+                fieldEditor.getPane().setPreferredSize(new Dimension(100, Math.max(defaultHeight, wHeight)));\n             }\n-            builder.append(ta.getLabel());\n-            if (ex == null) {\n-                builder.append(ta.getPane(), 3);\n+            builder.append(fieldEditor.getLabel());\n+            if (extra == null) {\n+                builder.append(fieldEditor.getPane(), 3);\n             } else {\n-                builder.append(ta.getPane());\n+                builder.append(fieldEditor.getPane());\n                 JPanel pan = new JPanel();\n                 pan.setLayout(new BorderLayout());\n-                pan.add(ex, BorderLayout.NORTH);\n+                pan.add(extra, BorderLayout.NORTH);\n                 builder.append(pan);\n             }\n             if ((i + 1) % fieldsPerRow == 0) {\n@@ -186,48 +187,44 @@ private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField\n \n         // Add the edit field for Bibtex-key.\n         if (addKeyField) {\n-            final FieldTextField tf = new FieldTextField(BibtexFields.KEY_FIELD, parent\n+            final FieldTextField textField = new FieldTextField(BibtexFields.KEY_FIELD, parent\n                     .getEntry().getField(BibtexFields.KEY_FIELD), true);\n-            //tf.addUndoableEditListener(bPanel.undoListener);\n-            setupJTextComponent(tf, null);\n+            setupJTextComponent(textField, null);\n \n-            editors.put(\"bibtexkey\", tf);\n+            editors.put(\"bibtexkey\", textField);\n             /*\n              * If the key field is the only field, we should have only one\n              * editor, and this one should be set as active initially:\n              */\n             if (editors.size() == 1) {\n-                activeField = tf;\n+                activeField = textField;\n             }\n             builder.nextLine();\n-            builder.append(tf.getLabel());\n-            builder.append(tf, 3);\n+            builder.append(textField.getLabel());\n+            builder.append(textField, 3);\n         }\n     }\n \n \n-    private BibtexEntry entry;\n-\n-\n     private BibtexEntry getEntry() {\n         return entry;\n     }\n \n-    private boolean isFieldModified(FieldEditor f) {\n-        String text = f.getText().trim();\n+    private boolean isFieldModified(FieldEditor fieldEditor) {\n+        String text = fieldEditor.getText().trim();\n \n         if (text.isEmpty()) {\n-            return getEntry().getField(f.getFieldName()) != null;\n+            return getEntry().getField(fieldEditor.getFieldName()) != null;\n         } else {\n-            Object entryValue = getEntry().getField(f.getFieldName());\n+            Object entryValue = getEntry().getField(fieldEditor.getFieldName());\n             return entryValue == null || !entryValue.toString().equals(text);\n         }\n     }\n \n-    public void markIfModified(FieldEditor f) {\n+    public void markIfModified(FieldEditor fieldEditor) {\n         // Only mark as changed if not already is and the field was indeed\n         // modified\n-        if (!updating && !parent.panel.isBaseChanged() && isFieldModified(f)) {\n+        if (!updating && !parent.panel.isBaseChanged() && isFieldModified(fieldEditor)) {\n             markBaseChanged();\n         }\n     }\n@@ -238,13 +235,13 @@ private void markBaseChanged() {\n \n     /**\n      * Only sets the activeField variable but does not focus it.\n-     * \n+     * <p>\n      * Call activate afterwards.\n-     * \n-     * @param c\n+     *\n+     * @param fieldEditor\n      */\n-    public void setActive(FieldEditor c) {\n-        activeField = c;\n+    public void setActive(FieldEditor fieldEditor) {\n+        activeField = fieldEditor;\n     }\n \n     public FieldEditor getActive() {\n@@ -266,7 +263,6 @@ public void activate() {\n \n     /**\n      * Reset all fields from the data in the BibtexEntry.\n-     * \n      */\n     public void updateAll() {\n         setEntry(getEntry());\n@@ -296,8 +292,8 @@ public boolean updateField(String field, String content) {\n         if (!editors.containsKey(field)) {\n             return false;\n         }\n-        FieldEditor ed = editors.get(field);\n-        ed.setText(content);\n+        FieldEditor fieldEditor = editors.get(field);\n+        fieldEditor.setText(content);\n         return true;\n     }\n \n@@ -330,10 +326,10 @@ public EntryEditor getParent() {\n \n     /**\n      * Set up key bindings and focus listener for the FieldEditor.\n-     * \n+     *\n      * @param component\n      */\n-    private void setupJTextComponent(final JComponent component, final AutoCompleteListener acl) {\n+    private void setupJTextComponent(final JComponent component, final AutoCompleteListener autoCompleteListener) {\n \n         // Here we add focus listeners to the component. The funny code is because we need\n         // to guarantee that the AutoCompleteListener - if used - is called before fieldListener\n@@ -343,57 +339,51 @@ private void setupJTextComponent(final JComponent component, final AutoCompleteL\n         // listeners, so we handle this by only adding the AutoCompleteListener and telling\n         // it to call fieldListener afterwards. If no AutoCompleteListener is used, we\n         // add the fieldListener normally.\n-        if (acl != null) {\n-            component.addKeyListener(acl);\n-            component.addFocusListener(acl);\n-            acl.setNextFocusListener(fieldListener);\n+        if (autoCompleteListener != null) {\n+            component.addKeyListener(autoCompleteListener);\n+            component.addFocusListener(autoCompleteListener);\n+            autoCompleteListener.setNextFocusListener(fieldListener);\n         } else {\n             component.addFocusListener(fieldListener);\n         }\n \n-        InputMap im = component.getInputMap(JComponent.WHEN_FOCUSED);\n-        ActionMap am = component.getActionMap();\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n-        am.put(\"prev\", parent.prevEntryAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n-        am.put(\"next\", parent.nextEntryAction);\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", parent.storeFieldAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n-        am.put(\"left\", parent.switchLeftAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n-        am.put(\"right\", parent.switchRightAction);\n-        im.put(Globals.prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", parent.helpAction);\n-        im.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n-        am.put(\"save\", parent.saveDatabaseAction);\n-        im.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n-        am.put(\"nexttab\", parent.frame.nextTab);\n-        im.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n-        am.put(\"prevtab\", parent.frame.prevTab);\n-\n-        try {\n-            HashSet<AWTKeyStroke> keys = new HashSet<AWTKeyStroke>(component\n-                    .getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(AWTKeyStroke.getAWTKeyStroke(\"pressed TAB\"));\n-            component.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);\n-            keys = new HashSet<AWTKeyStroke>(component\n-                    .getFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(KeyStroke.getKeyStroke(\"shift pressed TAB\"));\n-            component.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, keys);\n-        } catch (Throwable t) {\n-            System.err.println(t);\n-        }\n+        InputMap inputMap = component.getInputMap(JComponent.WHEN_FOCUSED);\n+        ActionMap actionMap = component.getActionMap();\n+\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n+        actionMap.put(\"prev\", parent.prevEntryAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n+        actionMap.put(\"next\", parent.nextEntryAction);\n+\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n+        actionMap.put(\"store\", parent.storeFieldAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n+        actionMap.put(\"left\", parent.switchLeftAction);\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n+        inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n+        actionMap.put(\"right\", parent.switchRightAction);\n+        inputMap.put(Globals.prefs.getKey(\"Help\"), \"help\");\n+        actionMap.put(\"help\", parent.helpAction);\n+        inputMap.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n+        actionMap.put(\"save\", parent.saveDatabaseAction);\n+        inputMap.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n+        actionMap.put(\"nexttab\", parent.frame.nextTab);\n+        inputMap.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n+        actionMap.put(\"prevtab\", parent.frame.prevTab);\n+\n+\n+        HashSet<AWTKeyStroke> keys = new HashSet<>(component\n+                .getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));\n+        keys.clear();\n+        keys.add(AWTKeyStroke.getAWTKeyStroke(\"pressed TAB\"));\n+        component.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);\n+        keys = new HashSet<>(component\n+                .getFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS));\n+        keys.clear();\n+        keys.add(KeyStroke.getKeyStroke(\"shift pressed TAB\"));\n+        component.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, keys);\n \n     }\n \n-\n-    private final FocusListener fieldListener = new EntryEditorTabFocusListener(this);\n-\n }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -31,9 +31,10 @@\n  */\n class EntryEditorTabFocusListener implements FocusListener {\n \n-    private JTextComponent c;\n+    private JTextComponent textComponent;\n+\n+    private DocumentListener documentListener;\n \n-    private DocumentListener d;\n     private final EntryEditorTab entryEditorTab;\n \n \n@@ -42,27 +43,27 @@ public EntryEditorTabFocusListener(final EntryEditorTab entryEditorTab) {\n     }\n \n     @Override\n-    public void focusGained(FocusEvent e) {\n+    public void focusGained(FocusEvent event) {\n \n         synchronized (this) {\n-            if (c != null) {\n-                c.getDocument().removeDocumentListener(d);\n-                c = null;\n-                d = null;\n+            if (textComponent != null) {\n+                textComponent.getDocument().removeDocumentListener(documentListener);\n+                textComponent = null;\n+                documentListener = null;\n             }\n \n-            if (e.getSource() instanceof JTextComponent) {\n+            if (event.getSource() instanceof JTextComponent) {\n \n-                c = (JTextComponent) e.getSource();\n+                textComponent = (JTextComponent) event.getSource();\n                 /**\n                  * [ 1553552 ] Not properly detecting changes to flag as\n                  * changed\n                  */\n-                d = new DocumentListener() {\n+                documentListener = new DocumentListener() {\n \n                     void fire() {\n-                        if (c.isFocusOwner()) {\n-                            entryEditorTab.markIfModified((FieldEditor) c);\n+                        if (textComponent.isFocusOwner()) {\n+                            entryEditorTab.markIfModified((FieldEditor) textComponent);\n                         }\n                     }\n \n@@ -81,14 +82,14 @@ public void removeUpdate(DocumentEvent e) {\n                         fire();\n                     }\n                 };\n-                c.getDocument().addDocumentListener(d);\n+                textComponent.getDocument().addDocumentListener(documentListener);\n \n                 /**\n                  * Makes the vertical scroll panel view follow the focus\n                  */\n-                Component cScrollPane = c.getParent().getParent();\n-                if (cScrollPane instanceof JScrollPane) {\n-                    JScrollPane componentPane = (JScrollPane) cScrollPane;\n+                Component scrollPane = textComponent.getParent().getParent();\n+                if (scrollPane instanceof JScrollPane) {\n+                    JScrollPane componentPane = (JScrollPane) scrollPane;\n                     Component cPane = componentPane.getParent();\n                     if (cPane instanceof JPanel) {\n                         JPanel panel = (JPanel) cPane;\n@@ -100,21 +101,21 @@ public void removeUpdate(DocumentEvent e) {\n             }\n         }\n \n-        entryEditorTab.setActive((FieldEditor) e.getSource());\n+        entryEditorTab.setActive((FieldEditor) event.getSource());\n \n     }\n \n     @Override\n-    public void focusLost(FocusEvent e) {\n+    public void focusLost(FocusEvent event) {\n         synchronized (this) {\n-            if (c != null) {\n-                c.getDocument().removeDocumentListener(d);\n-                c = null;\n-                d = null;\n+            if (textComponent != null) {\n+                textComponent.getDocument().removeDocumentListener(documentListener);\n+                textComponent = null;\n+                documentListener = null;\n             }\n         }\n-        if (!e.isTemporary()) {\n-            entryEditorTab.getParent().updateField(e.getSource());\n+        if (!event.isTemporary()) {\n+            entryEditorTab.getParent().updateField(event.getSource());\n         }\n     }\n }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -36,8 +36,8 @@ public EntryEditorTabList() {\n     }\n \n     private void init() {\n-        list = new ArrayList<List<String>>();\n-        names = new ArrayList<String>();\n+        list = new ArrayList<>();\n+        names = new ArrayList<>();\n         int i = 0;\n         String name;\n         String[] fields;, @@ -1,28 +1,17 @@\n-/*\n-Copyright (C) 2004 E. Putrycz\n-\n-All programs in this directory and\n-subdirectories are published under the GNU General Public License as\n-described below.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2 of the License, or (at\n-your option) any later version.\n-\n-This program is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n-USA\n-\n-Further information about the GNU GPL is available at:\n-http://www.gnu.org/copyleft/gpl.ja.html\n-\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n package net.sf.jabref.gui.entryeditor;\n \n@@ -103,18 +92,18 @@ public void dragExit(DropTargetEvent dte) {\n      * @see java.awt.dnd.DropTargetListener#drop(java.awt.dnd.DropTargetDropEvent)\n      */\n     @Override\n-    public void drop(DropTargetDropEvent dtde) {\n-        Transferable tsf = dtde.getTransferable();\n-        dtde.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);\n+    public void drop(DropTargetDropEvent event) {\n+        Transferable tsf = event.getTransferable();\n+        event.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);\n         //try with an URL\n-        DataFlavor dtURL = null;\n+        DataFlavor dataFlavor = null;\n         try {\n-            dtURL = new DataFlavor(\"application/x-java-url; class=java.net.URL\");\n+            dataFlavor = new DataFlavor(\"application/x-java-url; class=java.net.URL\");\n         } catch (ClassNotFoundException e) {\n             LOGGER.warn(\"Could not find DropTargetDropEvent class\", e);\n         }\n         try {\n-            URL url = (URL) tsf.getTransferData(dtURL);\n+            URL url = (URL) tsf.getTransferData(dataFlavor);\n             //insert URL\n             editor.setText(url.toString());\n             storeFieldAction.actionPerformed(new ActionEvent(editor, 0, \"\"));, ", 171, 191, "\"modified, modified, modified, modified, \"", 362], ["Stefan Kolb", "Ignore unreliable ACSTest on CI server", "10/09/15, 01:28:47 PM", "Stefan Kolb", "5f1419a96ae202edac7d87ac5dba74c98ff9a481", ["src/main/java/net/sf/jabref/logic/fetcher/ACS.java", "src/test/java/net/sf/jabref/logic/fetcher/ACSTest.java"], "@@ -41,7 +41,7 @@\n         if(doi.isPresent()) {\n             String source = String.format(SOURCE, doi.get().getDOI());\n             // Retrieve PDF link\n-            Document html = Jsoup.connect(source).timeout(5000).ignoreHttpErrors(true).get();\n+            Document html = Jsoup.connect(source).ignoreHttpErrors(true).get();\n             Element link = html.select(\".pdf-high-res a\").first();\n \n             if(link != null) {, @@ -2,7 +2,9 @@\n \n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.fetcher.ACS;\n+import net.sf.jabref.support.DevEnvironment;\n import org.junit.Assert;\n+import org.junit.Assume;\n import org.junit.Before;\n import org.junit.Test;\n \n@@ -27,6 +29,9 @@ public void rejectNullParameter() throws IOException {\n \n     @Test\n     public void findByDOI() throws IOException {\n+        // CI server is unreliable\n+        Assume.assumeFalse(DevEnvironment.isCIServer());\n+\n         entry.setField(\"doi\", \"10.1021/bk-2006-STYG.ch014\");\n \n         Assert.assertEquals(\n@@ -37,6 +42,9 @@ public void findByDOI() throws IOException {\n \n     @Test\n     public void notFoundByDOI() throws IOException {\n+        // CI server is unreliable\n+        Assume.assumeFalse(DevEnvironment.isCIServer());\n+\n         entry.setField(\"doi\", \"10.1021/bk-2006-WWW.ch014\");\n \n         Assert.assertEquals(Optional.empty(), finder.findFullText(entry));, ", 9, 1, "\"modified, modified, \"", 10], ["Joerg Lenhard", "Move JabRefFrame and BasePanel to the gui package", "08/18/15, 10:14:47 AM", "Joerg Lenhard", "5801e56de801d1fb3a21d6dbb20ab4cd68c650f0", ["src/main/java/net/sf/jabref/DuplicateResolverDialog.java", "src/main/java/net/sf/jabref/FindUnlinkedFilesDialog.java", "src/main/java/net/sf/jabref/Globals.java", "src/main/java/net/sf/jabref/HandleDuplicateWarnings.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/UrlDragDrop.java", "src/main/java/net/sf/jabref/collab/Change.java", "src/main/java/net/sf/jabref/collab/ChangeDisplayDialog.java", "src/main/java/net/sf/jabref/collab/ChangeScanner.java", "src/main/java/net/sf/jabref/collab/EntryAddChange.java", "src/main/java/net/sf/jabref/collab/EntryChange.java", "src/main/java/net/sf/jabref/collab/EntryDeleteChange.java", "src/main/java/net/sf/jabref/collab/FileUpdatePanel.java", "src/main/java/net/sf/jabref/collab/GroupChange.java", "src/main/java/net/sf/jabref/collab/MetaDataChange.java", "src/main/java/net/sf/jabref/collab/PreambleChange.java", "src/main/java/net/sf/jabref/collab/StringAddChange.java", "src/main/java/net/sf/jabref/collab/StringChange.java", "src/main/java/net/sf/jabref/collab/StringNameChange.java", "src/main/java/net/sf/jabref/collab/StringRemoveChange.java", "src/main/java/net/sf/jabref/export/AutoSaveManager.java", "src/main/java/net/sf/jabref/export/CustomExportDialog.java", "src/main/java/net/sf/jabref/export/ExpandEndnoteFilters.java", "src/main/java/net/sf/jabref/export/ExportCustomizationDialog.java", "src/main/java/net/sf/jabref/export/ExportFormats.java", "src/main/java/net/sf/jabref/export/ExportToClipboardAction.java", "src/main/java/net/sf/jabref/export/SaveAllAction.java", "src/main/java/net/sf/jabref/export/SaveDatabaseAction.java", "src/main/java/net/sf/jabref/external/AttachFileAction.java", "src/main/java/net/sf/jabref/external/AutoSetExternalFileForEntries.java", "src/main/java/net/sf/jabref/external/DownloadExternalFile.java", "src/main/java/net/sf/jabref/external/DroppedFileHandler.java", "src/main/java/net/sf/jabref/external/ExternalFileMenuItem.java", "src/main/java/net/sf/jabref/external/ExternalFilePanel.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/FileLinksUpgradeWarning.java", "src/main/java/net/sf/jabref/external/FindFullTextAction.java", "src/main/java/net/sf/jabref/external/MoveFileAction.java", "src/main/java/net/sf/jabref/external/PushToApplication.java", "src/main/java/net/sf/jabref/external/PushToApplicationAction.java", "src/main/java/net/sf/jabref/external/PushToApplicationButton.java", "src/main/java/net/sf/jabref/external/PushToEmacs.java", "src/main/java/net/sf/jabref/external/PushToLatexEditor.java", "src/main/java/net/sf/jabref/external/PushToLyx.java", "src/main/java/net/sf/jabref/external/PushToTeXstudio.java", "src/main/java/net/sf/jabref/external/PushToVim.java", "src/main/java/net/sf/jabref/external/PushToWinEdt.java", "src/main/java/net/sf/jabref/external/TransferableFileLinkSelection.java", "src/main/java/net/sf/jabref/external/WriteXMPAction.java", "src/main/java/net/sf/jabref/external/WriteXMPEntryEditorAction.java", "src/main/java/net/sf/jabref/groups/AddToGroupAction.java", "src/main/java/net/sf/jabref/groups/AutoGroupDialog.java", "src/main/java/net/sf/jabref/groups/EntryTableTransferHandler.java", "src/main/java/net/sf/jabref/groups/GroupDialog.java", "src/main/java/net/sf/jabref/groups/GroupSelector.java", "src/main/java/net/sf/jabref/groups/RemoveFromGroupAction.java", "src/main/java/net/sf/jabref/gui/BasePanel.java", "src/main/java/net/sf/jabref/gui/BibtexKeyPatternDialog.java", "src/main/java/net/sf/jabref/gui/ContentSelectorDialog2.java", "src/main/java/net/sf/jabref/gui/DatabasePropertiesDialog.java", "src/main/java/net/sf/jabref/gui/DuplicateSearch.java", "src/main/java/net/sf/jabref/gui/EntryTypeDialog.java", "src/main/java/net/sf/jabref/gui/FieldContentSelector.java", "src/main/java/net/sf/jabref/gui/FieldWeightDialog.java", "src/main/java/net/sf/jabref/gui/FileHistory.java", "src/main/java/net/sf/jabref/gui/FileListEntryEditor.java", "src/main/java/net/sf/jabref/gui/GroupAddRemoveDialog.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/main/java/net/sf/jabref/gui/IncrementalSearcher.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/KeyBindingsDialog.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/MergeDialog.java", "src/main/java/net/sf/jabref/gui/MergeEntriesDialog.java", "src/main/java/net/sf/jabref/gui/PdfPreviewPanel.java", "src/main/java/net/sf/jabref/gui/PreambleEditor.java", "src/main/java/net/sf/jabref/gui/PreviewPanel.java", "src/main/java/net/sf/jabref/gui/ReplaceStringDialog.java", "src/main/java/net/sf/jabref/gui/RightClickMenu.java", "src/main/java/net/sf/jabref/gui/SearchManager2.java", "src/main/java/net/sf/jabref/gui/SearchResultsDialog.java", "src/main/java/net/sf/jabref/gui/SidePane.java", "src/main/java/net/sf/jabref/gui/SidePaneComponent.java", "src/main/java/net/sf/jabref/gui/SidePaneManager.java", "src/main/java/net/sf/jabref/gui/SortTabsAction.java", "src/main/java/net/sf/jabref/gui/StringDialog.java", "src/main/java/net/sf/jabref/gui/SysTray.java", "src/main/java/net/sf/jabref/gui/WaitForSaveOperation.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTab.java", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditorTransferHandler.java", "src/main/java/net/sf/jabref/gui/fieldeditors/PreviewPanelTransferHandler.java", "src/main/java/net/sf/jabref/gui/help/HelpDialog.java", "src/main/java/net/sf/jabref/gui/journals/AbbreviateAction.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsAction.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsPanel.java", "src/main/java/net/sf/jabref/gui/journals/UnabbreviateAction.java", "src/main/java/net/sf/jabref/gui/labelPattern/ResolveDuplicateLabelDialog.java", "src/main/java/net/sf/jabref/gui/labelPattern/SearchFixDuplicateLabels.java", "src/main/java/net/sf/jabref/gui/preftabs/EntryEditorPrefsTab.java", "src/main/java/net/sf/jabref/gui/preftabs/ExternalTab.java", "src/main/java/net/sf/jabref/gui/preftabs/FileTab.java", "src/main/java/net/sf/jabref/gui/preftabs/GeneralTab.java", "src/main/java/net/sf/jabref/gui/preftabs/PreferencesDialog.java", "src/main/java/net/sf/jabref/gui/preftabs/PreviewPrefsTab.java", "src/main/java/net/sf/jabref/gui/preftabs/TableColumnsTab.java", "src/main/java/net/sf/jabref/gui/undo/CountingUndoManager.java", "src/main/java/net/sf/jabref/gui/undo/UndoableInsertEntry.java", "src/main/java/net/sf/jabref/gui/undo/UndoableInsertString.java", "src/main/java/net/sf/jabref/gui/undo/UndoablePreambleChange.java", "src/main/java/net/sf/jabref/gui/undo/UndoableRemoveEntry.java", "src/main/java/net/sf/jabref/gui/undo/UndoableRemoveString.java", "src/main/java/net/sf/jabref/gui/undo/UndoableStringChange.java", "src/main/java/net/sf/jabref/gui/worker/MarkEntriesAction.java", "src/main/java/net/sf/jabref/gui/worker/SendAsEMailAction.java", "src/main/java/net/sf/jabref/imports/AppendDatabaseAction.java", "src/main/java/net/sf/jabref/imports/AutosaveStartupPrompter.java", "src/main/java/net/sf/jabref/imports/CheckForNewEntryTypesAction.java", "src/main/java/net/sf/jabref/imports/EntryFromFileCreatorManager.java", "src/main/java/net/sf/jabref/imports/GeneralFetcher.java", "src/main/java/net/sf/jabref/imports/ImportCustomizationDialog.java", "src/main/java/net/sf/jabref/imports/ImportFormats.java", "src/main/java/net/sf/jabref/imports/ImportMenuItem.java", "src/main/java/net/sf/jabref/imports/OpenDatabaseAction.java", "src/main/java/net/sf/jabref/imports/PostOpenAction.java", "src/main/java/net/sf/jabref/oo/AdvancedCiteDialog.java", "src/main/java/net/sf/jabref/oo/CitationManager.java", "src/main/java/net/sf/jabref/oo/OpenOfficePanel.java", "src/main/java/net/sf/jabref/oo/StyleSelectDialog.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldAction.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldDropDown.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldMenuAction.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldValue.java", "src/main/java/net/sf/jabref/sql/DBImportExportDialog.java", "src/main/java/net/sf/jabref/sql/DbConnectAction.java", "src/main/java/net/sf/jabref/sql/exporter/DBExporter.java", "src/main/java/net/sf/jabref/sql/importer/DbImportAction.java", "src/main/java/net/sf/jabref/util/JabRefDesktop.java", "src/main/java/net/sf/jabref/util/ManageKeywordsAction.java", "src/main/java/net/sf/jabref/util/MassSetFieldAction.java", "src/main/java/net/sf/jabref/wizard/auximport/gui/FromAuxDialog.java", "src/main/java/net/sf/jabref/wizard/integrity/gui/IntegrityMessagePanel.java", "src/main/java/net/sf/jabref/wizard/integrity/gui/IntegrityWizard.java", "src/main/java/net/sf/jabref/wizard/text/gui/TextInputDialog.java", "src/main/java/osx/macadapter/MacAdapter.java", "src/main/java/spl/PdfImporter.java", "src/main/java/spl/listener/SplDatabaseChangeListener.java", "src/test/java/net/sf/jabref/imports/GeneralFetcherTest.java"], "@@ -24,6 +24,8 @@\n import javax.swing.*;\n \n import net.sf.jabref.export.LatexFieldFormatter;\n+import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n , @@ -61,6 +61,8 @@\n import javax.swing.tree.TreeNode;\n import javax.swing.tree.TreePath;\n \n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.JabRefDesktop;\n import org.apache.commons.logging.Log;, @@ -17,6 +17,8 @@\n \n import net.sf.jabref.collab.FileUpdateMonitor;\n import net.sf.jabref.export.AutoSaveManager;\n+import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.SidePaneManager;\n import net.sf.jabref.gui.help.HelpDialog;\n import net.sf.jabref.imports.ImportFormatReader;\n import net.sf.jabref.logic.error.StreamEavesdropper;, @@ -15,6 +15,7 @@\n */\n package net.sf.jabref;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.imports.ParserResult;\n import net.sf.jabref.imports.PostOpenAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -33,7 +33,9 @@\n import javax.swing.*;\n import javax.swing.plaf.FontUIResource;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n import org.apache.commons.logging.Log;, @@ -41,6 +41,7 @@\n \n import javax.swing.JOptionPane;\n \n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.net.MonitoredURLDownload;, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.collab;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n \n import javax.swing.tree.DefaultMutableTreeNode;, @@ -26,7 +26,7 @@\n import java.awt.event.ActionListener;\n import java.awt.event.ActionEvent;\n import java.util.Enumeration;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;, @@ -31,6 +31,8 @@\n import net.sf.jabref.export.SaveException;\n import net.sf.jabref.export.SaveSession;\n import net.sf.jabref.groups.GroupTreeNode;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.imports.OpenDatabaseAction;\n import net.sf.jabref.imports.ParserResult;\n import net.sf.jabref.logic.l10n.Localization;, @@ -19,6 +19,8 @@\n import javax.swing.JScrollPane;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;\n , @@ -23,6 +23,7 @@\n import javax.swing.JScrollPane;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;, @@ -19,6 +19,8 @@\n import javax.swing.JScrollPane;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableRemoveEntry;\n , @@ -22,8 +22,7 @@\n \n import javax.swing.*;\n \n-import net.sf.jabref.*;\n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.logic.l10n.Localization;\n \n public class FileUpdatePanel extends SidePaneComponent implements ActionListener,, @@ -18,7 +18,7 @@\n import javax.swing.JComponent;\n import javax.swing.JLabel;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.groups.structure.AllEntriesGroup;\n import net.sf.jabref.groups.GroupTreeNode;, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.collab;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.undo.NamedCompound;, @@ -18,7 +18,7 @@\n import javax.swing.JComponent;\n import javax.swing.JScrollPane;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoablePreambleChange;, @@ -18,6 +18,7 @@\n import javax.swing.JComponent;\n import javax.swing.JScrollPane;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -18,6 +18,7 @@\n import javax.swing.JComponent;\n import javax.swing.JScrollPane;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -18,6 +18,7 @@\n import javax.swing.JComponent;\n import javax.swing.JLabel;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -22,7 +22,7 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexString;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.gui.undo.NamedCompound;, @@ -15,8 +15,8 @@\n */\n package net.sf.jabref.export;\n \n-import net.sf.jabref.JabRefFrame;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n , @@ -26,7 +26,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -22,7 +22,7 @@\n import javax.swing.JFileChooser;\n import javax.swing.JOptionPane;\n \n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.Worker;\n import net.sf.jabref.gui.FileDialogs;, @@ -26,6 +26,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.help.HelpAction;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;, @@ -26,6 +26,7 @@\n import javax.swing.filechooser.FileFilter;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.l10n.Localization;, @@ -33,12 +33,12 @@\n import javax.swing.ListSelectionModel;\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n /**, @@ -20,7 +20,9 @@\n import javax.swing.Action;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import spin.Spin;\n , @@ -18,6 +18,8 @@\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.collab.ChangeScanner;, @@ -1,10 +1,7 @@\n package net.sf.jabref.external;\n \n import net.sf.jabref.*;\n-import net.sf.jabref.gui.FileListEntry;\n-import net.sf.jabref.gui.FileListEntryEditor;\n-import net.sf.jabref.gui.FileListTableModel;\n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n \n /**, @@ -23,6 +23,7 @@\n \n import javax.swing.*;\n \n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.fieldeditors.FieldTextField;\n import net.sf.jabref.logic.l10n.Localization;, @@ -19,6 +19,7 @@\n import net.sf.jabref.gui.FileListEntry;\n import net.sf.jabref.gui.FileListEntryEditor;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.net.MonitoredURLDownload;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.net.URLDownload;, @@ -25,10 +25,7 @@\n \n import com.jgoodies.forms.factories.Borders;\n import net.sf.jabref.*;\n-import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.gui.MainTable;\n-import net.sf.jabref.gui.FileListTableModel;\n-import net.sf.jabref.gui.FileListEntry;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;, @@ -23,6 +23,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.JabRefDesktop;\n , @@ -36,6 +36,7 @@\n import javax.swing.SwingUtilities;\n import javax.xml.transform.TransformerException;\n \n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.net.MonitoredURLDownload;, @@ -30,7 +30,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;, @@ -20,6 +20,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.gui.entryeditor.EntryEditorTabList;, @@ -16,6 +16,7 @@\n package net.sf.jabref.external;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.undo.UndoableFieldChange;, @@ -17,6 +17,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FileListEditor;\n import net.sf.jabref.gui.FileListEntry;, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.external;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.MetaData;, @@ -23,6 +23,8 @@\n import javax.swing.SwingUtilities;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n /**, @@ -19,7 +19,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.oo.OpenOfficePanel;, @@ -24,6 +24,7 @@\n \n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -22,6 +22,7 @@\n import net.sf.jabref.*;\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -23,6 +23,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -8,6 +8,7 @@\n import net.sf.jabref.*;\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;, @@ -18,6 +18,7 @@\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -22,6 +22,7 @@\n import net.sf.jabref.*;\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -18,7 +18,7 @@\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.util.FileUtil;\n import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.FileListTableModel;\n \n import java.awt.datatransfer.Transferable;, @@ -28,6 +28,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.FileListTableModel;\n import net.sf.jabref.gui.FileListEntry;, @@ -16,6 +16,7 @@\n package net.sf.jabref.external;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.entryeditor.EntryEditor;, @@ -22,7 +22,7 @@\n import javax.swing.AbstractAction;\n import javax.swing.undo.AbstractUndoableEdit;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.groups.structure.AbstractGroup;\n import net.sf.jabref.logic.l10n.Localization;, @@ -28,8 +28,8 @@\n import javax.swing.event.CaretEvent;\n import javax.swing.event.CaretListener;\n \n-import net.sf.jabref.BasePanel;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.groups.structure.ExplicitGroup;\n import net.sf.jabref.groups.structure.GroupHierarchyType;\n import net.sf.jabref.groups.structure.KeywordGroup;, @@ -36,10 +36,10 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefExecutorService;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.external.DroppedFileHandler;\n import net.sf.jabref.external.ExternalFileType;, @@ -21,6 +21,9 @@\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n import net.sf.jabref.groups.structure.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.FieldContentSelector;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.fieldeditors.FieldTextField;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.SearchRules;, @@ -60,20 +60,20 @@\n import javax.swing.undo.CompoundEdit;\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.groups.structure.AbstractGroup;\n import net.sf.jabref.groups.structure.AllEntriesGroup;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.rules.InvertSearchRule;\n import net.sf.jabref.logic.search.SearchRule;\n-import net.sf.jabref.SidePaneComponent;\n-import net.sf.jabref.SidePaneManager;\n+import net.sf.jabref.gui.SidePaneComponent;\n+import net.sf.jabref.gui.SidePaneManager;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.search.rules.sets.SearchRuleSets;\n import net.sf.jabref.logic.search.rules.sets.SearchRuleSet;, @@ -20,7 +20,7 @@\n import javax.swing.AbstractAction;\n import javax.swing.undo.AbstractUndoableEdit;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.groups.structure.AbstractGroup;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.BorderLayout;\n import java.awt.Component;\n@@ -56,8 +56,8 @@\n import javax.swing.undo.CannotRedoException;\n import javax.swing.undo.CannotUndoException;\n \n+import net.sf.jabref.*;\n import net.sf.jabref.DatabaseChangeEvent.ChangeType;\n-import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.worker.MarkEntriesAction;\n import net.sf.jabref.gui.worker.SendAsEMailAction;, @@ -29,8 +29,6 @@\n import javax.swing.JPanel;\n import javax.swing.WindowConstants;\n \n-import net.sf.jabref.BasePanel;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.GridBagConstraints;\n import java.awt.GridBagLayout;\n@@ -43,7 +43,9 @@\n import javax.swing.event.ListSelectionEvent;\n import javax.swing.event.ListSelectionListener;\n \n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.FocusRequester;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.MetaData;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -39,7 +39,6 @@\n import javax.swing.JRadioButton;\n import javax.swing.JTextField;\n \n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexFields;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.Globals;, @@ -19,13 +19,16 @@\n //            - new SearcherRunnable.setFinish() method\n //            - replace thread.sleep in run() by wait() and notify() mechanism\n \n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.util.ArrayList;\n import java.util.Vector;\n \n import javax.swing.SwingUtilities;\n \n+import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableRemoveEntry;\n import net.sf.jabref.logic.l10n.Localization;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.BorderLayout;\n import java.awt.GridBagConstraints;\n@@ -27,6 +27,7 @@\n import javax.swing.*;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n+import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.StringUtil;\n , @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.Dimension;\n import java.awt.GridBagConstraints;\n@@ -32,7 +32,8 @@\n \n import com.jgoodies.forms.layout.Sizes;\n import com.jgoodies.looks.Options;\n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -24,7 +24,6 @@\n import javax.swing.*;\n \n import net.sf.jabref.BibtexFields;\n-import net.sf.jabref.JabRefFrame;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.DefaultFormBuilder;, @@ -13,8 +13,11 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n+import net.sf.jabref.JabRefExecutorService;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import java.awt.event.ActionEvent;, @@ -33,7 +33,6 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.FileUtil;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.util.JabRefDesktop;, @@ -2,7 +2,6 @@\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.BaseAction;\n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.groups.*;, @@ -47,7 +47,6 @@\n import javax.swing.undo.AbstractUndoableEdit;\n \n import net.sf.jabref.logic.AuthorList;\n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexFields;\n@@ -60,12 +59,10 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.IdGenerator;\n import net.sf.jabref.JabRefExecutorService;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.KeyCollisionException;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.OutputPrinter;\n-import net.sf.jabref.PreviewPanel;\n import net.sf.jabref.external.DownloadExternalFile;\n import net.sf.jabref.external.ExternalFileMenuItem;\n import net.sf.jabref.groups.structure.AbstractGroup;, @@ -13,7 +13,10 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n+\n+import net.sf.jabref.BibtexEntry;\n+import net.sf.jabref.JabRefPreferences;\n \n import java.util.Set;\n , @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.Component;\n import java.awt.Cursor;\n@@ -75,7 +75,7 @@\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import net.sf.jabref.gui.*;\n+import net.sf.jabref.*;\n import net.sf.jabref.gui.action.AutoLinkFilesAction;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.worker.MarkEntriesAction;\n@@ -139,7 +139,7 @@\n     // The sidepane manager takes care of populating the sidepane. \n     public SidePaneManager sidePaneManager;\n \n-    JTabbedPane tabbedPane; // initialized at constructor\n+    public JTabbedPane tabbedPane; // initialized at constructor\n \n     private final Insets marg = new Insets(1, 0, 2, 0);\n     private final JabRef jabRef;\n@@ -285,7 +285,7 @@ void addAction(Action a) {\n             //    \t\t\t                                            Globals.lang(\"Set priority\")),\n             manageSelectors = new GeneralAction(\"manageSelectors\", \"Manage content selectors\");\n     private final AbstractAction saveSessionAction = new SaveSessionAction();\n-    final AbstractAction loadSessionAction = new LoadSessionAction();\n+    public final AbstractAction loadSessionAction = new LoadSessionAction();\n     private final AbstractAction incrementalSearch = new GeneralAction(\"incSearch\", \"Incremental search\",\n                     Localization.lang(\"Start incremental search\"),\n                     prefs.getKey(\"Incremental search\"));\n@@ -2458,7 +2458,7 @@ public void actionPerformed(ActionEvent e) {\n         }\n     }\n \n-    class LoadSessionAction extends MnemonicAwareAction {\n+    public class LoadSessionAction extends MnemonicAwareAction {\n \n         volatile boolean running;\n , @@ -13,9 +13,8 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n-import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n , @@ -19,7 +19,6 @@\n import java.util.Vector;\n \n import net.sf.jabref.logic.AuthorList;\n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexFields;\n import net.sf.jabref.Globals;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import net.sf.jabref.logic.l10n.Localization;\n , @@ -28,14 +28,11 @@\n import javax.swing.event.ChangeListener;\n \n import net.sf.jabref.export.LatexFieldFormatter;\n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n-import net.sf.jabref.PreviewPanel;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n import net.sf.jabref.logic.util.StringUtil;, @@ -13,7 +13,7 @@\n     You should have received a copy of the GNU General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.Graphics2D;\n import java.awt.image.BufferedImage;\n@@ -28,6 +28,8 @@\n import javax.swing.JLabel;\n import javax.swing.JPanel;\n \n+import net.sf.jabref.BibtexEntry;\n+import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.FileListEntry;\n import net.sf.jabref.gui.FileListTableModel;\n , @@ -13,14 +13,15 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.event.*;\n import java.awt.*;\n \n import javax.swing.*;\n \n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.BibtexDatabase;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.fieldeditors.FieldTextArea;\n import net.sf.jabref.gui.undo.UndoablePreambleChange;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.*;\n import java.awt.event.ActionEvent;\n@@ -32,10 +32,10 @@\n import javax.swing.event.HyperlinkEvent;\n import javax.swing.event.HyperlinkListener;\n \n+import net.sf.jabref.*;\n import net.sf.jabref.export.layout.Layout;\n import net.sf.jabref.export.layout.LayoutHelper;\n import net.sf.jabref.export.ExportFormats;\n-import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.fieldeditors.PreviewPanelTransferHandler;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.JabRefDesktop;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.BorderLayout;\n import java.awt.GridBagConstraints;\n@@ -24,6 +24,8 @@\n \n import javax.swing.*;\n \n+import net.sf.jabref.BibtexEntry;\n+import net.sf.jabref.BibtexFields;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.Font;\n import java.awt.event.ActionEvent;\n@@ -23,10 +23,10 @@\n import javax.swing.event.PopupMenuEvent;\n import javax.swing.event.PopupMenuListener;\n \n+import net.sf.jabref.*;\n import net.sf.jabref.groups.*;\n import net.sf.jabref.groups.structure.AbstractGroup;\n import net.sf.jabref.groups.structure.AllEntriesGroup;\n-import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.worker.MarkEntriesAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.specialfields.Printed;, @@ -13,12 +13,13 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n+import net.sf.jabref.BibtexEntry;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.SearchTextListener;\n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.gui.AutoCompleteListener;\n-import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.gui.SearchResultsDialog;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.SearchRule;, @@ -42,17 +42,14 @@\n import javax.swing.SwingUtilities;\n import javax.swing.table.TableColumnModel;\n \n-import net.sf.jabref.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexFields;\n import net.sf.jabref.EntryComparator;\n import net.sf.jabref.FieldComparator;\n import net.sf.jabref.GeneralRenderer;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n-import net.sf.jabref.PreviewPanel;\n import net.sf.jabref.TransferableBibtexEntry;\n import net.sf.jabref.external.ExternalFileMenuItem;\n import net.sf.jabref.logic.l10n.Localization;, @@ -13,9 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.GUIGlobals;\n+package net.sf.jabref.gui;\n \n import java.awt.*;\n import java.util.Collection;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.Dimension;\n import java.awt.Insets;\n@@ -27,7 +27,6 @@\n import javax.swing.JLabel;\n import javax.swing.JToolBar;\n \n-import net.sf.jabref.gui.GUIGlobals;\n import org.jdesktop.swingx.JXTitledPanel;\n \n public abstract class SidePaneComponent extends JXTitledPanel {, @@ -13,7 +13,10 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n+\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n \n import java.util.*;\n , @@ -22,8 +22,6 @@\n import javax.swing.Action;\n import javax.swing.JTabbedPane;\n \n-import net.sf.jabref.BasePanel;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref;\n+package net.sf.jabref.gui;\n \n import java.awt.BorderLayout;\n import java.awt.Component;\n@@ -46,8 +46,8 @@\n import javax.swing.table.TableColumnModel;\n import javax.swing.undo.CompoundEdit;\n \n+import net.sf.jabref.*;\n import net.sf.jabref.export.LatexFieldFormatter;\n-import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.gui.undo.UndoableInsertString;\n import net.sf.jabref.gui.undo.UndoableRemoveString;, @@ -15,7 +15,6 @@\n */\n package net.sf.jabref.gui;\n \n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;, @@ -16,7 +16,6 @@\n package net.sf.jabref.gui;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import net.sf.jabref.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;, @@ -29,7 +29,9 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.fieldeditors.FieldTextArea;\n import net.sf.jabref.gui.fieldeditors.FieldTextField;, @@ -35,7 +35,7 @@\n \n import net.sf.jabref.EntryContainer;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.external.DroppedFileHandler;\n import net.sf.jabref.external.ExternalFileType;\n import net.sf.jabref.groups.EntryTableTransferHandler;, @@ -28,7 +28,7 @@\n import javax.swing.text.BadLocationException;\n \n import net.sf.jabref.EntryContainer;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -24,7 +24,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n , @@ -17,7 +17,7 @@\n \n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.gui.journals;\n \n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -30,7 +30,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.help.HelpAction;, @@ -16,7 +16,7 @@\n package net.sf.jabref.gui.journals;\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.undo.NamedCompound;, @@ -19,6 +19,8 @@\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;, @@ -16,6 +16,7 @@\n package net.sf.jabref.gui.labelPattern;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableKeyChange;, @@ -22,8 +22,8 @@\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import net.sf.jabref.BasePanel;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.logic.autocompleter.AutoCompleterFactory;\n import net.sf.jabref.logic.l10n.Localization;, @@ -28,6 +28,7 @@\n import net.sf.jabref.*;\n import net.sf.jabref.external.*;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.gui.help.HelpDialog;, @@ -37,7 +37,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.help.HelpAction;\n , @@ -33,7 +33,7 @@\n \n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.help.HelpAction;\n , @@ -39,6 +39,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.export.ExportFormats;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.GUIGlobals;, @@ -27,6 +27,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -33,7 +33,9 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.ExternalFileType;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;, @@ -19,7 +19,7 @@\n import javax.swing.undo.UndoManager;\n import javax.swing.undo.UndoableEdit;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n \n public class CountingUndoManager extends UndoManager {\n , @@ -18,6 +18,7 @@\n import javax.swing.undo.AbstractUndoableEdit;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n \n /**\n  * This class represents the removal of an entry. The constructor needs, @@ -18,6 +18,7 @@\n import javax.swing.undo.AbstractUndoableEdit;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n \n public class UndoableInsertString extends AbstractUndoableEdit {, @@ -17,7 +17,7 @@\n \n import javax.swing.undo.AbstractUndoableEdit;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -18,6 +18,7 @@\n import javax.swing.undo.AbstractUndoableEdit;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n \n /**\n  * This class represents the removal of an entry. The constructor needs, @@ -18,6 +18,7 @@\n import javax.swing.undo.AbstractUndoableEdit;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n \n public class UndoableRemoveString extends AbstractUndoableEdit {, @@ -17,7 +17,7 @@\n \n import javax.swing.undo.AbstractUndoableEdit;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexString;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -16,6 +16,8 @@\n package net.sf.jabref.gui.worker;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -26,7 +26,9 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.export.LatexFieldFormatter;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.JabRefDesktop;\n import net.sf.jabref.util.Util;, @@ -24,10 +24,13 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.groups.structure.GroupHierarchyType;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.groups.structure.AllEntriesGroup;\n import net.sf.jabref.groups.structure.ExplicitGroup;\n import net.sf.jabref.groups.GroupTreeNode;\n+import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.MergeDialog;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;\n import net.sf.jabref.gui.undo.UndoableInsertString;, @@ -23,10 +23,10 @@\n \n import javax.swing.JOptionPane;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.export.AutoSaveManager;\n import net.sf.jabref.logic.l10n.Localization;, @@ -20,7 +20,7 @@\n \n import javax.swing.JOptionPane;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.CustomEntryType;\n import net.sf.jabref.logic.l10n.Localization;, @@ -12,6 +12,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.ExternalFileType;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;\n \n /**, @@ -37,9 +37,7 @@\n import javax.swing.SwingUtilities;\n \n import net.sf.jabref.*;\n-import net.sf.jabref.gui.FetcherPreviewDialog;\n-import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.gui.ImportInspectionDialog;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -40,6 +40,7 @@\n import javax.swing.table.TableColumnModel;\n \n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -27,7 +27,7 @@\n import javax.swing.filechooser.FileFilter;\n \n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -28,6 +28,8 @@\n import javax.swing.JOptionPane;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.ImportInspectionDialog;\n import net.sf.jabref.gui.FileDialogs;, @@ -31,10 +31,12 @@\n import net.sf.jabref.*;\n import net.sf.jabref.export.AutoSaveManager;\n import net.sf.jabref.export.SaveSession;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.external.FileLinksUpgradeWarning;\n import net.sf.jabref.HandleDuplicateWarnings;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import net.sf.jabref.logic.util.FileBasedLock;, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.imports;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n \n /**\n  * This interface defines potential actions that may need to be taken after, @@ -19,7 +19,7 @@\n import com.jgoodies.forms.builder.DefaultFormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;, @@ -24,7 +24,7 @@\n import com.jgoodies.forms.layout.FormLayout;\n import com.sun.star.container.XNameAccess;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;, @@ -22,8 +22,8 @@\n import net.sf.jabref.export.layout.Layout;\n import net.sf.jabref.export.layout.LayoutHelper;\n import net.sf.jabref.external.PushToApplication;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.action.BrowseAction;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.l10n.Localization;, @@ -61,9 +61,9 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.IdGenerator;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MetaData;\n-import net.sf.jabref.PreviewPanel;\n+import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.external.ExternalFileType;\n import net.sf.jabref.external.UnknownExternalFileType;\n import net.sf.jabref.logic.l10n.Localization;, @@ -17,7 +17,7 @@\n \n import net.sf.jabref.BaseAction;\n import net.sf.jabref.BibtexEntry;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;\n , @@ -27,8 +27,8 @@\n import com.jgoodies.looks.HeaderStyle;\n import com.jgoodies.looks.Options;\n \n-import net.sf.jabref.BasePanel;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.util.OS;\n \n public class SpecialFieldDropDown {, @@ -19,7 +19,7 @@\n \n import javax.swing.AbstractAction;\n \n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n \n public class SpecialFieldMenuAction extends AbstractAction {\n , @@ -18,7 +18,7 @@\n import javax.swing.ImageIcon;\n import javax.swing.JLabel;\n \n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n \n public class SpecialFieldValue {\n , @@ -17,7 +17,7 @@\n  */\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.AbstractAction;, @@ -16,7 +16,7 @@\n package net.sf.jabref.sql;\n \n import net.sf.jabref.BaseAction;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n import net.sf.jabref.sql.exporter.DBExporter;, @@ -36,7 +36,7 @@\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexEntryType;\n import net.sf.jabref.BibtexString;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.groups.structure.*;\n import net.sf.jabref.logic.l10n.Localization;, @@ -26,11 +26,11 @@\n import javax.swing.JOptionPane;\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.MnemonicAwareAction;, @@ -4,10 +4,7 @@\n import net.sf.jabref.external.ExternalFileType;\n import net.sf.jabref.external.ExternalFileTypeEntryEditor;\n import net.sf.jabref.external.UnknownExternalFileType;\n-import net.sf.jabref.gui.FileListEntry;\n-import net.sf.jabref.gui.FileListEntryEditor;\n-import net.sf.jabref.gui.FileListTableModel;\n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.net.URLDownload;, @@ -40,11 +40,11 @@\n import javax.swing.JScrollPane;\n import javax.swing.JTextField;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.MnemonicAwareAction;\n import net.sf.jabref.logic.autocompleter.AutoCompleter;\n import net.sf.jabref.gui.AutoCompleteListener;, @@ -26,6 +26,8 @@\n import javax.swing.event.ChangeListener;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.undo.NamedCompound;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;, @@ -56,11 +56,11 @@\n import javax.swing.JTextArea;\n import javax.swing.JTextField;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.MainTable;\n import net.sf.jabref.logic.l10n.Localization;, @@ -54,7 +54,7 @@\n import javax.swing.event.ListSelectionEvent;\n import javax.swing.event.ListSelectionListener;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexDatabase;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.gui.GUIGlobals;, @@ -44,7 +44,9 @@\n import javax.swing.border.EtchedBorder;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n \n public class IntegrityWizard extends JDialog implements ActionListener {, @@ -110,14 +110,14 @@\n import javax.swing.text.StyleContext;\n import javax.swing.text.StyledDocument;\n \n-import net.sf.jabref.BasePanel;\n+import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.BibtexEntry;\n import net.sf.jabref.BibtexFields;\n import net.sf.jabref.ClipBoardManager;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n import net.sf.jabref.gui.FileDialogs;, @@ -19,7 +19,7 @@\n import com.apple.eawt.AppEvent.OpenFilesEvent;\n import com.apple.eawt.AppEvent.PreferencesEvent;\n import com.apple.eawt.AppEvent.QuitEvent;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n \n import java.io.File;\n import java.util.List;, @@ -10,10 +10,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.DroppedFileHandler;\n-import net.sf.jabref.gui.FileListEntry;\n-import net.sf.jabref.gui.FileListTableModel;\n-import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.gui.MainTable;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.preftabs.ImportSettingsTab;\n import net.sf.jabref.imports.PdfContentImporter;, @@ -2,6 +2,8 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.DroppedFileHandler;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.MainTable;\n \n /**, @@ -1,9 +1,9 @@\n package net.sf.jabref.imports;\n \n import net.sf.jabref.JabRef;\n-import net.sf.jabref.JabRefFrame;\n+import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefMain;\n-import net.sf.jabref.SidePaneManager;\n+import net.sf.jabref.gui.SidePaneManager;\n import net.sf.jabref.testutils.GuiTestUtils;\n \n import org.junit.After;, ", 211, 149, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, renamed, modified, renamed, modified, renamed, renamed, renamed, modified, renamed, modified, modified, modified, renamed, renamed, renamed, modified, renamed, modified, renamed, renamed, renamed, renamed, renamed, renamed, modified, renamed, renamed, renamed, modified, renamed, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 360], ["Joerg Lenhard", "Refactor BibtexString", "08/18/15, 01:10:24 PM", "Joerg Lenhard", "ba02d2ba4285e6847b60e801146d549ebb7a8453", ["src/main/java/net/sf/jabref/model/BibtexString.java"], "@@ -22,17 +22,17 @@\n \n     /**\n      * Type of a \\@String.\n-     *\n+     * <p>\n      * Differentiate a \\@String based on its usage:\n-     *\n+     * <p>\n      * - {@link #AUTHOR}: prefix \"a\", for author and editor fields.\n      * - {@link #INSTITUTION}: prefix \"i\", for institution and organization\n-     *                         field\n+     * field\n      * - {@link #PUBLISHER}: prefix \"p\", for publisher fields\n      * - {@link #OTHER}: no prefix, for any field\n-     *\n+     * <p>\n      * Examples:\n-     *\n+     * <p>\n      * \\@String { aKahle    = \"Kahle, Brewster \" } -> author\n      * \\@String { aStallman = \"Stallman, Richard\" } -> author\n      * \\@String { iMIT      = \"{Massachusetts Institute of Technology ({MIT})}\" } -> institution\n@@ -41,15 +41,15 @@\n      * \\@String { eg        = \"for example\" } -> other\n      * \\@String { et        = \" and \" } -> other\n      * \\@String { lBigMac   = \"Big Mac\" } -> other\n-     *\n+     * <p>\n      * Usage:\n-     *\n+     * <p>\n      * \\@Misc {\n-     *   title       = \"The GNU Project\"\n-     *   author      = aStallman # et # aKahle\n-     *   institution = iMIT\n-     *   publisher   = pMIT\n-     *   note        = \"Just \" # eg\n+     * title       = \"The GNU Project\"\n+     * author      = aStallman # et # aKahle\n+     * institution = iMIT\n+     * publisher   = pMIT\n+     * note        = \"Just \" # eg\n      * }\n      *\n      * @author Jan Kubovy <jan@kubovy.eu>\n@@ -85,57 +85,57 @@ public static Type get(String name) {\n     }\n \n \n-    private String _name;\n-    private String _content;\n-    private String _id;\n-    private Type _type;\n+    private String name;\n+    private String content;\n+    private String id;\n+    private Type type;\n \n \n     public BibtexString(String id, String name, String content) {\n-        _id = id;\n-        _name = name;\n-        _content = content;\n-        _type = Type.get(name);\n+        this.id = id;\n+        this.name = name;\n+        this.content = content;\n+        type = Type.get(name);\n     }\n \n     public BibtexString(String id, String name, String content, Type type) {\n-        _id = id;\n-        _name = name;\n-        _content = content;\n-        _type = type;\n+        this.id = id;\n+        this.name = name;\n+        this.content = content;\n+        this.type = type;\n     }\n \n     public String getId() {\n-        return _id;\n+        return id;\n     }\n \n     public void setId(String id) {\n-        _id = id;\n+        this.id = id;\n     }\n \n     public String getName() {\n-        return _name;\n+        return name;\n     }\n \n     public void setName(String name) {\n-        _name = name;\n-        _type = Type.get(name);\n+        this.name = name;\n+        type = Type.get(name);\n     }\n \n     public String getContent() {\n-        return _content == null ? \"\" : _content;\n+        return content == null ? \"\" : content;\n     }\n \n     public void setContent(String content) {\n-        _content = content;\n+        this.content = content;\n     }\n \n     @Override\n     public Object clone() {\n-        return new BibtexString(_id, _name, _content);\n+        return new BibtexString(id, name, content);\n     }\n \n     public Type getType() {\n-        return _type;\n+        return type;\n     }\n }, ", 33, 33, "\"modified, \"", 66], ["stefan-kolb", "We don't support plugins anymore", "08/18/15, 03:11:45 PM", "stefan-kolb", "8fd634998d7437e31bbca917f8c6e661042f2a17", ["src/main/resources/help/CustomExports.html"], "@@ -197,15 +197,6 @@ <h2>Sharing your work</h2>\n     distribute a collection of submitted layout files, or to add to\n     the selection of standard export filters and formatters.</p>\n \n-    <p>Starting with JabRef 2.4 you can also package your \n-\tExportFormat or LayoutFormatter as a plug-in. If you do so,\n-\tyou can provide a single zip-file to other user to make use\n-\tof your ExportFormat. For an example download the JabRef\n-\tsource release and have a look at the directory\n-\t<code>src/resources/plugins/</code>. Don't hesitate to stop by the\n-\tforums on Sourceforge, since we don't have extensive documentation, yet.</p>\n-\n-\n     <h2>Built-in export formatters</h2>\n \n     <p>JabRef provides the following set of formatters:</p>, ", 0, 9, "\"modified, \"", 9], ["matthiasgeiger", "add test google.co.uk, move file to test folder", "08/27/15, 08:55:08 AM", "matthiasgeiger", "86caeba3440addfce26ee222bcd06effead129ed", ["src/test/java/net/sf/jabref/logic/util/io/URLUtilTest.java"], "@@ -49,6 +49,11 @@ public void cleanGoogleSearchURL() throws Exception {\n                 \"https://moz.com/ugc/the-ultimate-guide-to-the-google-search-parameters\",\n                 URLUtil.cleanGoogleSearchURL(\"https://www.google.fr/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CCEQFjAAahUKEwjJurHd2sfHAhWBsxQKHSrEAaM&url=https%3A%2F%2Fmoz.com%2Fugc%2Fthe-ultimate-guide-to-the-google-search-parameters&ei=0THeVYmOJIHnUqqIh5gK&usg=AFQjCNHnid_r_d2LP8_MqvI7lQnTC3lB_g&sig2=ICzxDroG2ENTJSUGmdhI2w\")\n         );\n+        // foreign domain co.uk\n+        Assert.assertEquals(\n+                \"https://moz.com/ugc/the-ultimate-guide-to-the-google-search-parameters\",\n+                URLUtil.cleanGoogleSearchURL(\"https://www.google.co.uk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CCEQFjAAahUKEwjJurHd2sfHAhWBsxQKHSrEAaM&url=https%3A%2F%2Fmoz.com%2Fugc%2Fthe-ultimate-guide-to-the-google-search-parameters&ei=0THeVYmOJIHnUqqIh5gK&usg=AFQjCNHnid_r_d2LP8_MqvI7lQnTC3lB_g&sig2=ICzxDroG2ENTJSUGmdhI2w\")\n+        );\n         // accept ftp results\n         Assert.assertEquals(\n                 \"ftp://moz.com/ugc/the-ultimate-guide-to-the-google-search-parameters\",, ", 5, 0, "\"renamed, \"", 5], ["matthiasgeiger", "Simplify paste method\nintended behavior is already implemented in replaceSelection() (see API)", "08/27/15, 12:34:26 PM", "matthiasgeiger", "1675737899a29991cc94e51332e3074bde5946e3", ["src/main/java/net/sf/jabref/gui/fieldeditors/TextArea.java", "src/main/java/net/sf/jabref/gui/fieldeditors/TextField.java"], "@@ -129,13 +129,7 @@ public void updateFont() {\n \n     @Override\n     public void paste(String textToInsert) {\n-        int sel = getSelectionEnd() - getSelectionStart();\n-        if (sel > 0) {\n-            replaceSelection(textToInsert);\n-        } else {\n-            int cPos = this.getCaretPosition();\n-            this.insert(textToInsert, cPos);\n-        }\n+        replaceSelection(textToInsert); \n     }\n \n     @Override, @@ -138,11 +138,6 @@ public void updateFont() {\n     @Override\n     // Only replaces selected text if found\n     public void paste(String textToInsert) {\n-        int sel = getSelectionEnd() - getSelectionStart();\n-        if (sel < 1) {\n-            int cPos = getCaretPosition();\n-            select(cPos, cPos);\n-        }\n         replaceSelection(textToInsert);\n     }\n , ", 1, 12, "\"modified, modified, \"", 13], ["matthiasgeiger", "Use KeyBinds constants in EntryEditor", "09/01/15, 12:34:47 PM", "matthiasgeiger", "fa3bf4005f0b0bab5d1a87ddf3db2e91d962a331", ["src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java"], "@@ -49,6 +49,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.fieldeditors.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.bibtex.BibtexEntryWriter;\n import net.sf.jabref.logic.autocompleter.AutoCompleter;\n import net.sf.jabref.exporter.LatexFieldFormatter;\n@@ -341,23 +342,23 @@ private void setupToolBar() {\n         ActionMap actionMap = toolBar.getActionMap();\n         InputMap inputMap = toolBar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n \n-        inputMap.put(prefs.getKey(\"Close entry editor\"), \"close\");\n+        inputMap.put(prefs.getKey(KeyBinds.CLOSE_ENTRY_EDITOR), \"close\");\n         actionMap.put(\"close\", closeAction);\n-        inputMap.put(prefs.getKey(\"Entry editor, store field\"), \"store\");\n+        inputMap.put(prefs.getKey(KeyBinds.ENTRY_EDITOR_STORE_FIELD), \"store\");\n         actionMap.put(\"store\", storeFieldAction);\n-        inputMap.put(prefs.getKey(\"Autogenerate BibTeX keys\"), \"generateKey\");\n+        inputMap.put(prefs.getKey(KeyBinds.AUTOGENERATE_BIB_TE_X_KEYS), \"generateKey\");\n         actionMap.put(\"generateKey\", generateKeyAction);\n-        inputMap.put(prefs.getKey(\"Automatically link files\"), \"autoLink\");\n+        inputMap.put(prefs.getKey(KeyBinds.AUTOMATICALLY_LINK_FILES), \"autoLink\");\n         actionMap.put(\"autoLink\", autoLinkAction);\n-        inputMap.put(prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n+        inputMap.put(prefs.getKey(KeyBinds.ENTRY_EDITOR_PREVIOUS_ENTRY), \"prev\");\n         actionMap.put(\"prev\", prevEntryAction);\n-        inputMap.put(prefs.getKey(\"Entry editor, next entry\"), \"next\");\n+        inputMap.put(prefs.getKey(KeyBinds.ENTRY_EDITOR_NEXT_ENTRY), \"next\");\n         actionMap.put(\"next\", nextEntryAction);\n-        inputMap.put(prefs.getKey(\"Undo\"), \"undo\");\n+        inputMap.put(prefs.getKey(KeyBinds.UNDO), \"undo\");\n         actionMap.put(\"undo\", undoAction);\n-        inputMap.put(prefs.getKey(\"Redo\"), \"redo\");\n+        inputMap.put(prefs.getKey(KeyBinds.REDO), \"redo\");\n         actionMap.put(\"redo\", redoAction);\n-        inputMap.put(prefs.getKey(\"Help\"), \"help\");\n+        inputMap.put(prefs.getKey(KeyBinds.HELP), \"help\");\n         actionMap.put(\"help\", helpAction);\n \n         toolBar.setFloatable(false);, ", 10, 9, "\"modified, \"", 19], ["matthiasgeiger", "Better Fix for SF bug #1285", "09/04/15, 07:22:53 AM", "matthiasgeiger", "159b7bed7200292852684a9741a4394d5ec5c326", ["src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTab.java"], "@@ -27,6 +27,7 @@\n import java.util.Map;\n \n import javax.swing.*;\n+import javax.swing.text.JTextComponent;\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n@@ -295,7 +296,14 @@ public boolean updateField(String field, String content) {\n             return false;\n         }\n         FieldEditor fieldEditor = editors.get(field);\n-        fieldEditor.setText(content);\n+        // trying to preserve current edit position (fixes SF bug #1285)\n+        if(fieldEditor.getTextComponent() instanceof JTextComponent) {\n+            int initialCaretPosition = ((JTextComponent) fieldEditor).getCaretPosition();\n+            fieldEditor.setText(content);\n+            ((JTextComponent) fieldEditor).setCaretPosition(initialCaretPosition);\n+        } else {\n+            fieldEditor.setText(content);\n+        }\n         return true;\n     }\n , ", 9, 1, "\"modified, \"", 10], ["matthiasgeiger", "some more icons", "10/12/15, 01:52:31 PM", "matthiasgeiger", "90812b9253c7409ce5ea21296ac2d1504c20a74c", ["src/main/resources/images/crystal_16/IconList.html"], "@@ -16,11 +16,6 @@\n \t<td><i class=\"fa fa-file-powerpoint-o fa-2x\"></i> <i class=\"fa fa-file-text-o fa-2x\"></i> <i class=\"fa fa-file-o fa-2x\"></i></td>\n \t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n </tr>\n-<tr>\n-\t<td><img src=\"unmark.png\" /><br />unmarkEntries</td>\n-\t<td><i class=\"fa fa-pencil fa-2x\"></i><i class=\"fa fa-thumb-tack fa-2x\"></i> <i class=\"fa fa-tag fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\">mode_edit</i></td>\n-</tr>\n <tr>\n \t<td><img src=\"readskimmed.png\" /><br />readStatusSkimmed</td>\n \t<td><i class=\"fa fa-ban fa-2x\" style=\"color:#99AD99\"></i></td>\n@@ -44,7 +39,7 @@\n <tr>\n \t<td><img src=\"ranking.png\" /><br />ranking</td>\n \t<td><i class=\"fa fa-ban fa-2x\" style=\"color:#99AD99\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" >star</i> <i class=\"material-icons md-24\">star_border</i> <i class=\"material-icons md-24\">thumbs_up_down</i></td>\n </tr>\n <tr>\n \t<td><img src=\"status_unknown.png\" /><br />integrityWarn</td>\n@@ -99,12 +94,12 @@\n <tr>\n \t<td><img src=\"database_connect.png\" /><br />dbConnect</td>\n \t<td><i class=\"fa fa-database fa-2x\"></i><i class=\"fa fa-plug fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">power</i></td>\n </tr>\n <tr>\n \t<td><img src=\"filesave.png\" /><br />save</td>\n \t<td><i class=\"fa fa-file-o fa-2x\"></i> <i class=\"fa fa-floppy-o fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">save</i></td>\n </tr>\n <tr>\n \t<td><img src=\"editcopy.png\" /><br />copy</td>\n@@ -159,7 +154,7 @@\n <tr>\n \t<td><img src=\"pdf-document.png\" /><br />openFile</td>\n \t<td><i class=\"fa fa-file-text-o fa-2x\"></i> <i class=\"fa fa-file-o fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">attach_file</i></td>\n </tr>\n <tr>\n \t<td><img src=\"importFromKeywords.png\" /><br />importFromKeywords</td>\n@@ -169,7 +164,7 @@\n <tr>\n \t<td><img src=\"fileprint.png\" /><br />printed</td>\n \t<td><i class=\"fa fa-print fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">print</i></td>\n+\t<td><i class=\"material-icons md-24\" >print</i></td>\n </tr>\n <tr>\n \t<td><img src=\"read.png\" /><br />readStatusRead</td>\n@@ -189,32 +184,37 @@\n <tr>\n \t<td><img src=\"mark.png\" /><br />markEntries</td>\n \t<td><i class=\"fa fa-pencil fa-2x\"></i><i class=\"fa fa-thumb-tack fa-2x\"></i> <i class=\"fa fa-tag fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">location_on</i> <i class=\"material-icons md-24\">mode_edit</i> <i class=\"material-icons md-24\">local_offer</i> <i class=\"material-icons md-24\">bookmark</i> <i class=\"material-icons md-24\">bookmark_border</i></td>\n </tr>\n+\t<tr>\n+\t\t<td><img src=\"unmark.png\" /><br />unmarkEntries</td>\n+\t\t<td><i class=\"fa fa-pencil fa-2x\"></i><i class=\"fa fa-thumb-tack fa-2x\"></i> <i class=\"fa fa-tag fa-2x\"></i></td>\n+\t\t<td><i class=\"material-icons md-24\">location_off</i> <i class=\"material-icons md-24\">mode_edit</i> <i class=\"material-icons md-24\">local_offer</i> <i class=\"material-icons md-24\">bookmark</i> <i class=\"material-icons md-24\">bookmark_border</i></td>\n+\t</tr>\n <tr>\n \t<td><img src=\"fileopen.png\" /><br />open</td>\n \t<td><i class=\"fa fa-folder-open-o fa-2x\"></i><i class=\"fa fa-folder-open fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">folder_open</i></td>\n </tr>\n <tr>\n \t<td><img src=\"1downarrow.png\" /><br />down</td>\n \t<td><i class=\"fa fa-angle-down fa-2x\"></i> <i class=\"fa fa-caret-down fa-2x\"></i> <i class=\"fa fa-chevron-down fa-2x\"></i> <i class=\"fa fa-chevron-circle-down fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">keyboard_arrow_down</i> <i class=\"material-icons md-24\">arrow_drop_down</i> <i class=\"material-icons md-24\">karrow_drop_down_circle</i></td>\n </tr>\n <tr>\n \t<td><img src=\"1uparrow.png\" /><br />up</td>\n \t<td><i class=\"fa fa-angle-up fa-2x\"></i> <i class=\"fa fa-caret-up fa-2x\"></i> <i class=\"fa fa-chevron-up fa-2x\"></i> <i class=\"fa fa-chevron-circle-up fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">keyboard_arrow_up</i> <i class=\"material-icons md-24\">arrow_drop_up</i></td>\n </tr>\n <tr>\n \t<td><img src=\"1leftarrow.png\" /><br />left</td>\n \t<td><i class=\"fa fa-angle-left fa-2x\"></i> <i class=\"fa fa-caret-left fa-2x\"></i> <i class=\"fa fa-chevron-left fa-2x\"></i> <i class=\"fa fa-chevron-circle-left fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">keyboard_arrow_left</i> </td>\n </tr>\n <tr>\n \t<td><img src=\"1rightarrow.png\" /><br />right</td>\n \t<td><i class=\"fa fa-angle-right fa-2x\"></i> <i class=\"fa fa-caret-right fa-2x\"></i> <i class=\"fa fa-chevron-right fa-2x\"></i> <i class=\"fa fa-chevron-circle-right fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">keyboard_arrow_right</i> </td>\n </tr>\n <tr>\n \t<td><img src=\"pdf-document.png\" /><br />pdfSmall</td>\n@@ -259,12 +259,12 @@\n <tr>\n \t<td><img src=\"fileclose.png\" /><br />close</td>\n \t<td><i class=\"fa fa-times fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">close</i></td>\n </tr>\n <tr>\n \t<td><img src=\"fileprint.png\" /><br />togglePrinted</td>\n \t<td><i class=\"fa fa-print fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" >print</i></td>\n </tr>\n <tr>\n \t<td><img src=\"red.png\" /><br />red</td>\n@@ -279,7 +279,7 @@\n <tr>\n \t<td><img src=\"secondary_sorted_reverse.png\" /><br />secondary_sorted_reverse</td>\n \t<td><i class=\"fa fa-sort-desc fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">keyboard_arrow_down</i> <i class=\"material-icons md-24\">arrow_drop_down</i> <i class=\"material-icons md-24\">karrow_drop_down_circle</i></td>\n </tr>\n <tr>\n \t<td><img src=\"filenew.png\" /><br />new</td>\n@@ -289,7 +289,7 @@\n <tr>\n \t<td><img src=\"groupIncluding.png\" /><br />groupIncluding</td>\n \t<td><i class=\"fa fa-ban fa-2x\" style=\"color:#99AD99\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" >filter_list</i></td>\n </tr>\n <tr>\n \t<td><img src=\"mergeentries.png\" /><br />mergeentries</td>\n@@ -314,17 +314,17 @@\n <tr>\n \t<td><img src=\"priority.png\" /><br />priority</td>\n \t<td><i class=\"fa fa-flag fa-2x\"></i> <i class=\"fa fa-flag-o fa-2x\"></i> <i class=\"fa fa-crosshairs fa-2x\"></i> <i class=\"fa fa-exclamation fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">flag</i></td>\n </tr>\n <tr>\n \t<td><img src=\"button_ok.png\" /><br />complete</td>\n \t<td><i class=\"fa fa-check fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" >check</i> <i class=\"material-icons md-24\" >check_circle</i> <i class=\"material-icons md-24\" >check_box</i></td>\n </tr>\n <tr>\n \t<td><img src=\"groupRefining.png\" /><br />groupRefining</td>\n \t<td><i class=\"fa fa-filter fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" >filter_list</i></td>\n </tr>\n <tr>\n \t<td><img src=\"winedt.png\" /><br />winedt</td>\n@@ -344,7 +344,7 @@\n <tr>\n \t<td><img src=\"cancel.png\" /><br />wrong</td>\n \t<td><i class=\"fa fa-times fa-2x\"></i> <i class=\"fa fa-ban fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\">do_not_disturb</i> <i class=\"material-icons md-24\">close</i></td>\n </tr>\n <tr>\n \t<td><img src=\"vim.png\" /><br />vim</td>\n@@ -419,7 +419,7 @@\n <tr>\n \t<td><img src=\"wizard.png\" /><br />makeKey</td>\n \t<td><i class=\"fa fa-magic fa-2x\"></i></td>\n-\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">do_not_disturb</i></td>\n+\t<td><i class=\"material-icons md-24\" style=\"color:#99AD99\">auto_fix</i></td>\n </tr>\n <tr>\n \t<td><img src=\"dragNdropArrow.png\" /><br />dragNdropArrow</td>, ", 25, 25, "\"modified, \"", 50], ["Simon Harrer", "Icons are now all called explicitly.", "09/09/15, 12:48:17 PM", "Simon Harrer", "873932362d01253f3512a28ea1dbe623dcb8dcd4", ["src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/external/ExternalFileType.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEntryEditor.java", "src/main/java/net/sf/jabref/external/SynchronizeFileField.java", "src/main/java/net/sf/jabref/external/UnknownExternalFileType.java", "src/main/java/net/sf/jabref/importer/EntryFromPDFCreator.java", "src/main/java/net/sf/jabref/logic/util/io/JabRefDesktop.java"], "@@ -36,8 +36,7 @@\n import javax.swing.JTable;\n import javax.swing.KeyStroke;\n \n-import net.sf.jabref.gui.BibtexFields;\n-import net.sf.jabref.gui.GUIGlobals;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.entryeditor.EntryEditorTabList;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.preftabs.ImportSettingsTab;\n@@ -54,8 +53,6 @@\n import net.sf.jabref.external.DroppedFileHandler;\n import net.sf.jabref.external.ExternalFileType;\n import net.sf.jabref.external.UnknownExternalFileType;\n-import net.sf.jabref.gui.CleanUpAction;\n-import net.sf.jabref.gui.PersistenceTableColumnListener;\n import net.sf.jabref.importer.CustomImportList;\n import net.sf.jabref.logic.remote.RemotePreferences;\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n@@ -376,7 +373,7 @@\n     // Map containing all registered external file types:\n     private final TreeSet<ExternalFileType> externalFileTypes = new TreeSet<ExternalFileType>();\n \n-    private final ExternalFileType HTML_FALLBACK_TYPE = new ExternalFileType(\"URL\", \"html\", \"text/html\", \"\", \"www\");\n+    private final ExternalFileType HTML_FALLBACK_TYPE = new ExternalFileType(\"URL\", \"html\", \"text/html\", \"\", \"www\", IconTheme.getImage(\"www\"));\n \n     // The following field is used as a global variable during the export of a database.\n     // By setting this field to the path of the database's default file directory, formatters\n@@ -1389,29 +1386,29 @@ public CustomEntryType getCustomEntryType(int number) {\n \n     public List<ExternalFileType> getDefaultExternalFileTypes() {\n         List<ExternalFileType> list = new ArrayList<ExternalFileType>();\n-        list.add(new ExternalFileType(\"PDF\", \"pdf\", \"application/pdf\", \"evince\", \"pdfSmall\"));\n-        list.add(new ExternalFileType(\"PostScript\", \"ps\", \"application/postscript\", \"evince\", \"psSmall\"));\n-        list.add(new ExternalFileType(\"Word\", \"doc\", \"application/msword\", \"oowriter\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"Word 2007+\", \"docx\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"oowriter\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"OpenDocument text\", \"odt\", \"application/vnd.oasis.opendocument.text\", \"oowriter\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"Excel\", \"xls\", \"application/excel\", \"oocalc\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"Excel 2007+\", \"xlsx\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"oocalc\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"OpenDocument spreadsheet\", \"ods\", \"application/vnd.oasis.opendocument.spreadsheet\", \"oocalc\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"PowerPoint\", \"ppt\", \"application/vnd.ms-powerpoint\", \"ooimpress\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"PowerPoint 2007+\", \"pptx\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"ooimpress\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"OpenDocument presentation\", \"odp\", \"application/vnd.oasis.opendocument.presentation\", \"ooimpress\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"Rich Text Format\", \"rtf\", \"application/rtf\", \"oowriter\", \"openoffice\"));\n-        list.add(new ExternalFileType(\"PNG image\", \"png\", \"image/png\", \"gimp\", \"picture\"));\n-        list.add(new ExternalFileType(\"GIF image\", \"gif\", \"image/gif\", \"gimp\", \"picture\"));\n-        list.add(new ExternalFileType(\"JPG image\", \"jpg\", \"image/jpeg\", \"gimp\", \"picture\"));\n-        list.add(new ExternalFileType(\"Djvu\", \"djvu\", \"\", \"evince\", \"psSmall\"));\n-        list.add(new ExternalFileType(\"Text\", \"txt\", \"text/plain\", \"emacs\", \"emacs\"));\n-        list.add(new ExternalFileType(\"LaTeX\", \"tex\", \"application/x-latex\", \"emacs\", \"emacs\"));\n-        list.add(new ExternalFileType(\"CHM\", \"chm\", \"application/mshelp\", \"gnochm\", \"www\"));\n-        list.add(new ExternalFileType(\"TIFF image\", \"tiff\", \"image/tiff\", \"gimp\", \"picture\"));\n-        list.add(new ExternalFileType(\"URL\", \"html\", \"text/html\", \"firefox\", \"www\"));\n-        list.add(new ExternalFileType(\"MHT\", \"mht\", \"multipart/related\", \"firefox\", \"www\"));\n-        list.add(new ExternalFileType(\"ePUB\", \"epub\", \"application/epub+zip\", \"firefox\", \"www\"));\n+        list.add(new ExternalFileType(\"PDF\", \"pdf\", \"application/pdf\", \"evince\", \"pdfSmall\", IconTheme.getImage(\"pdfSmall\")));\n+        list.add(new ExternalFileType(\"PostScript\", \"ps\", \"application/postscript\", \"evince\", \"psSmall\", IconTheme.getImage(\"psSmall\")));\n+        list.add(new ExternalFileType(\"Word\", \"doc\", \"application/msword\", \"oowriter\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"Word 2007+\", \"docx\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"oowriter\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"OpenDocument text\", \"odt\", \"application/vnd.oasis.opendocument.text\", \"oowriter\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"Excel\", \"xls\", \"application/excel\", \"oocalc\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"Excel 2007+\", \"xlsx\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"oocalc\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"OpenDocument spreadsheet\", \"ods\", \"application/vnd.oasis.opendocument.spreadsheet\", \"oocalc\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"PowerPoint\", \"ppt\", \"application/vnd.ms-powerpoint\", \"ooimpress\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"PowerPoint 2007+\", \"pptx\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"ooimpress\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"OpenDocument presentation\", \"odp\", \"application/vnd.oasis.opendocument.presentation\", \"ooimpress\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"Rich Text Format\", \"rtf\", \"application/rtf\", \"oowriter\", \"openoffice\", IconTheme.getImage(\"openoffice\")));\n+        list.add(new ExternalFileType(\"PNG image\", \"png\", \"image/png\", \"gimp\", \"picture\", IconTheme.getImage(\"picture\")));\n+        list.add(new ExternalFileType(\"GIF image\", \"gif\", \"image/gif\", \"gimp\", \"picture\", IconTheme.getImage(\"picture\")));\n+        list.add(new ExternalFileType(\"JPG image\", \"jpg\", \"image/jpeg\", \"gimp\", \"picture\", IconTheme.getImage(\"picture\")));\n+        list.add(new ExternalFileType(\"Djvu\", \"djvu\", \"\", \"evince\", \"psSmall\", IconTheme.getImage(\"psSmall\")));\n+        list.add(new ExternalFileType(\"Text\", \"txt\", \"text/plain\", \"emacs\", \"emacs\", IconTheme.getImage(\"emacs\")));\n+        list.add(new ExternalFileType(\"LaTeX\", \"tex\", \"application/x-latex\", \"emacs\", \"emacs\", IconTheme.getImage(\"emacs\")));\n+        list.add(new ExternalFileType(\"CHM\", \"chm\", \"application/mshelp\", \"gnochm\", \"www\", IconTheme.getImage(\"www\")));\n+        list.add(new ExternalFileType(\"TIFF image\", \"tiff\", \"image/tiff\", \"gimp\", \"picture\", IconTheme.getImage(\"picture\")));\n+        list.add(new ExternalFileType(\"URL\", \"html\", \"text/html\", \"firefox\", \"www\", IconTheme.getImage(\"www\")));\n+        list.add(new ExternalFileType(\"MHT\", \"mht\", \"multipart/related\", \"firefox\", \"www\", IconTheme.getImage(\"www\")));\n+        list.add(new ExternalFileType(\"ePUB\", \"epub\", \"application/epub+zip\", \"firefox\", \"www\", IconTheme.getImage(\"www\")));\n \n         // On all OSes there is a generic application available to handle file opening,\n         // so we don't need the default application settings anymore:, @@ -34,16 +34,17 @@\n     private ImageIcon icon;\n     private final JLabel label = new JLabel();\n \n-\n     public ExternalFileType(String name, String extension, String mimeType,\n-            String openWith, String iconName) {\n+            String openWith, String iconName, ImageIcon icon) {\n         label.setText(null);\n         this.name = name;\n         label.setToolTipText(this.name);\n         this.extension = extension;\n         this.mimeType = mimeType;\n         this.openWith = openWith;\n+\n         setIconName(iconName);\n+        setIcon(icon);\n     }\n \n     /**\n@@ -61,7 +62,7 @@ public ExternalFileType(String name, String extension, String mimeType,\n      */\n     public ExternalFileType(String[] val) {\n         if (val == null || val.length < 4) {\n-            throw new IllegalArgumentException(\"Cannot contruct ExternalFileType without four elements in String[] argument.\");\n+            throw new IllegalArgumentException(\"Cannot construct ExternalFileType without four elements in String[] argument.\");\n         }\n         this.name = val[0];\n         label.setToolTipText(this.name);\n@@ -71,12 +72,14 @@ public ExternalFileType(String[] val) {\n         if (val.length == 4) {\n             this.openWith = val[2];\n             setIconName(val[3]);\n+            setIcon(IconTheme.getImage(getIconName()));\n         }\n         // When mime type is included, the array length should be 5:\n         else if (val.length == 5) {\n             this.mimeType = val[2];\n             this.openWith = val[3];\n             setIconName(val[4]);\n+            setIcon(IconTheme.getImage(getIconName()));\n         }\n     }\n \n@@ -134,15 +137,12 @@ public void setOpenWith(String openWith) {\n     }\n \n     /**\n-     * Set the string associated with this file type's icon. The string is used\n-     * to get the actual icon.\n+     * Set the string associated with this file type's icon.\n      *\n      * @param name The icon name to use.\n      */\n     public void setIconName(String name) {\n         this.iconName = name;\n-        this.icon = IconTheme.getImage(iconName);\n-        label.setIcon(this.icon);\n     }\n \n     /**\n@@ -155,8 +155,8 @@ public JLabel getIconLabel() {\n     }\n \n     /**\n-     * Get the string associated with this file type's icon. The string is used\n-     * to get the actual icon by the method GUIGlobals.getIcon(String)\n+     * Get the string associated with this file type's icon.\n+     *\n      * @return The icon name.\n      */\n     public String getIconName() {\n@@ -169,6 +169,7 @@ public ImageIcon getIcon() {\n \n     public void setIcon(ImageIcon icon) {\n         this.icon = icon;\n+        label.setIcon(this.icon);\n     }\n \n     @Override\n@@ -182,7 +183,7 @@ public int compareTo(ExternalFileType o) {\n     }\n \n     public ExternalFileType copy() {\n-        return new ExternalFileType(name, extension, mimeType, openWith, iconName);\n+        return new ExternalFileType(name, extension, mimeType, openWith, iconName, icon);\n     }\n \n     @Override, @@ -221,7 +221,7 @@ public static AbstractAction getAction(JDialog dialog) {\n         @Override\n         public void actionPerformed(ActionEvent e) {\n             // Generate a new file type:\n-            ExternalFileType type = new ExternalFileType(\"\", \"\", \"\", \"\", \"new\");\n+            ExternalFileType type = new ExternalFileType(\"\", \"\", \"\", \"\", \"new\", IconTheme.getImage(\"new\"));\n             // Show the file type editor:\n             getEditor(type).setVisible(true);\n             if (entryEditor.okPressed()) {, @@ -246,6 +246,7 @@ private void storeSettings(ExternalFileType entry) {\n \n         if (selectedIcon != null) {\n             entry.setIconName(selectedIcon);\n+            entry.setIcon(IconTheme.getImage(entry.getIconName()));\n         }\n         if (!OS.WINDOWS) {\n             entry.setOpenWith(application.getText().trim());, @@ -228,7 +228,7 @@ public void run() {\n                                 // User doesn't want to handle this unknown link type.\n                             } else if (answer == JOptionPane.YES_OPTION) {\n                                 // User wants to define the new file type. Show the dialog:\n-                                ExternalFileType newType = new ExternalFileType(flEntry.getType().getName(), \"\", \"\", \"\", \"new\");\n+                                ExternalFileType newType = new ExternalFileType(flEntry.getType().getName(), \"\", \"\", \"\", \"new\", IconTheme.getImage(\"new\"));\n                                 ExternalFileTypeEntryEditor editor = new ExternalFileTypeEntryEditor(panel.frame(), newType);\n                                 editor.setVisible(true);\n                                 if (editor.okPressed()) {, @@ -15,6 +15,8 @@\n */\n package net.sf.jabref.external;\n \n+import net.sf.jabref.gui.IconTheme;\n+\n /**\n  * This subclass of ExternalFileType is used to mark types that are unknown.\n  * This can be the case when a database is loaded which contains links to files\n@@ -23,7 +25,7 @@\n public class UnknownExternalFileType extends ExternalFileType {\n \n     public UnknownExternalFileType(String name) {\n-        super(name, \"\", \"\", \"\", \"unknown\");\n+        super(name, \"\", \"\", \"\", \"unknown\", IconTheme.getImage(\"unknown\"));\n     }\n \n }, @@ -6,6 +6,7 @@\n import java.util.Calendar;\n import java.util.List;\n \n+import net.sf.jabref.gui.IconTheme;\n import org.apache.pdfbox.pdmodel.PDDocument;\n import org.apache.pdfbox.pdmodel.PDDocumentInformation;\n \n@@ -36,7 +37,7 @@ public EntryFromPDFCreator() {\n     private static ExternalFileType getPDFExternalFileType() {\n         ExternalFileType pdfFileType = JabRefPreferences.getInstance().getExternalFileTypeByExt(\"pdf\");\n         if (pdfFileType == null) {\n-            return new ExternalFileType(\"PDF\", \"pdf\", \"application/pdf\", \"evince\", \"pdfSmall\");\n+            return new ExternalFileType(\"PDF\", \"pdf\", \"application/pdf\", \"evince\", \"pdfSmall\", IconTheme.getImage(\"pdfSmall\"));\n         }\n         return pdfFileType;\n     }, @@ -315,7 +315,7 @@ public static boolean openExternalFileUnknown(JabRefFrame frame, BibtexEntry ent\n         }\n         else if (answer == JOptionPane.YES_OPTION) {\n             // User wants to define the new file type. Show the dialog:\n-            ExternalFileType newType = new ExternalFileType(fileType.getName(), \"\", \"\", \"\", \"new\");\n+            ExternalFileType newType = new ExternalFileType(fileType.getName(), \"\", \"\", \"\", \"new\", IconTheme.getImage(\"new\"));\n             ExternalFileTypeEntryEditor editor = new ExternalFileTypeEntryEditor(frame, newType);\n             editor.setVisible(true);\n             if (editor.okPressed()) {, ", 45, 43, "\"modified, modified, modified, modified, modified, modified, modified, modified, \"", 88], ["matthiasgeiger", "Merge remote-tracking branch 'origin/remove-legacy-tools-integrity-check' into remove-legacy-tools-integrity-check\n\nConflicts:\n\tsrc/main/java/net/sf/jabref/gui/JabRefFrame.java\n\tsrc/main/java/net/sf/jabref/logic/integrity/IntegrityCheck.java", "10/29/15, 01:57:22 PM", "matthiasgeiger", "841e794176fbbd1e24733797620e6b95b8d34f13", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/IconTheme.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java", "src/main/java/net/sf/jabref/gui/preftabs/EntryEditorPrefsTab.java", "src/main/java/net/sf/jabref/importer/ImportCustomizationDialog.java", "src/main/java/net/sf/jabref/logic/integrity/IntegrityCheck.java", "src/test/java/net/sf/jabref/bibtex/BibtexEntryWriterTest.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Removes option to hide the BibTeX Code tab in the entry editor.\n     - Changes the old integrity check by improving the code base (+tests) and converting it to a simple issues table\n     - Removes option to set a custom icon for the external file types. This is not possible anymore with the new icon font.\n     - Added combo box in MassSetFieldAction to simplify selecting the correct field name, @@ -137,7 +137,6 @@\n     public static final String SEARCH_REQ = \"searchReq\";\n     public static final String CASE_SENSITIVE_SEARCH = \"caseSensitiveSearch\";\n     public static final String DEFAULT_AUTO_SORT = \"defaultAutoSort\";\n-    public static final String SHOW_SOURCE = \"showSource\";\n     public static final String DEFAULT_SHOW_SOURCE = \"defaultShowSource\";\n     public static final String STRINGS_SIZE_Y = \"stringsSizeY\";\n     public static final String STRINGS_SIZE_X = \"stringsSizeX\";\n@@ -542,7 +541,6 @@ private JabRefPreferences() {\n         defaults.put(DUPLICATES_SIZE_X, 800);\n         defaults.put(DUPLICATES_SIZE_Y, 600);\n         defaults.put(DEFAULT_SHOW_SOURCE, Boolean.FALSE);\n-        defaults.put(SHOW_SOURCE, Boolean.TRUE);\n         defaults.put(DEFAULT_AUTO_SORT, Boolean.FALSE);\n         defaults.put(CASE_SENSITIVE_SEARCH, Boolean.FALSE);\n         defaults.put(SEARCH_REQ, Boolean.TRUE);, @@ -136,6 +136,9 @@\n         FILE_EXCEL(\"\\uf2d4\"), /*css: file-excel */\n         FILE_POWERPOINT(\"\\uf2de\"), /*css: file-powerpoint */\n         FILE_TEXT(\"\\uf2d2\"), /*css: file-document */\n+        FILE_MULTIPLE(\"\\uf2d9\"), /*css: file-multiple */\n+        KEY_BINDINGS(\"\\uf3ad\"), /*css: keyboard */\n+        FIND_DUPLICATES(\"\\uf233\"), /*css: code-equal */\n \n         // STILL MISSING:\n         GROUP_REGULAR(\"\\uF4E6\", Color.RED);, @@ -339,7 +339,8 @@ void addJToogleButton(JToggleButton button) {\n \n     private final AbstractAction copyKey = new GeneralAction(Actions.COPY_KEY, Localization.menuTitle(\"Copy BibTeX key\"),\n             prefs.getKey(KeyBinds.COPY_BIB_TE_X_KEY));\n-    private final AbstractAction copyCiteKey = new GeneralAction(Actions.COPY_CITE_KEY, Localization.menuTitle(\"Copy \\\\cite{BibTeX key}\"),\n+    private final AbstractAction copyCiteKey = new GeneralAction(Actions.COPY_CITE_KEY, Localization.menuTitle(\n+            \"Copy \\\\cite{BibTeX key}\"),\n             prefs.getKey(KeyBinds.COPY_CITE_BIB_TE_X_KEY));\n     private final AbstractAction copyKeyAndTitle = new GeneralAction(Actions.COPY_KEY_AND_TITLE,\n             Localization.menuTitle(\"Copy BibTeX key and title\"),\n@@ -376,7 +377,8 @@ public void actionPerformed(ActionEvent e) {\n             prefs.getKey(KeyBinds.TOGGLE_GROUPS_INTERFACE),\n             IconTheme.JabRefIcon.TOGGLE_GROUPS.getIcon());\n     private final AbstractAction addToGroup = new GeneralAction(Actions.ADD_TO_GROUP, Localization.lang(\"Add to group\"));\n-    private final AbstractAction removeFromGroup = new GeneralAction(Actions.REMOVE_FROM_GROUP, Localization.lang(\"Remove from group\"));\n+    private final AbstractAction removeFromGroup = new GeneralAction(Actions.REMOVE_FROM_GROUP, Localization.lang(\n+            \"Remove from group\"));\n     private final AbstractAction moveToGroup = new GeneralAction(Actions.MOVE_TO_GROUP, Localization.lang(\"Move to group\"));\n \n \n@@ -428,7 +430,7 @@ public void actionPerformed(ActionEvent e) {\n             Localization.lang(\"Open SPIRES entry\"),\n             prefs.getKey(KeyBinds.OPEN_SPIRES_ENTRY));\n     private final AbstractAction dupliCheck = new GeneralAction(Actions.DUPLI_CHECK,\n-            Localization.menuTitle(\"Find duplicates\"));\n+            Localization.menuTitle(\"Find duplicates\"), IconTheme.JabRefIcon.FIND_DUPLICATES.getIcon());\n     private final AbstractAction plainTextImport = new GeneralAction(Actions.PLAIN_TEXT_IMPORT,\n             Localization.menuTitle(\"New entry from plain text\"),\n             prefs.getKey(KeyBinds.NEW_FROM_PLAIN_TEXT));\n@@ -437,8 +439,9 @@ public void actionPerformed(ActionEvent e) {\n     private final AbstractAction customExpAction = new CustomizeExportsAction();\n     private final AbstractAction customImpAction = new CustomizeImportsAction();\n     private final AbstractAction customFileTypesAction = ExternalFileTypeEditor.getAction(this);\n-    AbstractAction exportToClipboard = new GeneralAction(\"exportToClipboard\",\n-            Localization.menuTitle(\"Export selected entries to clipboard\"), IconTheme.JabRefIcon.EXPORT_TO_CLIPBOARD.getSmallIcon());\n+    private final AbstractAction exportToClipboard = new GeneralAction(\"exportToClipboard\",\n+            Localization.menuTitle(\"Export selected entries to clipboard\"),\n+            IconTheme.JabRefIcon.EXPORT_TO_CLIPBOARD.getIcon());\n     private final AbstractAction autoSetFile = new GeneralAction(Actions.AUTO_SET_FILE,\n             Localization.lang(\"Synchronize file links\"),\n             Globals.prefs.getKey(KeyBinds.SYNCHRONIZE_FILES));\n@@ -491,7 +494,7 @@ public void actionPerformed(ActionEvent e) {\n             prefs.getKey(KeyBinds.RESOLVE_DUPLICATE_BIB_TE_X_KEYS));\n \n     private final AbstractAction sendAsEmail = new GeneralAction(Actions.SEND_AS_EMAIL,\n-            Localization.lang(\"Send as email\"), IconTheme.JabRefIcon.EMAIL.getSmallIcon());\n+            Localization.lang(\"Send as email\"), IconTheme.JabRefIcon.EMAIL.getIcon());\n \n     final MassSetFieldAction massSetField = new MassSetFieldAction(this);\n     final ManageKeywordsAction manageKeywords = new ManageKeywordsAction(this);\n@@ -515,13 +518,6 @@ public void actionPerformed(ActionEvent e) {\n \n     public GroupSelector groupSelector;\n \n-    // The menus for importing/appending other formats\n-    private final JMenu importMenu = JabRefFrame.subMenu(\"Import into current database\");\n-    private final JMenu importNewMenu = JabRefFrame.subMenu(\"Import into new database\");\n-    private final JMenu exportMenu = JabRefFrame.subMenu(\"Export\");\n-    JMenu customExportMenu = JabRefFrame.subMenu(\"Custom export\");\n-    private final JMenu newDatabaseMenu = JabRefFrame.subMenu(\"New database\");\n-\n     // The action for adding a new entry of unspecified type.\n     private final NewEntryAction newEntryAction = new NewEntryAction(this, prefs.getKey(\"New entry\"));\n     private final NewEntryAction[] newSpecificEntryAction = new NewEntryAction[]\n@@ -1188,14 +1184,6 @@ public void actionPerformed(ActionEvent e) {\n         }\n     }\n \n-    /**\n-     * Refresh import menus.\n-     */\n-    public void setUpImportMenus() {\n-        setUpImportMenu(importMenu, false);\n-        setUpImportMenu(importNewMenu, true);\n-    }\n-\n     private void fillMenu() {\n         //mb.putClientProperty(Options.HEADER_STYLE_KEY, HeaderStyle.BOTH);\n         mb.setBorder(null);\n@@ -1211,11 +1199,6 @@ private void fillMenu() {\n         JMenu newSpec = JabRefFrame.subMenu(\"New entry...\");\n         JMenu helpMenu = JabRefFrame.subMenu(\"Help\");\n \n-        setUpImportMenus();\n-\n-        newDatabaseMenu.add(newDatabaseAction);\n-        newDatabaseMenu.add(newSubDatabaseAction);\n-\n         file.add(newDatabaseAction);\n         file.add(open); //opendatabaseaction\n         file.add(mergeDatabaseAction);\n@@ -1225,8 +1208,6 @@ private void fillMenu() {\n         file.add(saveSelectedAs);\n         file.add(saveSelectedAsPlain);\n         file.addSeparator();\n-        //file.add(importMenu);\n-        //file.add(importNewMenu);\n         file.add(importNew);\n         file.add(importCurrent);\n         file.add(exportAll);\n@@ -1581,7 +1562,7 @@ private void initActions() {\n                 redo, cut, delete, copy, paste, mark, unmark, unmarkAll, editEntry,\n                 selectAll, copyKey, copyCiteKey, copyKeyAndTitle, editPreamble, editStrings, toggleGroups, toggleSearch,\n                 makeKeyAction, normalSearch, mergeEntries, cleanupEntries, exportToClipboard,\n-                incrementalSearch, replaceAll, importMenu, exportMenu, sendAsEmail, downloadFullText, writeXmpAction,\n+                incrementalSearch, replaceAll, sendAsEmail, downloadFullText, writeXmpAction,\n                 findUnlinkedFiles, addToGroup, removeFromGroup, moveToGroup, autoLinkFile, resolveDuplicateKeys,\n                 openPdf, openUrl, openFolder, openFile, openSpires, togglePreview, dupliCheck, autoSetFile,\n                 newEntryAction, plainTextImport, massSetField, manageKeywords, pushExternalButton.getMenuAction(),\n@@ -1748,6 +1729,7 @@ public void createDisabledIconsForMenuEntries(MenuElement menuElement) {\n     class SelectKeysAction extends AbstractAction {\n         public SelectKeysAction() {\n             super(Localization.lang(\"Customize key bindings\"));\n+            this.putValue(Action.SMALL_ICON, IconTheme.JabRefIcon.KEY_BINDINGS.getSmallIcon());\n         }\n \n         @Override\n@@ -1901,39 +1883,6 @@ public void run() {\n             });\n     }\n \n-    private void setUpImportMenu(JMenu importMenu, boolean intoNew_) {\n-        importMenu.removeAll();\n-\n-        // Add a menu item for autodetecting import format:\n-        importMenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_));\n-\n-        // Add custom importers\n-        importMenu.addSeparator();\n-\n-        SortedSet<ImportFormat> customImporters = Globals.importFormatReader.getCustomImportFormats();\n-        JMenu submenu = new JMenu(Localization.lang(\"Custom importers\"));\n-        submenu.setMnemonic(KeyEvent.VK_S);\n-\n-        // Put in all formatters registered in ImportFormatReader:\n-        for (ImportFormat imFo : customImporters) {\n-            submenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_, imFo));\n-        }\n-\n-        if (!customImporters.isEmpty()) {\n-            submenu.addSeparator();\n-        }\n-\n-        submenu.add(customImpAction);\n-\n-        importMenu.add(submenu);\n-        importMenu.addSeparator();\n-\n-        // Put in all formatters registered in ImportFormatReader:\n-        for (ImportFormat imFo : Globals.importFormatReader.getBuiltInInputFormats()) {\n-            importMenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_, imFo));\n-        }\n-    }\n-\n     public FileHistory getFileHistory() {\n         return fileHistory;\n     }, @@ -192,23 +192,6 @@ public boolean isRankingColumn(int col) {\n         return false;\n     }\n \n-    private Object modifyIconForMultipleLinks(JLabel label) {\n-        Icon icon = label.getIcon();\n-        BufferedImage bufImg = new BufferedImage(\n-                icon.getIconWidth(),\n-                icon.getIconHeight(),\n-                BufferedImage.TYPE_INT_ARGB);\n-        Graphics g = bufImg.createGraphics();\n-        // paint the Icon to the BufferedImage.\n-        icon.paintIcon(null, g, 0, 0);\n-        // add the letter \"m\" in the bottom right corner\n-        g.setColor(Color.BLACK);\n-        g.setFont(new java.awt.Font(\"Serif\", java.awt.Font.PLAIN, 12));\n-        g.drawString(\"m\", bufImg.getWidth() - g.getFontMetrics().stringWidth(\"m\"), bufImg.getHeight());\n-        g.dispose();\n-        return new JLabel(new ImageIcon(bufImg));\n-    }\n-\n     @Override\n     public Object getColumnValue(BibtexEntry be, int col) {\n         Object o = null;\n@@ -231,7 +214,7 @@ public Object getColumnValue(BibtexEntry be, int col) {\n                 o = FileListTableModel.getFirstLabel(be.getField(Globals.FILE_FIELD));\n \n                 if (fieldCount[1] > 1) {\n-                    o = modifyIconForMultipleLinks((JLabel) o);\n+                    o = new JLabel(IconTheme.JabRefIcon.FILE_MULTIPLE.getSmallIcon());\n                 }\n \n                 // Handle priority column special\n@@ -260,7 +243,7 @@ public Object getColumnValue(BibtexEntry be, int col) {\n                 o = GUIGlobals.getTableIcon(iconType[hasField]);\n \n                 if (fieldCount[1] > 1) {\n-                    o = modifyIconForMultipleLinks((JLabel) o);\n+                    o = new JLabel(IconTheme.JabRefIcon.FILE_MULTIPLE.getSmallIcon());\n                 }\n             }\n         } else {, @@ -199,7 +199,7 @@ public EntryEditor(JabRefFrame frame, BasePanel panel, BibtexEntry entry) {\n         setupSourcePanel();\n         add(tabbed, BorderLayout.CENTER);\n         tabbed.addChangeListener(tabListener);\n-        if (prefs.getBoolean(JabRefPreferences.SHOW_SOURCE) && prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE)) {\n+        if (prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE)) {\n             tabbed.setSelectedIndex(sourceIndex);\n         }\n \n@@ -299,11 +299,9 @@ private void setupFieldPanels() {\n         }\n \n         srcPanel.setName(Localization.lang(\"BibTeX source\"));\n-        if (Globals.prefs.getBoolean(JabRefPreferences.SHOW_SOURCE)) {\n-            tabbed.addTab(Localization.lang(\"BibTeX source\"), IconTheme.JabRefIcon.SOURCE.getSmallIcon(), srcPanel,\n-                    Localization.lang(\"Show/edit BibTeX source\"));\n-            tabs.add(srcPanel);\n-        }\n+        tabbed.addTab(Localization.lang(\"BibTeX source\"), IconTheme.JabRefIcon.SOURCE.getSmallIcon(), srcPanel,\n+                Localization.lang(\"Show/edit BibTeX source\"));\n+        tabs.add(srcPanel);\n         sourceIndex = tabs.size() - 1; // Set the sourceIndex variable.\n         srcPanel.setFocusCycleRoot(true);\n     }, @@ -36,7 +36,6 @@\n class EntryEditorPrefsTab extends JPanel implements PrefsTab {\n \n     private final JCheckBox autoOpenForm;\n-    private final JCheckBox showSource;\n     private final JCheckBox defSource;\n     private final JCheckBox emacsMode;\n     private final JCheckBox emacsRebindCtrlA;\n@@ -78,7 +77,6 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n \n         autoOpenForm = new JCheckBox(Localization.lang(\"Open editor when a new entry is created\"));\n         defSource = new JCheckBox(Localization.lang(\"Show BibTeX source by default\"));\n-        showSource = new JCheckBox(Localization.lang(\"Show BibTeX source panel\"));\n         emacsMode = new JCheckBox(Localization.lang(\"Use Emacs key bindings\"));\n         emacsRebindCtrlA = new JCheckBox(Localization.lang(\"Rebind C-a, too\"));\n         emacsRebindCtrlF = new JCheckBox(Localization.lang(\"Rebind C-f, too\"));\n@@ -106,49 +104,20 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n         firstNameModeButtonGroup.add(firstNameModeBoth);\n \n         Insets marg = new Insets(0, 20, 3, 0);\n-        defSource.setMargin(marg);\n-        // We need a listener on showSource to enable and disable the source panel-related choices:\n-        showSource.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                defSource.setEnabled(showSource.isSelected());\n-            }\n-        }\n-                );\n \n         emacsRebindCtrlA.setMargin(marg);\n         // We need a listener on showSource to enable and disable the source panel-related choices:\n-        emacsMode.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n-            }\n-        }\n-                );\n+        emacsMode.addChangeListener(event -> emacsRebindCtrlA.setEnabled(emacsMode.isSelected()));\n \n         emacsRebindCtrlF.setMargin(marg);\n         // We need a listener on showSource to enable and disable the source panel-related choices:\n-        emacsMode.addChangeListener(new ChangeListener() {\n-            public void stateChanged(ChangeEvent event) {\n-                emacsRebindCtrlF.setEnabled(emacsMode.isSelected());\n-            }\n-        }\n-        );\n+        emacsMode.addChangeListener(event -> emacsRebindCtrlF.setEnabled(emacsMode.isSelected()));\n \n         \n         autoCompFields = new JTextField(40);\n         // We need a listener on autoComplete to enable and disable the\n         // autoCompFields text field:\n-        autoComplete.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                setAutoCompleteElementsEnabled(autoComplete.isSelected());\n-            }\n-        }\n-                );\n+        autoComplete.addChangeListener(event -> setAutoCompleteElementsEnabled(autoComplete.isSelected()));\n \n         FormLayout layout = new FormLayout\n                 (// columns\n@@ -164,13 +133,12 @@ public void stateChanged(ChangeEvent event) {\n         builder.addSeparator(Localization.lang(\"Editor options\"), cc.xyw(1, 1, 5));\n         builder.add(autoOpenForm, cc.xy(2, 3));\n         builder.add(disableOnMultiple, cc.xy(2, 5));\n-        builder.add(showSource, cc.xy(2, 7));\n-        builder.add(defSource, cc.xy(2, 9));\n-        builder.add(emacsMode, cc.xy(2, 11));\n-        builder.add(emacsRebindCtrlA, cc.xy(2, 13));\n-        builder.add(emacsRebindCtrlF, cc.xy(2, 15));\n+        builder.add(defSource, cc.xy(2, 7));\n+        builder.add(emacsMode, cc.xy(2, 9));\n+        builder.add(emacsRebindCtrlA, cc.xy(2, 11));\n+        builder.add(emacsRebindCtrlF, cc.xy(2, 13));\n         \n-        builder.addSeparator(Localization.lang(\"Autocompletion options\"), cc.xyw(1, 17, 5));\n+        builder.addSeparator(Localization.lang(\"Autocompletion options\"), cc.xyw(1, 15, 5));\n         builder.add(autoComplete, cc.xy(2, 19));\n         \n         DefaultFormBuilder builder3 = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, fill:150dlu\",\"\"));\n@@ -202,7 +170,6 @@ public void stateChanged(ChangeEvent event) {\n     public void setValues() {\n         autoOpenForm.setSelected(prefs.getBoolean(JabRefPreferences.AUTO_OPEN_FORM));\n         defSource.setSelected(prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE));\n-        showSource.setSelected(prefs.getBoolean(JabRefPreferences.SHOW_SOURCE));\n         emacsMode.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS));\n         emacsRebindCtrlA.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA));\n         emacsRebindCtrlF.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CF));\n@@ -232,8 +199,6 @@ public void setValues() {\n         oldAutoCompFModeAbbr = firstNameModeAbbr.isSelected();\n         oldAutoCompFModeFull = firstNameModeFull.isSelected();\n \n-        // This choice only makes sense when the source panel is visible:\n-        defSource.setEnabled(showSource.isSelected());\n         // similar for emacs CTRL-a and emacs mode\n         emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n         // Autocomplete fields is only enabled when autocompletion is selected\n@@ -269,12 +234,10 @@ public void storeSettings() {\n         prefs.putBoolean(JabRefPreferences.DISABLE_ON_MULTIPLE_SELECTION, disableOnMultiple.isSelected());\n         // We want to know if the following settings have been modified:\n         boolean oldAutoComplete = prefs.getBoolean(JabRefPreferences.AUTO_COMPLETE);\n-        boolean oldShowSource = prefs.getBoolean(JabRefPreferences.SHOW_SOURCE);\n         String oldAutoCompFields = prefs.get(JabRefPreferences.AUTO_COMPLETE_FIELDS);\n         prefs.putInt(JabRefPreferences.SHORTEST_TO_COMPLETE, (Integer) shortestToComplete.getValue());\n         prefs.putBoolean(JabRefPreferences.AUTO_COMPLETE, autoComplete.isSelected());\n         prefs.put(JabRefPreferences.AUTO_COMPLETE_FIELDS, autoCompFields.getText());\n-        prefs.putBoolean(JabRefPreferences.SHOW_SOURCE, showSource.isSelected());\n         if (autoCompBoth.isSelected()) {\n             prefs.putBoolean(JabRefPreferences.AUTO_COMP_FIRST_LAST, false);\n             prefs.putBoolean(JabRefPreferences.AUTO_COMP_LAST_FIRST, false);\n@@ -297,7 +260,7 @@ else if (autoCompFF.isSelected()) {\n \n         // We need to remove all entry editors from cache if the source panel setting\n         // or the autocompletion settings have been changed:\n-        if (oldShowSource != showSource.isSelected() || oldAutoComplete != autoComplete.isSelected()\n+        if (oldAutoComplete != autoComplete.isSelected()\n                 || !oldAutoCompFields.equals(autoCompFields.getText()) ||\n                 oldAutoCompFF != autoCompFF.isSelected() || oldAutoCompLF != autoCompLF.isSelected() ||\n                 oldAutoCompFModeAbbr != firstNameModeAbbr.isSelected() ||, @@ -148,7 +148,6 @@ public void actionPerformed(ActionEvent e) {\n                         addOrReplaceImporter(importer);\n                         customImporterTable.revalidate();\n                         customImporterTable.repaint();\n-                        frame.setUpImportMenus();\n                     } catch (Exception exc) {\n                         JOptionPane.showMessageDialog(frame, Localization.lang(\"Could not instantiate %0\", chosenFileStr));\n                     } catch (NoClassDefFoundError exc) {\n@@ -188,7 +187,6 @@ public void actionPerformed(ActionEvent e) {\n                     zipFileChooser.setVisible(true);\n                     customImporterTable.revalidate();\n                     customImporterTable.repaint(10);\n-                    frame.setUpImportMenus();\n                 }\n \n             }\n@@ -228,7 +226,6 @@ public void actionPerformed(ActionEvent e) {\n                     Globals.importFormatReader.resetImportFormats();\n                     customImporterTable.revalidate();\n                     customImporterTable.repaint();\n-                    frame.setUpImportMenus();\n                 } else {\n                     JOptionPane.showMessageDialog(frame, Localization.lang(\"Please select an importer.\"));\n                 }, @@ -100,8 +100,6 @@ public void check(String value, String fieldName, BibtexEntry entry, List<Integr\n \n             if (counter > 0) {\n                 collector.add(new IntegrityMessage(Localization.lang(\"unexpected opening curly braket\"), entry, fieldName));\n-            } else if (counter < 0) {\n-                collector.add(new IntegrityMessage(Localization.lang(\"unexpected closing curly braket\"), entry, fieldName));\n             }\n         }\n , @@ -3,14 +3,20 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.exporter.LatexFieldFormatter;\n+import net.sf.jabref.importer.ParserResult;\n+import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;\n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n import java.io.IOException;\n+import java.io.StringReader;\n import java.io.StringWriter;\n+import java.util.Collection;\n+import java.util.Set;\n \n import static org.junit.Assert.assertEquals;\n \n@@ -56,4 +62,63 @@ public void testSerialization() throws IOException {\n \n         assertEquals(expected, actual);\n     }\n+\n+    @Test\n+    public void roundTripTest() throws IOException {\n+        String bibtexEntry = \"@Article{test,\" + Globals.NEWLINE +\n+                \"  Author                   = {Foo Bar},\" + Globals.NEWLINE +\n+                \"  Journal                  = {International Journal of Something},\" + Globals.NEWLINE +\n+                \"  Note                     = {some note},\" + Globals.NEWLINE +\n+                \"  Number                   = {1}\" + Globals.NEWLINE +\n+                \"}\" + Globals.NEWLINE;\n+\n+        // read in bibtex string\n+        ParserResult result = BibtexParser.parse(new StringReader(bibtexEntry));\n+\n+        Collection<BibtexEntry> entries = result.getDatabase().getEntries();\n+        Assert.assertEquals(1, entries.size());\n+\n+        BibtexEntry entry = entries.iterator().next();\n+        Assert.assertEquals(\"test\", entry.getCiteKey());\n+        Assert.assertEquals(5, entry.getAllFields().size());\n+        Set<String> fields = entry.getAllFields();\n+        Assert.assertTrue(fields.contains(\"author\"));\n+        Assert.assertEquals(\"Foo Bar\", entry.getField(\"author\"));\n+\n+        //write out bibtex string\n+        StringWriter stringWriter = new StringWriter();\n+        writer.write(entry, stringWriter);\n+        String actual = stringWriter.toString();\n+\n+        assertEquals(bibtexEntry, actual);\n+    }\n+\n+    @Test\n+    public void monthFieldSpecialSyntax() throws IOException {\n+        String bibtexEntry = \"@Article{test,\" + Globals.NEWLINE +\n+                \"  Author                   = {Foo Bar},\" + Globals.NEWLINE +\n+                \"  Month                    = mar,\" + Globals.NEWLINE +\n+                \"  Number                   = {1}\" + Globals.NEWLINE +\n+                \"}\" + Globals.NEWLINE;\n+\n+        // read in bibtex string\n+        ParserResult result = BibtexParser.parse(new StringReader(bibtexEntry));\n+\n+        Collection<BibtexEntry> entries = result.getDatabase().getEntries();\n+        Assert.assertEquals(1, entries.size());\n+\n+        BibtexEntry entry = entries.iterator().next();\n+        Assert.assertEquals(\"test\", entry.getCiteKey());\n+        Assert.assertEquals(4, entry.getAllFields().size());\n+        Set<String> fields = entry.getAllFields();\n+        Assert.assertTrue(fields.contains(\"month\"));\n+        Assert.assertEquals(\"#mar#\", entry.getField(\"month\"));\n+\n+        //write out bibtex string\n+        StringWriter stringWriter = new StringWriter();\n+        writer.write(entry, stringWriter);\n+        String actual = stringWriter.toString();\n+\n+        assertEquals(bibtexEntry, actual);\n+    }\n }, ", 95, 140, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 235], ["Tobias Diez", "Remove unimplemented search options 'Autcomplete Names' and 'Select matches'", "11/09/15, 07:46:48 PM", "Tobias Diez", "cb22c857461bb018d5e4970ec4bfb999e55beeab", ["src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/search/SearchBar.java"], "@@ -129,7 +129,6 @@\n     public static final String SIDE_PANE_COMPONENT_NAMES = \"sidePaneComponentNames\";\n     public static final String XMP_PRIVACY_FILTERS = \"xmpPrivacyFilters\";\n     public static final String USE_XMP_PRIVACY_FILTER = \"useXmpPrivacyFilter\";\n-    public static final String SEARCH_AUTO_COMPLETE = \"searchAutoComplete\";\n     public static final String SEARCH_MODE_LIVE_FILTER = \"searchModeLiveFilter\";\n     public static final String SEARCH_MODE_INCREMENTAL = \"incrementS\";\n     public static final String SEARCH_CASE_SENSITIVE = \"caseSensitiveSearch\";\n@@ -165,7 +164,6 @@\n     public static final String SEARCH_PANE_POS_X = \"searchPanePosX\";\n     public static final String SEARCH_HIGHLIGHT_WORDS = \"highLightWords\";\n     public static final String SEARCH_REG_EXP = \"regExpSearch\";\n-    public static final String SEARCH_SELECT_MATCHES = \"selectS\";\n     public static final String EDITOR_EMACS_KEYBINDINGS = \"editorEMACSkeyBindings\";\n     public static final String EDITOR_EMACS_KEYBINDINGS_REBIND_CA = \"editorEMACSkeyBindingsRebindCA\";\n     public static final String EDITOR_EMACS_KEYBINDINGS_REBIND_CF = \"editorEMACSkeyBindingsRebindCF\";\n@@ -543,9 +541,6 @@ private JabRefPreferences() {\n         defaults.put(SEARCH_CASE_SENSITIVE, Boolean.FALSE);\n         defaults.put(SEARCH_MODE_INCREMENTAL, Boolean.FALSE);\n         defaults.put(SEARCH_MODE_LIVE_FILTER, Boolean.TRUE);\n-        defaults.put(SEARCH_AUTO_COMPLETE, Boolean.TRUE);\n-\n-        defaults.put(SEARCH_SELECT_MATCHES, Boolean.FALSE);\n         defaults.put(SEARCH_REG_EXP, Boolean.TRUE);\n         defaults.put(SEARCH_HIGHLIGHT_WORDS, Boolean.TRUE);\n         defaults.put(SEARCH_PANE_POS_X, 0);, @@ -71,7 +71,7 @@\n             modeGlobal;\n \n     private JMenu settings;\n-    private JCheckBoxMenuItem selectMatches, caseSensitive, regularExp, highlightWords, autoComplete;\n+    private JCheckBoxMenuItem caseSensitive, regularExp, highlightWords;\n \n     AutoCompleteSupport<String> autoCompleteSupport;\n \n@@ -163,26 +163,18 @@ public void splitButtonClicked(ActionEvent e) {\n     private void initSearchSettingsMenu() {\n         // Create menu items\n         settings = new JMenu(Localization.lang(\"Settings\"));\n-        selectMatches = new JCheckBoxMenuItem(Localization.lang(\"Select matches\"), Globals.prefs.getBoolean(JabRefPreferences.SEARCH_SELECT_MATCHES));\n-        selectMatches.addActionListener(ae -> updatePrefs());\n         caseSensitive = new JCheckBoxMenuItem(Localization.lang(\"Case sensitive\"), Globals.prefs.getBoolean(JabRefPreferences.SEARCH_CASE_SENSITIVE));\n         caseSensitive.addActionListener(ae -> updatePrefs());\n         regularExp = new JCheckBoxMenuItem(Localization.lang(\"Use regular expressions\"), Globals.prefs.getBoolean(JabRefPreferences.SEARCH_REG_EXP));\n         regularExp.addActionListener(ae -> updatePrefs());\n         highlightWords = new JCheckBoxMenuItem(Localization.lang(\"Highlight Words\"), Globals.prefs.getBoolean(JabRefPreferences.SEARCH_HIGHLIGHT_WORDS));\n         highlightWords.addActionListener(ae -> updatePrefs());\n-        autoComplete = new JCheckBoxMenuItem(Localization.lang(\"Autocomplete names\"), Globals.prefs.getBoolean(JabRefPreferences.SEARCH_AUTO_COMPLETE));\n-        autoComplete.addActionListener(ae -> updatePrefs());\n \n         // Add them to the menu\n-        settings.add(selectMatches);\n-        settings.addSeparator();\n         settings.add(caseSensitive);\n         settings.add(regularExp);\n         settings.addSeparator();\n         settings.add(highlightWords);\n-        settings.addSeparator();\n-        settings.add(autoComplete);\n     }\n \n     /**\n@@ -417,11 +409,9 @@ public void updatePrefs() {\n         Globals.prefs.putBoolean(JabRefPreferences.SEARCH_MODE_RESULTS_IN_DIALOG, modeResultsInDialog.isSelected());\n         Globals.prefs.putBoolean(JabRefPreferences.SEARCH_MODE_GLOBAL, modeGlobal.isSelected());\n \n-        Globals.prefs.putBoolean(JabRefPreferences.SEARCH_SELECT_MATCHES, selectMatches.isSelected());\n         Globals.prefs.putBoolean(JabRefPreferences.SEARCH_CASE_SENSITIVE, caseSensitive.isSelected());\n         Globals.prefs.putBoolean(JabRefPreferences.SEARCH_REG_EXP, regularExp.isSelected());\n         Globals.prefs.putBoolean(JabRefPreferences.SEARCH_HIGHLIGHT_WORDS, highlightWords.isSelected());\n-        Globals.prefs.putBoolean(JabRefPreferences.SEARCH_AUTO_COMPLETE, autoComplete.isSelected());\n     }\n \n     /**, ", 1, 16, "\"modified, modified, \"", 17], ["Tobias Diez", "Change code formatter so that enum declarations are on new lines", "09/12/15, 12:26:30 PM", "Tobias Diez", "3b9359743757169219b0ede037622be035f795fb", ["ide-settings/formatter_settings.xml"], "@@ -26,12 +26,12 @@\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value=\"insert\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.disabling_tag\" value=\"@formatter:off\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value=\"2\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"81\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value=\"1\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value=\"1\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value=\"insert\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"49\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value=\"true\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value=\"true\"/>\n@@ -181,7 +181,7 @@\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value=\"do not insert\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value=\"1\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"49\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value=\"insert\"/>\n <setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value=\"do not insert\"/>\n <setting id=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value=\"1.8\"/>, ", 3, 3, "\"modified, \"", 6], ["Tobias Diez", "Changes default preferences:\n - Fields in table are not colored (required/optional)\n - Owner column is not shown\n - Slightly increasing row padding in table", "09/12/15, 01:20:54 PM", "Tobias Diez", "f47d237551a97cf24803159edbfee8a643ba174b", ["src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/GUIGlobals.java"], "@@ -515,7 +515,7 @@ private JabRefPreferences() {\n         defaults.put(AUTO_RESIZE_MODE, JTable.AUTO_RESIZE_ALL_COLUMNS);\n         defaults.put(PREVIEW_PANEL_HEIGHT, 200);\n         defaults.put(ENTRY_EDITOR_HEIGHT, 400);\n-        defaults.put(TABLE_COLOR_CODES_ON, Boolean.TRUE);\n+        defaults.put(TABLE_COLOR_CODES_ON, Boolean.FALSE);\n         defaults.put(NAMES_AS_IS, Boolean.FALSE); // \"Show names unchanged\"\n         defaults.put(NAMES_FIRST_LAST, Boolean.FALSE); // \"Show 'Firstname Lastname'\"\n         defaults.put(NAMES_LAST_FIRST, Boolean.FALSE); // \"Show 'Lastname, Firstname'\"\n@@ -554,8 +554,8 @@ private JabRefPreferences() {\n         defaults.put(SIDE_PANE_COMPONENT_NAMES, \"\");\n         defaults.put(SIDE_PANE_COMPONENT_PREFERRED_POSITIONS, \"\");\n \n-        defaults.put(COLUMN_NAMES, \"entrytype;author;title;year;journal;owner;timestamp;bibtexkey\");\n-        defaults.put(COLUMN_WIDTHS, \"75;280;400;60;100;100;100;100\");\n+        defaults.put(COLUMN_NAMES, \"entrytype;author;title;year;journal;timestamp;bibtexkey\");\n+        defaults.put(COLUMN_WIDTHS, \"75;280;450;60;100;100;100\");\n         defaults.put(PersistenceTableColumnListener.ACTIVATE_PREF_KEY,\n                 PersistenceTableColumnListener.DEFAULT_ENABLED);\n         defaults.put(XMP_PRIVACY_FILTERS, \"pdf;timestamp;keywords;owner;note;review\");, @@ -64,7 +64,7 @@\n     // Divider size for BaseFrame split pane. 0 means non-resizable.\n     public static final int SPLIT_PANE_DIVIDER_SIZE = 4;\n     public static final int SPLIT_PANE_DIVIDER_LOCATION = 145 + 15; // + 15 for possible scrollbar.\n-    public static final int TABLE_ROW_PADDING = 8;\n+    public static final int TABLE_ROW_PADDING = 9;\n     public static final int KEYBIND_COL_0 = 200;\n     public static final int KEYBIND_COL_1 = 80; // Added to the font size when determining table\n     public static final int MAX_CONTENT_SELECTOR_WIDTH = 240; // The max width of the combobox for content selectors., ", 4, 4, "\"modified, modified, \"", 8], ["Tobias Diez", "Timestamp is not displayed by defaut\n\nAs discussed in PR #164 the timestamp column shouldn't be displayed by\ndefault.", "09/13/15, 06:41:05 PM", "Tobias Diez", "532a8615d91133fb4edffa04d34f736ecb894a72", ["src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -554,8 +554,8 @@ private JabRefPreferences() {\n         defaults.put(SIDE_PANE_COMPONENT_NAMES, \"\");\n         defaults.put(SIDE_PANE_COMPONENT_PREFERRED_POSITIONS, \"\");\n \n-        defaults.put(COLUMN_NAMES, \"entrytype;author;title;year;journal;timestamp;bibtexkey\");\n-        defaults.put(COLUMN_WIDTHS, \"75;280;450;60;100;100;100\");\n+        defaults.put(COLUMN_NAMES, \"entrytype;author;title;year;journal;bibtexkey\");\n+        defaults.put(COLUMN_WIDTHS, \"75;300;470;60;130;100\");\n         defaults.put(PersistenceTableColumnListener.ACTIVATE_PREF_KEY,\n                 PersistenceTableColumnListener.DEFAULT_ENABLED);\n         defaults.put(XMP_PRIVACY_FILTERS, \"pdf;timestamp;keywords;owner;note;review\");, ", 2, 2, "\"modified, \"", 4], ["Tobias Diez", "Respect format of html", "09/14/15, 06:29:15 PM", "Tobias Diez", "9347fabf00946ef24f173863475691d184bf8f88", ["src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -555,8 +555,8 @@ private JabRefPreferences() {\n         defaults.put(JabRefPreferences.SIDE_PANE_COMPONENT_NAMES, \"\");\n         defaults.put(JabRefPreferences.SIDE_PANE_COMPONENT_PREFERRED_POSITIONS, \"\");\n \n-        defaults.put(JabRefPreferences.COLUMN_NAMES, \"entrytype;author;title;year;journal;timestamp;bibtexkey\");\n-        defaults.put(JabRefPreferences.COLUMN_WIDTHS, \"75;280;450;60;100;100;100\");\n+        defaults.put(JabRefPreferences.COLUMN_NAMES, \"entrytype;author;title;year;journal;bibtexkey\");\n+        defaults.put(JabRefPreferences.COLUMN_WIDTHS, \"75;300;470;60;130;100\");\n         defaults.put(PersistenceTableColumnListener.ACTIVATE_PREF_KEY, PersistenceTableColumnListener.DEFAULT_ENABLED);\n         defaults.put(JabRefPreferences.XMP_PRIVACY_FILTERS, \"pdf;timestamp;keywords;owner;note;review\");\n         defaults.put(JabRefPreferences.USE_XMP_PRIVACY_FILTER, Boolean.FALSE);\n@@ -703,13 +703,44 @@ private JabRefPreferences() {\n         defaults.put(JabRefPreferences.DEFAULT_LABEL_PATTERN, \"[auth][year]\");\n         defaults.put(JabRefPreferences.PREVIEW_ENABLED, Boolean.TRUE);\n         defaults.put(JabRefPreferences.ACTIVE_PREVIEW, 0);\n-        defaults.put(JabRefPreferences.PREVIEW_0, \"<font face=\\\"arial\\\">\" + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\" + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\" + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\" + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \" + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\" + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\" + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\" + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n-        // Include the booktitle field for @inproceedings, @proceedings, etc.\n-        + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\" + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\" + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\" + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\" + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\" + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}__NEWLINE__\" + \"\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract} \\\\end{abstract}__NEWLINE__\" + \"\\\\begin{review}<BR><BR><b>Review: </b> \\\\format[HTMLChars]{\\\\review} \\\\end{review}\" + \"</dd>__NEWLINE__<p></p></font>\");\n-        defaults.put(JabRefPreferences.PREVIEW_1, \"<font face=\\\"arial\\\">\" + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\" + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\" + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\" + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \" + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\" + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\" + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\" + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n-        // Include the booktitle field for @inproceedings, @proceedings, etc.\n-        + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\" + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\" + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\" + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\" + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\" + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}\" + \"</dd>__NEWLINE__<p></p></font>\");\n-\n+        //@formatter:off\n+        defaults.put(JabRefPreferences.PREVIEW_0, \"<font face=\\\"arial\\\">\"\n+                + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n+                + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n+                + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n+                + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n+                + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n+                + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n+                + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n+                + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n+                // Include the booktitle field for @inproceedings, @proceedings, etc.\n+                + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n+                + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n+                + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n+                + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n+                + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n+                + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}__NEWLINE__\"\n+                + \"\\\\begin{abstract}<BR><BR><b>Abstract: </b> \\\\format[HTMLChars]{\\\\abstract} \\\\end{abstract}__NEWLINE__\"\n+                + \"\\\\begin{review}<BR><BR><b>Review: </b> \\\\format[HTMLChars]{\\\\review} \\\\end{review}\"\n+                + \"</dd>__NEWLINE__<p></p></font>\");\n+        defaults.put(JabRefPreferences.PREVIEW_1, \"<font face=\\\"arial\\\">\"\n+                + \"<b><i>\\\\bibtextype</i><a name=\\\"\\\\bibtexkey\\\">\\\\begin{bibtexkey} (\\\\bibtexkey)</a>\"\n+                + \"\\\\end{bibtexkey}</b><br>__NEWLINE__\"\n+                + \"\\\\begin{author} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\author}<BR>\\\\end{author}__NEWLINE__\"\n+                + \"\\\\begin{editor} \\\\format[Authors(LastFirst,Initials,Semicolon,Amp),HTMLChars]{\\\\editor} \"\n+                + \"<i>(\\\\format[IfPlural(Eds.,Ed.)]{\\\\editor})</i><BR>\\\\end{editor}__NEWLINE__\"\n+                + \"\\\\begin{title} \\\\format[HTMLChars]{\\\\title} \\\\end{title}<BR>__NEWLINE__\"\n+                + \"\\\\begin{chapter} \\\\format[HTMLChars]{\\\\chapter}<BR>\\\\end{chapter}__NEWLINE__\"\n+                + \"\\\\begin{journal} <em>\\\\format[HTMLChars]{\\\\journal}, </em>\\\\end{journal}__NEWLINE__\"\n+                // Include the booktitle field for @inproceedings, @proceedings, etc.\n+                + \"\\\\begin{booktitle} <em>\\\\format[HTMLChars]{\\\\booktitle}, </em>\\\\end{booktitle}__NEWLINE__\"\n+                + \"\\\\begin{school} <em>\\\\format[HTMLChars]{\\\\school}, </em>\\\\end{school}__NEWLINE__\"\n+                + \"\\\\begin{institution} <em>\\\\format[HTMLChars]{\\\\institution}, </em>\\\\end{institution}__NEWLINE__\"\n+                + \"\\\\begin{publisher} <em>\\\\format[HTMLChars]{\\\\publisher}, </em>\\\\end{publisher}__NEWLINE__\"\n+                + \"\\\\begin{year}<b>\\\\year</b>\\\\end{year}\\\\begin{volume}<i>, \\\\volume</i>\\\\end{volume}\"\n+                + \"\\\\begin{pages}, \\\\format[FormatPagesForHTML]{\\\\pages} \\\\end{pages}\"\n+                + \"</dd>__NEWLINE__<p></p></font>\");\n+        //@formatter:on\n         // TODO: Currently not possible to edit this setting:\n         defaults.put(JabRefPreferences.PREVIEW_PRINT_BUTTON, Boolean.FALSE);\n         defaults.put(JabRefPreferences.AUTO_DOUBLE_BRACES, Boolean.FALSE);, ", 40, 9, "\"modified, \"", 49], ["Joerg Lenhard", "Document changes in changelog", "09/18/15, 02:11:08 PM", "Joerg Lenhard", "940f10002e62d9965dc26f478a587482a1ab5429", ["CHANGELOG"], "@@ -1,4 +1,5 @@\n [master]\n+    - Use correct encoding names (#155) and replace old encoding names in bibtex files. This changes the file header.\n     - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n     - No longer write JabRef version to BibTex file header.\n     - No longer add blank lines inside a bibtex entry, ", 1, 0, "\"modified, \"", 1], ["Joerg Lenhard", "Merge branch 'master' into increase-saving-speed\n\nConflicts:\n\tCHANGELOG", "09/25/15, 12:10:18 PM", "Joerg Lenhard", "8c326d0e8d83d249116358b786777ac695f77de9", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/exporter/FileActions.java", "src/main/java/net/sf/jabref/gui/MainTable.java", "src/main/java/net/sf/jabref/gui/preftabs/TablePrefsTab.java", "src/main/java/net/sf/jabref/logic/bibtex/BibtexEntryWriter.java", "src/main/java/net/sf/jabref/wizard/auximport/AuxSubGenerator.java"], "@@ -1,5 +1,6 @@\n [master]\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n+    - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n     - Use correct encoding names (#155) and replace old encoding names in bibtex files. This changes the file header.\n     - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n     - No longer write JabRef version to BibTex file header.\n@@ -13,6 +14,7 @@\n     - Fix bug #1285: Editing position is not lost on saving\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n+    - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n [dev_2.11]\n 2.11 beta 4\n     - Add of Persian localization (by Behrouz Javanmardi), @@ -101,12 +101,12 @@\n     public static final String PROXY_PORT = \"proxyPort\";\n     public static final String PROXY_HOSTNAME = \"proxyHostname\";\n     public static final String USE_PROXY = \"useProxy\";\n-    public static final String PRIMARY_SORT_FIELD = \"priSort\";\n-    public static final String PRIMARY_SORT_DESCENDING = \"priDescending\";\n-    public static final String SECONDARY_SORT_FIELD = \"secSort\";\n-    public static final String SECONDARY_SORT_DESCENDING = \"secDescending\";\n-    public static final String TERTIARY_SORT_FIELD = \"terSort\";\n-    public static final String TERTIARY_SORT_DESCENDING = \"terDescending\";\n+    public static final String TABLE_PRIMARY_SORT_FIELD = \"priSort\";\n+    public static final String TABLE_PRIMARY_SORT_DESCENDING = \"priDescending\";\n+    public static final String TABLE_SECONDARY_SORT_FIELD = \"secSort\";\n+    public static final String TABLE_SECONDARY_SORT_DESCENDING = \"secDescending\";\n+    public static final String TABLE_TERTIARY_SORT_FIELD = \"terSort\";\n+    public static final String TABLE_TERTIARY_SORT_DESCENDING = \"terDescending\";\n     public static final String SAVE_IN_ORIGINAL_ORDER = \"saveInOriginalOrder\";\n     public static final String SAVE_IN_SPECIFIED_ORDER = \"saveInSpecifiedOrder\";\n     public static final String SAVE_PRIMARY_SORT_FIELD = \"savePriSort\";\n@@ -482,12 +482,12 @@ private JabRefPreferences() {\n         defaults.put(SHOW_SHORT, Boolean.TRUE);\n \n         // Sorting preferences\n-        defaults.put(PRIMARY_SORT_FIELD, \"author\");\n-        defaults.put(PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n-        defaults.put(SECONDARY_SORT_FIELD, \"year\");\n-        defaults.put(SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n-        defaults.put(TERTIARY_SORT_FIELD, \"author\");\n-        defaults.put(TERTIARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(TABLE_PRIMARY_SORT_FIELD, \"author\");\n+        defaults.put(TABLE_PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(TABLE_SECONDARY_SORT_FIELD, \"year\");\n+        defaults.put(TABLE_SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(TABLE_TERTIARY_SORT_FIELD, \"author\");\n+        defaults.put(TABLE_TERTIARY_SORT_DESCENDING, Boolean.FALSE);\n         defaults.put(SAVE_IN_ORIGINAL_ORDER, Boolean.FALSE);\n         defaults.put(SAVE_IN_SPECIFIED_ORDER, Boolean.FALSE);\n         defaults.put(SAVE_PRIMARY_SORT_FIELD, \"bibtexkey\");, @@ -324,12 +324,12 @@ public SaveSettings(boolean isSaveOperation, MetaData metaData) {\n                 terD = Globals.prefs.getBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING);\n             } else {\n                 // The setting is to save according to the current table order.\n-                pri = Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD);\n-                sec = Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD);\n-                ter = Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD);\n-                priD = Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING);\n-                secD = Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING);\n-                terD = Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING);\n+                pri = Globals.prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD);\n+                sec = Globals.prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD);\n+                ter = Globals.prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD);\n+                priD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING);\n+                secD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING);\n+                terD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING);\n             }\n         }\n     }, @@ -420,14 +420,14 @@ private void setupComparatorChooser() {\n \n         // Default sort order:\n         String[] sortFields = new String[] {\n-                Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD),\n-                Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD),\n-                Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD)\n+                Globals.prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD),\n+                Globals.prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD),\n+                Globals.prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD)\n         };\n         boolean[] sortDirections = new boolean[] {\n-                Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING),\n-                Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING),\n-                Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING)\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING),\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING),\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING)\n         }; // descending\n \n         sortedForTable.getReadWriteLock().writeLock().lock();\n@@ -460,24 +460,24 @@ public void actionPerformed(ActionEvent actionEvent) {\n                 // Update preferences:\n                 int count = Math.min(fields.size(), order.size());\n                 if (count >= 1) {\n-                    Globals.prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, fields.get(0));\n-                    Globals.prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, order.get(0));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD, fields.get(0));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING, order.get(0));\n                 }\n                 if (count >= 2) {\n-                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, fields.get(1));\n-                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, order.get(1));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, fields.get(1));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, order.get(1));\n                 }\n                 else {\n-                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, \"\");\n-                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, false);\n+                    Globals.prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, false);\n                 }\n                 if (count >= 3) {\n-                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, fields.get(2));\n-                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, order.get(2));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, fields.get(2));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, order.get(2));\n                 }\n                 else {\n-                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, \"\");\n-                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, false);\n+                    Globals.prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, false);\n                 }\n             }\n , @@ -243,9 +243,9 @@ public void setValues() {\n         autoResizeMode\n                 .setSelected(prefs.getInt(JabRefPreferences.AUTO_RESIZE_MODE) == JTable.AUTO_RESIZE_ALL_COLUMNS);\n \n-        priField.setText(prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD));\n-        secField.setText(prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD));\n-        terField.setText(prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD));\n+        priField.setText(prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD));\n+        secField.setText(prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD));\n+        terField.setText(prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD));\n         priSort.setSelectedIndex(0);\n         secSort.setSelectedIndex(0);\n         terSort.setSelectedIndex(0);\n@@ -266,9 +266,9 @@ public void setValues() {\n         } else {\n             noAbbrNames.setSelected(true);\n         }\n-        priDesc.setSelected(prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING));\n-        secDesc.setSelected(prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING));\n-        terDesc.setSelected(prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING));\n+        priDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING));\n+        secDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING));\n+        terDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING));\n \n         floatMarked.setSelected(prefs.getBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES));\n \n@@ -301,12 +301,12 @@ public void storeSettings() {\n \n         prefs.putInt(JabRefPreferences.AUTO_RESIZE_MODE,\n                 autoResizeMode.isSelected() ? JTable.AUTO_RESIZE_ALL_COLUMNS : JTable.AUTO_RESIZE_OFF);\n-        prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, priDesc.isSelected());\n-        prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, secDesc.isSelected());\n-        prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, terDesc.isSelected());\n-        prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, priField.getText().toLowerCase().trim());\n-        prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, secField.getText().toLowerCase().trim());\n-        prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, terField.getText().toLowerCase().trim());\n+        prefs.putBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING, priDesc.isSelected());\n+        prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, secDesc.isSelected());\n+        prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, terDesc.isSelected());\n+        prefs.put(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD, priField.getText().toLowerCase().trim());\n+        prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, secField.getText().toLowerCase().trim());\n+        prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, terField.getText().toLowerCase().trim());\n \n         prefs.putBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES, floatMarked.isSelected());\n         // updatefont, @@ -1,3 +1,20 @@\n+/*  Copyright (C) -2015 JabRef contributors.\n+    Copyright (C) 2015 Oliver Kopp\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.bibtex;\n \n import net.sf.jabref.gui.BibtexFields;\n@@ -25,11 +42,14 @@\n     static {\n         // The field name display map.\n         BibtexEntryWriter.tagDisplayNameMap.put(\"bibtexkey\", \"BibTeXKey\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"doi\", \"DOI\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"ee\", \"EE\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"howpublished\", \"HowPublished\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"lastchecked\", \"LastChecked\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"isbn\", \"ISBN\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"issn\", \"ISSN\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"UNKNOWN\", \"UNKNOWN\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"url\", \"URL\");\n     }\n \n     private static final Map<String, List<String>> requiredFieldsSorted = new HashMap<>();, @@ -1,5 +1,6 @@\n /*\n Copyright (C) 2004 R. Nagel\n+Copyright (C) 2015 T. Denkinger\n \n All programs in this directory and\n subdirectories are published under the GNU General Public License as\n@@ -140,7 +141,7 @@ private boolean parseAuxFile(String filename) {\n         boolean loopFileOpen;\n \n         // the important tag\n-        pattern = Pattern.compile(\"\\\\\\\\citation\\\\{.+\\\\}\");\n+        pattern = Pattern.compile(\"\\\\\\\\(citation|abx@aux@cite)\\\\{(.+)\\\\}\");\n \n         // input-file-buffer\n         BufferedReader br = null;\n@@ -194,8 +195,7 @@ private boolean parseAuxFile(String filename) {\n                         // extract the bibtex-key(s) XXX from \\citation{XXX} string\n                         int len = matcher.end() - matcher.start();\n                         if (len > 11) {\n-                            String str = matcher.group().substring(matcher.start() + 10,\n-                                    matcher.end() - 1);\n+                            String str = matcher.group(2);\n                             // could be an comma separated list of keys\n                             String[] keys = str.split(\",\");\n                             if (keys != null) {, ", 71, 49, "\"modified, modified, modified, modified, modified, modified, modified, \"", 120], ["Oscar Gustafsson", "Merge remote-tracking branch 'upstream/master'", "10/01/15, 11:44:48 AM", "Oscar Gustafsson", "f4ff8b49ac0181ff7d513440b8e0e16530e5c94b", [".gitattributes", "CHANGELOG", "build.gradle", "src/main/java/net/sf/jabref/Globals.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefMain.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/exporter/ExpandEndnoteFilters.java", "src/main/java/net/sf/jabref/exporter/ExportFormats.java", "src/main/java/net/sf/jabref/exporter/FieldFormatter.java", "src/main/java/net/sf/jabref/exporter/FileActions.java", "src/main/java/net/sf/jabref/exporter/LatexFieldFormatter.java", "src/main/java/net/sf/jabref/exporter/SaveAllAction.java", "src/main/java/net/sf/jabref/exporter/layout/format/JournalAbbreviator.java", "src/main/java/net/sf/jabref/external/AttachFileAction.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/PushToApplicationButton.java", "src/main/java/net/sf/jabref/gui/BasePanel.java", "src/main/java/net/sf/jabref/gui/EntryCustomizationDialog2.java", "src/main/java/net/sf/jabref/gui/GUIGlobals.java", "src/main/java/net/sf/jabref/gui/GroupAddRemoveDialog.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/MainTable.java", "src/main/java/net/sf/jabref/gui/actions/BaseAction.java", "src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/gui/actions/ErrorConsoleAction.java", "src/main/java/net/sf/jabref/gui/actions/MnemonicAwareAction.java", "src/main/java/net/sf/jabref/gui/actions/NewDatabaseAction.java", "src/main/java/net/sf/jabref/gui/actions/NewEntryAction.java", "src/main/java/net/sf/jabref/gui/actions/NewSubDatabaseAction.java", "src/main/java/net/sf/jabref/gui/actions/SortTabsAction.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditor.java", "src/main/java/net/sf/jabref/gui/help/HelpAction.java", "src/main/java/net/sf/jabref/gui/journals/AbbreviateAction.java", "src/main/java/net/sf/jabref/gui/journals/JournalAbbreviationsUtil.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsAction.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsPanel.java", "src/main/java/net/sf/jabref/gui/journals/UnabbreviateAction.java", "src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java", "src/main/java/net/sf/jabref/gui/preftabs/GeneralTab.java", "src/main/java/net/sf/jabref/gui/preftabs/TablePrefsTab.java", "src/main/java/net/sf/jabref/importer/AppendDatabaseAction.java", "src/main/java/net/sf/jabref/importer/ImportFormats.java", "src/main/java/net/sf/jabref/importer/OpenDatabaseAction.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/INSPIREFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/OAI2Fetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/SPIRESFetcher.java", "src/main/java/net/sf/jabref/logic/autocompleter/ContentAutoCompleters.java", "src/main/java/net/sf/jabref/logic/bibtex/BibtexEntryWriter.java", "src/main/java/net/sf/jabref/logic/bibtex/DuplicateCheck.java", "src/main/java/net/sf/jabref/logic/journals/Abbreviations.java", "src/main/java/net/sf/jabref/logic/journals/JournalAbbreviationRepository.java", "src/main/java/net/sf/jabref/logic/l10n/Localization.java", "src/main/java/net/sf/jabref/logic/util/io/FileUtil.java", "src/main/java/net/sf/jabref/model/entry/BibLatexEntryTypes.java", "src/main/java/net/sf/jabref/model/entry/BibtexEntry.java", "src/main/java/net/sf/jabref/model/entry/BibtexEntryType.java", "src/main/java/net/sf/jabref/model/entry/BibtexEntryTypes.java", "src/main/java/net/sf/jabref/model/entry/CustomEntryType.java", "src/main/java/net/sf/jabref/model/entry/UnknownEntryType.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldAction.java", "src/main/java/net/sf/jabref/sql/DbConnectAction.java", "src/main/java/net/sf/jabref/sql/exporter/DBExporter.java", "src/main/java/net/sf/jabref/sql/importer/DbImportAction.java", "src/main/java/net/sf/jabref/util/ManageKeywordsAction.java", "src/main/java/net/sf/jabref/util/MassSetFieldAction.java", "src/main/java/net/sf/jabref/util/Util.java", "src/main/java/net/sf/jabref/wizard/auximport/AuxSubGenerator.java", "src/main/java/net/sf/jabref/wizard/text/gui/TextInputDialog.java", "src/main/resources/l10n/JabRef_da.properties", "src/main/resources/l10n/JabRef_de.properties", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties", "src/main/resources/l10n/Menu_da.properties", "src/main/resources/l10n/Menu_de.properties", "src/main/resources/l10n/Menu_en.properties", "src/main/resources/l10n/Menu_es.properties", "src/main/resources/l10n/Menu_fa.properties", "src/main/resources/l10n/Menu_fr.properties", "src/main/resources/l10n/Menu_in.properties", "src/main/resources/l10n/Menu_it.properties", "src/main/resources/l10n/Menu_ja.properties", "src/main/resources/l10n/Menu_nl.properties", "src/main/resources/l10n/Menu_no.properties", "src/main/resources/l10n/Menu_pt_BR.properties", "src/main/resources/l10n/Menu_ru.properties", "src/main/resources/l10n/Menu_tr.properties", "src/main/resources/l10n/Menu_vi.properties", "src/main/resources/l10n/Menu_zh.properties", "src/test/java/net/sf/jabref/logic/journals/AbbreviationParserTest.java", "src/test/java/net/sf/jabref/logic/journals/JournalAbbreviationRepositoryTest.java", "src/test/java/net/sf/jabref/logic/l10n/TestL10nFiles.java"], "@@ -1,2 +1,4 @@\n gradlew eol=lf\n *.sh eol=lf\n+\n+CHANGELOG merge=union, @@ -1,6 +1,10 @@\n [master]\n     - Fixed a bug in IEEEXploreFetcher\n     - Improved the case changing functionality to honor words within {}\n+    - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n+    - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n+    - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n+    - The default language is now automatically set to the system's locale.\n     - Use correct encoding names (#155) and replace old encoding names in bibtex files. This changes the file header.\n     - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n     - No longer write JabRef version to BibTex file header.\n@@ -14,13 +18,17 @@\n     - Fix bug #1285: Editing position is not lost on saving\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n+    - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n+    - Fixes GH Bug #173: Personal journal abbreviation list is not loaded twice\n+    - Bugfix: Preview of external journal abbreviation list now displays the correct list\n [dev_2.11]\n+    - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly\n 2.11 beta 4\n     - Add of Persian localization (by Behrouz Javanmardi)\n     - Backport from 2.80: Fixes #115: Remove whitespaces in serialization\n     - Backport from 2.80: Fixes Bug#1297: No console message on closing.\n     - Backport from 2.80: Fixes Bug#1290: Spanish localization was not displayed correctly.\n-\t- Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n+    - Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n     - Fix for bugs #1221 and #1261 (also partly #1243): order of fields in customized entry types no longer gets destroyed by the entry editor \n     - \"ISBN to BibTeX\" fetcher now uses eBook.de's API (fixes bug #1241)\n     - BREAKING: Search groups now use same search logic as UI --> avoids confusion when converting a UI search into a search group. Behaviour before: contains/regex check of whole search string; behaviour after: contains/regex check of every word of the search string. The new search is more powerful and con simulate the old behaviour: enclose everything in double quotes, e.g., process language --> \"process language\"., @@ -101,6 +101,10 @@ processResources {\n     }\n }\n \n+clean {\n+    delete \"src/main/gen\"\n+}\n+\n task generateSource(dependsOn: [\"generateBstGrammarSource\", \"generateSearchGrammarSource\"]) {\n     group = 'JabRef'\n     description 'Generates all Java source files.', @@ -21,16 +21,12 @@\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.logic.error.StreamEavesdropper;\n-import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.logic.logging.CacheableHandler;\n import net.sf.jabref.logic.remote.server.RemoteListenerServerLifecycle;\n import net.sf.jabref.logic.util.BuildInfo;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import java.io.File;\n-import java.io.FileNotFoundException;\n-\n public class Globals {\n \n     private static final Log LOGGER = LogFactory.getLog(Globals.class);\n@@ -47,47 +43,6 @@\n     // Remote listener\n     public static RemoteListenerServerLifecycle remoteListener = new RemoteListenerServerLifecycle();\n \n-    // journal initialization\n-    public static final String JOURNALS_FILE_BUILTIN = \"/journals/journalList.txt\";\n-    public static final String JOURNALS_IEEE_INTERNAL_LIST = \"/journals/IEEEJournalList.txt\";\n-\n-    public static JournalAbbreviationRepository journalAbbrev;\n-\n-\n-    public static void initializeJournalNames() {\n-        // Read internal lists:\n-        Globals.journalAbbrev = new JournalAbbreviationRepository();\n-        Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-        if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n-            Globals.journalAbbrev.readJournalListFromResource(JOURNALS_IEEE_INTERNAL_LIST);\n-        }\n-\n-        // Read external lists, if any (in reverse order, so the upper lists\n-        // override the lower):\n-        String[] lists = Globals.prefs.getStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS);\n-        if (lists != null && lists.length > 0) {\n-            for (int i = lists.length - 1; i >= 0; i--) {\n-                try {\n-                    Globals.journalAbbrev.readJournalListFromFile(new File(lists[i]));\n-                } catch (FileNotFoundException e) {\n-                    // The file couldn't be found... should we tell anyone?\n-                    LOGGER.info(\"Cannot find file\", e);\n-                }\n-            }\n-        }\n-\n-        // Read personal list, if set up:\n-        if (Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST) != null) {\n-            try {\n-                Globals.journalAbbrev.readJournalListFromFile(new File(Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST)));\n-            } catch (FileNotFoundException e) {\n-                LOGGER.info(\"Personal journal list file '\" + Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST) + \"' not found.\", e);\n-            }\n-        }\n-\n-    }\n-\n-\n     public static final ImportFormatReader importFormatReader = new ImportFormatReader();\n \n     public static CacheableHandler handler;, @@ -20,7 +20,6 @@\n \n import java.awt.Font;\n import java.io.File;\n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -36,6 +35,7 @@\n import net.sf.jabref.gui.*;\n import net.sf.jabref.importer.fetcher.EntryFetcher;\n import net.sf.jabref.importer.fetcher.EntryFetchers;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n import net.sf.jabref.migrations.PreferencesMigrations;\n@@ -71,12 +71,11 @@\n  * JabRef Main Class - The application gets started here.\n  */\n public class JabRef {\n+    private static final Log LOGGER = LogFactory.getLog(JabRef.class);\n \n     public static JabRefFrame jrf;\n \n     private static final int MAX_DIALOG_WARNINGS = 10;\n-    \n-    private static final Log LOGGER = LogFactory.getLog(JabRef.class);\n \n     private JabRefCLI cli;\n \n@@ -103,7 +102,7 @@ public void start(String[] args) {\n         Globals.startBackgroundTasks();\n         setupLogHandlerForErrorConsole();\n         Globals.prefs = prefs;\n-        setLanguage(prefs);\n+        Localization.setLanguage(prefs.get(JabRefPreferences.LANGUAGE));\n         Globals.prefs.setLanguageDependentDefaultValues();\n         /*\n          * The Plug-in System is started automatically on the first call to\n@@ -121,7 +120,7 @@ public void start(String[] args) {\n         ExportFormats.initAllExports();\n \n         // Read list(s) of journal names and abbreviations:\n-        Globals.initializeJournalNames();\n+        Abbreviations.initializeJournalNames(Globals.prefs);\n \n         // Check for running JabRef\n         RemotePreferences remotePreferences = new RemotePreferences(Globals.prefs);\n@@ -146,20 +145,6 @@ public void start(String[] args) {\n             }\n         }\n \n-        /*\n-         * See if the user has a personal journal list set up. If so, add these\n-         * journal names and abbreviations to the list:\n-         */\n-        String personalJournalList = prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST);\n-        if (personalJournalList != null && !personalJournalList.isEmpty()) {\n-            try {\n-                Globals.journalAbbrev.readJournalListFromFile(new File(personalJournalList));\n-            } catch (FileNotFoundException e) {\n-                JOptionPane.showMessageDialog(null, Localization.lang(\"Journal file not found\") + \": \" + e.getMessage(), Localization.lang(\"Error opening file\"), JOptionPane.ERROR_MESSAGE);\n-                Globals.prefs.put(JabRefPreferences.PERSONAL_JOURNAL_LIST, \"\");\n-            }\n-        }\n-\n         // override used newline character with the one stored in the preferences\n         // The preferences return the system newline character sequence as default\n         Globals.NEWLINE = Globals.prefs.get(JabRefPreferences.NEWLINE);\n@@ -186,23 +171,6 @@ private void setupLogHandlerForErrorConsole() {\n         ((Jdk14Logger)LOGGER).getLogger().addHandler(Globals.handler);\n     }\n \n-    private void setLanguage(JabRefPreferences prefs) {\n-        String langStr = prefs.get(JabRefPreferences.LANGUAGE);\n-        String[] parts = langStr.split(\"_\");\n-        String language;\n-        String country;\n-        if (parts.length == 1) {\n-            language = langStr;\n-            country = \"\";\n-        }\n-        else {\n-            language = parts[0];\n-            country = parts[1];\n-        }\n-\n-        Localization.setLanguage(language, country);\n-    }\n-\n     // Do not use this code in release version, it contains some memory leaks\n     public static String getCurrentProcessExplicitAppUserModelID()\n     {, @@ -4,7 +4,6 @@\n  * JabRef MainClass\n  */\n public class JabRefMain {\n-\n     public static void main(String[] args) {\n         new JabRef().start(args);\n     }, @@ -37,6 +37,7 @@\n import javax.swing.KeyStroke;\n \n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.actions.CleanUpAction;\n import net.sf.jabref.gui.entryeditor.EntryEditorTabList;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.preftabs.ImportSettingsTab;\n@@ -100,12 +101,12 @@\n     public static final String PROXY_PORT = \"proxyPort\";\n     public static final String PROXY_HOSTNAME = \"proxyHostname\";\n     public static final String USE_PROXY = \"useProxy\";\n-    public static final String PRIMARY_SORT_FIELD = \"priSort\";\n-    public static final String PRIMARY_SORT_DESCENDING = \"priDescending\";\n-    public static final String SECONDARY_SORT_FIELD = \"secSort\";\n-    public static final String SECONDARY_SORT_DESCENDING = \"secDescending\";\n-    public static final String TERTIARY_SORT_FIELD = \"terSort\";\n-    public static final String TERTIARY_SORT_DESCENDING = \"terDescending\";\n+    public static final String TABLE_PRIMARY_SORT_FIELD = \"priSort\";\n+    public static final String TABLE_PRIMARY_SORT_DESCENDING = \"priDescending\";\n+    public static final String TABLE_SECONDARY_SORT_FIELD = \"secSort\";\n+    public static final String TABLE_SECONDARY_SORT_DESCENDING = \"secDescending\";\n+    public static final String TABLE_TERTIARY_SORT_FIELD = \"terSort\";\n+    public static final String TABLE_TERTIARY_SORT_DESCENDING = \"terDescending\";\n     public static final String SAVE_IN_ORIGINAL_ORDER = \"saveInOriginalOrder\";\n     public static final String SAVE_IN_SPECIFIED_ORDER = \"saveInSpecifiedOrder\";\n     public static final String SAVE_PRIMARY_SORT_FIELD = \"savePriSort\";\n@@ -477,16 +478,17 @@ private JabRefPreferences() {\n         defaults.put(NAMES_NATBIB, Boolean.TRUE); // \"Natbib style\"\n         defaults.put(ABBR_AUTHOR_NAMES, Boolean.TRUE); // \"Abbreviate names\"\n         defaults.put(NAMES_LAST_ONLY, Boolean.TRUE); // \"Show last names only\"\n-        defaults.put(LANGUAGE, \"en\");\n+        // system locale as default\n+        defaults.put(LANGUAGE, Locale.getDefault().getLanguage());\n         defaults.put(SHOW_SHORT, Boolean.TRUE);\n \n         // Sorting preferences\n-        defaults.put(PRIMARY_SORT_FIELD, \"author\");\n-        defaults.put(PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n-        defaults.put(SECONDARY_SORT_FIELD, \"year\");\n-        defaults.put(SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n-        defaults.put(TERTIARY_SORT_FIELD, \"author\");\n-        defaults.put(TERTIARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(TABLE_PRIMARY_SORT_FIELD, \"author\");\n+        defaults.put(TABLE_PRIMARY_SORT_DESCENDING, Boolean.FALSE);\n+        defaults.put(TABLE_SECONDARY_SORT_FIELD, \"year\");\n+        defaults.put(TABLE_SECONDARY_SORT_DESCENDING, Boolean.TRUE);\n+        defaults.put(TABLE_TERTIARY_SORT_FIELD, \"author\");\n+        defaults.put(TABLE_TERTIARY_SORT_DESCENDING, Boolean.FALSE);\n         defaults.put(SAVE_IN_ORIGINAL_ORDER, Boolean.FALSE);\n         defaults.put(SAVE_IN_SPECIFIED_ORDER, Boolean.FALSE);\n         defaults.put(SAVE_PRIMARY_SORT_FIELD, \"bibtexkey\");\n@@ -1319,8 +1321,8 @@ public void storeCustomEntryType(CustomEntryType tp, int number) {\n         String nr = \"\" + number;\n         put(JabRefPreferences.CUSTOM_TYPE_NAME + nr, tp.getName());\n         put(JabRefPreferences.CUSTOM_TYPE_REQ + nr, tp.getRequiredFieldsString());\n-        putStringArray(JabRefPreferences.CUSTOM_TYPE_OPT + nr, tp.getOptionalFields());\n-        putStringArray(JabRefPreferences.CUSTOM_TYPE_PRIOPT + nr, tp.getPrimaryOptionalFields());\n+        putStringArray(JabRefPreferences.CUSTOM_TYPE_OPT + nr, tp.getOptionalFields().toArray(new String[0]));\n+        putStringArray(JabRefPreferences.CUSTOM_TYPE_PRIOPT + nr, tp.getPrimaryOptionalFields().toArray(new String[0]));\n     }\n \n     /**, @@ -23,7 +23,7 @@\n import javax.swing.JOptionPane;\n \n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.gui.worker.Worker;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -43,7 +43,7 @@\n     /** Creates a new instance of ExpandEndnoteFilters */\n     public ExpandEndnoteFilters(JabRefFrame frame) {\n         this.frame = frame;\n-        putValue(Action.NAME, \"Unpack EndNote filter set\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Unpack EndNote filter set\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"<HTML>Unpack the zip file containing import/export filters for Endnote,<BR>\"\n                 + \"for optimal interoperability with JabRef</HTML>\"));\n     }, @@ -27,7 +27,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -165,7 +165,7 @@ public static AbstractAction getExportAction(JabRefFrame frame, boolean selected\n             public ExportAction(JabRefFrame frame, boolean selectedOnly) {\n                 this.frame = frame;\n                 this.selectedOnly = selectedOnly;\n-                putValue(Action.NAME, selectedOnly ? \"Export selected entries\" : \"Export\");\n+                putValue(Action.NAME, selectedOnly ? Localization.menuTitle(\"Export selected entries\") : Localization.menuTitle(\"Export\"));\n             }\n \n             @Override, @@ -17,5 +17,16 @@\n \n public interface FieldFormatter {\n \n+    /**\n+     * Formats the content of a field.\n+     * Currently only one implementation: net.sf.jabref.exporter.LatexFieldFormatter\n+     * \n+     * Reason for this interface: unknown\n+     * \n+     * @param s the content of the field\n+     * @param fieldName the name of the field - used to trigger different serializations, e.g., turning off resolution for some strings\n+     * @return a formatted string suitable for output\n+     * @throws IllegalArgumentException if s is not a correct bibtex string, e.g., because of improperly balanced braces or using # not paired\n+     */\n     String format(String s, String fieldName) throws IllegalArgumentException;\n }, @@ -324,12 +324,12 @@ public SaveSettings(boolean isSaveOperation, MetaData metaData) {\n                 terD = Globals.prefs.getBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING);\n             } else {\n                 // The setting is to save according to the current table order.\n-                pri = Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD);\n-                sec = Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD);\n-                ter = Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD);\n-                priD = Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING);\n-                secD = Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING);\n-                terD = Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING);\n+                pri = Globals.prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD);\n+                sec = Globals.prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD);\n+                ter = Globals.prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD);\n+                priD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING);\n+                secD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING);\n+                terD = Globals.prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING);\n             }\n         }\n     }, @@ -23,6 +23,14 @@\n \n import java.util.Vector;\n \n+/**\n+ * Currently the only implementation of net.sf.jabref.exporter.FieldFormatter\n+ * \n+ * Obeys following settings:\n+ *  * JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS\n+ *  * JabRefPreferences.DO_NOT_RESOLVE_STRINGS_FOR\n+ *  * JabRefPreferences.WRITEFIELD_WRAPFIELD\n+ */\n public class LatexFieldFormatter implements FieldFormatter {\n \n     // \"Fieldname\" to indicate that a field should be treated as a bibtex string. Used when writing database to file.\n@@ -38,8 +46,8 @@ public static LatexFieldFormatter buildIgnoreHashes() {\n     private final boolean neverFailOnHashes;\n \n     private final boolean resolveStringsAllFields;\n-    private final char valueDelimitersZero;\n-    private final char valueDelimitersOne;\n+    private final char valueDelimiterStartOfValue;\n+    private final char valueDelimiterEndOfValue;\n     private final boolean writefieldWrapfield;\n     private final String[] doNotResolveStringsFors;\n \n@@ -52,8 +60,8 @@ private LatexFieldFormatter(boolean neverFailOnHashes) {\n         this.neverFailOnHashes = neverFailOnHashes;\n \n         this.resolveStringsAllFields = Globals.prefs.getBoolean(JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS);\n-        valueDelimitersZero = Globals.prefs.getValueDelimiters(0);\n-        valueDelimitersOne = Globals.prefs.getValueDelimiters(1);\n+        valueDelimiterStartOfValue = Globals.prefs.getValueDelimiters(0);\n+        valueDelimiterEndOfValue = Globals.prefs.getValueDelimiters(1);\n         doNotResolveStringsFors = Globals.prefs.getStringArray(JabRefPreferences.DO_NOT_RESOLVE_STRINGS_FOR);\n         writefieldWrapfield = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_WRAPFIELD);\n     }\n@@ -63,7 +71,7 @@ public String format(String text, String fieldName)\n             throws IllegalArgumentException {\n \n         if (text == null) {\n-            return valueDelimitersZero + \"\" + valueDelimitersOne;\n+            return valueDelimiterStartOfValue + \"\" + valueDelimiterEndOfValue;\n         }\n \n         if (Globals.prefs.putBracesAroundCapitals(fieldName) && !BIBTEX_STRING.equals(fieldName)) {\n@@ -120,7 +128,7 @@ public String format(String text, String fieldName)\n             }\n \n             sb = new StringBuffer(\n-                    valueDelimitersZero + \"\");\n+                    valueDelimiterStartOfValue + \"\");\n             // No formatting at all for these fields, to allow custom formatting?\n             //            if (Globals.prefs.getBoolean(\"preserveFieldFormatting\"))\n             //              sb.append(text);\n@@ -132,7 +140,7 @@ public String format(String text, String fieldName)\n                 sb.append(text);\n             }\n \n-            sb.append(valueDelimitersOne);\n+            sb.append(valueDelimiterEndOfValue);\n \n             return sb.toString();\n         }\n@@ -213,7 +221,7 @@ private void writeText(String text, int start_pos,\n         /*sb.append(\"{\");\n         sb.append(text.substring(start_pos, end_pos));\n         sb.append(\"}\");*/\n-        sb.append(valueDelimitersZero);\n+        sb.append(valueDelimiterStartOfValue);\n         boolean escape = false;\n         boolean inCommandName = false;\n         boolean inCommand = false;\n@@ -281,7 +289,7 @@ else if (inCommandOption && c == ']') {\n }\n             escape = c == '\\\\';\n         }\n-        sb.append(valueDelimitersOne);\n+        sb.append(valueDelimiterEndOfValue);\n     }\n \n     private void writeStringLabel(String text, int start_pos, int end_pos,\n@@ -302,7 +310,7 @@ private void checkBraces(String text) throws IllegalArgumentException {\n         Vector<Integer> right = new Vector<Integer>(5, 3);\n         int current = -1;\n \n-        // First we collect all occurences:\n+        // First we collect all occurrences:\n         while ((current = text.indexOf('{', current + 1)) != -1) {\n             left.add(current);\n         }, @@ -21,6 +21,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.gui.worker.Worker;\n import net.sf.jabref.logic.l10n.Localization;\n import spin.Spin;\n@@ -42,7 +43,7 @@ public SaveAllAction(JabRefFrame frame) {\n         this.frame = frame;\n         putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Save all\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Save all open databases\"));\n-        putValue(Action.NAME, \"Save all\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Save all\"));\n     }\n \n     @Override, @@ -28,7 +28,7 @@\n package net.sf.jabref.exporter.layout.format;\n \n import net.sf.jabref.exporter.layout.LayoutFormatter;\n-import net.sf.jabref.Globals;\n+import net.sf.jabref.logic.journals.Abbreviations;\n \n /**\n  * JournalAbbreviator formats the given text in an abbreviated form\n@@ -49,6 +49,6 @@\n \n     @Override\n     public String format(String fieldText) {\n-        return Globals.journalAbbrev.getIsoAbbreviation(fieldText).orElse(fieldText);\n+        return Abbreviations.journalAbbrev.getIsoAbbreviation(fieldText).orElse(fieldText);\n     }\n }, @@ -1,6 +1,7 @@\n package net.sf.jabref.external;\n \n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.actions.BaseAction;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.model.entry.BibtexEntry;\n , @@ -31,7 +31,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.ButtonStackBuilder;\n@@ -371,13 +371,13 @@ public void mouseReleased(MouseEvent e) {\n \n         public EditExternalFileTypesAction(JabRefFrame frame) {\n             super();\n-            putValue(Action.NAME, \"Manage external file types\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Manage external file types\"));\n             this.frame = frame;\n         }\n \n         public EditExternalFileTypesAction(JDialog dialog) {\n             super();\n-            putValue(Action.NAME, \"Manage external file types\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Manage external file types\"));\n             this.dialog = dialog;\n         }\n , @@ -20,7 +20,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.openoffice.OpenOfficePanel;\n \n@@ -31,7 +31,6 @@\n import java.awt.event.ActionListener;\n import java.awt.event.MouseAdapter;\n import java.awt.event.MouseEvent;\n-import java.net.URL;\n import java.util.ArrayList;\n import java.util.Comparator;\n import java.util.HashMap;, @@ -46,6 +46,8 @@\n import net.sf.jabref.groups.GroupSelector;\n import net.sf.jabref.groups.GroupTreeNode;\n import net.sf.jabref.gui.actions.Actions;\n+import net.sf.jabref.gui.actions.BaseAction;\n+import net.sf.jabref.gui.actions.CleanUpAction;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.journals.AbbreviateAction;, @@ -62,7 +62,9 @@\n     private boolean biblatexMode;\n \n \n-    /** Creates a new instance of EntryCustomizationDialog2 */\n+    /**\n+     * Creates a new instance of EntryCustomizationDialog2\n+     */\n     public EntryCustomizationDialog2(JabRefFrame frame) {\n         super(frame, Localization.lang(\"Customize entry types\"), false);\n \n@@ -83,9 +85,9 @@ private void initGui() {\n         right.setLayout(new GridLayout(biblatexMode ? 2 : 1, 2));\n \n         java.util.List<String> entryTypes = new ArrayList<String>();\n-\t\tfor (String s : BibtexEntryType.getAllTypes()) {\n-\t\t\tentryTypes.add(s);\n-\t\t}\n+        for (String s : BibtexEntryType.getAllTypes()) {\n+            entryTypes.add(s);\n+        }\n \n         typeComp = new EntryTypeList(entryTypes);\n         typeComp.addListSelectionListener(this);\n@@ -114,7 +116,7 @@ private void initGui() {\n             right.add(new JPanel());\n             right.add(optComp2);\n         }\n-        \n+\n         //right.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), Globals.lang(\"Fields\")));\n         right.setBorder(BorderFactory.createEtchedBorder());\n         ok = new JButton(\"Ok\");\n@@ -177,38 +179,18 @@ public void valueChanged(ListSelectionEvent e) {\n         }\n         List<String> rl = reqLists.get(s);\n         if (rl == null) {\n-        \tBibtexEntryType type = BibtexEntryType.getType(s);\n+            BibtexEntryType type = BibtexEntryType.getType(s);\n             if (type != null) {\n-                String[] rf = type.getRequiredFieldsForCustomization();\n-                List<String> req;\n-                if (rf != null) {\n-                    req = java.util.Arrays.asList(rf);\n-                } else {\n-                    req = new ArrayList<String>();\n-                }\n+                List<String> req = type.getRequiredFieldsForCustomization();\n \n                 List<String> opt;\n                 if (!biblatexMode) {\n-                    String[] of = type.getOptionalFields();\n-                    if (of != null) {\n-                        opt = java.util.Arrays.asList(of);\n-                    } else {\n-                        opt = new ArrayList<String>();\n-                    }\n+                    opt = type.getOptionalFields();\n                 } else {\n-                    String[] priOf = type.getPrimaryOptionalFields();\n-                    if (priOf != null) {\n-                        opt = java.util.Arrays.asList(priOf);\n-                    } else {\n-                        opt = new ArrayList<String>();\n-                    }\n-                    String[] secOpt = type.getSecondaryOptionalFields();\n-                    List<String> opt2;\n-                    if (secOpt != null) {\n-                    \topt2 = java.util.Arrays.asList(secOpt);\n-                    } else {\n-                    \topt2 = new ArrayList<String>();\n-                    }\n+                    opt = type.getPrimaryOptionalFields();\n+\n+                    List<String> opt2 = type.getSecondaryOptionalFields();\n+\n                     optComp2.setFields(opt2);\n                     optComp2.setEnabled(true);\n                 }\n@@ -222,8 +204,7 @@ public void valueChanged(ListSelectionEvent e) {\n                 reqComp.setEnabled(true);\n                 optComp.setFields(new ArrayList<String>());\n                 optComp.setEnabled(true);\n-                if (biblatexMode)\n-                {\n+                if (biblatexMode) {\n                     optComp2.setFields(new ArrayList<String>());\n                     optComp2.setEnabled(true);\n                 }\n@@ -251,18 +232,12 @@ private void applyChanges() {\n                 continue;\n             }\n \n-            List<String> reqFields = stringListEntry.getValue();\n-            List<String> optFields = optLists.get(stringListEntry.getKey());\n-            List<String> opt2Fields = opt2Lists.get(stringListEntry.getKey());\n-            String[] reqStr = new String[reqFields.size()];\n-            reqStr = reqFields.toArray(reqStr);\n-            String[] optStr = new String[optFields.size()];\n-            optStr = optFields.toArray(optStr);\n-            String[] opt2Str;\n-            if (opt2Fields != null) {\n-                opt2Str = opt2Fields.toArray(new String[opt2Fields.size()]);\n-            } else {\n-                opt2Str = new String[0];\n+            List<String> reqStr = stringListEntry.getValue();\n+            List<String> optStr = optLists.get(stringListEntry.getKey());\n+            List<String> opt2Str = opt2Lists.get(stringListEntry.getKey());\n+\n+            if (opt2Str != null) {\n+                opt2Str = new ArrayList<>(0);\n             }\n \n             // If this type is already existing, check if any changes have\n@@ -281,16 +256,16 @@ private void applyChanges() {\n \n             BibtexEntryType oldType = BibtexEntryType.getType(stringListEntry.getKey());\n             if (oldType != null) {\n-                String[] oldReq = oldType.getRequiredFields();\n-                String[] oldOpt = oldType.getOptionalFields();\n+                List<String> oldReq = oldType.getRequiredFields();\n+                List<String> oldOpt = oldType.getOptionalFields();\n                 if (biblatexMode) {\n-                    String[] oldPriOpt = oldType.getPrimaryOptionalFields();\n-                    String[] oldSecOpt = oldType.getSecondaryOptionalFields(); \n-                    if (equalArrays(oldReq, reqStr) && equalArrays(oldPriOpt, optStr) &&\n-                            equalArrays(oldSecOpt, opt2Str)) {\n+                    List<String> oldPriOpt = oldType.getPrimaryOptionalFields();\n+                    List<String> oldSecOpt = oldType.getSecondaryOptionalFields();\n+                    if (equalLists(oldReq, reqStr) && equalLists(oldPriOpt, optStr) &&\n+                            equalLists(oldSecOpt, opt2Str)) {\n                         changesMade = false;\n                     }\n-                } else if (equalArrays(oldReq, reqStr) && equalArrays(oldOpt, optStr)) {\n+                } else if (equalLists(oldReq, reqStr) && equalLists(oldOpt, optStr)) {\n                     changesMade = false;\n                 }\n             }\n@@ -353,22 +328,19 @@ private void typeDeletion(String name) {\n \n     }\n \n-    private boolean equalArrays(String[] one, String[] two) {\n-        if ((one == null) && (two == null))\n-         {\n+    private boolean equalLists(List<String> one, List<String> two) {\n+        if ((one == null) && (two == null)) {\n             return true; // Both null.\n         }\n-        if ((one == null) || (two == null))\n-         {\n+        if ((one == null) || (two == null)) {\n             return false; // One of them null, the other not.\n         }\n-        if (one.length != two.length)\n-         {\n+        if (one.size() != two.size()) {\n             return false; // Different length.\n         }\n         // If we get here, we know that both are non-null, and that they have the same length.\n-        for (int i = 0; i < one.length; i++) {\n-            if (!one[i].equals(two[i])) {\n+        for (int i = 0; i < one.size(); i++) {\n+            if (!one.get(i).equals(two.get(i))) {\n                 return false;\n             }\n         }\n@@ -438,36 +410,19 @@ public void actionPerformed(ActionEvent e) {\n \n             BibtexEntryType type = BibtexEntryType.getStandardType(lastSelected);\n             if (type != null) {\n-                String[] rf = type.getRequiredFieldsForCustomization();\n-                String[] of = type.getOptionalFields();\n-                List<String> req;\n-                List<String> opt1;\n-                List<String> opt2;\n-                if (rf != null) {\n-                    req = java.util.Arrays.asList(rf);\n-                } else {\n-                    req = new ArrayList<String>();\n-                }\n+                List<String> of = type.getOptionalFields();\n+                List<String> req = type.getRequiredFieldsForCustomization();;\n+                List<String> opt1 = new ArrayList<>();\n+                List<String> opt2 = new ArrayList<>();;\n \n-                opt1 = new ArrayList<String>();\n-                opt2 = new ArrayList<String>();\n                 if (biblatexMode) {\n-                    if (of != null)\n-                    {\n-                        String[] priOptArray = type.getPrimaryOptionalFields();\n-                        String[] secOptArray = type.getSecondaryOptionalFields();\n-                        if (priOptArray != null) {\n-                            opt1 = java.util.Arrays.asList(priOptArray);\n-                        }\n-                        if (secOptArray != null) {\n-                            opt2 = java.util.Arrays.asList(secOptArray);\n-                        }\n+                    if (of.size() != 0) {\n+                        opt1 = type.getPrimaryOptionalFields();\n+                        opt2 = type.getSecondaryOptionalFields();\n                     }\n-                }\n-                else\n-                {\n-                    if (of != null) {\n-                        opt1 = java.util.Arrays.asList(of);\n+                } else {\n+                    if (of.size() != 0) {\n+                        opt1 = of;\n                     }\n                 }\n , @@ -175,22 +175,22 @@\n         LANGUAGES = new TreeMap<>();\n \n         // LANGUAGES contains mappings for supported languages.\n-        GUIGlobals.LANGUAGES.put(\"English\", \"en\");\n         GUIGlobals.LANGUAGES.put(\"Dansk\", \"da\");\n         GUIGlobals.LANGUAGES.put(\"Deutsch\", \"de\");\n+        GUIGlobals.LANGUAGES.put(\"English\", \"en\");\n+        GUIGlobals.LANGUAGES.put(\"Espa\u00f1ol\", \"es\");\n+        GUIGlobals.LANGUAGES.put(\"Persian (\u0641\u0627\u0631\u0633\u06cc)\", \"fa\");\n         GUIGlobals.LANGUAGES.put(\"Fran\\u00E7ais\", \"fr\");\n+        GUIGlobals.LANGUAGES.put(\"Bahasa Indonesia\", \"in\");\n         GUIGlobals.LANGUAGES.put(\"Italiano\", \"it\");\n         GUIGlobals.LANGUAGES.put(\"Japanese\", \"ja\");\n         GUIGlobals.LANGUAGES.put(\"Nederlands\", \"nl\");\n         GUIGlobals.LANGUAGES.put(\"Norsk\", \"no\");\n-        GUIGlobals.LANGUAGES.put(\"Espa\u00f1ol\", \"es\");\n-        GUIGlobals.LANGUAGES.put(\"Turkish\", \"tr\");\n-        GUIGlobals.LANGUAGES.put(\"Simplified Chinese\", \"zh\");\n-        GUIGlobals.LANGUAGES.put(\"Vietnamese\", \"vi\");\n-        GUIGlobals.LANGUAGES.put(\"Bahasa Indonesia\", \"in\");\n         GUIGlobals.LANGUAGES.put(\"Brazilian Portugese\", \"pt_BR\");\n         GUIGlobals.LANGUAGES.put(\"Russian\", \"ru\");\n-        GUIGlobals.LANGUAGES.put(\"Persian (\u0641\u0627\u0631\u0633\u06cc)\", \"fa\");\n+        GUIGlobals.LANGUAGES.put(\"Turkish\", \"tr\");\n+        GUIGlobals.LANGUAGES.put(\"Vietnamese\", \"vi\");\n+        GUIGlobals.LANGUAGES.put(\"Simplified Chinese\", \"zh\");\n \n         // Set up entry editor colors, first time:\n         GUIGlobals.updateEntryEditorColors();, @@ -1,6 +1,7 @@\n package net.sf.jabref.gui;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n+import net.sf.jabref.gui.actions.BaseAction;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.groups.*;, @@ -208,71 +208,58 @@ void addAction(Action a) {\n     private final AbstractAction newSubDatabaseAction = new NewSubDatabaseAction(this);\n     private final AbstractAction integrityCheckAction = new IntegrityCheckAction(this);\n     private final AbstractAction forkMeOnGitHubAction = new ForkMeOnGitHubAction();\n-    private final AbstractAction help = new HelpAction(\"JabRef help\", helpDiag,\n+    private final AbstractAction help = new HelpAction(Localization.menuTitle(\"JabRef help\"), helpDiag,\n             GUIGlobals.baseFrameHelp, Localization.lang(\"JabRef help\"),\n             prefs.getKey(\"Help\"));\n-    private final AbstractAction contents = new HelpAction(\"Help contents\", helpDiag,\n+    private final AbstractAction contents = new HelpAction(Localization.menuTitle(\"Help contents\"), helpDiag,\n             GUIGlobals.helpContents, Localization.lang(\"Help contents\"),\n             IconTheme.getImage(\"helpContents\"));\n-    private final AbstractAction about = new HelpAction(\"About JabRef\", helpDiag,\n+    private final AbstractAction about = new HelpAction(Localization.menuTitle(\"About JabRef\"), helpDiag,\n             GUIGlobals.aboutPage, Localization.lang(\"About JabRef\"),\n             IconTheme.getImage(\"about\"));\n-    private final AbstractAction editEntry = new GeneralAction(Actions.EDIT, \"Edit entry\",\n-            Localization.lang(\"Edit entry\"),\n-            prefs.getKey(KeyBinds.EDIT_ENTRY),\n-            IconTheme.getImage(\"edit\"));\n-    private final AbstractAction focusTable = new GeneralAction(Actions.FOCUS_TABLE, \"Focus entry table\",\n-            Localization.lang(\"Move the keyboard focus to the entry table\"),\n-            prefs.getKey(KeyBinds.FOCUS_ENTRY_TABLE));\n-    private final AbstractAction save = new GeneralAction(Actions.SAVE, \"Save database\",\n-            Localization.lang(\"Save database\"),\n-            prefs.getKey(KeyBinds.SAVE_DATABASE),\n-            IconTheme.getImage(\"save\"));\n-    private final AbstractAction saveAs = new GeneralAction(Actions.SAVE_AS, \"Save database as ...\",\n-            Localization.lang(\"Save database as ...\"),\n-            prefs.getKey(KeyBinds.SAVE_DATABASE_AS),\n-            IconTheme.getImage(\"saveAs\"));\n+    private final AbstractAction editEntry = new GeneralAction(Actions.EDIT, Localization.menuTitle(\"Edit entry\"),\n+            Localization.lang(\"Edit entry\"), prefs.getKey(KeyBinds.EDIT_ENTRY), IconTheme.getImage(\"edit\"));\n+    private final AbstractAction focusTable = new GeneralAction(Actions.FOCUS_TABLE,\n+            Localization.menuTitle(\"Focus entry table\"),\n+            Localization.lang(\"Move the keyboard focus to the entry table\"), prefs.getKey(KeyBinds.FOCUS_ENTRY_TABLE));\n+    private final AbstractAction save = new GeneralAction(Actions.SAVE, Localization.menuTitle(\"Save database\"),\n+            Localization.lang(\"Save database\"), prefs.getKey(KeyBinds.SAVE_DATABASE), IconTheme.getImage(\"save\"));\n+    private final AbstractAction saveAs = new GeneralAction(Actions.SAVE_AS,\n+            Localization.menuTitle(\"Save database as ...\"), Localization.lang(\"Save database as ...\"),\n+            prefs.getKey(KeyBinds.SAVE_DATABASE_AS), IconTheme.getImage(\"saveAs\"));\n     private final AbstractAction saveAll = new SaveAllAction(JabRefFrame.this);\n     private final AbstractAction saveSelectedAs = new GeneralAction(Actions.SAVE_SELECTED_AS,\n-            \"Save selected as ...\",\n-            Localization.lang(\"Save selected as ...\"),\n+            Localization.menuTitle(\"Save selected as ...\"), Localization.lang(\"Save selected as ...\"),\n             IconTheme.getImage(\"saveAs\"));\n     private final AbstractAction saveSelectedAsPlain = new GeneralAction(Actions.SAVE_SELECTED_AS_PLAIN,\n-            \"Save selected as plain BibTeX ...\",\n-            Localization.lang(\"Save selected as plain BibTeX ...\"),\n-            IconTheme.getImage(\"saveAs\"));\n+            Localization.menuTitle(\"Save selected as plain BibTeX ...\"),\n+            Localization.lang(\"Save selected as plain BibTeX ...\"), IconTheme.getImage(\"saveAs\"));\n     private final AbstractAction exportAll = ExportFormats.getExportAction(this, false);\n     private final AbstractAction exportSelected = ExportFormats.getExportAction(this, true);\n     private final AbstractAction importCurrent = ImportFormats.getImportAction(this, false);\n     private final AbstractAction importNew = ImportFormats.getImportAction(this, true);\n     public final AbstractAction nextTab = new ChangeTabAction(true);\n     public final AbstractAction prevTab = new ChangeTabAction(false);\n     private final AbstractAction sortTabs = new SortTabsAction(this);\n-    private final AbstractAction undo = new GeneralAction(Actions.UNDO, \"Undo\", Localization.lang(\"Undo\"),\n-            prefs.getKey(KeyBinds.UNDO),\n-            IconTheme.getImage(\"undo\"));\n-    private final AbstractAction redo = new GeneralAction(Actions.REDO, \"Redo\", Localization.lang(\"Redo\"),\n-            prefs.getKey(KeyBinds.REDO),\n-            IconTheme.getImage(\"redo\"));\n-    final AbstractAction forward = new GeneralAction(Actions.FORWARD, \"Forward\", Localization.lang(\"Forward\"),\n-            prefs.getKey(KeyBinds.FORWARD), IconTheme.getImage(\"right\"));\n-    final AbstractAction back = new GeneralAction(Actions.BACK, \"Back\", Localization.lang(\"Back\"),\n-            prefs.getKey(KeyBinds.BACK), IconTheme.getImage(\"left\"));\n-    private final AbstractAction delete = new GeneralAction(Actions.DELETE, \"Delete\", Localization.lang(\"Delete\"),\n-            prefs.getKey(KeyBinds.DELETE),\n-            IconTheme.getImage(\"delete\"));\n+    private final AbstractAction undo = new GeneralAction(Actions.UNDO, Localization.menuTitle(\"Undo\"),\n+            Localization.lang(\"Undo\"), prefs.getKey(KeyBinds.UNDO), IconTheme.getImage(\"undo\"));\n+    private final AbstractAction redo = new GeneralAction(Actions.REDO, Localization.menuTitle(\"Redo\"),\n+            Localization.lang(\"Redo\"), prefs.getKey(KeyBinds.REDO), IconTheme.getImage(\"redo\"));\n+    final AbstractAction forward = new GeneralAction(Actions.FORWARD, Localization.menuTitle(\"Forward\"),\n+            Localization.lang(\"Forward\"), prefs.getKey(KeyBinds.FORWARD), IconTheme.getImage(\"right\"));\n+    final AbstractAction back = new GeneralAction(Actions.BACK, Localization.menuTitle(\"Back\"),\n+            Localization.lang(\"Back\"), prefs.getKey(KeyBinds.BACK), IconTheme.getImage(\"left\"));\n+    private final AbstractAction delete = new GeneralAction(Actions.DELETE, Localization.menuTitle(\"Delete\"),\n+            Localization.lang(\"Delete\"), prefs.getKey(KeyBinds.DELETE), IconTheme.getImage(\"delete\"));\n     private final AbstractAction copy = new EditAction(Actions.COPY, IconTheme.getImage(\"copy\"));\n     private final AbstractAction paste = new EditAction(Actions.PASTE, IconTheme.getImage(\"paste\"));\n     private final AbstractAction cut = new EditAction(Actions.CUT, IconTheme.getImage(\"cut\"));\n-    private final AbstractAction mark = new GeneralAction(Actions.MARK_ENTRIES, \"Mark entries\",\n-            Localization.lang(\"Mark entries\"),\n-            prefs.getKey(KeyBinds.MARK_ENTRIES),\n-            IconTheme.getImage(\"markEntries\"));\n-    private final AbstractAction unmark = new GeneralAction(Actions.UNMARK_ENTRIES, \"Unmark entries\",\n-            Localization.lang(\"Unmark entries\"),\n-            prefs.getKey(KeyBinds.UNMARK_ENTRIES),\n-            IconTheme.getImage(\"unmarkEntries\"));\n-    private final AbstractAction unmarkAll = new GeneralAction(Actions.UNMARK_ALL, \"Unmark all\");\n+    private final AbstractAction mark = new GeneralAction(Actions.MARK_ENTRIES, Localization.menuTitle(\"Mark entries\"),\n+            Localization.lang(\"Mark entries\"), prefs.getKey(KeyBinds.MARK_ENTRIES), IconTheme.getImage(\"markEntries\"));\n+    private final AbstractAction unmark = new GeneralAction(Actions.UNMARK_ENTRIES,\n+            Localization.menuTitle(\"Unmark entries\"), Localization.lang(\"Unmark entries\"),\n+            prefs.getKey(KeyBinds.UNMARK_ENTRIES), IconTheme.getImage(\"unmarkEntries\"));\n+    private final AbstractAction unmarkAll = new GeneralAction(Actions.UNMARK_ALL, Localization.menuTitle(\"Unmark all\"));\n     private final AbstractAction toggleRelevance = new GeneralAction(\n             Relevance.getInstance().getValues().get(0).getActionName(),\n             Relevance.getInstance().getValues().get(0).getMenuString(),\n@@ -288,46 +275,48 @@ void addAction(Action a) {\n             Printed.getInstance().getValues().get(0).getMenuString(),\n             Printed.getInstance().getValues().get(0).getToolTipText(),\n             IconTheme.getImage(Printed.getInstance().getValues().get(0).getActionName()));\n-    private final AbstractAction manageSelectors = new GeneralAction(Actions.MANAGE_SELECTORS, \"Manage content selectors\");\n+    private final AbstractAction manageSelectors = new GeneralAction(Actions.MANAGE_SELECTORS,\n+            Localization.menuTitle(\"Manage content selectors\"));\n     private final AbstractAction saveSessionAction = new SaveSessionAction();\n     public final AbstractAction loadSessionAction = new LoadSessionAction();\n-    private final AbstractAction incrementalSearch = new GeneralAction(Actions.INC_SEARCH, \"Incremental search\",\n-            Localization.lang(\"Start incremental search\"),\n-            prefs.getKey(KeyBinds.INCREMENTAL_SEARCH),\n-            IconTheme.getImage(\"incSearch\"));\n-    private final AbstractAction normalSearch = new GeneralAction(Actions.SEARCH, \"Search\", Localization.lang(\"Search\"),\n-            prefs.getKey(KeyBinds.SEARCH),\n-            IconTheme.getImage(\"search\"));\n-    private final AbstractAction toggleSearch = new GeneralAction(Actions.TOGGLE_SEARCH, \"Search\",\n-            Localization.lang(\"Toggle search panel\"),IconTheme.getImage(\"toggleSearch\"));\n-\n-    private final AbstractAction copyKey = new GeneralAction(Actions.COPY_KEY, \"Copy BibTeX key\",\n+    private final AbstractAction incrementalSearch = new GeneralAction(Actions.INC_SEARCH,\n+            Localization.menuTitle(\"Incremental search\"), Localization.lang(\"Start incremental search\"),\n+            prefs.getKey(KeyBinds.INCREMENTAL_SEARCH), IconTheme.getImage(\"incSearch\"));\n+    private final AbstractAction normalSearch = new GeneralAction(Actions.SEARCH, Localization.menuTitle(\"Search\"),\n+            Localization.lang(\"Search\"), prefs.getKey(KeyBinds.SEARCH), IconTheme.getImage(\"search\"));\n+    private final AbstractAction toggleSearch = new GeneralAction(Actions.TOGGLE_SEARCH,\n+            Localization.menuTitle(\"Search\"), Localization.lang(\"Toggle search panel\"),\n+            IconTheme.getImage(\"toggleSearch\"));\n+\n+    private final AbstractAction copyKey = new GeneralAction(Actions.COPY_KEY, Localization.menuTitle(\"Copy BibTeX key\"),\n             prefs.getKey(KeyBinds.COPY_BIB_TE_X_KEY));\n     private final AbstractAction//\"Put a BibTeX reference to the selected entries on the clipboard\",\n-            copyCiteKey = new GeneralAction(Actions.COPY_CITE_KEY, \"Copy \\\\cite{BibTeX key}\",\n+            copyCiteKey = new GeneralAction(Actions.COPY_CITE_KEY, Localization.menuTitle(\"Copy \\\\cite{BibTeX key}\"),\n             //\"Put a BibTeX reference to the selected entries on the clipboard\",\n             prefs.getKey(KeyBinds.COPY_CITE_BIB_TE_X_KEY));\n     private final AbstractAction copyKeyAndTitle = new GeneralAction(Actions.COPY_KEY_AND_TITLE,\n-            \"Copy BibTeX key and title\",\n+            Localization.menuTitle(\"Copy BibTeX key and title\"),\n             prefs.getKey(KeyBinds.COPY_BIB_TE_X_KEY_AND_TITLE));\n     private final AbstractAction mergeDatabaseAction = new GeneralAction(Actions.MERGE_DATABASE,\n-            \"Append database\",\n+            Localization.menuTitle(\"Append database\"),\n             Localization.lang(\"Append contents from a BibTeX database into the currently viewed database\"),\n             IconTheme.getImage(\"open\"));\n-    private final AbstractAction selectAll = new GeneralAction(Actions.SELECT_ALL, \"Select all\",\n+    private final AbstractAction selectAll = new GeneralAction(Actions.SELECT_ALL, Localization.menuTitle(\"Select all\"),\n             prefs.getKey(KeyBinds.SELECT_ALL));\n-    private final AbstractAction replaceAll = new GeneralAction(Actions.REPLACE_ALL, \"Replace string\",\n-            prefs.getKey(KeyBinds.REPLACE_STRING));\n+    private final AbstractAction replaceAll = new GeneralAction(Actions.REPLACE_ALL,\n+            Localization.menuTitle(\"Replace string\"), prefs.getKey(KeyBinds.REPLACE_STRING));\n \n-    private final AbstractAction editPreamble = new GeneralAction(Actions.EDIT_PREAMBLE, \"Edit preamble\",\n+    private final AbstractAction editPreamble = new GeneralAction(Actions.EDIT_PREAMBLE,\n+            Localization.menuTitle(\"Edit preamble\"),\n             Localization.lang(\"Edit preamble\"),\n             prefs.getKey(KeyBinds.EDIT_PREAMBLE),\n             IconTheme.getImage(\"editPreamble\"));\n-    private final AbstractAction editStrings = new GeneralAction(Actions.EDIT_STRINGS, \"Edit strings\",\n+    private final AbstractAction editStrings = new GeneralAction(Actions.EDIT_STRINGS,\n+            Localization.menuTitle(\"Edit strings\"),\n             Localization.lang(\"Edit strings\"),\n             prefs.getKey(KeyBinds.EDIT_STRINGS),\n             IconTheme.getImage(\"editStrings\"));\n-    private final AbstractAction toggleToolbar = new AbstractAction(\"Hide/show toolbar\") {\n+    private final AbstractAction toggleToolbar = new AbstractAction(Localization.menuTitle(\"Hide/show toolbar\")) {\n         {\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(KeyBinds.HIDE_SHOW_TOOLBAR));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Hide/show toolbar\"));\n@@ -337,107 +326,123 @@ public void actionPerformed(ActionEvent e) {\n             tlb.setVisible(!tlb.isVisible());\n         }};\n     private final AbstractAction toggleGroups = new GeneralAction(Actions.TOGGLE_GROUPS,\n-            \"Toggle groups interface\",\n+            Localization.menuTitle(\"Toggle groups interface\"),\n             Localization.lang(\"Toggle groups interface\"),\n             prefs.getKey(KeyBinds.TOGGLE_GROUPS_INTERFACE),\n             IconTheme.getImage(\"toggleGroups\"));\n     private final AbstractAction togglePreview = new GeneralAction(Actions.TOGGLE_PREVIEW,\n-            \"Toggle entry preview\",\n+            Localization.menuTitle(\"Toggle entry preview\"),\n             Localization.lang(\"Toggle entry preview\"),\n             prefs.getKey(KeyBinds.TOGGLE_ENTRY_PREVIEW),\n             IconTheme.getImage(\"togglePreview\"));\n     private final AbstractAction toggleHighlightAny = new GeneralAction(Actions.TOGGLE_HIGHLIGHTS_GROUPS_MATCHING_ANY,\n-            \"Highlight groups matching any selected entry\",\n+            Localization.menuTitle(\"Highlight groups matching any selected entry\"),\n             Localization.lang(\"Highlight groups matching any selected entry\"),\n             IconTheme.getImage(\"groupsHighlightAny\"));\n     private final AbstractAction toggleHighlightAll = new GeneralAction(Actions.TOGGLE_HIGHLIGHTS_GROUPS_MATCHING_ALL,\n-            \"Highlight groups matching all selected entries\",\n+            Localization.menuTitle(\"Highlight groups matching all selected entries\"),\n             Localization.lang(\"Highlight groups matching all selected entries\"),\n             IconTheme.getImage(\"groupsHighlightAll\"));\n     final AbstractAction switchPreview = new GeneralAction(Actions.SWITCH_PREVIEW,\n-            \"Switch preview layout\",\n+            Localization.menuTitle(\"Switch preview layout\"),\n             prefs.getKey(KeyBinds.SWITCH_PREVIEW_LAYOUT));\n-    private final AbstractAction makeKeyAction = new GeneralAction(Actions.MAKE_KEY, \"Autogenerate BibTeX keys\",\n+    private final AbstractAction makeKeyAction = new GeneralAction(Actions.MAKE_KEY,\n+            Localization.menuTitle(\"Autogenerate BibTeX keys\"),\n             Localization.lang(\"Autogenerate BibTeX keys\"),\n             prefs.getKey(KeyBinds.AUTOGENERATE_BIB_TE_X_KEYS),\n             IconTheme.getImage(\"makeKey\"));\n \n-    private final AbstractAction writeXmpAction = new GeneralAction(Actions.WRITE_XMP, \"Write XMP-metadata to PDFs\",\n+    private final AbstractAction writeXmpAction = new GeneralAction(Actions.WRITE_XMP,\n+            Localization.menuTitle(\"Write XMP-metadata to PDFs\"),\n             Localization.lang(\"Will write XMP-metadata to the PDFs linked from selected entries.\"),\n             prefs.getKey(KeyBinds.WRITE_XMP));\n \n-    private final AbstractAction openFolder = new GeneralAction(Actions.OPEN_FOLDER, \"Open folder\",\n-            Localization.lang(\"Open folder\"),\n+    private final AbstractAction openFolder = new GeneralAction(Actions.OPEN_FOLDER,\n+            Localization.menuTitle(\"Open folder\"), Localization.lang(\"Open folder\"),\n             prefs.getKey(KeyBinds.OPEN_FOLDER));\n-    private final AbstractAction openFile = new GeneralAction(Actions.OPEN_EXTERNAL_FILE, \"Open file\",\n+    private final AbstractAction openFile = new GeneralAction(Actions.OPEN_EXTERNAL_FILE,\n+            Localization.menuTitle(\"Open file\"),\n             Localization.lang(\"Open file\"),\n             prefs.getKey(KeyBinds.OPEN_FILE),\n             IconTheme.getImage(\"openExternalFile\"));\n-    private final AbstractAction openPdf = new GeneralAction(Actions.OPEN_FILE, \"Open PDF or PS\",\n+    private final AbstractAction openPdf = new GeneralAction(Actions.OPEN_FILE,\n+            Localization.menuTitle(\"Open PDF or PS\"),\n             Localization.lang(\"Open PDF or PS\"),\n             prefs.getKey(KeyBinds.OPEN_PDF_OR_PS),\n             IconTheme.getImage(\"openFile\"));\n-    private final AbstractAction openUrl = new GeneralAction(Actions.OPEN_URL, \"Open URL or DOI\",\n+    private final AbstractAction openUrl = new GeneralAction(Actions.OPEN_URL,\n+            Localization.menuTitle(\"Open URL or DOI\"),\n             Localization.lang(\"Open URL or DOI\"),\n             prefs.getKey(KeyBinds.OPEN_URL_OR_DOI),\n             IconTheme.getImage(\"openUrl\"));\n-    private final AbstractAction openSpires = new GeneralAction(Actions.OPEN_SPIRES, \"Open SPIRES entry\",\n+    private final AbstractAction openSpires = new GeneralAction(Actions.OPEN_SPIRES,\n+            Localization.lang(\"Open SPIRES entry\"),\n             Localization.lang(\"Open SPIRES entry\"),\n             prefs.getKey(KeyBinds.OPEN_SPIRES_ENTRY));\n-    private final AbstractAction dupliCheck = new GeneralAction(Actions.DUPLI_CHECK, \"Find duplicates\");\n+    private final AbstractAction dupliCheck = new GeneralAction(Actions.DUPLI_CHECK,\n+            Localization.menuTitle(\"Find duplicates\"));\n     private final AbstractAction plainTextImport = new GeneralAction(Actions.PLAIN_TEXT_IMPORT,\n-            \"New entry from plain text\",\n+            Localization.menuTitle(\"New entry from plain text\"),\n             prefs.getKey(KeyBinds.NEW_FROM_PLAIN_TEXT));\n \n     private final AbstractAction customExpAction = new CustomizeExportsAction();\n     private final AbstractAction customImpAction = new CustomizeImportsAction();\n     private final AbstractAction customFileTypesAction = ExternalFileTypeEditor.getAction(this);\n-    AbstractAction exportToClipboard = new GeneralAction(\"exportToClipboard\", \"Export selected entries to clipboard\");\n+    AbstractAction exportToClipboard = new GeneralAction(\"exportToClipboard\",\n+            Localization.menuTitle(\"Export selected entries to clipboard\"));\n     private final AbstractAction autoSetPdf = new GeneralAction(Actions.AUTO_SET_PDF,\n-            \"Synchronize PDF links\",\n+            Localization.menuTitle(\"Synchronize PDF links\"),\n             prefs.getKey(KeyBinds.SYNCHRONIZE_PDF));\n     private final AbstractAction autoSetPs = new GeneralAction(Actions.AUTO_SET_PS,\n-            \"Synchronize PS links\",\n+            Localization.menuTitle(\"Synchronize PS links\"),\n             prefs.getKey(KeyBinds.SYNCHRONIZE_PS));\n     private final AbstractAction autoSetFile = new GeneralAction(Actions.AUTO_SET_FILE,\n             Localization.lang(\"Synchronize file links\"),\n             Globals.prefs.getKey(KeyBinds.SYNCHRONIZE_FILES));\n \n-    private final AbstractAction abbreviateMedline = new GeneralAction(Actions.ABBREVIATE_MEDLINE, \"Abbreviate journal names (MEDLINE)\",\n+    private final AbstractAction abbreviateMedline = new GeneralAction(Actions.ABBREVIATE_MEDLINE,\n+            Localization.menuTitle(\"Abbreviate journal names (MEDLINE)\"),\n             Localization.lang(\"Abbreviate journal names of the selected entries (MEDLINE abbreviation)\"));\n-    private final AbstractAction abbreviateIso = new GeneralAction(Actions.ABBREVIATE_ISO, \"Abbreviate journal names (ISO)\",\n+    private final AbstractAction abbreviateIso = new GeneralAction(Actions.ABBREVIATE_ISO,\n+            Localization.menuTitle(\"Abbreviate journal names (ISO)\"),\n             Localization.lang(\"Abbreviate journal names of the selected entries (ISO abbreviation)\"),\n             Globals.prefs.getKey(KeyBinds.ABBREVIATE));\n \n-    private final AbstractAction unabbreviate = new GeneralAction(Actions.UNABBREVIATE, \"Unabbreviate journal names\",\n+    private final AbstractAction unabbreviate = new GeneralAction(Actions.UNABBREVIATE,\n+            Localization.menuTitle(\"Unabbreviate journal names\"),\n             Localization.lang(\"Unabbreviate journal names of the selected entries\"),\n             Globals.prefs.getKey(KeyBinds.UNABBREVIATE));\n     private final AbstractAction manageJournals = new ManageJournalsAction(this);\n     private final AbstractAction databaseProperties = new DatabasePropertiesAction();\n     private final AbstractAction bibtexKeyPattern = new BibtexKeyPatternAction();\n     private final AbstractAction errorConsole = new ErrorConsoleAction(this, Globals.streamEavesdropper, Globals.handler);\n \n-    private final AbstractAction dbConnect = new GeneralAction(Actions.DB_CONNECT, \"Connect to external SQL database\",\n+    private final AbstractAction dbConnect = new GeneralAction(Actions.DB_CONNECT,\n+            Localization.menuTitle(\"Connect to external SQL database\"),\n             Localization.lang(\"Connect to external SQL database\"),\n             IconTheme.getImage(\"dbConnect\"));\n \n-    private final AbstractAction dbExport = new GeneralAction(Actions.DB_EXPORT, \"Export to external SQL database\",\n+    private final AbstractAction dbExport = new GeneralAction(Actions.DB_EXPORT,\n+            Localization.menuTitle(\"Export to external SQL database\"),\n             Localization.lang(\"Export to external SQL database\"),\n             IconTheme.getImage(\"dbExport\"));\n \n-    private final AbstractAction Cleanup = new GeneralAction(Actions.CLEANUP, \"Cleanup entries\",\n+    private final AbstractAction Cleanup = new GeneralAction(Actions.CLEANUP,\n+            Localization.menuTitle(\"Cleanup entries\"),\n             Localization.lang(\"Cleanup entries\"),\n             prefs.getKey(KeyBinds.CLEANUP),\n             IconTheme.getImage(\"cleanupentries\"));\n \n-    private final AbstractAction mergeEntries = new GeneralAction(Actions.MERGE_ENTRIES, \"Merge entries\",\n+    private final AbstractAction mergeEntries = new GeneralAction(Actions.MERGE_ENTRIES,\n+            Localization.menuTitle(\"Merge entries\"),\n             Localization.lang(\"Merge entries\"),\n             IconTheme.getImage(\"mergeentries\"));\n \n     private final AbstractAction dbImport = new DbImportAction(this).getAction();\n     private final AbstractAction increaseFontSize = new IncreaseTableFontSizeAction();\n     private final AbstractAction decreseFontSize = new DecreaseTableFontSizeAction();\n-    private final AbstractAction resolveDuplicateKeys = new GeneralAction(Actions.RESOLVE_DUPLICATE_KEYS, \"Resolve duplicate BibTeX keys\",\n+    private final AbstractAction resolveDuplicateKeys = new GeneralAction(Actions.RESOLVE_DUPLICATE_KEYS,\n+            Localization.menuTitle(\"Resolve duplicate BibTeX keys\"),\n             Localization.lang(\"Find and remove duplicate BibTeX keys\"),\n             prefs.getKey(KeyBinds.RESOLVE_DUPLICATE_BIB_TE_X_KEYS));\n \n@@ -446,7 +451,7 @@ public void actionPerformed(ActionEvent e) {\n \n     private final GeneralAction findUnlinkedFiles = new GeneralAction(\n             FindUnlinkedFilesDialog.ACTION_COMMAND,\n-            FindUnlinkedFilesDialog.ACTION_MENU_TITLE,\n+            Localization.menuTitle(FindUnlinkedFilesDialog.ACTION_MENU_TITLE),\n             Localization.lang(FindUnlinkedFilesDialog.ACTION_SHORT_DESCRIPTION),\n             prefs.getKey(FindUnlinkedFilesDialog.ACTION_KEYBINDING_ACTION),\n             IconTheme.getImage(\"toggleSearch\")\n@@ -1744,7 +1749,7 @@ public void actionPerformed(ActionEvent e) {\n      */\n     class CloseAction extends MnemonicAwareAction {\n         public CloseAction() {\n-            putValue(Action.NAME, \"Quit\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Quit\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Quit JabRef\"));\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Quit JabRef\"));\n         }\n@@ -1761,7 +1766,7 @@ public void actionPerformed(ActionEvent e) {\n     class CloseDatabaseAction extends MnemonicAwareAction {\n         public CloseDatabaseAction() {\n             super(IconTheme.getImage(\"close\"));\n-            putValue(Action.NAME, \"Close database\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Close database\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Close the current database\"));\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Close database\"));\n         }\n@@ -1831,7 +1836,7 @@ public void close() {\n \n         public ShowPrefsAction() {\n             super(IconTheme.getImage(\"preferences\"));\n-            putValue(Action.NAME, \"Preferences\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Preferences\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Preferences\"));\n         }\n \n@@ -2168,7 +2173,7 @@ public void run() {\n \n         public SaveSessionAction() {\n             super(IconTheme.getImage(\"save\"));\n-            putValue(Action.NAME, \"Save session\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Save session\"));\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Save session\"));\n         }\n \n@@ -2222,7 +2227,7 @@ public void actionPerformed(ActionEvent e) {\n \n         public LoadSessionAction() {\n             super(IconTheme.getImage(\"loadSession\"));\n-            putValue(Action.NAME, \"Load session\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Load session\"));\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Load session\"));\n         }\n \n@@ -2278,7 +2283,7 @@ public void run() {\n \n \n         public ChangeTabAction(boolean next) {\n-            putValue(Action.NAME, next ? \"Next tab\" : \"Previous tab\");\n+            putValue(Action.NAME, next ? Localization.menuTitle(\"Next tab\") : Localization.menuTitle(\"Previous tab\"));\n             this.next = next;\n             //Util.pr(\"\"+prefs.getKey(\"Next tab\"));\n             putValue(Action.ACCELERATOR_KEY,\n@@ -2334,7 +2339,7 @@ public void actionPerformed(ActionEvent e) {\n     class CustomizeExportsAction extends MnemonicAwareAction {\n \n         public CustomizeExportsAction() {\n-            putValue(Action.NAME, \"Manage custom exports\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Manage custom exports\"));\n         }\n \n         @Override\n@@ -2347,7 +2352,7 @@ public void actionPerformed(ActionEvent e) {\n     class CustomizeImportsAction extends MnemonicAwareAction {\n \n         public CustomizeImportsAction() {\n-            putValue(Action.NAME, \"Manage custom imports\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Manage custom imports\"));\n         }\n \n         @Override\n@@ -2360,7 +2365,7 @@ public void actionPerformed(ActionEvent e) {\n     class CustomizeEntryTypeAction extends MnemonicAwareAction {\n \n         public CustomizeEntryTypeAction() {\n-            putValue(Action.NAME, \"Customize entry types\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Customize entry types\"));\n         }\n \n         @Override\n@@ -2374,7 +2379,7 @@ public void actionPerformed(ActionEvent e) {\n     class GenFieldsCustomizationAction extends MnemonicAwareAction {\n \n         public GenFieldsCustomizationAction() {\n-            putValue(Action.NAME, \"Set up general fields\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Set up general fields\"));\n         }\n \n         @Override\n@@ -2392,7 +2397,7 @@ public void actionPerformed(ActionEvent e) {\n \n \n         public DatabasePropertiesAction() {\n-            putValue(Action.NAME, \"Database properties\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Database properties\"));\n         }\n \n         @Override\n@@ -2413,7 +2418,7 @@ public void actionPerformed(ActionEvent e) {\n \n \n         public BibtexKeyPatternAction() {\n-            putValue(Action.NAME, \"Bibtex key patterns\");\n+            putValue(Action.NAME, Localization.lang(\"Bibtex key patterns\"));\n         }\n \n         @Override\n@@ -2435,7 +2440,7 @@ public void actionPerformed(ActionEvent e) {\n     class IncreaseTableFontSizeAction extends MnemonicAwareAction {\n \n         public IncreaseTableFontSizeAction() {\n-            putValue(Action.NAME, \"Increase table font size\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Increase table font size\"));\n             putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Increase table font size\"));\n         }\n \n@@ -2454,7 +2459,7 @@ public void actionPerformed(ActionEvent event) {\n     class DecreaseTableFontSizeAction extends MnemonicAwareAction {\n \n         public DecreaseTableFontSizeAction() {\n-            putValue(Action.NAME, \"Decrease table font size\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Decrease table font size\"));\n             putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Decrease table font size\"));\n         }\n \n@@ -2476,7 +2481,7 @@ public void actionPerformed(ActionEvent event) {\n     class MinimizeToSysTrayAction extends MnemonicAwareAction {\n \n         public MinimizeToSysTrayAction() {\n-            putValue(Action.NAME, \"Minimize to system tray\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Minimize to system tray\"));\n             putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Minimize to system tray\"));\n         }\n , @@ -420,14 +420,14 @@ private void setupComparatorChooser() {\n \n         // Default sort order:\n         String[] sortFields = new String[] {\n-                Globals.prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD),\n-                Globals.prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD),\n-                Globals.prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD)\n+                Globals.prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD),\n+                Globals.prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD),\n+                Globals.prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD)\n         };\n         boolean[] sortDirections = new boolean[] {\n-                Globals.prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING),\n-                Globals.prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING),\n-                Globals.prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING)\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING),\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING),\n+                Globals.prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING)\n         }; // descending\n \n         sortedForTable.getReadWriteLock().writeLock().lock();\n@@ -460,24 +460,24 @@ public void actionPerformed(ActionEvent actionEvent) {\n                 // Update preferences:\n                 int count = Math.min(fields.size(), order.size());\n                 if (count >= 1) {\n-                    Globals.prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, fields.get(0));\n-                    Globals.prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, order.get(0));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD, fields.get(0));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING, order.get(0));\n                 }\n                 if (count >= 2) {\n-                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, fields.get(1));\n-                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, order.get(1));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, fields.get(1));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, order.get(1));\n                 }\n                 else {\n-                    Globals.prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, \"\");\n-                    Globals.prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, false);\n+                    Globals.prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, false);\n                 }\n                 if (count >= 3) {\n-                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, fields.get(2));\n-                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, order.get(2));\n+                    Globals.prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, fields.get(2));\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, order.get(2));\n                 }\n                 else {\n-                    Globals.prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, \"\");\n-                    Globals.prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, false);\n+                    Globals.prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, \"\");\n+                    Globals.prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, false);\n                 }\n             }\n , @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.gui;\n+package net.sf.jabref.gui.actions;\n \n /**\n  * BaseAction is used to define actions that are called from the, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.gui;\n+package net.sf.jabref.gui.actions;\n \n import java.io.File;\n import java.util.Arrays;\n@@ -32,6 +32,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.ExternalFileType;\n+import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.preftabs.ImportSettingsTab;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.importer.HTMLConverter;, @@ -1,4 +1,4 @@\n-package net.sf.jabref.gui;\n+package net.sf.jabref.gui.actions;\n \n import net.sf.jabref.logic.error.StreamEavesdropper;\n import net.sf.jabref.logic.l10n.Localization;, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.gui;\n+package net.sf.jabref.gui.actions;\n \n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -39,7 +39,7 @@ public MnemonicAwareAction(ImageIcon icon) {\n     @Override\n     public void putValue(String key, Object value) {\n         if (key.equals(Action.NAME)) {\n-            String name = Localization.menuTitle(value.toString());\n+            String name = value.toString();\n             int i = name.indexOf('&');\n             if (i >= 0) {\n                 char mnemonic = Character.toUpperCase(name.charAt(i + 1));, @@ -5,7 +5,6 @@\n import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n \n@@ -21,7 +20,7 @@\n     public NewDatabaseAction(JabRefFrame jabRefFrame) {\n         super(IconTheme.getImage(\"new\"));\n         this.jabRefFrame = jabRefFrame;\n-        putValue(Action.NAME, \"New database\");\n+        putValue(Action.NAME, Localization.menuTitle(\"New database\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"New BibTeX database\"));\n         //putValue(MNEMONIC_KEY, GUIGlobals.newKeyCode);\n     }, @@ -22,7 +22,7 @@ public NewEntryAction(JabRefFrame jabRefFrame, KeyStroke key) {\n         // This action leads to a dialog asking for entry type.\n         super(IconTheme.getImage(\"add\"));\n         this.jabRefFrame = jabRefFrame;\n-        putValue(Action.NAME, \"New entry\");\n+        putValue(Action.NAME, Localization.menuTitle(\"New entry\"));\n         putValue(Action.ACCELERATOR_KEY, key);\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"New BibTeX entry\"));\n     }, @@ -21,9 +21,8 @@\n     public NewSubDatabaseAction(JabRefFrame jabRefFrame) {\n         super(IconTheme.getImage(\"new\"));\n         this.jabRefFrame = jabRefFrame;\n-        putValue(Action.NAME, \"New subdatabase based on AUX file\");\n+        putValue(Action.NAME, Localization.menuTitle(\"New subdatabase based on AUX file\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"New BibTeX subdatabase\"));\n-        //putValue(MNEMONIC_KEY, GUIGlobals.newKeyCode);\n     }\n \n     @Override, @@ -13,7 +13,7 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.gui;\n+package net.sf.jabref.gui.actions;\n \n import java.awt.event.ActionEvent;\n import java.util.Comparator;\n@@ -22,6 +22,9 @@\n import javax.swing.Action;\n import javax.swing.JTabbedPane;\n \n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n \n /**\n@@ -34,7 +37,7 @@\n \n \n     public SortTabsAction(JabRefFrame frame) {\n-        putValue(Action.NAME, \"Sort tabs\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Sort tabs\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Rearrange tabs alphabetically by title\"));\n         this.frame = frame;\n     }, @@ -208,12 +208,8 @@ public EntryEditor(JabRefFrame frame, BasePanel panel, BibtexEntry entry) {\n     private void setupFieldPanels() {\n         tabbed.removeAll();\n         tabs.clear();\n-        String[] fields = entry.getRequiredFields();\n+        List<String> fieldList = entry.getRequiredFields();\n \n-        List<String> fieldList = null;\n-        if (fields != null) {\n-            fieldList = java.util.Arrays.asList(fields);\n-        }\n         EntryEditorTab reqPan = new EntryEditorTab(frame, panel, fieldList, this, true, false, Localization.lang(\"Required fields\"));\n         if (reqPan.fileListEditor != null) {\n             fileListEditor = reqPan.fileListEditor;\n@@ -222,10 +218,10 @@ private void setupFieldPanels() {\n                 .getPane(), Localization.lang(\"Show required fields\"));\n         tabs.add(reqPan);\n \n-        if (entry.getOptionalFields() != null && entry.getOptionalFields().length >= 1) {\n+        if (entry.getOptionalFields() != null && entry.getOptionalFields().size() >= 1) {\n             EntryEditorTab optPan;\n             if (!prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n-                optPan = new EntryEditorTab(frame, panel, java.util.Arrays.asList(entry.getOptionalFields()), this,\n+                optPan = new EntryEditorTab(frame, panel, entry.getOptionalFields(), this,\n                         false, false, Localization.lang(\"Optional fields\"));\n                 if (optPan.fileListEditor != null) {\n                     fileListEditor = optPan.fileListEditor;\n@@ -235,7 +231,7 @@ private void setupFieldPanels() {\n                 tabs.add(optPan);\n             } else {\n                 optPan = new EntryEditorTab(frame, panel,\n-                        java.util.Arrays.asList(entry.getType().getPrimaryOptionalFields()), this,\n+                        entry.getType().getPrimaryOptionalFields(), this,\n                         false, true, Localization.lang(\"Optional fields\"));\n                 if (optPan.fileListEditor != null) {\n                     fileListEditor = optPan.fileListEditor;\n@@ -247,8 +243,8 @@ private void setupFieldPanels() {\n                 Set<String> deprecatedFields = new HashSet<>(BibtexEntry.FIELD_ALIASES_OLD_TO_NEW.keySet());\n                 deprecatedFields.add(\"year\");\n                 deprecatedFields.add(\"month\");\n-                String[] secondaryOptionalFields = entry.getType().getSecondaryOptionalFields();\n-                String[] optionalFieldsNotPrimaryOrDeprecated = StringUtil.getRemainder(secondaryOptionalFields,\n+                List<String> secondaryOptionalFields = entry.getType().getSecondaryOptionalFields();\n+                String[] optionalFieldsNotPrimaryOrDeprecated = StringUtil.getRemainder((secondaryOptionalFields.toArray(new String[0])),\n                         deprecatedFields.toArray(new String[deprecatedFields.size()]));\n \n                 // Get list of all optional fields of this entry and their aliases, @@ -22,7 +22,10 @@\n import java.awt.event.ActionListener;\n import java.awt.event.MouseAdapter;\n import java.awt.event.MouseEvent;\n+import java.io.File;\n import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n \n import javax.swing.AbstractAction;\n import javax.swing.JButton;\n@@ -45,6 +48,7 @@\n import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.logic.util.io.FileUtil;\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.io.JabRefDesktop;\n@@ -73,7 +77,7 @@\n \n \n     public FileListEditor(JabRefFrame frame, MetaData metaData, String fieldName, String content,\n-            EntryEditor entryEditor) {\n+                          EntryEditor entryEditor) {\n         this.frame = frame;\n         this.metaData = metaData;\n         this.fieldName = fieldName;\n@@ -238,6 +242,35 @@ public void actionPerformed(ActionEvent e) {\n         JMenuItem moveToFileDir = new JMenuItem(Localization.lang(\"Move to file directory\"));\n         menu.add(moveToFileDir);\n         moveToFileDir.addActionListener(new MoveFileAction(frame, entryEditor, this, true));\n+\n+        JMenuItem deleteFile = new JMenuItem(Localization.lang(\"Delete local file\"));\n+        menu.add(deleteFile);\n+        deleteFile.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                int row = getSelectedRow();\n+                // no selection\n+                if (row == -1) {\n+                    return;\n+                }\n+\n+                FileListEntry entry = tableModel.getEntry(row);\n+                // null if file does not exist\n+                File file = FileUtil.expandFilename(metaData, entry.getLink());\n+\n+                // transactional delete and unlink\n+                try {\n+                    if(file != null) {\n+                        Files.delete(file.toPath());\n+                    }\n+                    removeEntries();\n+                } catch (IOException ex) {\n+                    JOptionPane.showMessageDialog(frame, Localization.lang(\"File permission error\"),\n+                            Localization.lang(\"Cannot delete file\"), JOptionPane.ERROR_MESSAGE);\n+                    LOGGER.warn(\"File permission error while deleting: \" + file.toPath());\n+                }\n+            }\n+        });\n     }\n \n     private void openSelectedFile() {\n@@ -367,7 +400,8 @@ private void moveEntry(int i) {\n \n     /**\n      * Open an editor for this entry.\n-     * @param entry The entry to edit.\n+     *\n+     * @param entry      The entry to edit.\n      * @param openBrowse True to indicate that a Browse dialog should be immediately opened.\n      * @return true if the edit was accepted, false if it was cancelled.\n      */\n@@ -434,6 +468,7 @@ private void downloadFile() {\n     /**\n      * This is the callback method that the DownloadExternalFile class uses to report the result\n      * of a download operation. This call may never come, if the user cancelled the operation.\n+     *\n      * @param file The FileListEntry linking to the resulting local file.\n      */\n     @Override\n@@ -453,8 +488,7 @@ public void mouseClicked(MouseEvent e) {\n                     FileListEntry entry = tableModel.getEntry(row);\n                     editListEntry(entry, false);\n                 }\n-            }\n-            else if (e.isPopupTrigger()) {\n+            } else if (e.isPopupTrigger()) {\n                 processPopupTrigger(e);\n             }\n         }, @@ -17,15 +17,14 @@\n \n import java.awt.Dimension;\n import java.awt.event.ActionEvent;\n-import java.net.URL;\n \n import javax.swing.Action;\n import javax.swing.ImageIcon;\n import javax.swing.JButton;\n import javax.swing.KeyStroke;\n \n import net.sf.jabref.gui.IconTheme;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n \n /**\n@@ -43,22 +42,22 @@\n \n     public HelpAction(HelpDialog diag, String helpFile) {\n         super(IconTheme.getImage(\"help\"));\n-        putValue(Action.NAME, \"Help\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Help\"));\n         this.diag = diag;\n         this.helpFile = helpFile;\n     }\n \n     public HelpAction(HelpDialog diag, String helpFile, String tooltip) {\n         super(IconTheme.getImage(\"help\"));\n-        putValue(Action.NAME, \"Help\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Help\"));\n         putValue(Action.SHORT_DESCRIPTION,tooltip);\n         this.diag = diag;\n         this.helpFile = helpFile;\n     }\n \n     public HelpAction(HelpDialog diag, String helpFile, String tooltip, ImageIcon iconFile) {\n         super(iconFile);\n-        putValue(Action.NAME, \"Help\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Help\"));\n         putValue(Action.SHORT_DESCRIPTION, tooltip);\n         this.diag = diag;\n         this.helpFile = helpFile;, @@ -15,8 +15,8 @@\n */\n package net.sf.jabref.gui.journals;\n \n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.undo.NamedCompound;\n@@ -49,7 +49,7 @@ public void run() {\n             return;\n         }\n \n-        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(Globals.journalAbbrev, iso);\n+        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(Abbreviations.journalAbbrev, iso);\n \n         NamedCompound ce = new NamedCompound(\"Abbreviate journal names\");\n         int count = 0;, @@ -2,8 +2,8 @@\n \n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.logic.journals.Abbreviation;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -39,7 +39,7 @@ public static JComponent getNameSwitcher(final EntryEditor entryEditor, final Fi\n             @Override\n             public void actionPerformed(ActionEvent actionEvent) {\n                 String text = editor.getText();\n-                if (Globals.journalAbbrev.isKnownName(text)) {\n+                if (Abbreviations.journalAbbrev.isKnownName(text)) {\n                     String s = toggleAbbreviation(text);\n \n                     if (s != null) {\n@@ -52,7 +52,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n             }\n \n             public String toggleAbbreviation(String currentText) {\n-                return Globals.journalAbbrev.getNextAbbreviation(currentText).orElse(currentText);\n+                return Abbreviations.journalAbbrev.getNextAbbreviation(currentText).orElse(currentText);\n             }\n         });\n , @@ -16,7 +16,8 @@\n package net.sf.jabref.gui.journals;\n \n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n \n import java.awt.event.ActionEvent;\n@@ -29,7 +30,7 @@\n \n     public ManageJournalsAction(JabRefFrame frame) {\n         super();\n-        putValue(Action.NAME, \"Manage journal abbreviations\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Manage journal abbreviations\"));\n         this.frame = frame;\n     }\n , @@ -36,6 +36,7 @@\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.journals.Abbreviation;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.gui.net.MonitoredURLDownload;\n \n@@ -172,8 +173,8 @@ public ManageJournalsPanel(final JabRefFrame frame) {\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 JournalAbbreviationRepository abbr = new JournalAbbreviationRepository();\n-                abbr.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-                JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Globals.journalAbbrev));\n+                abbr.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n+                JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Abbreviations.journalAbbrev));\n                 JScrollPane pane = new JScrollPane(table);\n                 JOptionPane.showMessageDialog(null, pane, Localization.lang(\"Journal list preview\"), JOptionPane.INFORMATION_MESSAGE);\n             }\n@@ -423,7 +424,7 @@ private void storeSettings() throws FileNotFoundException {\n             Globals.prefs.putStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS, list);\n         }\n \n-        Globals.initializeJournalNames();\n+        Abbreviations.initializeJournalNames(Globals.prefs);\n \n         // Update the autocompleter for the \"journal\" field in all base panels,\n         // so added journal names are available:\n@@ -658,7 +659,8 @@ public void actionPerformed(ActionEvent e) {\n                     try {\n                         JournalAbbreviationRepository abbr = new JournalAbbreviationRepository();\n                         abbr.readJournalListFromFile(new File(tf.getText()));\n-                        JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Globals.journalAbbrev));\n+\n+                        JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(abbr));\n                         JScrollPane pane = new JScrollPane(table);\n                         JOptionPane.showMessageDialog(null, pane, Localization.lang(\"Journal list preview\"), JOptionPane.INFORMATION_MESSAGE);\n                     } catch (FileNotFoundException ex) {, @@ -17,8 +17,8 @@\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -47,7 +47,7 @@ public void run() {\n             return;\n         }\n \n-        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbrev);\n+        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Abbreviations.journalAbbrev);\n \n         NamedCompound ce = new NamedCompound(\"Unabbreviate journal names\");\n         int count = 0;, @@ -36,6 +36,7 @@\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.gui.help.HelpDialog;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n \n import com.jgoodies.forms.builder.DefaultFormBuilder;\n@@ -233,8 +234,8 @@ public void storeSettings() {\n         UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n         preferences.putBoolean(JabRefPreferences.USE_IEEE_ABRV, useIEEEAbrv.isSelected());\n         if (useIEEEAbrv.isSelected()) {\n-            Globals.journalAbbrev = new JournalAbbreviationRepository();\n-            Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_IEEE_INTERNAL_LIST);\n+            Abbreviations.journalAbbrev = new JournalAbbreviationRepository();\n+            Abbreviations.journalAbbrev.readJournalListFromResource(Abbreviations.JOURNALS_IEEE_INTERNAL_LIST);\n         }\n         storeRemoteSettings();\n , @@ -285,7 +285,7 @@ public void storeSettings() {\n \n         if (!GUIGlobals.LANGUAGES.get(language.getSelectedItem()).equals(prefs.get(JabRefPreferences.LANGUAGE))) {\n             prefs.put(JabRefPreferences.LANGUAGE, GUIGlobals.LANGUAGES.get(language.getSelectedItem()));\n-            Localization.setLanguage(GUIGlobals.LANGUAGES.get(language.getSelectedItem()), \"\");\n+            Localization.setLanguage(GUIGlobals.LANGUAGES.get(language.getSelectedItem()));\n             // Update any defaults that might be language dependent:\n             Globals.prefs.setLanguageDependentDefaultValues();\n             // Warn about restart needed:, @@ -243,9 +243,9 @@ public void setValues() {\n         autoResizeMode\n                 .setSelected(prefs.getInt(JabRefPreferences.AUTO_RESIZE_MODE) == JTable.AUTO_RESIZE_ALL_COLUMNS);\n \n-        priField.setText(prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD));\n-        secField.setText(prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD));\n-        terField.setText(prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD));\n+        priField.setText(prefs.get(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD));\n+        secField.setText(prefs.get(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD));\n+        terField.setText(prefs.get(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD));\n         priSort.setSelectedIndex(0);\n         secSort.setSelectedIndex(0);\n         terSort.setSelectedIndex(0);\n@@ -266,9 +266,9 @@ public void setValues() {\n         } else {\n             noAbbrNames.setSelected(true);\n         }\n-        priDesc.setSelected(prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING));\n-        secDesc.setSelected(prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING));\n-        terDesc.setSelected(prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING));\n+        priDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING));\n+        secDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING));\n+        terDesc.setSelected(prefs.getBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING));\n \n         floatMarked.setSelected(prefs.getBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES));\n \n@@ -301,12 +301,12 @@ public void storeSettings() {\n \n         prefs.putInt(JabRefPreferences.AUTO_RESIZE_MODE,\n                 autoResizeMode.isSelected() ? JTable.AUTO_RESIZE_ALL_COLUMNS : JTable.AUTO_RESIZE_OFF);\n-        prefs.putBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING, priDesc.isSelected());\n-        prefs.putBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING, secDesc.isSelected());\n-        prefs.putBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING, terDesc.isSelected());\n-        prefs.put(JabRefPreferences.PRIMARY_SORT_FIELD, priField.getText().toLowerCase().trim());\n-        prefs.put(JabRefPreferences.SECONDARY_SORT_FIELD, secField.getText().toLowerCase().trim());\n-        prefs.put(JabRefPreferences.TERTIARY_SORT_FIELD, terField.getText().toLowerCase().trim());\n+        prefs.putBoolean(JabRefPreferences.TABLE_PRIMARY_SORT_DESCENDING, priDesc.isSelected());\n+        prefs.putBoolean(JabRefPreferences.TABLE_SECONDARY_SORT_DESCENDING, secDesc.isSelected());\n+        prefs.putBoolean(JabRefPreferences.TABLE_TERTIARY_SORT_DESCENDING, terDesc.isSelected());\n+        prefs.put(JabRefPreferences.TABLE_PRIMARY_SORT_FIELD, priField.getText().toLowerCase().trim());\n+        prefs.put(JabRefPreferences.TABLE_SECONDARY_SORT_FIELD, secField.getText().toLowerCase().trim());\n+        prefs.put(JabRefPreferences.TABLE_TERTIARY_SORT_FIELD, terField.getText().toLowerCase().trim());\n \n         prefs.putBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES, floatMarked.isSelected());\n         // updatefont, @@ -28,6 +28,7 @@\n import net.sf.jabref.groups.structure.AllEntriesGroup;\n import net.sf.jabref.groups.structure.ExplicitGroup;\n import net.sf.jabref.groups.GroupTreeNode;\n+import net.sf.jabref.gui.actions.BaseAction;\n import net.sf.jabref.model.database.KeyCollisionException;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;, @@ -29,7 +29,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.importer.fileformat.ImportFormat;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -88,8 +88,8 @@ public ImportAction(JabRefFrame frame, boolean openInNew) {\n                 this.frame = frame;\n                 this.openInNew = openInNew;\n \n-                putValue(Action.NAME, openInNew ? \"Import into new database\" :\n-                        \"Import into current database\");\n+                putValue(Action.NAME, openInNew ? Localization.menuTitle(\"Import into new database\") :\n+                        Localization.menuTitle(\"Import into current database\"));\n                 putValue(Action.ACCELERATOR_KEY, openInNew ? Globals.prefs.getKey(\"Import into new database\") :\n                         Globals.prefs.getKey(\"Import into current database\"));\n             }, @@ -32,6 +32,7 @@\n import net.sf.jabref.exporter.AutoSaveManager;\n import net.sf.jabref.exporter.SaveSession;\n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.migrations.FileLinksUpgradeWarning;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -74,7 +75,7 @@ public OpenDatabaseAction(JabRefFrame frame, boolean showDialog) {\n         super(IconTheme.getImage(\"open\"));\n         this.frame = frame;\n         this.showDialog = showDialog;\n-        putValue(Action.NAME, \"Open database\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Open database\"));\n         putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Open database\"));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Open BibTeX database\"));\n     }, @@ -54,6 +54,7 @@\n import net.sf.jabref.importer.*;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.logic.id.IdGenerator;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -527,7 +528,7 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n \n                 fullName = fullName.trim();\n                 if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n-                    fullName = Globals.journalAbbrev.getMedlineAbbreviation(fullName).orElse(fullName);\n+                    fullName = Abbreviations.journalAbbrev.getMedlineAbbreviation(fullName).orElse(fullName);\n                 }\n             }\n             if (type.getName().equals(\"Inproceedings\")) {, @@ -196,7 +196,7 @@ public JPanel getOptionsPanel() {\n \n     @Override\n     public String getTitle() {\n-        return Localization.menuTitle(getKeyName());\n+        return Localization.menuTitle(\"Fetch INSPIRE\");\n     }\n \n     /*, @@ -260,7 +260,7 @@ public JPanel getOptionsPanel() {\n \n     @Override\n     public String getTitle() {\n-        return Localization.menuTitle(getKeyName());\n+        return Localization.menuTitle(\"Fetch ArXiv.org\");\n     }\n \n     @Override, @@ -171,7 +171,7 @@ public JPanel getOptionsPanel() {\n \n     @Override\n     public String getTitle() {\n-        return Localization.menuTitle(getKeyName());\n+        return Localization.menuTitle(\"Fetch_SPIRES\");\n     }\n \n     /*, @@ -3,6 +3,7 @@\n import java.util.Map;\n import java.util.Vector;\n \n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n@@ -49,7 +50,7 @@ public void addContentSelectorValuesToAutoCompleters(MetaData metaData) {\n     public void addJournalListToAutoCompleter() {\n         AutoCompleter autoCompleter = get(\"journal\");\n         if(autoCompleter != null) {\n-            for(Abbreviation abbreviation : Globals.journalAbbrev.getAbbreviations()) {\n+            for(Abbreviation abbreviation : Abbreviations.journalAbbrev.getAbbreviations()) {\n                 autoCompleter.addWordToIndex(abbreviation.getName());\n             }\n         }, @@ -1,3 +1,20 @@\n+/*  Copyright (C) -2015 JabRef contributors.\n+    Copyright (C) 2015 Oliver Kopp\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.bibtex;\n \n import net.sf.jabref.gui.BibtexFields;\n@@ -8,6 +25,7 @@\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;\n+import net.sf.jabref.model.entry.BibtexEntryTypes;\n \n import java.io.IOException;\n import java.io.Writer;\n@@ -20,16 +38,25 @@\n      */\n     private static final Map<String, String> tagDisplayNameMap = new HashMap<>();\n \n+\n     static {\n         // The field name display map.\n         BibtexEntryWriter.tagDisplayNameMap.put(\"bibtexkey\", \"BibTeXKey\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"doi\", \"DOI\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"ee\", \"EE\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"howpublished\", \"HowPublished\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"lastchecked\", \"LastChecked\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"isbn\", \"ISBN\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"issn\", \"ISSN\");\n         BibtexEntryWriter.tagDisplayNameMap.put(\"UNKNOWN\", \"UNKNOWN\");\n+        BibtexEntryWriter.tagDisplayNameMap.put(\"url\", \"URL\");\n     }\n \n+    private static final Map<String, List<String>> requiredFieldsSorted = new HashMap<>();\n+\n+    private static final Map<String, List<String>> optionalFieldsSorted = new HashMap<>();\n+\n+\n     /**\n      * The maximum length of a field name to properly make the alignment of the\n      * equal sign.\n@@ -103,9 +130,9 @@ private void writeRequiredFieldsFirstOptionalFieldsSecondRemainingFieldsThird(Bi\n         // Thereby, write the title field first.\n         boolean hasWritten = writeField(entry, out, \"title\", false);\n         writtenFields.add(\"title\");\n-        String[] requiredFields = entry.getRequiredFields();\n-        if (requiredFields != null) {\n-            Arrays.sort(requiredFields); // Sorting in alphabetic order.\n+\n+        if (entry.getRequiredFields() != null) {\n+            List<String> requiredFields = getRequiredFieldsSorted(entry);\n             for (String value : requiredFields) {\n                 if (!writtenFields.contains(value)) { // If field appears both in req. and opt. don't repeat.\n                     hasWritten = hasWritten | writeField(entry, out, value, hasWritten);\n@@ -114,10 +141,9 @@ private void writeRequiredFieldsFirstOptionalFieldsSecondRemainingFieldsThird(Bi\n             }\n         }\n \n-        // Then optional fields.\n-        String[] optionalFields = entry.getOptionalFields();\n-        if (optionalFields != null) {\n-            Arrays.sort(optionalFields); // Sorting in alphabetic order.\n+        // Then optional fields\n+        if (entry.getOptionalFields() != null) {\n+            List<String> optionalFields = getOptionalFieldsSorted(entry);\n             for (String value : optionalFields) {\n                 if (!writtenFields.contains(value)) { // If field appears both in req. and opt. don't repeat.\n                     hasWritten = hasWritten | writeField(entry, out, value, hasWritten);\n@@ -144,6 +170,34 @@ private void writeRequiredFieldsFirstOptionalFieldsSecondRemainingFieldsThird(Bi\n         out.write((hasWritten ? Globals.NEWLINE : \"\") + '}' + Globals.NEWLINE);\n     }\n \n+    private List<String> getRequiredFieldsSorted(BibtexEntry entry) {\n+        String entryTypeName = entry.getType().getName();\n+        List<String> sortedFields = requiredFieldsSorted.get(entryTypeName);\n+\n+        // put into chache if necessary\n+        if (sortedFields == null) {\n+            sortedFields = new ArrayList(entry.getRequiredFields());\n+            Collections.sort(sortedFields);\n+            requiredFieldsSorted.put(entryTypeName, sortedFields);\n+        }\n+\n+        return sortedFields;\n+    }\n+\n+    private List<String> getOptionalFieldsSorted(BibtexEntry entry) {\n+        String entryTypeName = entry.getType().getName();\n+        List<String> sortedFields = optionalFieldsSorted.get(entryTypeName);\n+\n+        // put into chache if necessary\n+        if (sortedFields == null) {\n+            sortedFields = new ArrayList(entry.getOptionalFields());\n+            Collections.sort(sortedFields);\n+            optionalFieldsSorted.put(entryTypeName, sortedFields);\n+        }\n+\n+        return sortedFields;\n+    }\n+\n     /**\n      * old style ver<=2.9.2, write fields in the order of requiredFields, optionalFields and other fields, but does not sort the fields.\n      *\n@@ -161,7 +215,7 @@ private void writeRequiredFieldsFirstRemainingFieldsSecond(BibtexEntry entry, Wr\n         written.add(BibtexEntry.KEY_FIELD);\n         boolean hasWritten = false;\n         // Write required fields first.\n-        String[] fields = entry.getRequiredFields();\n+        List<String> fields = entry.getRequiredFields();\n         if (fields != null) {\n             for (String value : fields) {\n                 hasWritten = hasWritten | writeField(entry, out, value, hasWritten);, @@ -70,7 +70,7 @@ public static boolean isDuplicate(BibtexEntry one, BibtexEntry two) {\n         }\n \n         // The check if they have the same required fields:\n-        String[] fields = one.getType().getRequiredFields();\n+        String[] fields = one.getType().getRequiredFields().toArray(new String[0]);\n         double[] req;\n         if (fields == null) {\n             req = new double[]{0., 0.};\n@@ -83,7 +83,7 @@ public static boolean isDuplicate(BibtexEntry one, BibtexEntry two) {\n             return req[0] >= DuplicateCheck.duplicateThreshold;\n         } else {\n             // Close to the threshold value, so we take a look at the optional fields, if any:\n-            fields = one.getType().getOptionalFields();\n+            fields = one.getType().getOptionalFields().toArray(new String[0]);\n             if (fields != null) {\n                 double[] opt = DuplicateCheck.compareFieldSet(fields, one, two);\n                 double totValue = (DuplicateCheck.reqWeight * req[0] * req[1] + opt[0] * opt[1]) / (req[1] * DuplicateCheck.reqWeight + opt[1]);, @@ -0,0 +1,53 @@\n+package net.sf.jabref.logic.journals;\n+\n+import net.sf.jabref.JabRefPreferences;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+\n+public class Abbreviations {\n+\n+    private static final Log LOGGER = LogFactory.getLog(Abbreviations.class);\n+\n+    // journal initialization\n+    public static final String JOURNALS_FILE_BUILTIN = \"/journals/journalList.txt\";\n+    public static final String JOURNALS_IEEE_INTERNAL_LIST = \"/journals/IEEEJournalList.txt\";\n+    public static JournalAbbreviationRepository journalAbbrev;\n+\n+    public static void initializeJournalNames(JabRefPreferences jabRefPreferences) {\n+        // Read internal lists:\n+        journalAbbrev = new JournalAbbreviationRepository();\n+        journalAbbrev.readJournalListFromResource(JOURNALS_FILE_BUILTIN);\n+        if (jabRefPreferences.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n+            journalAbbrev.readJournalListFromResource(JOURNALS_IEEE_INTERNAL_LIST);\n+        }\n+\n+        // Read external lists, if any (in reverse order, so the upper lists\n+        // override the lower):\n+        String[] lists = jabRefPreferences.getStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS);\n+        if (lists != null && lists.length > 0) {\n+            for (int i = lists.length - 1; i >= 0; i--) {\n+                String filename = lists[i];\n+                try {\n+                    journalAbbrev.readJournalListFromFile(new File(filename));\n+                } catch (FileNotFoundException e) {\n+                    // The file couldn't be found... should we tell anyone?\n+                    LOGGER.info(\"Cannot find external journal list file \" + filename, e);\n+                }\n+            }\n+        }\n+\n+        // Read personal list, if set up:\n+        String personalJournalList = jabRefPreferences.get(JabRefPreferences.PERSONAL_JOURNAL_LIST);\n+        if (personalJournalList != null) {\n+            try {\n+                journalAbbrev.readJournalListFromFile(new File(personalJournalList));\n+            } catch (FileNotFoundException e) {\n+                LOGGER.info(\"Personal journal list file '\" + personalJournalList + \"' not found.\", e);\n+            }\n+        }\n+\n+    }\n+}, @@ -45,6 +45,7 @@ public void readJournalListFromResource(String resource) {\n     }\n \n     public void readJournalListFromFile(File file) throws FileNotFoundException {\n+        LOGGER.debug(\"Reading journal list from file \" + file);\n         AbbreviationParser parser = new AbbreviationParser();\n         parser.readJournalListFromFile(Objects.requireNonNull(file));\n         for (Abbreviation abbreviation : parser.getAbbreviations()) {, @@ -9,36 +9,40 @@\n public class Localization {\n     private static final Log LOGGER = LogFactory.getLog(Localization.class);\n \n-    private static final String RESOURCE_PREFIX = \"l10n/JabRef\";\n-    private static final String MENU_RESOURCE_PREFIX = \"l10n/Menu\";\n-    private static final String INTEGRITY_RESOURCE_PREFIX = \"l10n/IntegrityMessage\";\n+    private static final Locale defaultLocale = Locale.getDefault();\n+\n+    public static final String RESOURCE_PREFIX = \"l10n/JabRef\";\n+    public static final String MENU_RESOURCE_PREFIX = \"l10n/Menu\";\n+    public static final String INTEGRITY_RESOURCE_PREFIX = \"l10n/IntegrityMessage\";\n \n     private static ResourceBundle messages;\n     private static ResourceBundle menuTitles;\n     private static ResourceBundle intMessages;\n \n-    public static void setLanguage(String language, String country) {\n-        Locale locale = new Locale(language, country);\n-\n-        messages = ResourceBundle.getBundle(RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n-        menuTitles = ResourceBundle.getBundle(MENU_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n-        intMessages = ResourceBundle.getBundle(INTEGRITY_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n-\n-        // these checks are required as when the requested resource bundle is NOT found, the default locale is used as a fallback silently.\n-        if(!messages.getLocale().equals(locale)) {\n-            LOGGER.warn(\"tried loading <\" + RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back on default locale <\" + Locale.getDefault() + \">\");\n-        }\n+    public static void setLanguage(String language) {\n+        Locale locale = new Locale(language);\n \n-        if(!menuTitles.getLocale().equals(locale)) {\n-            LOGGER.warn(\"tried loading <\" + MENU_RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back on default locale <\" + Locale.getDefault() + \">\");\n-        }\n+        try {\n+            messages = ResourceBundle.getBundle(RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n+            menuTitles = ResourceBundle.getBundle(MENU_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n+            intMessages = ResourceBundle.getBundle(INTEGRITY_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n \n-        if(!intMessages.getLocale().equals(locale)) {\n-            LOGGER.warn(\"tried loading <\" + INTEGRITY_RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back on default locale <\" + Locale.getDefault() + \">\");\n+            // silent fallback to system locale when bundle is not found\n+            if(!messages.getLocale().equals(locale)) {\n+                LOGGER.warn(\"Bundle for locale <\" + locale + \"> not found. Falling back to system locale <\" + defaultLocale + \">\");\n+            }\n+        } catch(MissingResourceException e) {\n+            LOGGER.warn(\"Bundle for locale <\" + locale + \"> not found. Fallback to system locale <\" + defaultLocale + \"> failed, using locale <en> instead\");\n+\n+            locale = new Locale(\"en\");\n+            messages = ResourceBundle.getBundle(RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n+            menuTitles = ResourceBundle.getBundle(MENU_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n+            intMessages = ResourceBundle.getBundle(INTEGRITY_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n+        } finally {\n+            // Set consistent VM locales\n+            Locale.setDefault(locale);\n+            javax.swing.JComponent.setDefaultLocale(locale);\n         }\n-\n-        Locale.setDefault(locale);\n-        javax.swing.JComponent.setDefaultLocale(locale);\n     }\n \n     public static String lang(String key, String... params) {, @@ -3,22 +3,28 @@\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.logic.util.OS;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n+import java.nio.file.DirectoryNotEmptyException;\n+import java.nio.file.Files;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Paths;\n import java.util.ArrayList;\n \n public class FileUtil {\n+    private static final Log LOGGER = LogFactory.getLog(FileUtil.class);\n \n     /**\n      * Returns the extension of a file or null if the file does not have one (no . in name).\n      *\n      * @param file\n-     *\n      * @return The extension, trimmed and in lowercase.\n      */\n     public static String getFileExtension(File file) {\n@@ -34,16 +40,13 @@ public static String getFileExtension(File file) {\n     /**\n      * Copies a file.\n      *\n-     * @param source\n-     *            File Source file\n-     * @param dest\n-     *            File Destination file\n-     * @param deleteIfExists\n-     *            boolean Determines whether the copy goes on even if the file\n-     *            exists.\n-     * @throws IOException\n+     * @param source         File Source file\n+     * @param dest           File Destination file\n+     * @param deleteIfExists boolean Determines whether the copy goes on even if the file\n+     *                       exists.\n      * @return boolean Whether the copy succeeded, or was stopped due to the\n-     *         file already existing.\n+     * file already existing.\n+     * @throws IOException\n      */\n     public static boolean copyFile(File source, File dest, boolean deleteIfExists) throws IOException {\n \n@@ -78,7 +81,6 @@ public static boolean copyFile(File source, File dest, boolean deleteIfExists) t\n     }\n \n     /**\n-     *\n      * @param fileName\n      * @param destFilename\n      * @return\n@@ -97,17 +99,15 @@ public static boolean renameFile(String fileName, String destFilename) {\n     /**\n      * Converts a relative filename to an absolute one, if necessary. Returns\n      * null if the file does not exist.<br/>\n-     *\n+     * <p>\n      * Uses <ul>\n      * <li>the default directory associated with the extension of the file</li>\n      * <li>the standard file directory</li>\n      * <li>the directory of the bib file</li>\n      * </ul>\n      *\n-     * @param metaData\n-     *            The MetaData for the database this file belongs to.\n-     * @param name\n-     *            The file name, may also be a relative path to the file\n+     * @param metaData The MetaData for the database this file belongs to.\n+     * @param name     The file name, may also be a relative path to the file\n      */\n     public static File expandFilename(final MetaData metaData, String name) {\n         int pos = name.lastIndexOf('.');\n@@ -136,7 +136,7 @@ public static File expandFilename(final MetaData metaData, String name) {\n     /**\n      * Converts a relative filename to an absolute one, if necessary. Returns\n      * null if the file does not exist.\n-     *\n+     * <p>\n      * Will look in each of the given dirs starting from the beginning and\n      * returning the first found file to match if any.\n      */\n@@ -206,12 +206,12 @@ public static File expandFilename(String name, String dir) {\n     /**\n      * Converts an absolute filename to a relative one, if necessary.\n      * Returns the parameter fileName itself if no shortening is possible\n-     *\n+     * <p>\n      * This method works correctly only if dirs are sorted decent in their length\n      * i.e. /home/user/literature/important before /home/user/literature\n      *\n      * @param fileName the file name to be shortened\n-     * @param dirs directories to check.\n+     * @param dirs     directories to check.\n      */\n     public static File shortenFileName(File fileName, String[] dirs) {\n         if (fileName == null || fileName.length() == 0) {, @@ -17,6 +17,10 @@\n \n import net.sf.jabref.model.database.BibtexDatabase;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n /**\n  * This class defines entry types for BibLatex support.\n  */\n@@ -29,35 +33,32 @@\n             \"issuetitle\", \"issuesubtitle\", \"origlanguage\", \"version\", \"addendum\"\n \n      */\n-\t\n-    public static final BibtexEntryType ARTICLE = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Article\";\n-        }\n+    public static final BibtexEntryType ARTICLE = new BibtexEntryType() {\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"journaltitle\", \"date\"};\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"editor\", \"series\", \"volume\", \"number\", \"eid\", \"issue\", \"pages\", \"note\", \"issn\",\n+                \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"translator\", \"annotator\", \"commentator\", \"subtitle\", \"titleaddon\",\n+        {\n+            addAllOptional(\"translator\", \"annotator\", \"commentator\", \"subtitle\", \"titleaddon\",\n                     \"editor\", \"editora\", \"editorb\", \"editorc\", \"journalsubtitle\", \"issuetitle\",\n                     \"issuesubtitle\", \"language\", \"origlanguage\", \"series\", \"volume\", \"number\",\n                     \"eid\", \"issue\", \"month\", \"year\", \"pages\", \"version\", \"note\", \"issn\",\n                     \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\",\n-                    \"urldate\"};\n+                    \"urldate\");\n+            addAllRequired(\"author\", \"title\", \"journaltitle\", \"date\");\n+        }\n+\n+        @Override\n+        public String getName() {\n+            return \"Article\";\n         }\n \n         // TODO: number vs issue?\n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"editor\", \"series\", \"volume\", \"number\",\n-                    \"eid\", \"issue\", \"pages\", \"note\", \"issn\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -68,32 +69,30 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType BOOK = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Book\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"editor\",\n+                \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\", \"maintitleaddon\", \"volume\", \"edition\",\n+                \"publisher\", \"isbn\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\",\n+                \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editor\", \"editora\", \"editorb\", \"editorc\", \"translator\",\n+        {\n+            addAllOptional(\"editor\", \"editora\", \"editorb\", \"editorc\", \"translator\",\n                     \"annotator\", \"commentator\", \"introduction\",\n                     \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n                     \"maintitleaddon\", \"language\", \"origlanguage\", \"volume\", \"part\",\n                     \"edition\", \"volumes\", \"series\", \"number\", \"month\", \"year\", \"note\", \"publisher\",\n                     \"location\", \"isbn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n+            addAllRequired(\"author\", \"title\", \"date\");\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"editor\", \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"volume\", \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Book\";\n+        }\n+\n+        @Override\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -104,33 +103,31 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType INBOOK = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"InBook\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"booktitle\", \"date\"};\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\n+                \"bookauthor\", \"editor\", \"subtitle\", \"titleaddon\", \"maintitle\",\n+                \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n+                \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"bookauthor\", \"editor\", \"editora\", \"editorb\", \"editorc\",\n+        {\n+            addAllOptional(\"bookauthor\", \"editor\", \"editora\", \"editorb\", \"editorc\",\n                     \"translator\", \"annotator\", \"commentator\", \"introduction\", \"foreword\", \"afterword\",\n                     \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\", \"maintitleaddon\",\n                     \"booksubtitle\", \"booktitleaddon\", \"language\", \"origlanguage\", \"volume\", \"part\",\n                     \"edition\", \"volumes\", \"series\", \"number\", \"note\", \"publisher\", \"location\", \"isbn\",\n                     \"chapter\", \"pages\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n+                    \"eprinttype\", \"url\", \"urldate\", \"year\");\n+            addAllRequired(\"author\", \"title\", \"booktitle\", \"date\");\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"bookauthor\", \"editor\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"InBook\";\n+        }\n+\n+        @Override\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -148,17 +145,17 @@ public String getName() {\n \n         // Same fields as \"INBOOK\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.INBOOK.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.INBOOK.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.INBOOK.getPrimaryOptionalFields();\n         }\n \n@@ -177,17 +174,17 @@ public String getName() {\n \n         // Same fields as \"INBOOK\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.INBOOK.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.INBOOK.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.INBOOK.getPrimaryOptionalFields();\n         }\n \n@@ -199,27 +196,25 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType BOOKLET = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Booklet\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"howpublished\", \"chapter\", \"pages\", \"doi\", \"eprint\",\n+                \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\", \"note\",\n+                    \"location\", \"chapter\", \"year\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\",\n+                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\", \"note\",\n-                    \"location\", \"chapter\", \"year\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Booklet\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"chapter\", \"pages\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -230,32 +225,30 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType COLLECTION = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Collection\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\n+                \"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n+                \"mainsubtitle\", \"maintitleaddon\", \"volume\",\n+                \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n+        {\n+            addAllRequired(\"editor\", \"title\", \"date\");\n+            addAllOptional(\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n                     \"commentator\", \"introduction\", \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\",\n                     \"maintitle\", \"mainsubtitle\", \"maintitleaddon\", \"language\", \"origlanguage\", \"volume\",\n                     \"part\", \"edition\", \"volumes\", \"series\", \"number\", \"note\", \"publisher\", \"location\", \"isbn\",\n                     \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n+                    \"eprinttype\", \"url\", \"urldate\", \"year\");\n+        }\n+\n+        @Override\n+        public String getName() {\n+            return \"Collection\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -266,32 +259,30 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType INCOLLECTION = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"InCollection\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"booktitle\", \"date\"};\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\n+                \"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n+                \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n+                \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"booktitle\", \"date\");\n+            addAllOptional(\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n                     \"commentator\", \"introduction\", \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\",\n                     \"maintitle\", \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\",\n                     \"language\", \"origlanguage\", \"volume\", \"part\", \"edition\", \"volumes\", \"series\", \"number\",\n                     \"note\", \"publisher\", \"location\", \"isbn\", \"chapter\", \"pages\", \"addendum\", \"pubstate\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\", \"year\"};\n+                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\", \"year\");\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"InCollection\";\n+        }\n+\n+        @Override\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -309,17 +300,17 @@ public String getName() {\n \n         // Treated as alias of \"INCOLLECTION\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getPrimaryOptionalFields();\n         }\n \n@@ -331,29 +322,27 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType MANUAL = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Manual\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"edition\", \"publisher\", \"isbn\", \"chapter\",\n+                \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"edition\", \"type\", \"series\",\n+                    \"number\", \"version\", \"note\", \"organization\", \"publisher\", \"location\", \"isbn\", \"chapter\",\n+                    \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n+                    \"eprinttype\", \"url\", \"urldate\", \"year\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"edition\", \"type\", \"series\",\n-                    \"number\", \"version\", \"note\", \"organization\", \"publisher\", \"location\", \"isbn\", \"chapter\",\n-                    \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n+        public String getName() {\n+            return \"Manual\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"edition\", \"publisher\", \"isbn\", \"chapter\",\n-                    \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -364,27 +353,25 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType MISC = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Misc\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"howpublished\", \"location\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\",\n+                    \"version\", \"note\", \"organization\", \"location\", \"month\", \"year\", \"addendum\",\n+                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\",\n-                    \"version\", \"note\", \"organization\", \"location\", \"month\", \"year\", \"addendum\",\n-                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Misc\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"location\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -395,25 +382,24 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType ONLINE = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Online\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"note\", \"organization\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\", \"url\"};\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"date\", \"url\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"version\", \"note\",\n+                    \"organization\", \"month\", \"year\", \"addendum\", \"pubstate\", \"urldate\");\n         }\n \n+\n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"version\", \"note\",\n-                    \"organization\", \"month\", \"year\", \"addendum\", \"pubstate\", \"urldate\"};\n+        public String getName() {\n+            return \"Online\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"note\", \"organization\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -424,27 +410,24 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType PATENT = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Patent\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"holder\",\n+                \"subtitle\", \"titleaddon\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"number\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"title\", \"number\", \"date\");\n+            addAllOptional(\"holder\", \"subtitle\", \"titleaddon\", \"type\", \"version\", \"location\", \"note\",\n+                    \"month\", \"year\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n+                    \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"holder\", \"subtitle\", \"titleaddon\", \"type\", \"version\", \"location\", \"note\",\n-                    \"month\", \"year\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Patent\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"holder\", \"subtitle\", \"titleaddon\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -455,28 +438,26 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType PERIODICAL = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Periodical\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"issuetitle\", \"issuesubtitle\", \"issn\", \"doi\", \"eprint\", \"eprintclass\",\n+                \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n+        {\n+            addAllRequired(\"editor\", \"title\", \"date\");\n+            addAllOptional(\"editora\", \"editorb\", \"editorc\", \"subtitle\", \"issuetitle\",\n+                    \"issuesubtitle\", \"language\", \"series\", \"volume\", \"number\", \"issue\", \"month\", \"year\",\n+                    \"note\", \"issn\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\",\n+                    \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"subtitle\", \"issuetitle\",\n-                    \"issuesubtitle\", \"language\", \"series\", \"volume\", \"number\", \"issue\", \"month\", \"year\",\n-                    \"note\", \"issn\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\",\n-                    \"urldate\"};\n+        public String getName() {\n+            return \"Periodical\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"issuetitle\", \"issuesubtitle\", \"issn\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -494,17 +475,17 @@ public String getName() {\n \n         // Treated as alias of \"ARTICLE\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.ARTICLE.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.ARTICLE.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.ARTICLE.getPrimaryOptionalFields();\n         }\n \n@@ -516,30 +497,28 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType PROCEEDINGS = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Proceedings\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n+                \"maintitleaddon\", \"eventtitle\", \"volume\", \"publisher\", \"isbn\", \"chapter\", \"pages\",\n+                \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n+        {\n+            addAllRequired(\"editor\", \"title\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n                     \"maintitleaddon\", \"eventtitle\", \"eventdate\", \"venue\", \"language\", \"volume\", \"part\",\n                     \"volumes\", \"series\", \"number\", \"note\", \"organization\", \"publisher\", \"location\", \"month\",\n                     \"year\", \"isbn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"eventtitle\", \"volume\", \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Proceedings\";\n+        }\n+\n+        @Override\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -550,31 +529,29 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType INPROCEEDINGS = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"InProceedings\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n+                \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"eventtitle\", \"volume\",\n+                \"publisher\", \"isbn\", \"chapter\", \"pages\",\n+                \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"booktitle\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n+        {\n+            addAllRequired(\"author\", \"editor\", \"title\", \"booktitle\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n                     \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"eventtitle\", \"eventdate\", \"venue\",\n                     \"language\", \"volume\", \"part\", \"volumes\", \"series\", \"number\", \"note\", \"organization\",\n                     \"publisher\", \"location\", \"month\", \"year\", \"isbn\", \"chapter\", \"pages\", \"addendum\",\n-                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"eventtitle\", \"volume\",\n-                    \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"InProceedings\";\n+        }\n+\n+        @Override\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -592,17 +569,17 @@ public String getName() {\n \n         // Treated as alias of \"COLLECTION\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.COLLECTION.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.COLLECTION.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.COLLECTION.getPrimaryOptionalFields();\n         }\n \n@@ -621,17 +598,17 @@ public String getName() {\n \n         // Treated as alias of \"INCOLLECTION\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.INCOLLECTION.getPrimaryOptionalFields();\n         }\n \n@@ -643,27 +620,25 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType REPORT = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Report\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"doi\",\n+                \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"type\", \"institution\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"title\", \"type\", \"institution\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"number\", \"version\", \"note\",\n+                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\",\n+                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"number\", \"version\", \"note\",\n-                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Report\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -674,54 +649,13 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType SET = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Set\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"entryset\", \"crossref\"};\n-        }\n-\n-        // These are all the standard entry fields, custom fields and field aliases not included:\n-        /* Optional fields left out since they take up too much space - I think the set type is mainly supposed\n-           to fall back on content from the entries contained in the set, so only the required fields are included.*/\n-        @Override\n-        public String[] getOptionalFields() {\n-            return null;\n-            /*return new String[] {\"abstract\", \"addendum\", \"afterword\", \"annotation\", \"annotator\", \"author\", \"authortype\",\n-            \t \"bookauthor\", \"bookpagination\", \"booksubtitle\", \"booktitle\", \"booktitleaddon\",\n-            \t \"chapter\", \"commentator\", \"date\", \"doi\", \"edition\", \"editor\", \"editora\", \"editorb\",\n-            \t \"editorc\", \"editortype\", \"editoratype\", \"editorbtype\", \"editorctype\", \"eid\", \"eprint\",\n-            \t \"eprintclass\", \"eprinttype\", \"eventdate\", \"eventtitle\", \"file\", \"foreword\", \"holder\",\n-            \t \"howpublished\", \"indextitle\", \"insitution\", \"introduction\", \"isan\", \"isbn\", \"ismn\",\n-            \t \"isrn\", \"issn\", \"issue\", \"issuesubtitle\", \"issuetitle\", \"iswc\", \"journalsubtitle\",\n-            \t \"journaltitle\", \"label\", \"language\", \"library\", \"location\", \"mainsubtitle\",\n-            \t \"maintitle\", \"maintitleaddon\", \"month\", \"nameaddon\", \"note\", \"number\", \"organization\",\n-            \t \"origdate\", \"origlanguage\", \"origlocation\", \"origpublisher\", \"origtitle\", \"pages\",\n-            \t \"pagetotal\", \"pagination\", \"part\", \"publisher\", \"pubstate\", \"reprinttitle\", \"series\",\n-            \t \"shortauthor\", \"shorteditor\", \"shorthand\", \"shorthandintro\", \"shortjournal\",\n-            \t \"shortseries\", \"shorttitle\", \"subtitle\", \"title\", \"titleaddon\", \"translator\", \"type\",\n-            \t \"url\", \"urldate\", \"venue\", \"version\", \"volume\", \"volumes\", \"year\", \"crossref\",\n-            \t \"entryset\", \"entrysubtype\", \"execute\", \"gender\", \"hyphenation\", \"indexsorttitle\",\n-            \t \"keywords\", \"options\", \"presort\", \"sortkey\", \"sortname\", \"sorttitle\", \"sortyear\",\n-            \t \"xref\"};*/\n+        {\n+            addAllRequired(\"entryset\", \"crossref\");\n         }\n \n-        // These are just appr. the first half of the above fields:\n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return null;\n-            /*return new String[] {\"abstract\", \"addendum\", \"afterword\", \"annotation\", \"annotator\", \"author\", \"authortype\",\n-            \t \"bookauthor\", \"bookpagination\", \"booksubtitle\", \"booktitle\", \"booktitleaddon\",\n-            \t \"chapter\", \"commentator\", \"date\", \"doi\", \"edition\", \"editor\", \"editora\", \"editorb\",\n-            \t \"editorc\", \"editortype\", \"editoratype\", \"editorbtype\", \"editorctype\", \"eid\", \"eprint\",\n-            \t \"eprintclass\", \"eprinttype\", \"eventdate\", \"eventtitle\", \"file\", \"foreword\", \"holder\",\n-            \t \"howpublished\", \"indextitle\", \"insitution\", \"introduction\", \"isan\", \"isbn\", \"ismn\",\n-            \t \"isrn\", \"issn\", \"issue\", \"issuesubtitle\", \"issuetitle\", \"iswc\", \"journalsubtitle\",\n-            \t \"journaltitle\", \"label\", \"language\", \"library\", \"location\", \"mainsubtitle\",\n-            \t \"maintitle\", \"maintitleaddon\", \"month\", \"nameaddon\"};*/\n+        public String getName() {\n+            return \"Set\";\n         }\n \n         @Override\n@@ -732,27 +666,25 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType THESIS = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Thesis\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n+                \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"type\", \"institution\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"title\", \"type\", \"institution\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"note\", \"location\", \"month\", \"year\",\n+                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n+                    \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Thesis\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -763,25 +695,23 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType UNPUBLISHED = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"Unpublished\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"howpublished\", \"pubstate\", \"url\", \"urldate\"}));\n \n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"date\"};\n+        {\n+            addAllRequired(\"author\", \"title\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"note\",\n+                    \"location\", \"month\", \"year\", \"addendum\", \"pubstate\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"note\",\n-                    \"location\", \"month\", \"year\", \"addendum\", \"pubstate\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"Unpublished\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"pubstate\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -801,17 +731,17 @@ public String getName() {\n \n         // Treated as alias of \"INPROCEEDINGS\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.INPROCEEDINGS.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.INPROCEEDINGS.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.INPROCEEDINGS.getPrimaryOptionalFields();\n         }\n \n@@ -830,17 +760,17 @@ public String getName() {\n \n         // Treated as alias of \"ONLINE\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.ONLINE.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.ONLINE.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.ONLINE.getPrimaryOptionalFields();\n         }\n \n@@ -852,28 +782,27 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType MASTERSTHESIS = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"MastersThesis\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n+                \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        // Treated as alias of \"THESIS\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n+        {\n+            // Treated as alias of \"THESIS\", except \"type\" field is optional\n+            addAllRequired(\"author\", \"title\", \"institution\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n+                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n+                    \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"MastersThesis\";\n         }\n \n+\n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -884,28 +813,26 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType PHDTHESIS = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"PhdThesis\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n+                \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        // Treated as alias of \"THESIS\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n+        {\n+            // Treated as alias of \"THESIS\", except \"type\" field is optional\n+            addAllRequired(\"author\", \"title\", \"institution\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n+                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n+                    \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"PhdThesis\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -916,28 +843,26 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n \n     public static final BibtexEntryType TECHREPORT = new BibtexEntryType() {\n \n-        @Override\n-        public String getName() {\n-            return \"TechReport\";\n-        }\n+        private List<String> primaryOptionalFields = Collections.unmodifiableList(Arrays.asList(new String[]{\"subtitle\",\n+                \"titleaddon\", \"type\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\",\n+                \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"}));\n \n-        // Treated as alias of \"REPORT\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n+        {\n+            // Treated as alias of \"REPORT\", except \"type\" field is optional\n+            addAllRequired(\"author\", \"title\", \"institution\", \"date\");\n+            addAllOptional(\"subtitle\", \"titleaddon\", \"type\", \"language\", \"number\", \"version\", \"note\",\n+                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\",\n+                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\");\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"number\", \"version\", \"note\",\n-                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public String getName() {\n+            return \"TechReport\";\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n+        public List<String> getPrimaryOptionalFields() {\n+            return primaryOptionalFields;\n         }\n \n         @Override\n@@ -955,17 +880,17 @@ public String getName() {\n \n         // Treated as alias of \"ONLINE\" according to Biblatex 1.0: \n         @Override\n-        public String[] getRequiredFields() {\n+        public List<String> getRequiredFields() {\n             return BibLatexEntryTypes.ONLINE.getRequiredFields();\n         }\n \n         @Override\n-        public String[] getOptionalFields() {\n+        public List<String> getOptionalFields() {\n             return BibLatexEntryTypes.ONLINE.getOptionalFields();\n         }\n \n         @Override\n-        public String[] getPrimaryOptionalFields() {\n+        public List<String> getPrimaryOptionalFields() {\n             return BibLatexEntryTypes.ONLINE.getPrimaryOptionalFields();\n         }\n \n@@ -976,37 +901,25 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     };\n \n     /**\n-     * This type is used for IEEEtran.bst to control various \n+     * This type is used for IEEEtran.bst to control various\n      * be repeated or not. Not a very elegant solution, but it works...\n      */\n     public static final BibtexEntryType IEEETRANBSTCTL = new BibtexEntryType() {\n \n-        @Override\n-        public String getName()\n         {\n-            return \"IEEEtranBSTCTL\";\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields()\n-        {\n-            return new String[] {\n-                    \"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n+            addAllOptional(\"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n                     \"ctlmax_names_forced_etal\", \"ctlnames_show_etal\", \"ctluse_alt_spacing\",\n                     \"ctlalt_stretch_factor\", \"ctldash_repeated_names\", \"ctlname_format_string\",\n-                    \"ctlname_latex_cmd\", \"ctlname_url_prefix\"\n-            };\n+                    \"ctlname_latex_cmd\", \"ctlname_url_prefix\");\n         }\n \n         @Override\n-        public String[] getRequiredFields()\n-        {\n-            return null;\n+        public String getName() {\n+            return \"IEEEtranBSTCTL\";\n         }\n \n         @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-        {\n+        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n             return true;\n         }\n     };, @@ -118,29 +118,15 @@ public BibtexEntry(String id, BibtexEntryType type) {\n     /**\n      * @return An array describing the optional fields for this entry. \"null\" if no fields are required\n      */\n-    public String[] getOptionalFields() {\n-        String[] res = type.getOptionalFields();\n-        if (res == null) {\n-            return res;\n-        } else {\n-            // Fix for https://sourceforge.net/p/jabref/bugs/1221/ - see https://github.com/fc7/jabref/commit/e92238a37cc780eb7fccc0684fa62d2437ddd825\n-            return res.clone();\n-        }\n+    public List<String> getOptionalFields() {\n+        return type.getOptionalFields();\n     }\n \n     /**\n      * @return an array describing the required fields for this entry. \"null\" if no fields are required\n      */\n-    public String[] getRequiredFields() {\n-        String[] res = type.getRequiredFields();\n-        if (res == null) {\n-            return res;\n-        } else {\n-            // FIXME: This fix slows down saving very much. The issue should be investigated further and the one working on the result should do the clone\n-            //        Removing the \"clone()\" here is against a rule in \"Effective Java\". However, the speed improvement weights more \n-            // Fix for https://sourceforge.net/p/jabref/bugs/1221/ - see https://github.com/fc7/jabref/commit/e92238a37cc780eb7fccc0684fa62d2437ddd825\n-            return res.clone();\n-        }\n+    public List<String> getRequiredFields() {\n+        return type.getRequiredFields();\n     }\n \n     public String[] getUserDefinedFields() {\n@@ -450,6 +436,10 @@ boolean allFieldsPresent(String[] fields, BibtexDatabase database) {\n         return true;\n     }\n \n+    boolean allFieldsPresent(List<String> fields, BibtexDatabase database) {\n+        return allFieldsPresent((String[]) fields.toArray(), database);\n+    }\n+\n     boolean atLeastOnePresent(String[] fields, BibtexDatabase database) {\n         for (String field : fields) {\n             String value = BibtexDatabase.getResolvedField(field, this, database);, @@ -30,6 +30,7 @@\n package net.sf.jabref.model.entry;\n \n import java.util.*;\n+import java.util.stream.Collectors;\n \n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n@@ -108,28 +109,43 @@\n         STANDARD_TYPES = new TreeMap<>(ALL_TYPES);\n     }\n \n+    private List<String> requiredFields = new ArrayList<>();\n+\n+    private List<String> optionalFields = new ArrayList<>();\n \n     @Override\n     public int compareTo(BibtexEntryType o) {\n         return getName().compareTo(o.getName());\n     }\n \n-    public abstract String[] getOptionalFields();\n+    public List<String> getOptionalFields() {\n+        return Collections.unmodifiableList(optionalFields);\n+    }\n+\n+    public List<String> getRequiredFields() {\n+        return Collections.unmodifiableList(requiredFields);\n+    }\n \n-    public abstract String[] getRequiredFields();\n+    void addAllOptional(String... fieldNames) {\n+        optionalFields.addAll(Arrays.asList(fieldNames));\n+    }\n+\n+    void addAllRequired(String... fieldNames) {\n+        requiredFields.addAll(Arrays.asList(fieldNames));\n+    }\n \n-    public String[] getPrimaryOptionalFields() {\n+    public List<String> getPrimaryOptionalFields() {\n         return getOptionalFields();\n     }\n \n-    public String[] getSecondaryOptionalFields() {\n-        String[] optionalFields = getOptionalFields();\n+    public List<String> getSecondaryOptionalFields() {\n+        List<String> optionalFields = getOptionalFields();\n \n         if (optionalFields == null) {\n-            return new String[0];\n+            return new ArrayList<>(0);\n         }\n \n-        return Arrays.stream(optionalFields).filter(field -> !isPrimary(field)).toArray(String[]::new);\n+        return optionalFields.stream().filter(field -> !isPrimary(field)).collect(Collectors.toList());\n     }\n \n     public abstract boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database);\n@@ -139,7 +155,7 @@ public int compareTo(BibtexEntryType o) {\n     }\n \n     public boolean isRequired(String field) {\n-        String[] requiredFields = getRequiredFields();\n+        List<String> requiredFields = getRequiredFields();\n         if (requiredFields == null) {\n             return false;\n         }\n@@ -152,7 +168,7 @@ public boolean isRequired(String field) {\n     }\n \n     public boolean isOptional(String field) {\n-        String[] optionalFields = getOptionalFields();\n+        List<String> optionalFields = getOptionalFields();\n \n         if (optionalFields == null) {\n             return false;\n@@ -162,7 +178,7 @@ public boolean isOptional(String field) {\n     }\n \n     private boolean isPrimary(String field) {\n-        String[] primaryFields = getPrimaryOptionalFields();\n+        List<String> primaryFields = getPrimaryOptionalFields();\n \n         if (primaryFields == null) {\n             return false;\n@@ -277,7 +293,7 @@ public static void saveCustomEntryTypes(JabRefPreferences prefs) {\n      *\n      * @return Array of the required fields in a form appropriate for the entry customization dialog.\n      */\n-    public String[] getRequiredFieldsForCustomization() {\n+    public List<String> getRequiredFieldsForCustomization() {\n         return getRequiredFields();\n     }\n }, @@ -2,6 +2,10 @@\n \n import net.sf.jabref.model.database.BibtexDatabase;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n public class BibtexEntryTypes {\n     // Get an entry type defined in BibtexEntryType\n     public static BibtexEntryType getEntryType(String type) {\n@@ -22,16 +26,6 @@ public String getName() {\n                     return \"Other\";\n                 }\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[0];\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields() {\n-                    return new String[0];\n-                }\n-\n                 @Override\n                 public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n                     return true;\n@@ -41,23 +35,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType ARTICLE =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Article\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]{\n-                            \"volume\", \"pages\", \"number\", \"month\", \"note\", //- \"volume\", \"pages\", \"part\", \"eid\"\n-                    };\n+                {\n+                    addAllOptional(\"volume\", \"pages\", \"number\", \"month\", \"note\"); //- \"volume\", \"pages\", \"part\", \"eid\"\n+                    addAllRequired(\"author\", \"title\", \"journal\", \"year\");  //+ \"volume\", \"pages\"\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{\n-                            \"author\", \"title\", \"journal\", \"year\" //+ \"volume\", \"pages\"\n-                    };\n+                public String getName() {\n+                    return \"Article\";\n                 }\n \n                 @Override\n@@ -71,21 +56,13 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType BOOKLET =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Booklet\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]{\n-                            \"author\", \"howpublished\", \"address\", \"month\", \"year\", \"note\" //+ \"lastchecked\"\n-                    };\n+                {\n+                    addAllOptional(\"author\", \"howpublished\", \"address\", \"month\", \"year\", \"note\");  //+ \"lastchecked\"\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{\"title\"};\n+                public String getName() {\n+                    return \"Booklet\";\n                 }\n \n                 @Override\n@@ -97,32 +74,23 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType INBOOK =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"InBook\";\n-                }\n+                private List<String> requiredFieldsForCustomization = Collections.unmodifiableList(Arrays.asList(new String[]{\"author/editor\", \"title\", \"chapter/pages\", \"year\", \"publisher\"}));\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"volume\", \"number\", \"series\", \"type\", \"address\", \"edition\",\n-                                    \"month\", \"note\" //+ \"pages\"\n-                            };\n+                {\n+                    addAllOptional(\"volume\", \"number\", \"series\", \"type\", \"address\", \"edition\",\n+                            \"month\", \"note\"); //+ \"pages\"\n+                    addAllRequired(\"chapter\", \"pages\", \"title\", \"publisher\", \"year\", \"editor\",\n+                            \"author\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"chapter\", \"pages\", \"title\", \"publisher\", \"year\", \"editor\",\n-                                    \"author\"\n-                            };\n+                public String getName() {\n+                    return \"InBook\";\n                 }\n \n                 @Override\n-                public String[] getRequiredFieldsForCustomization() {\n-                    return new String[]{\"author/editor\", \"title\", \"chapter/pages\", \"year\", \"publisher\"};\n+                public List<String> getRequiredFieldsForCustomization() {\n+                    return requiredFieldsForCustomization;\n                 }\n \n                 @Override\n@@ -139,34 +107,24 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType BOOK =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Book\";\n-                }\n+                private List<String> requiredFieldsForCustomization = Collections.unmodifiableList(Arrays.asList(new String[]\n+                        {\"title\", \"publisher\", \"year\", \"author/editor\"}));\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"volume\", \"number\", \"series\", \"address\", \"edition\", \"month\",\n-                                    \"note\" //+ pages\n-                            };\n+                {\n+                    addAllRequired(\"title\", \"publisher\", \"year\", \"editor\", \"author\");\n+                    addAllOptional(\"volume\", \"number\", \"series\", \"address\", \"edition\", \"month\",\n+                            \"note\");     //+ pages\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"title\", \"publisher\", \"year\", \"editor\", \"author\"\n-                            };\n+                public String getName() {\n+                    return \"Book\";\n                 }\n \n+\n                 @Override\n-                public String[] getRequiredFieldsForCustomization() {\n-                    return new String[]\n-                            {\n-                                    \"title\", \"publisher\", \"year\", \"author/editor\"\n-                            };\n+                public List<String> getRequiredFieldsForCustomization() {\n+                    return requiredFieldsForCustomization;\n                 }\n \n                 @Override\n@@ -183,26 +141,15 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType INCOLLECTION =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"InCollection\";\n+                {\n+                    addAllRequired(\"author\", \"title\", \"booktitle\", \"publisher\", \"year\");\n+                    addAllOptional(\"editor\", \"volume\", \"number\", \"series\", \"type\", \"chapter\",\n+                            \"pages\", \"address\", \"edition\", \"month\", \"note\");\n                 }\n \n                 @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"editor\", \"volume\", \"number\", \"series\", \"type\", \"chapter\",\n-                                    \"pages\", \"address\", \"edition\", \"month\", \"note\"\n-                            };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"booktitle\", \"publisher\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"InCollection\";\n                 }\n \n                 @Override\n@@ -219,26 +166,15 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType CONFERENCE =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Conference\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"editor\", \"volume\", \"number\", \"series\", \"pages\",\n-                                    \"address\", \"month\", \"organization\", \"publisher\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"editor\", \"volume\", \"number\", \"series\", \"pages\",\n+                            \"address\", \"month\", \"organization\", \"publisher\", \"note\");\n+                    addAllRequired(\"author\", \"title\", \"booktitle\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"booktitle\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"Conference\";\n                 }\n \n                 @Override\n@@ -253,26 +189,15 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType INPROCEEDINGS =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"InProceedings\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"editor\", \"volume\", \"number\", \"series\", \"pages\",\n-                                    \"address\", \"month\", \"organization\", \"publisher\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"editor\", \"volume\", \"number\", \"series\", \"pages\",\n+                            \"address\", \"month\", \"organization\", \"publisher\", \"note\");\n+                    addAllRequired(\"author\", \"title\", \"booktitle\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"booktitle\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"InProceedings\";\n                 }\n \n                 @Override\n@@ -287,26 +212,15 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType PROCEEDINGS =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Proceedings\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"editor\", \"volume\", \"number\", \"series\", \"address\",\n-                                    \"publisher\", \"note\", \"month\", \"organization\"\n-                            };\n+                {\n+                    addAllOptional(\"editor\", \"volume\", \"number\", \"series\", \"address\",\n+                            \"publisher\", \"note\", \"month\", \"organization\");\n+                    addAllRequired(\"title\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"title\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"Proceedings\";\n                 }\n \n                 @Override\n@@ -321,26 +235,15 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType MANUAL =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Manual\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"organization\", \"address\", \"edition\",\n-                                    \"month\", \"year\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"author\", \"organization\", \"address\", \"edition\",\n+                            \"month\", \"year\", \"note\");\n+                    addAllRequired(\"title\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"title\"\n-                            };\n+                public String getName() {\n+                    return \"Manual\";\n                 }\n \n                 @Override\n@@ -355,25 +258,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType TECHREPORT =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"TechReport\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"type\", \"number\", \"address\", \"month\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"type\", \"number\", \"address\", \"month\", \"note\");\n+                    addAllRequired(\"author\", \"title\", \"institution\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"institution\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"TechReport\";\n                 }\n \n                 @Override\n@@ -389,25 +281,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType MASTERSTHESIS =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"MastersThesis\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"type\", \"address\", \"month\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"type\", \"address\", \"month\", \"note\");\n+                    addAllRequired(\"author\", \"title\", \"school\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"school\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"MastersThesis\";\n                 }\n \n                 @Override\n@@ -422,25 +303,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType PHDTHESIS =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"PhdThesis\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"type\", \"address\", \"month\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"type\", \"address\", \"month\", \"note\");\n+                    addAllRequired(\"author\", \"title\", \"school\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"school\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"PhdThesis\";\n                 }\n \n                 @Override\n@@ -455,25 +325,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType UNPUBLISHED =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Unpublished\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"month\", \"year\"\n-                            };\n+                {\n+                    addAllOptional(\"month\", \"year\");\n+                    addAllRequired(\"author\", \"title\", \"note\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"note\"\n-                            };\n+                public String getName() {\n+                    return \"Unpublished\";\n                 }\n \n                 @Override\n@@ -488,25 +347,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType PERIODICAL =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Periodical\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"editor\", \"language\", \"series\", \"volume\", \"number\", \"organization\", \"month\", \"note\", \"url\"\n-                            };\n+                {\n+                    addAllOptional(\"editor\", \"language\", \"series\", \"volume\", \"number\", \"organization\", \"month\", \"note\", \"url\");\n+                    addAllRequired(\"title\", \"year\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"title\", \"year\"\n-                            };\n+                public String getName() {\n+                    return \"Periodical\";\n                 }\n \n                 @Override\n@@ -521,25 +369,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType PATENT =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Patent\";\n+                {\n+                    addAllOptional(\"author\", \"title\", \"language\", \"assignee\", \"address\", \"type\", \"number\", \"day\", \"dayfiled\", \"month\", \"monthfiled\", \"note\", \"url\");\n+                    addAllRequired(\"nationality\", \"number\", \"year\", \"yearfiled\");\n                 }\n \n                 @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"language\", \"assignee\", \"address\", \"type\", \"number\", \"day\", \"dayfiled\", \"month\", \"monthfiled\", \"note\", \"url\"\n-                            };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"nationality\", \"number\", \"year\", \"yearfiled\"\n-                            };\n+                public String getName() {\n+                    return \"Patent\";\n                 }\n \n                 @Override\n@@ -556,30 +393,22 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType STANDARD =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Standard\";\n-                }\n+                private List<String> requiredFieldsForCustomization = Collections.unmodifiableList(Arrays.asList(new String[]{\"title\", \"organization/institution\"}));\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"language\", \"howpublished\", \"type\", \"number\", \"revision\", \"address\", \"month\", \"year\", \"note\", \"url\"\n-                            };\n+                {\n+                    addAllOptional(\"author\", \"language\", \"howpublished\", \"type\", \"number\", \"revision\", \"address\", \"month\", \"year\", \"note\", \"url\");\n+                    addAllRequired(\"title\", \"organization\", \"institution\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]\n-                            {\n-                                    \"title\", \"organization\", \"institution\"\n-                            };\n+                public String getName() {\n+                    return \"Standard\";\n                 }\n \n+\n                 @Override\n-                public String[] getRequiredFieldsForCustomization() {\n-                    return new String[]{\"title\", \"organization/institution\"};\n+                public List<String> getRequiredFieldsForCustomization() {\n+                    return requiredFieldsForCustomization;\n                 }\n \n                 @Override\n@@ -596,22 +425,14 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType ELECTRONIC =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Electronic\";\n-                }\n+                {\n+                    addAllOptional(\"author\", \"month\", \"year\", \"title\", \"language\", \"howpublished\", \"organization\", \"address\", \"note\", \"url\");\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"month\", \"year\", \"title\", \"language\", \"howpublished\", \"organization\", \"address\", \"note\", \"url\"\n-                            };\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{};\n+                public String getName() {\n+                    return \"Electronic\";\n                 }\n \n                 @Override\n@@ -626,22 +447,13 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType MISC =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"Misc\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]\n-                            {\n-                                    \"author\", \"title\", \"howpublished\", \"month\", \"year\", \"note\"\n-                            };\n+                {\n+                    addAllOptional(\"author\", \"title\", \"howpublished\", \"month\", \"year\", \"note\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{};\n+                public String getName() {\n+                    return \"Misc\";\n                 }\n \n                 @Override\n@@ -660,24 +472,16 @@ public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n     public static final BibtexEntryType IEEETRANBSTCTL =\n             new BibtexEntryType() {\n \n-                @Override\n-                public String getName() {\n-                    return \"IEEEtranBSTCTL\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]{\n-                            \"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n+                {\n+                    addAllOptional(\"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n                             \"ctlmax_names_forced_etal\", \"ctlnames_show_etal\", \"ctluse_alt_spacing\",\n                             \"ctlalt_stretch_factor\", \"ctldash_repeated_names\", \"ctlname_format_string\",\n-                            \"ctlname_latex_cmd\", \"ctlname_url_prefix\"\n-                    };\n+                            \"ctlname_latex_cmd\", \"ctlname_url_prefix\");\n                 }\n \n                 @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{};\n+                public String getName() {\n+                    return \"IEEEtranBSTCTL\";\n                 }\n \n                 @Override\n@@ -703,16 +507,6 @@ public String getName() {\n                     return \"Typeless\";\n                 }\n \n-                @Override\n-                public String[] getOptionalFields() {\n-                    return new String[]{};\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields() {\n-                    return new String[]{};\n-                }\n-\n                 @Override\n                 public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n                     return false;, @@ -18,7 +18,9 @@\n import java.io.IOException;\n import java.io.Writer;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n \n import net.sf.jabref.Globals;\n import net.sf.jabref.logic.util.strings.StringUtil;\n@@ -41,6 +43,10 @@\n \n     private static final Log LOGGER = LogFactory.getLog(CustomEntryType.class);\n \n+    public CustomEntryType(String name, List<String> required, List<String> priOpt, List<String> secOpt) {\n+        this(name, required.toArray(new String[required.size()]), priOpt.toArray(new String[priOpt.size()]),\n+                secOpt.toArray(new String[secOpt.size()]));\n+    }\n \n     public CustomEntryType(String name, String[] required, String[] priOpt, String[] secOpt) {\n         this.name = StringUtil.capitalizeFirst(name);\n@@ -49,6 +55,10 @@ public CustomEntryType(String name, String[] required, String[] priOpt, String[]\n         optional = StringUtil.arrayConcat(priOpt, secOpt);\n     }\n \n+    public CustomEntryType(String name, List<String> required, List<String> optional) {\n+        this(name, required.toArray(new String[required.size()]), optional.toArray(new String[optional.size()]));\n+    }\n+\n     public CustomEntryType(String name, String[] required, String[] optional) {\n         this(name, required, optional, new String[0]);\n     }\n@@ -96,28 +106,28 @@ public String getName() {\n     }\n \n     @Override\n-    public String[] getOptionalFields() {\n-        return optional;\n+    public List<String> getOptionalFields() {\n+        return Arrays.asList(optional);\n     }\n \n     @Override\n-    public String[] getRequiredFields() {\n-        return required;\n+    public List<String> getRequiredFields() {\n+        return Arrays.asList(required);\n     }\n \n     @Override\n-    public String[] getPrimaryOptionalFields() {\n-        return priOpt;\n+    public List<String> getPrimaryOptionalFields() {\n+        return Arrays.asList(priOpt);\n     }\n \n     @Override\n-    public String[] getSecondaryOptionalFields() {\n-        return StringUtil.getRemainder(optional, priOpt);\n+    public List<String> getSecondaryOptionalFields() {\n+        return Arrays.asList(StringUtil.getRemainder(optional, priOpt));\n     }\n \n     @Override\n-    public String[] getRequiredFieldsForCustomization() {\n-        return getRequiredFieldsString().split(\";\");\n+    public List<String> getRequiredFieldsForCustomization() {\n+        return Arrays.asList(getRequiredFieldsString().split(\";\"));\n     }\n \n     /**, @@ -22,33 +22,22 @@\n  * during bibtex parsing. The only known information is the type name.\n  * This is useful if the bibtex file contains type definitions that are used\n  * in the file - because the entries will be parsed before the type definitions\n- * are found. In the meantime, the entries will be assigned an \n+ * are found. In the meantime, the entries will be assigned an\n  * UnknownEntryType giving the name.\n  */\n public class UnknownEntryType extends BibtexEntryType {\n \n     private final String name;\n-    private final String[] fields = new String[0];\n \n-\n-    public UnknownEntryType(String name_) {\n-        name = name_;\n+    public UnknownEntryType(String name) {\n+        this.name = name;\n     }\n \n     @Override\n     public String getName() {\n         return name;\n     }\n \n-    @Override\n-    public String[] getOptionalFields() {\n-        return fields;\n-    }\n-\n-    @Override\n-    public String[] getRequiredFields() {\n-        return fields;\n-    }\n \n     @Override\n     public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {, @@ -15,7 +15,7 @@\n */\n package net.sf.jabref.specialfields;\n \n-import net.sf.jabref.gui.BaseAction;\n+import net.sf.jabref.gui.actions.BaseAction;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.undo.NamedCompound;, @@ -15,7 +15,7 @@\n  */\n package net.sf.jabref.sql;\n \n-import net.sf.jabref.gui.BaseAction;\n+import net.sf.jabref.gui.actions.BaseAction;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;, @@ -231,12 +231,8 @@ private void populateEntryTypesTable(Object out) throws SQLException {\n             for (int i = 0; i < SQLUtil.getAllFields().size(); i++) {\n                 fieldRequirement.add(i, \"gen\");\n             }\n-            List<String> reqFields = Arrays\n-                    .asList(val.getRequiredFields() != null ? val\n-                            .getRequiredFields() : new String[0]);\n-            List<String> optFields = Arrays\n-                    .asList(val.getOptionalFields() != null ? val\n-                            .getOptionalFields() : new String[0]);\n+            List<String> reqFields = val.getRequiredFields();\n+            List<String> optFields = val.getOptionalFields();\n             List<String> utiFields = Arrays\n                     .asList(val.getUtilityFields() != null ? val\n                             .getUtilityFields() : new String[0]);, @@ -26,6 +26,7 @@\n import javax.swing.JOptionPane;\n \n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.Globals;\n@@ -70,7 +71,7 @@ public AbstractAction getAction() {\n \n         public DbImpAction() {\n             super(IconTheme.getImage(\"dbImport\"));\n-            putValue(Action.NAME, \"Import from external SQL database\");\n+            putValue(Action.NAME, Localization.menuTitle(\"Import from external SQL database\"));\n \n         }\n , @@ -45,7 +45,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRef;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.logic.autocompleter.AutoCompleter;\n import net.sf.jabref.gui.AutoCompleteListener;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -91,7 +91,7 @@\n \n \n     public ManageKeywordsAction(JabRefFrame frame) {\n-        putValue(Action.NAME, \"Manage keywords\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Manage keywords\"));\n         this.frame = frame;\n     }\n , @@ -28,7 +28,7 @@\n import net.sf.jabref.*;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.JabRefFrame;\n-import net.sf.jabref.gui.MnemonicAwareAction;\n+import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.gui.undo.NamedCompound;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n@@ -62,7 +62,7 @@\n \n \n     public MassSetFieldAction(JabRefFrame frame) {\n-        putValue(Action.NAME, \"Set/clear/rename fields\");\n+        putValue(Action.NAME, Localization.menuTitle(\"Set/clear/rename fields\"));\n         this.frame = frame;\n     }\n , @@ -1229,6 +1229,7 @@ public void run() {\n         };\n         SwingUtilities.invokeLater(new Runnable() {\n \n+            @Override\n             public void run() {\n                 // show dialog which will be hidden when the task is done\n                 if (diag != null) {, @@ -1,5 +1,6 @@\n /*\n Copyright (C) 2004 R. Nagel\n+Copyright (C) 2015 T. Denkinger\n \n All programs in this directory and\n subdirectories are published under the GNU General Public License as\n@@ -140,7 +141,7 @@ private boolean parseAuxFile(String filename) {\n         boolean loopFileOpen;\n \n         // the important tag\n-        pattern = Pattern.compile(\"\\\\\\\\citation\\\\{.+\\\\}\");\n+        pattern = Pattern.compile(\"\\\\\\\\(citation|abx@aux@cite)\\\\{(.+)\\\\}\");\n \n         // input-file-buffer\n         BufferedReader br = null;\n@@ -194,8 +195,7 @@ private boolean parseAuxFile(String filename) {\n                         // extract the bibtex-key(s) XXX from \\citation{XXX} string\n                         int len = matcher.end() - matcher.start();\n                         if (len > 11) {\n-                            String str = matcher.group().substring(matcher.start() + 10,\n-                                    matcher.end() - 1);\n+                            String str = matcher.group(2);\n                             // could be an comma separated list of keys\n                             String[] keys = str.split(\",\");\n                             if (keys != null) {, @@ -554,12 +554,12 @@ private void updateSourceView() {\n     }\n \n     private String[] getAllFields() {\n-        ArrayList<String> f = new ArrayList<String>();\n-        String[] req = entry.getRequiredFields();\n-        String[] opt = entry.getOptionalFields();\n+        ArrayList<String> f = new ArrayList<>();\n+        List<String> req = entry.getRequiredFields();\n+        List<String> opt = entry.getOptionalFields();\n         String[] allFields = BibtexFields.getAllFieldNames();\n-        Collections.addAll(f, req);\n-        Collections.addAll(f, opt);\n+        f.addAll(req);\n+        f.addAll(opt);\n         for (String allField : allFields) {\n             if (!f.contains(allField)) {\n                 f.add(allField);, @@ -1722,3 +1722,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2478,3 +2478,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=%0_Datei_\\u00f6ffnen, @@ -416,6 +416,8 @@ Delete_strings=Delete_strings\n \n Deleted=Deleted\n \n+Delete_local_file=Delete_local_file\n+\n Delimit_fields_with_semicolon,_ex.=Delimit_fields_with_semicolon,_ex.\n \n Descending=Descending\n@@ -2467,3 +2469,8 @@ Found_%0_broken_links=Found_%0_broken_links\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=This_group_contains_all_entries._It_cannot_be_edited_or_removed.\n \n Invalid_ISBN=Invalid_ISBN\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=Open_%0_file\n+\n+Cannot_delete_file=Cannot_delete_file\n+File_permission_error=File_may_be_in_use_by_another_program.\n\\ No newline at end of file, @@ -1613,3 +1613,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -0,0 +1,2471 @@\n+#!\n+#! created/edited by Popeye version 0.55 (popeye.sourceforge.net)\n+#! encoding:ISO-8859-1\n+\n+%0_contains_the_Regular_Expression_<b>%1</b>=\n+\n+%0_contains_the_term_<b>%1</b>=\n+\n+%0_doesn't_contain_the_Regular_Expression_<b>%1</b>=\n+\n+%0_doesn't_contain_the_term_<b>%1</b>=\n+\n+%0_doesn't_match_the_Regular_Expression_<b>%1</b>=\n+\n+%0_doesn't_match_the_term_<b>%1</b>=\n+\n+%0_export_successful=\n+\n+%0_field_set=\n+\n+%0_matches_the_Regular_Expression_<b>%1</b>=\n+\n+%0_matches_the_term_<b>%1</b>=\n+\n+<field_name>=\n+<HTML>Could_not_find_file_'%0'<BR>linked_from_entry_'%1'</HTML>=\n+\n+<no_field>=\n+\n+<select>=\n+\n+<select_word>=\n+A_string_with_this_label_already_exists=\n+Abbreviate_journal_names_of_the_selected_entries_(ISO_abbreviation)=\n+Abbreviate_journal_names_of_the_selected_entries_(MEDLINE_abbreviation)=\n+\n+Abbreviate_names=\n+Abbreviated_%0_journal_names.=\n+\n+Abbreviation=\n+\n+About_JabRef=\n+\n+Abstract=\n+\n+Accept=\n+\n+Accept_change=\n+\n+Action=\n+\n+Add=\n+\n+Add_a_(compiled)_custom_ImportFormat_class_from_a_class_path._\\nThe_path_need_not_be_on_the_classpath_of_JabRef.=\n+\n+Add_a_(compiled)_custom_ImportFormat_class_from_a_Zip-archive.\\nThe_Zip-archive_need_not_be_on_the_classpath_of_JabRef.=\n+\n+add_entries_to_group=\n+\n+Add_entry_selection_to_this_group=\n+\n+Add_from_folder=\n+\n+Add_from_jar=\n+\n+add_group=\n+\n+Add_Group=\n+\n+Add_new=\n+\n+Add_Subgroup=\n+\n+Add_to_group=\n+\n+Added_group_\"%0\".=\n+\n+Added_new=\n+\n+Added_string=\n+\n+Additionally,_entries_whose_<b>%0</b>_field_does_not_contain_<b>%1</b>_can_be_assigned_manually_to_this_group_by_selecting_them_then_using_either_drag_and_drop_or_the_context_menu._This_process_adds_the_term_<b>%1</b>_to_each_entry's_<b>%0</b>_field._Entries_can_be_removed_manually_from_this_group_by_selecting_them_then_using_the_context_menu._This_process_removes_the_term_<b>%1</b>_from_each_entry's_<b>%0</b>_field.=\n+\n+Advanced=\n+All_custom_file_types_will_be_lost._Proceed?=\n+\n+All_Entries=\n+\n+All_entries=\n+All_entries_of_this_type_will_be_declared_typeless._Continue?=\n+\n+All_fields=\n+\n+All_subgroups_(recursively)=\n+\n+Allow_editing_in_table_cells=\n+An_Error_occurred_while_fetching_from_OAI2_source_(%0)\\:=\n+An_Exception_ocurred_while_accessing_'%0'=\n+An_SAXException_ocurred_while_parsing_'%0'\\:=\n+\n+and=\n+and_inside_the_JabRef-jar\\:=\n+\n+and_the_class_must_be_available_in_your_classpath_next_time_you_start_JabRef.=\n+\n+any_field_that_matches_the_regular_expression_<b>%0</b>=\n+\n+Appearance=\n+\n+Append=\n+Append_contents_from_a_BibTeX_database_into_the_currently_viewed_database=\n+\n+Append_database=\n+\n+append_the_selected_text_to_bibtex_key=\n+Application=\n+\n+Apply=\n+\n+Arguments_passed_on_to_running_JabRef_instance._Shutting_down.=\n+\n+Assign_entry_selection_exclusively_to_this_group=\n+\n+Assign_new_file=\n+\n+Assign_the_original_group's_entries_to_this_group?=\n+\n+Assigned_%0_entries_to_group_\"%1\".=\n+\n+Assigned_1_entry_to_group_\"%0\".=\n+At_least_the_plug-in_'net.sf.jabref.core'_should_be_there.=\n+\n+Attach_%0_file=\n+\n+Attach_URL=\n+\n+Attempt_to_autoset_%0_links_for_your_entries._Autoset_works_if_a_%0_file_in_your_%0_directory_or_a_subdirectory<BR>is_named_identically_to_an_entry's_BibTeX_key,_plus_extension.=\n+Attempting_SQL_export...=\n+\n+Auto=\n+\n+Autodetect_format=\n+\n+Autogenerate_BibTeX_key=\n+Autogenerate_BibTeX_keys=\n+\n+Autogenerate_groups=\n+\n+autogenerate_keys=\n+Autolink_files_with_names_starting_with_the_BibTeX_key=\n+\n+Autolink_only_files_that_match_the_BibTeX_key=\n+\n+Automatically_create_groups=\n+\n+Automatically_create_groups_for_database.=\n+\n+Automatically_created_groups=\n+\n+Automatically_hide_groups_interface_when_switching_to_a_database_that_contains_no_groups=\n+\n+Automatically_remove_exact_duplicates=\n+\n+Automatically_show_groups_interface_when_switching_to_a_database_that_contains_groups=\n+\n+Autoset=\n+\n+Autoset_%0_field=\n+\n+Autoset_%0_links._Allow_overwriting_existing_links.=\n+\n+Autoset_%0_links._Do_not_overwrite_existing_links.=\n+Autoset_external_links=\n+Autosetting_links=\n+\n+AUX_file_import=\n+\n+Available_export_formats=\n+\n+Available_fields=\n+\n+Available_import_formats=\n+\n+Background_color_for_optional_fields=\n+\n+Background_color_for_required_fields=\n+\n+Backup_old_file_when_saving=\n+Beta_version=\n+\n+BibTeX_key=\n+\n+BibTeX_key_is_unique.=\n+\n+BibTeX_key_not_set._Enter_a_name_for_the_downloaded_file=\n+\n+BibTeX_source=\n+\n+BibTeXML=\n+\n+Binding=\n+Broken_link=\n+\n+Browse=\n+\n+by=\n+\n+Cancel=\n+\n+Cannot_add_entries_to_group_without_generating_keys._Generate_keys_now?=\n+\n+Cannot_merge_this_change=\n+\n+Cannot_move_group_\"%0\"_down.=\n+\n+Cannot_move_group_\"%0\"_left.=\n+\n+Cannot_move_group_\"%0\"_right.=\n+\n+Cannot_move_group_\"%0\"_up.=\n+\n+case_insensitive=\n+\n+case_sensitive=\n+\n+Case_sensitive=\n+\n+change_assignment_of_entries=\n+\n+Change_case=\n+\n+Change_entry_type=\n+Change_file_type=\n+\n+change_key=\n+\n+Change_of_Grouping_Method=\n+\n+change_preamble=\n+\n+change_string_content=\n+\n+change_string_name=\n+Change_table_column_and_General_fields_settings_to_use_the_new_feature=\n+\n+change_type=\n+\n+changed_=\n+\n+Changed_font_settings=\n+\n+Changed_language_settings=\n+\n+Changed_look_and_feel_settings=\n+\n+Changed_preamble=\n+\n+Changed_type_to=\n+\n+Characters_to_ignore=\n+\n+Check_existing_%0_links=\n+\n+Check_links=\n+\n+Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\n+Cite_command=\n+\n+Class_name=\n+\n+Clear=\n+\n+clear_all_groups=\n+\n+Clear_field=\n+Clear_fields=\n+\n+Clear_highlight=\n+\n+Close=\n+\n+Close_dialog=\n+\n+Close_the_current_database=\n+\n+Close_the_help_window=\n+\n+Close_window=\n+\n+Closed_database=\n+\n+Collapse_subtree=\n+\n+Color_codes_for_required_and_optional_fields=\n+\n+Color_for_marking_incomplete_entries=\n+\n+Column_width=\n+\n+Command_line_id=\n+\n+Complete_record=\n+Connect=\n+Connect_to_SQL_database=\n+Connection_to_IEEEXplore_failed=\n+\n+Contained_in=\n+\n+Content=\n+\n+Copied=\n+\n+Copied_cell_contents=\n+\n+Copied_key=\n+\n+Copied_keys=\n+\n+Copy=\n+\n+Copy_BibTeX_key=\n+Copy_file_to_file_directory.=\n+Copy_files_to_file_directory.=\n+\n+Copy_to_clipboard=\n+\n+Could_not_call_executable=\n+Could_not_connect_to_Vim_server._Make_sure_that_Vim_is_running<BR>with_correct_server_name.=\n+\n+Could_not_export_file=\n+\n+Could_not_export_preferences=\n+\n+Could_not_find_a_suitable_import_format.=\n+Could_not_find_directory_for_%0-files\\:_%1=\n+Could_not_find_image_file=\n+\n+Could_not_find_layout_file=\n+\n+Could_not_import_preferences=\n+\n+Could_not_instantiate_%0=\n+Could_not_instantiate_%0_%1=\n+Could_not_instantiate_%0._Have_you_chosen_the_correct_package_path?=\n+Could_not_open_link=\n+\n+Could_not_parse_number_of_hits=\n+Could_not_print_preview=\n+\n+Could_not_run_the_'vim'_program.=\n+\n+Could_not_save_file=\n+Could_not_save_file._Character_encoding_'%0'_is_not_supported.=\n+\n+Created_groups.=\n+\n+crossreferenced_entries_included=\n+\n+Current_content=\n+\n+Current_value=\n+\n+Custom_entry_types=\n+\n+Custom_entry_types_found_in_file=\n+\n+Custom_importers=\n+\n+Customize_entry_types=\n+\n+Customize_key_bindings=\n+\n+Cut=\n+\n+cut_entries=\n+\n+cut_entry=\n+\n+Cut_pr=\n+Database_\\:=\n+\n+Database_encoding=\n+\n+Database_properties=\n+\n+Date_format=\n+\n+Default=\n+\n+Default_encoding=\n+\n+Default_grouping_field=\n+\n+Default_look_and_feel=\n+\n+Default_pattern=\n+\n+Default_sort_criteria=\n+Define_'%0'=\n+\n+Delete=\n+\n+Delete_custom_format=\n+\n+delete_entries=\n+\n+Delete_entry=\n+\n+delete_entry=\n+\n+Delete_multiple_entries=\n+\n+Delete_rows=\n+\n+Delete_strings=\n+\n+Deleted=\n+\n+Delimit_fields_with_semicolon,_ex.=\n+\n+Descending=\n+\n+Description=\n+\n+Deselect_all=\n+Deselect_all_duplicates=\n+\n+Details=\n+\n+Disable_entry_editor_when_multiple_entries_are_selected=\n+\n+Disable_this_confirmation_dialog=\n+\n+Disable_this_warning_dialog=\n+\n+Display_all_entries_belonging_to_one_or_more_of_the_selected_groups.=\n+\n+Display_all_error_messages=\n+\n+Display_help_on_command_line_options=\n+\n+Display_imported_entries_in_an_inspection_window_before_they_are_added.=\n+\n+Display_only_entries_belonging_to_all_selected_groups.=\n+Display_version=\n+\n+Displaying_no_groups=\n+\n+Do_not_abbreviate_names=\n+\n+Do_not_autoset=\n+\n+Do_not_import_entry=\n+\n+Do_not_open_any_files_at_startup=\n+\n+Do_not_overwrite_existing_keys=\n+Do_not_show_splash_window_at_startup=\n+Do_not_show_these_options_in_the_future=\n+\n+Do_not_wrap_the_following_fields_when_saving=\n+Do_not_write_the_following_fields_to_XMP_Metadata\\:=\n+\n+Do_you_want_JabRef_to_do_the_following_operations?=\n+\n+DocBook=\n+\n+Down=\n+\n+Download=\n+\n+Download_completed=\n+\n+Download_file=\n+\n+Downloading...=\n+Drag_and_Drop_Error=\n+Drop_%0=\n+\n+Duplicate_BibTeX_key._Grouping_may_not_work_for_this_entry.=\n+\n+Duplicate_Key_Warning=\n+\n+Duplicate_pairs_found=\n+\n+duplicate_removal=\n+\n+Duplicate_string_name=\n+\n+Duplicates_found=\n+\n+Duplicates_removed=\n+\n+Dynamic_groups=\n+\n+Dynamically_group_entries_by_a_free-form_search_expression=\n+\n+Dynamically_group_entries_by_searching_a_field_for_a_keyword=\n+\n+Each_line_must_be_on_the_following_form=\n+\n+Edit=\n+\n+Edit_custom_export=\n+Edit_entry=\n+Edit_file_link=\n+Edit_file_type=\n+\n+Edit_group=\n+\n+Edit_journal=\n+\n+Edit_preamble=\n+Edit_strings=\n+Editor_options=\n+\n+empty_BibTeX_key=\n+\n+Empty_BibTeX_key._Grouping_may_not_work_for_this_entry.=\n+\n+empty_database=\n+Enable_word/name_autocompletion=\n+\n+Endnote=\n+\n+Enter_URL=\n+\n+Enter_URL_to_download=\n+\n+entries=\n+\n+Entries_cannot_be_manually_assigned_to_or_removed_from_this_group.=\n+\n+Entries_exported_to_clipboard=\n+\n+entries_have_undefined_BibTeX_key=\n+\n+entries_into_new_database=\n+\n+entry=\n+\n+Entry_editor=\n+\n+Entry_in_current_database=\n+\n+Entry_in_import=\n+\n+Entry_preview=\n+\n+Entry_table=\n+\n+Entry_table_columns=\n+\n+Entry_type=\n+\n+Entry_type_names_are_not_allowed_to_contain_white_space_or_the_following_characters=\n+\n+Entry_types=\n+\n+Error=\n+Error\\:_=\n+Error_converting_BibTeX_to_XMP\\:_%0=\n+Error_converting_XMP_to_'%0'...=\n+Error_exporting_to_clipboard=\n+\n+##Error:_check_your_External_viewer_settings_in_Preferences=\n+Error_in_field=\n+Error_in_starting_plug-in_system._Starting_without,_but_some_functionality_may_be_missing.=\n+Error_occured_when_parsing_entry=\n+\n+Error_opening_file=\n+\n+Error_setting_field=\n+Error_while_converting_BibtexEntry_to_XMP_%0=\n+Error_while_downloading_file\\:=\n+Error_while_writing=\n+Error_writing_to_%0_file(s).=\n+Error_writing_XMP_to_file\\:_%0=\n+\n+\n+Establishing_SQL_connection...=\n+Exceptions=\n+\n+Existing_file=\n+\n+exists._Overwrite_file?=\n+exists._Overwrite?=\n+\n+Expand_subtree=\n+\n+#previousentrynottranslated.Toviewit,openGroupinterfaceandclickonthe\"newgroup\"button\n+Export=\n+\n+Export_name=\n+\n+Export_preferences=\n+\n+Export_preferences_to_file=\n+\n+Export_properties=\n+\n+Export_to_clipboard=\n+Export_to_SQL_database=\n+\n+Exporting=\n+Extension=\n+\n+External_changes=\n+\n+External_file_links=\n+\n+External_files=\n+\n+External_programs=\n+\n+External_viewer_called=\n+\n+Failed_to_read_groups_data_(unsupported_version\\:_%0)=\n+\n+Fetch=\n+\n+Field=\n+\n+field=\n+\n+#Integritycheckisaprocessthatchecksforindicationsofwronglyfilledoutbibtexfields.\"Scan\"isthebuttonthatstartsthecheck.\n+Field_content=\n+\n+Field_name=\n+Field_names_are_not_allowed_to_contain_white_space_or_the_following_characters=\n+\n+Field_sizes=\n+Field_to_filter=\n+\n+Field_to_group_by=\n+\n+File=\n+\n+file=\n+\n+File_'%0'_is_already_open.=\n+\n+File_'%0'_not_found=\n+\n+File_changed=\n+File_directory_is_'%0'\\:=\n+\n+File_directory_is_not_set_or_does_not_exist!=\n+File_download=\n+File_exists=\n+\n+File_extension=\n+File_has_been_updated_externally._What_do_you_want_to_do?=\n+\n+File_not_found=\n+File_type=\n+\n+File_updated_externally=\n+\n+filename=\n+\n+Files_opened=\n+\n+Filter=\n+\n+Finished_autosetting_external_links.=\n+\n+Finished_synchronizing_%0_links._Entries_changed%c_%1.=\n+Finished_writing_XMP-metadata._Wrote_to_%0_file(s).=\n+Finished_writing_XMP_for_%0_file_(%1_skipped,_%2_errors).=\n+\n+First_select_the_entries_you_want_keys_to_be_generated_for.=\n+\n+Fit_table_horizontally_on_screen=\n+\n+Float=\n+Float_marked_entries=\n+\n+Font_Family=\n+\n+Font_Preview=\n+\n+Font_Size=\n+\n+Font_Style=\n+\n+FontSelector=\n+\n+for=\n+\n+Format_of_author_and_editor_names=\n+Format_String=\n+\n+Format_used=\n+Formatter_Name=\n+\n+Formatter_not_found=\n+\n+found=\n+Found_%0_plugin(s)=\n+\n+found_in_aux_file=\n+\n+Full_name=\n+\n+General=\n+\n+General_fields=\n+\n+Generate=\n+\n+Generate_BibTeX_key=\n+\n+Generate_keys=\n+\n+Generate_keys_before_saving_(for_entries_without_a_key)=\n+Generate_keys_for_imported_entries=\n+\n+Generate_now=\n+\n+Generated_BibTeX_key_for=\n+\n+Generating_BibTeX_key_for=\n+\n+Grab=\n+\n+Gray_out_entries_not_in_group_selection=\n+\n+Gray_out_non-hits=\n+\n+Gray_out_non-matching_entries=\n+\n+Group_properties=\n+\n+grouping_may_not_work_for_this_entry=\n+\n+Groups=\n+\n+Harvard_RTF=\n+\n+Have_you_chosen_the_correct_package_path?=\n+\n+Help=\n+\n+Help_contents=\n+\n+Help_on_groups=\n+\n+Help_on_key_patterns=\n+Help_on_Preview_Settings=\n+Help_on_Regular_Expression_Search=\n+\n+Hide_non-hits=\n+\n+Hide_non-matching_entries=\n+\n+Hierarchical_context=\n+\n+Highlight=\n+Highlight_groups_matching_all_selected_entries=\n+Highlight_groups_matching_any_selected_entry=\n+\n+Highlight_overlapping_groups=\n+\n+Hint%c_To_search_specific_fields_only,_enter_for_example%c<p><tt>author%esmith_and_title%eelectrical</tt>=\n+\n+HTML=\n+HTML_table=\n+HTML_table_(with_Abstract_&_BibTeX)=\n+Icon=\n+\n+Ignore=\n+\n+Immediate_subgroups=\n+\n+Import=\n+\n+Import_and_keep_old_entry=\n+\n+Import_and_remove_old_entry=\n+\n+Import_entries=\n+\n+Import_failed=\n+\n+Import_file=\n+\n+Import_group_definitions=\n+\n+Import_name=\n+\n+Import_preferences=\n+\n+Import_preferences_from_file=\n+\n+Import_strings=\n+\n+Import_to_open_tab=\n+\n+Import_word_selector_definitions=\n+\n+Imported_database=\n+\n+Imported_entries=\n+\n+Imported_from_database=\n+\n+ImportFormat_class=\n+\n+Importing=\n+\n+Importing_in_unknown_format=\n+\n+In_JabRef,_use_pairs_of_#_characters_to_indicate_a_string.=\n+\n+Include_abstracts=\n+Include_entries=\n+\n+Include_subgroups\\:_When_selected,_view_entries_contained_in_this_group_or_its_subgroups=\n+\n+Incremental=\n+\n+Incremental_search=\n+\n+Incremental_search_failed._Repeat_to_search_from_top.=\n+\n+Independent_group\\:_When_selected,_view_only_this_group's_entries=\n+\n+Initially_show_groups_tree_expanded=\n+\n+Input=\n+\n+Input_error=\n+\n+Insert=\n+\n+Insert_rows=\n+\n+Insert_selected_citations_into_LyX/Kile=\n+\n+Insert_selected_citations_into_WinEdt=\n+\n+insert_string_=\n+\n+Insert_URL=\n+\n+#Integritycheckisaprocessthatchecksforindicationsofwronglyfilledoutbibtexfields.\"Scan\"isthebuttonthatstartsthecheck.\n+Integrity_check=\n+\n+Intersection=\n+\n+Invalid_BibTeX_key=\n+\n+Invalid_date_format=\n+\n+Invalid_URL=\n+\n+Inverted=\n+\n+ISO_abbreviation=\n+\n+JabRef_help=\n+\n+JabRef_preferences=\n+\n+Journal_abbreviations=\n+\n+Journal_list_preview=\n+\n+Journal_name=\n+\n+Keep=\n+\n+Keep_both=\n+\n+Keep_lower=\n+\n+Keep_upper=\n+\n+Key_bindings=\n+\n+Key_bindings_changed=\n+\n+Key_generator_settings=\n+\n+Key_pattern=\n+\n+keys_in_database=\n+\n+#nottranslated.Toviewit,usemenu\"Tools|NewBibTeXfilefromAUxfile\",andlaunchtheactiononanon-existantauxfile.\n+Keyword=\n+\n+Label=\n+\n+Language=\n+\n+Last_modified=\n+\n+LaTeX_AUX_file=\n+Leave_file_in_its_current_directory.=\n+Leave_files_in_their_current_directory.=\n+\n+Left=\n+\n+License=\n+\n+Limit_to_fields=\n+\n+Limit_to_selected_entries=\n+\n+Link=\n+Link_local_file=\n+Link_to_file_%0=\n+\n+Listen_for_remote_operation_on_port=\n+Load_and_Save_preferences_from/to_jabref.xml_on_start-up_(memory_stick_mode)=\n+\n+Load_session=\n+\n+Loading_session...=\n+\n+Look_and_feel=\n+Looking_for_pdf...=\n+lower=\n+Main_file_directory=\n+\n+Main_layout_file=\n+\n+Main_PDF_directory=\n+\n+Main_PS_directory=\n+\n+Manage=\n+\n+Manage_custom_exports=\n+\n+Manage_custom_imports=\n+Manage_external_file_types=\n+\n+Manage_journal_abbreviations=\n+\n+Mark_entries=\n+\n+Mark_entry=\n+\n+Mark_new_entries_with_addition_date=\n+\n+Mark_new_entries_with_owner_name=\n+\n+Marked_selected=\n+Memory_Stick_Mode=\n+\n+Menu_and_label_font_size=\n+\n+Merged_external_changes=\n+\n+Messages=\n+\n+Messages_and_Hints=\n+\n+Modification_of_field=\n+\n+Modified_group_\"%0\".=\n+\n+Modified_groups=\n+\n+Modified_string=\n+\n+Modify=\n+\n+modify_group=\n+\n+MODS=\n+\n+Move=\n+\n+Move_down=\n+\n+Move_entries_in_group_selection_to_the_top=\n+Move_external_links_to_'file'_field=\n+Move_files_to_file_directory.=\n+\n+move_group=\n+\n+Move_string_down=\n+\n+Move_string_up=\n+\n+Move_up=\n+\n+Moved_group_\"%0\".=\n+MS_Office_2007=\n+MySQL=\n+MySQL_database=\n+\n+Name=\n+Name_formatter=\n+\n+Natbib_style=\n+\n+nested_aux_files=\n+\n+New=\n+\n+new=\n+\n+New_BibTeX_database=\n+\n+New_BibTeX_entry=\n+\n+New_BibTeX_subdatabase=\n+\n+New_content=\n+\n+New_database_created.=\n+New_field_value=\n+\n+New_file=\n+New_file_link_(INSERT)=\n+\n+New_group=\n+\n+New_string=\n+\n+Next_entry=\n+\n+No_%0_found=\n+\n+No_actual_changes_found.=\n+\n+no_base-bibtex-file_specified=\n+\n+no_database_generated=\n+\n+No_duplicates_found=\n+\n+No_entries_found._Please_make_sure_you_are_using_the_correct_import_filter.=\n+\n+\n+No_entries_found_for_the_search_string_'%0'=\n+\n+No_entries_imported.=\n+\n+No_entries_or_multiple_entries_selected.=\n+No_entries_selected.=\n+\n+No_exceptions_have_ocurred.=\n+No_files_found.=\n+\n+No_GUI._Only_process_command_line_options.=\n+\n+No_journal_names_could_be_abbreviated.=\n+\n+No_journal_names_could_be_unabbreviated.=\n+No_PDF_linked=\n+\n+No_pdf_or_ps_defined,_and_no_file_matching_Bibtex_key_found=\n+No_plugins_were_found_in_the_following_folders\\:=\n+\n+No_references_found=\n+\n+No_saved_session_found.=\n+\n+No_url_defined=\n+No_XMP_metadata_found_in_=\n+\n+not=\n+\n+not_found=\n+\n+Not_saved_(empty_session)=\n+\n+Note_that_the_entry_causing_the_problem_has_been_selected.=\n+\n+Note_that_you_must_specify_the_fully_qualified_class_name_for_the_look_and_feel,=\n+\n+Nothing_to_redo=\n+\n+Nothing_to_undo=\n+\n+#Thenextisusedlikein\"Referencesfound:1Numberofreferencestofetch?\"\n+Number_of_references_to_fetch?=\n+\n+occurences=\n+\n+Ok=\n+One_or_more_file_links_are_of_the_type_'%0',_which_is_undefined._What_do_you_want_to_do?=\n+\n+One_or_more_keys_will_be_overwritten._Continue?=\n+Only_one_item_is_supported=\n+\n+Open=\n+\n+Open_BibTeX_database=\n+\n+Open_database=\n+\n+Open_editor_when_a_new_entry_is_created=\n+\n+Open_file=\n+\n+Open_last_edited_databases_at_startup=\n+\n+Open_PDF_or_PS=\n+\n+Open_right-click_menu_with_Ctrl+left_button=\n+\n+Open_URL_or_DOI=\n+OpenDocument_Spreadsheet=\n+\n+Opened_database=\n+\n+Opening=\n+\n+Opening_preferences...=\n+\n+OpenOffice_Calc=\n+OpenOffice_CSV=\n+Operation_canceled.\\n=\n+Operation_not_supported=\n+\n+Optional_fields=\n+\n+Options=\n+\n+or=\n+\n+out_of=\n+Output=\n+\n+Output_or_export_file=\n+\n+Override=\n+\n+Override_default_file_directories=\n+\n+Override_default_font_settings=\n+\n+override_the_bibtex_key_by_the_selected_text=\n+\n+\n+Overwrite=\n+Overwrite_existing_field_values=\n+\n+Overwrite_keys=\n+\n+pairs_processed=\n+Password_\\:=\n+\n+Paste=\n+\n+paste_entries=\n+\n+paste_entry=\n+Paste_from_clipboard=\n+\n+Pasted=\n+\n+Path_to_%0_not_defined=\n+\n+Path_to_LatexEditor_(LEd.exe)=\n+\n+Path_to_LyX_pipe=\n+\n+Path_to_Vim=\n+\n+Path_to_WinEdt.exe=\n+\n+PDF_directory=\n+PDF_does_not_exist=\n+\n+Personal_journal_list=\n+\n+Plain_text_import=\n+\n+Please_enter_a_name_for_the_group.=\n+\n+Please_enter_a_search_term._For_example,_to_search_all_fields_for_<b>Smith</b>,_enter%c<p><tt>smith</tt><p>To_search_the_field_<b>Author</b>_for_<b>Smith</b>_and_the_field_<b>Title</b>_for_<b>electrical</b>,_enter%c<p><tt>author%esmith_and_title%eelectrical</tt>=\n+\n+Please_enter_the_field_to_search_(e.g._<b>keywords</b>)_and_the_keyword_to_search_it_for_(e.g._<b>electrical</b>).=\n+\n+Please_enter_the_string's_label=\n+\n+Please_select_an_importer.=\n+\n+Please_select_exactly_one_group_to_move.=\n+Please_specify_the_=\n+\n+Possible_duplicate_entries=\n+\n+Possible_duplicate_of_existing_entry._Click_to_resolve.=\n+\n+Preamble=\n+\n+Preferences=\n+\n+Preferences_recorded.=\n+\n+Preview=\n+\n+Previous_entry=\n+\n+Primary_sort_criterion=\n+Print_Preview=\n+Printing_Entry_Preview=\n+\n+Problem_with_parsing_entry=\n+Processing_=\n+Program_output=\n+\n+PS_directory=\n+Push_entries_to_external_application_(%0)=\n+\n+Push_selection_to_Emacs=\n+\n+Push_selection_to_LyX/Kile=\n+Push_selection_to_Vim=\n+\n+Push_selection_to_WinEdt=\n+\n+Push_to_LatexEditor=\n+Pushed_citations_to_%0=\n+\n+Pushed_citations_to_Emacs=\n+Pushed_citations_to_Vim=\n+\n+Pushed_citations_to_WinEdt=\n+\n+Pushed_the_citations_for_the_following_rows_to=\n+\n+Quit_JabRef=\n+\n+Quit_synchronization=\n+\n+Raw_source=\n+\n+Really_delete_the_selected=\n+\n+Rearrange_tabs_alphabetically_by_title=\n+\n+Redo=\n+\n+Reference_database=\n+\n+#Thenexttwolinesareusedlikein\"Referencesfound:1Numberofreferencestofetch?\"\n+References_found=\n+\n+Refine_supergroup\\:_When_selected,_view_entries_contained_in_both_this_group_and_its_supergroup=\n+\n+Refresh_view=\n+\n+Regular_Expression=\n+\n+Remember_these_entry_types?=\n+\n+Remote_operation=\n+\n+Remote_server_port=\n+\n+Remove=\n+\n+Remove_all?=\n+\n+Remove_all_subgroups=\n+\n+Remove_all_subgroups_of_\"%0\"?=\n+\n+Remove_double_braces_around_BibTeX_fields_when_loading.=\n+\n+Remove_duplicates=\n+\n+Remove_entry_from_import=\n+\n+Remove_entry_selection_from_this_group=\n+\n+Remove_entry_type=\n+Remove_file_link_(DELETE)=\n+\n+remove_from_group=\n+\n+Remove_from_group=\n+\n+Remove_group=\n+\n+Remove_group,_keep_subgroups=\n+\n+Remove_group_\"%0\"?=\n+\n+Remove_group_\"%0\"_and_its_subgroups?=\n+\n+remove_group_(keep_subgroups)=\n+\n+remove_group_and_subgroups=\n+\n+Remove_group_and_subgroups=\n+\n+Remove_link=\n+\n+Remove_old_entry=\n+\n+Remove_selected_strings=\n+\n+remove_string_=\n+\n+Removed_group_\"%0\".=\n+\n+Removed_group_\"%0\"_and_its_subgroups.=\n+\n+Removed_string=\n+\n+Renamed_string=\n+\n+Replace_(regular_expression)=\n+\n+Replace_string=\n+\n+Replace_with=\n+\n+Replaced=\n+\n+Required_fields=\n+\n+Reset_all=\n+Reset_file_type_definitons=\n+\n+Resolve_strings_for_all_fields_except=\n+Resolve_strings_for_standard_BibTeX_fields_only=\n+\n+resolved=\n+\n+Results=\n+\n+Revert_to_original_source=\n+\n+Review=\n+\n+Review_changes=\n+\n+Right=\n+\n+Save=\n+Save_all_finished.=\n+\n+Save_all_open_databases=\n+\n+Save_before_closing=\n+\n+Save_database=\n+Save_database_as_...=\n+\n+Save_entries_in_their_original_order=\n+\n+Save_failed=\n+\n+Save_failed_during_backup_creation=\n+\n+Save_failed_while_committing_changes=\n+\n+Save_ordered_by_author/editor/year=\n+Save_selected_as_...=\n+\n+Saved_database=\n+\n+Saved_selected_to=\n+\n+Saved_session=\n+\n+Saving=\n+Saving_all_databases...=\n+\n+Saving_database=\n+\n+Scan=\n+\n+Search=\n+\n+Search_all_fields=\n+\n+Search_error=\n+\n+Search_expression=\n+\n+Search_for=\n+\n+Search_general_fields=\n+\n+Search_IEEEXplore=\n+\n+Search_optional_fields=\n+\n+Search_required_fields=\n+\n+Search_specified_field(s)=\n+\n+Searched_database._Global_number_of_hits=\n+\n+Searched_database._Number_of_hits=\n+\n+Searching_for_%0_file=\n+\n+Searching_for_duplicates...=\n+\n+Searching_for_files=\n+\n+Secondary_sort_criterion=\n+\n+Select=\n+\n+Select_a_Zip-archive=\n+\n+Select_action=\n+\n+Select_all=\n+\n+Select_Classpath_of_New_Importer=\n+\n+Select_encoding=\n+\n+Select_entries_in_group_selection=\n+\n+Select_entry_type=\n+Select_external_application=\n+\n+Select_file_from_ZIP-archive=\n+\n+Select_format=\n+Select_icon=\n+\n+Select_matches=\n+\n+Select_new_ImportFormat_Subclass=\n+\n+Select_the_tree_nodes_to_view_and_accept_or_reject_changes=\n+Selected_entries=\n+Server_Hostname_\\:=\n+Server_Type_\\:=\n+Set_field=\n+Set_fields=\n+\n+Set_general_fields=\n+Set_main_external_file_directory=\n+\n+Set_table_font=\n+\n+Settings=\n+\n+Setup_selectors=\n+\n+Short_form=\n+\n+Shortcut=\n+\n+Show/edit_BibTeX_source=\n+\n+Show_'Firstname_Lastname'=\n+\n+Show_'Lastname,_Firstname'=\n+\n+Show_BibTeX_source_by_default=\n+\n+Show_BibTeX_source_panel=\n+\n+Show_confirmation_dialog_when_deleting_entries=\n+\n+Show_description=\n+\n+Show_dynamic_groups_in_<i>italics</i>=\n+\n+Show_entries_*not*_in_group_selection=\n+\n+Show_file_column=\n+\n+Show_icons_for_groups=\n+Show_last_names_only=\n+\n+Show_names_unchanged=\n+\n+Show_one_less_rows=\n+\n+Show_one_more_row=\n+\n+Show_optional_fields=\n+\n+Show_PDF/PS_column=\n+\n+Show_required_fields=\n+\n+Show_URL/DOI_column=\n+\n+Show_warning_dialog_when_a_duplicate_BibTeX_key_is_entered=\n+\n+Show_warning_dialog_when_an_empty_BibTeX_key_is_entered=\n+\n+Simple_HTML=\n+\n+Size=\n+\n+Skip=\n+Skipped_-_No_PDF_linked=\n+Skipped_-_PDF_does_not_exist=\n+\n+Skipped_entry.=\n+\n+Sort_alphabetically=\n+\n+Sort_Automatically=\n+\n+Sort_order=\n+\n+sort_subgroups=\n+\n+Sorted_all_subgroups_recursively.=\n+\n+Sorted_immediate_subgroups.=\n+\n+source_edit=\n+Special_Name_Formatters=\n+\n+Special_table_columns=\n+SQL_connection_established.=\n+\n+Start_incremental_search=\n+\n+Start_search=\n+Starting_import=\n+\n+Statically_group_entries_by_manual_assignment=\n+\n+Status=\n+\n+Stop=\n+\n+Store_journal_abbreviations=\n+\n+Store_string=\n+\n+Store_the_following_fields_with_braces_around_capital_letters=\n+\n+Stored_entry=\n+\n+Strings=\n+\n+Strings_for_database=\n+\n+Subdatabase_from_aux=\n+\n+Suggest=\n+\n+Switches_between_full_and_abbreviated_journal_name_if_the_journal_name_is_known.=\n+\n+Synchronize_%0_links=\n+Synchronize_file_links=\n+\n+Synchronizing_%0_links...=\n+\n+Table_appearance=\n+\n+Table_background_color=\n+\n+Table_grid_color=\n+\n+Table_text_color=\n+\n+Tabname=\n+Target_file_cannot_be_a_directory.=\n+\n+Tertiary_sort_criterion=\n+\n+Test=\n+\n+Text_Input_Area=\n+\n+The_chosen_date_format_for_new_entries_is_not_valid=\n+\n+The_chosen_encoding_'%0'_could_not_encode_the_following_characters\\:_=\n+\n+\n+The_current_version_features_a_new_way_of_handling_links_to_external_files.<br>To_take_advantage_of_this,_your_links_must_be_changed_into_the_new_format,_and<br>JabRef_must_be_configured_to_show_the_new_links.=\n+\n+the_field_<b>%0</b>=\n+\n+The_file<BR>'%0'<BR>has_been_modified<BR>externally!=\n+\n+The_group_\"%0\"_already_contains_the_selection.=\n+\n+The_label_of_the_string_can_not_be_a_number.=\n+\n+The_label_of_the_string_can_not_contain_spaces.=\n+\n+The_label_of_the_string_can_not_contain_the_'#'_character.=\n+\n+The_output_option_depends_on_a_valid_import_option.=\n+The_PDF_contains_one_or_several_bibtex-records.\\nDo_you_want_to_import_these_as_new_entries_into_the_current_database?=\n+\n+The_regular_expression_<b>%0</b>_is_invalid%c=\n+\n+The_search_is_case_insensitive.=\n+\n+The_search_is_case_sensitive.=\n+\n+The_string_has_been_removed_locally=\n+\n+There_are_possible_duplicates_(marked_with_a_'D'_icon)_that_haven't_been_resolved._Continue?=\n+This_database_was_written_using_an_older_version_of_JabRef.=\n+\n+This_entry_has_no_BibTeX_key._Generate_key_now?=\n+\n+This_entry_is_incomplete=\n+\n+This_entry_type_cannot_be_removed.=\n+\n+This_external_link_is_of_the_type_'%0',_which_is_undefined._What_do_you_want_to_do?=\n+\n+This_group_contains_entries_based_on_manual_assignment._Entries_can_be_assigned_to_this_group_by_selecting_them_then_using_either_drag_and_drop_or_the_context_menu._Entries_can_be_removed_from_this_group_by_selecting_them_then_using_the_context_menu._Every_entry_assigned_to_this_group_must_have_a_unique_key._The_key_may_be_changed_at_any_time_as_long_as_it_remains_unique.=\n+\n+This_group_contains_entries_in_which=\n+\n+This_group_contains_entries_in_which_any_field_contains_the_regular_expression_<b>%0</b>=\n+\n+This_group_contains_entries_in_which_any_field_contains_the_term_<b>%0</b>=\n+\n+This_group_contains_entries_whose_<b>%0</b>_field_contains_the_keyword_<b>%1</b>=\n+\n+This_group_contains_entries_whose_<b>%0</b>_field_contains_the_regular_expression_<b>%1</b>=\n+This_makes_JabRef_look_up_each_%0_link_and_check_if_the_file_exists._If_not,_you_will_be_given_options<BR>to_resolve_the_problem.=\n+\n+This_operation_requires_all_selected_entries_to_have_BibTex_keys_defined.=\n+This_operation_requires_at_least_one_entry.=\n+\n+This_operation_requires_one_or_more_entries_to_be_selected.=\n+\n+To_set_up,_go_to_<B>Tools_->_Manage_journal_abbreviations</B>=\n+\n+Toggle_abbreviation=\n+Toggle_entry_preview=\n+Toggle_groups_interface=\n+Toggle_search_panel=\n+\n+Try_different_encoding=\n+\n+Type_set_to_'other'=\n+Unabbreviate_journal_names_of_the_selected_entries=\n+Unabbreviated_%0_journal_names.=\n+\n+Unable_to_create_graphical_interface=\n+\n+Unable_to_open_file.=\n+Unable_to_open_link._The_application_'%0'_associated_with_the_file_type_'%1'_could_not_be_called.=\n+Unable_to_read_default_icon_theme.=\n+Unable_to_read_icon_theme_file=\n+\n+unable_to_write_to=\n+Undefined_file_type=\n+\n+Undo=\n+\n+Union=\n+\n+Unknown_bibtex_entries=\n+\n+unknown_edit=\n+\n+unknown_entry_type=\n+\n+Unknown_export_format=\n+\n+Unmark_all=\n+\n+Unmark_entries=\n+\n+Unmark_entry=\n+\n+Unpack_EndNote_filter_set=\n+\n+Unpacked_file.=\n+\n+Unsupported_version_of_class_%0\\:_%1=\n+\n+untitled=\n+\n+Up=\n+\n+Update_to_current_column_widths=\n+\n+Updated_group_selection=\n+Upgrade_external_PDF/PS_links_to_use_the_'%0'_field.=\n+Upgrade_file=\n+Upgrade_old_external_file_links_to_use_the_new_feature=\n+Upgraded_links.=\n+UPPER=\n+Upper_Each_First=\n+Upper_first=\n+\n+usage=\n+Use_autocompletion_for_the_following_fields=\n+Use_default_viewer=\n+\n+Use_inspection_window_also_when_a_single_entry_is_imported.=\n+Use_native_file_dialog=\n+\n+Use_other_look_and_feel=\n+Use_Regular_Expression_Search=\n+\n+Use_regular_expressions=\n+Username_\\:=\n+\n+Value_cleared_externally=\n+\n+Value_set_externally=\n+\n+verify_that_LyX_is_running_and_that_the_lyxpipe_is_valid=\n+\n+View=\n+Vim_Server_Name=\n+\n+Waiting_for_ArXiv...=\n+\n+Warn_about_unresolved_duplicates_when_closing_inspection_window=\n+\n+Warn_before_overwriting_existing_keys=\n+\n+Warning=\n+\n+Warning_there_is_a_duplicate_key=\n+\n+Warnings=\n+\n+web_link=\n+\n+What_do_you_want_to_do?=\n+\n+When_adding/removing_keywords,_separate_them_by=\n+Will_write_XMP-metadata_to_the_PDFs_linked_from_selected_entries.=\n+\n+with=\n+\n+Word=\n+Write_BibtexEntry_as_XMP-metadata_to_PDF.=\n+\n+Write_XMP=\n+Write_XMP-metadata=\n+Write_XMP-metadata_for_all_PDFs_in_current_database?=\n+Writing_XMP=\n+Writing_XMP_metadata...=\n+Writing_XMP_metadata_for_selected_entries...=\n+Writing_XMP_to_'%0'...=\n+\n+Wrong_file_format=\n+\n+Wrote_XMP-metadata=\n+Wrote_XMP_to_'%0'.=\n+\n+XMP-annotated_PDF=\n+XMP_Export_Privacy_Settings=\n+XMP_metadata=\n+XMP_metadata_found_in_PDF\\:_%0=\n+You_must_restart_JabRef_for_this_to_come_into_effect.=\n+You_have_changed_the_language_setting.=\n+\n+You_have_changed_the_look_and_feel_setting.=\n+\n+You_have_cleared_this_field._Original_value=\n+\n+You_have_entered_an_invalid_search_'%0'.=\n+\n+You_must_choose_a_file_name_to_store_journal_abbreviations=\n+\n+You_must_restart_JabRef_for_the_new_key_bindings_to_work_properly.=\n+\n+You_must_set_both_BibTeX_key_and_%0_directory=\n+\n+Your_new_key_bindings_have_been_stored.=\n+\n+\n+The_following_fetchers_are_available\\:=\n+Could_not_find_fetcher_'%0'=\n+Running_Query_'%0'_with_fetcher_'%1'.=\n+Query_'%0'_with_fetcher_'%1'_did_not_return_any_results.=\n+Open_SPIRES_entry=\n+Move/Rename_file=\n+File_moved=\n+Move_file_failed=\n+Could_not_move_file=\n+Could_not_find_file_'%0'.=\n+Number_of_entries_successfully_imported=\n+Import_canceled_by_user=\n+Progress\\:_%0_of_%1=\n+Error_while_fetching_from_JSTOR=\n+\n+Fetching_Medline_by_id...=\n+\n+Fetching_Medline_by_term...=\n+Medline_import_canceled=\n+Please_enter_a_valid_number=\n+Please_enter_a_comma_separated_list_of_Medline_IDs_(numbers)_or_search_terms.=\n+An_Error_occurred_while_fetching_from_SPIRES_source_(%0)\\:=\n+Error_while_fetching_from_Spires\\:_=\n+Connect_to_external_SQL_database=\n+Export_to_external_SQL_database=\n+\n+Show_results_in_dialog=\n+Global_search=\n+Show_search_results_in_a_window=\n+Search_results=\n+Move_file_to_file_directory?=\n+Rename_to_'%0'=\n+Move_to_file_directory=\n+You_have_changed_the_menu_and_label_font_size.=\n+\n+Database_is_protected._Cannot_save_until_external_changes_have_been_reviewed.=\n+Protected_database=\n+Refuse_to_save_the_database_before_external_changes_have_been_reviewed.=\n+Database_protection=\n+Unable_to_save_database=\n+\n+BibTeX_key_generator=\n+Unable_to_open_link.=\n+Search_JSTOR=\n+Attempting_SQL_import...=\n+BibO_RDF=\n+HTML_parser=\n+\n+Move_the_keyboard_focus_to_the_entry_table=\n+MIME_type=\n+\n+This_feature_lets_new_files_be_opened_or_imported_into_an_already_running_instance_of_JabRef<BR>instead_of_opening_a_new_instance._For_instance,_this_is_useful_when_you_open_a_file_in_JabRef<br>from_your_web_browser.<BR>Note_that_this_will_prevent_you_from_running_more_than_one_instance_of_JabRef_at_a_time.=\n+Note_that_these_settings_are_used_for_the_legacy_<b>pdf</b>_and_<b>ps</b>_fields_only.<br>For_most_users,_setting_the_<b>Main_file_directory</b>_above_should_be_sufficient.=\n+Legacy_file_fields=\n+\n+This_makes_JabRef_look_up_each_%0_extension_and_check_if_the_file_exists._If_not,_you_will_be_given_options<BR>to_resolve_the_problem.=\n+Run_Fetcher,_e.g._\"--fetch\\=\n+\n+The_ACM_Digital_Library=\n+Reset=\n+\n+Use_IEEE_LaTeX_abbreviations=\n+The_Guide_to_Computing_Literature=\n+Search_ACM_Portal=\n+Connection_to_ACM_Portal_failed=\n+\n+When_opening_file_link,_search_for_matching_file_if_no_link_is_defined=\n+Settings_for_%0=\n+Insert_selected_citations_into_Vim=\n+RIS=\n+\n+Assign_exclusively_to_group=\n+\n+Bad_Request_'%0'.=\n+\n+Mark_entries_imported_into_an_existing_database=\n+Unmark_all_entries_before_importing_new_entries_into_an_existing_database=\n+\n+Forward=\n+Back=\n+Sort_the_following_fields_as_numeric_fields=\n+Line_%0\\:_Found_corrupted_BibTeX-key.=\n+Line_%0\\:_Found_corrupted_BibTeX-key_(contains_whitespaces).=\n+Line_%0\\:_Found_corrupted_BibTeX-key_(comma_missing).=\n+Finished_downloading_full_text_document=\n+Unable_to_find_full_text_document_in_the_linked_web_page.=\n+Connection_error_when_trying_to_find_full_text_document.=\n+This_entry_provides_no_URL_or_DOI_links.=\n+Full_text_article_download_failed=\n+Update_to_current_column_order=\n+\n+Rename_field=\n+Set/clear/rename_fields=\n+Rename_field_to\\:=\n+Move_contents_of_a_field_into_a_field_with_a_different_name=\n+You_can_only_rename_one_field_at_a_time=\n+\n+Remove_all_broken_links=\n+\n+Cannot_use_port_%0_for_remote_operation;_another_application_may_be_using_it._Try_specifying_another_port.=\n+\n+Plugin_installer=\n+Unable_to_create_plugin_directory=\n+Unable_to_copy_file=\n+Plugin_installed_successfully._You_must_restart_JabRef_to_load_the_new_plugin.=\n+Unable_to_create_user_plugin_directory=\n+Plugin_installation_failed.=\n+The_same_version_of_this_plugin_is_already_installed.=\n+A_newer_version_of_this_plugin_is_already_installed.=\n+One_or_more_older_versions_of_this_plugin_is_installed._Delete_old_versions?=\n+Old_versions_deleted_successfully.=\n+\n+\n+Install_plugin=\n+Download_plugin=\n+Plugin_manager=\n+Delete_the_%0_selected_plugins?=\n+Delete_plugins=\n+Delete_the_selected_plugin?=\n+Delete_plugin=\n+Enter_download_URL=\n+Plugin_name=\n+Version=\n+Unknown=\n+Not_loaded=\n+Loaded=\n+Install_anyway?=\n+\n+Looking_for_full_text_document...=\n+Unable_to_find_full_text_article._No_search_algorithm_defined_for_the_'%0'_web_site.=\n+Found_pdf_link,_but_received_the_wrong_MIME_type._This_could_indicate_that_you_don't_have_access_to_the_fulltext_article.=\n+\n+Autosave=\n+Prompt_before_recovering_a_database_from_an_autosave_file=\n+Autosave_interval_(minutes)=\n+Do_you_want_to_recover_the_database_from_the_autosave_file?=\n+Recover_from_autosave=\n+%0_warnings=\n+\n+Save_in_current_table_sort_order=\n+Export_in_current_table_sort_order=\n+Export_ordered_by_author/editor/year=\n+Export_entries_in_their_original_order=\n+Error_opening_file_'%0'.=\n+Autosave_of_file_'%0'=\n+Error_opening_autosave_of_'%0'._Trying_to_load_'%0'_instead.=\n+\n+\n+Plugins_installed_in_your_user_plugin_directory_(%0)\\:=\n+Plugins_installed_in_other_locations\\:=\n+Plugins_will_be_deleted_next_time_JabRef_starts_up.=\n+Plugin_will_be_deleted_next_time_JabRef_starts_up.=\n+Old_plugin_versions_will_be_deleted_next_time_JabRef_starts_up.=\n+Formatter_not_found\\:_%0=\n+The_following_formatters_could_not_be_found=\n+\n+Clear_inputarea=\n+\n+Automatically_set_file_links_for_this_entry=\n+Could_not_save,_file_locked_by_another_JabRef_instance.=\n+File_is_locked_by_another_JabRef_instance.=\n+Do_you_want_to_override_the_file_lock?=\n+File_locked=\n+Current_tmp_value=\n+Metadata_change=\n+Changes_have_been_made_to_the_following_metadata_elements=\n+\n+Generate_groups_for_author_last_names=\n+Generate_groups_for_editor_last_names=\n+Generate_groups_from_keywords_in_a_BibTeX_field=\n+Enforce_legal_characters_in_BibTeX_keys=\n+The_#_character_is_not_allowed_in_BibTeX_strings_unless_escaped_as_in_'\\\\#'.=\n+Before_saving,_please_edit_any_strings_containing_the_#_character.=\n+\n+Save_without_backup?=\n+Unable_to_create_backup=\n+Move_file_to_file_directory.=\n+Rename_file_to=\n+<b>All_Entries</b>_(this_group_cannot_be_edited_or_removed)=\n+static_group=\n+dynamic_group=\n+refines_supergroup=\n+includes_subgroups=\n+contains=\n+search_expression=\n+\n+Disable_file_renaming_in_non-native_file_dialog=\n+File_dialog=\n+No_entries_found._It_looks_like_you_do_not_have_access_to_search_JStor.=\n+\n+Search_ScienceDirect=\n+Error_while_fetching_from_ScienceDirect=\n+\n+Error_initializing_custom_export_format_from_string_'%0'=\n+BibLaTeX_mode=\n+Optional_fields_2=\n+Waiting_for_save_operation_to_finish=\n+Resolving_duplicate_BibTeX_keys...=\n+Finished_resolving_duplicate_BibTeX_keys._%0_entries_modified.=\n+This_database_contains_one_or_more_duplicated_BibTeX_keys.=\n+Do_you_want_to_resolve_duplicate_keys_now?=\n+\n+Find_and_remove_duplicate_BibTeX_keys=\n+Expected_syntax_for_--fetch\\=\n+Duplicate_BibTeX_key=\n+Duplicate_key=\n+Generate_key=\n+Import_marking_color=\n+BibTeX_importer=\n+Always_add_letter_(a,_b,_...)_to_generated_keys=\n+\n+Ensure_unique_keys_using_letters_(a,_b,_...)=\n+Ensure_unique_keys_using_letters_(b,_c,_...)=\n+Entry_editor_active_background_color=\n+Entry_editor_background_color=\n+Entry_editor_font_color=\n+Entry_editor_invalid_field_color=\n+\n+Table_and_entry_editor_colors=\n+\n+An_autosave_file_was_found_for_this_database._This_could_indicate_=\n+that_JabRef_didn't_shut_down_cleanly_last_time_the_file_was_used.=\n+General_file_directory=\n+User-specific_file_directory=\n+Search_failed\\:_illegal_search_expression=\n+Show_ArXiv_column=\n+<HTML>Unpack_the_zip_file_containing_import/export_filters_for_Endnote,<BR>for_optimal_interoperability_with_JabRef</HTML>=\n+Highlight_groups_that_contain_entries_contained_in_any_currently_selected_group=\n+\n+You_must_enter_an_integer_value_in_the_interval_1025-65535_in_the_text_field_for=\n+Automatically_open_browse_dialog_when_creating_new_file_link=\n+Import_Metadata_from\\:=\n+Choose_the_source_for_the_metadata_import=\n+Create_entry_based_on_XMP_data=\n+Create_entry_based_on_data_fetched_from=\n+Create_blank_entry_linking_the_PDF=\n+Only_attach_PDF=\n+Mr._dLib_Metadata_Entries_Associated_With_PDF_File=\n+Title=\n+Author(s)=\n+Published_Year=\n+No_metadata_found.=\n+Mr._dLib_web_service_is_temporarily_unavailable.=\n+Mr._dLib_web_service_is_temporarily_down._Please_try_again_later.=\n+You_are_not_connected_to_the_Internet._To_access_Mr._dLib_web_service_an_internet_connection_is_needed.=\n+No_Internet_Connection.=\n+This_JabRef_version_is_trying_to_access_an_old_version_of_Mr._dLib's_webservice_that_is_not_working_any_more.\\nPlease_visit_http\\://jabref.sourceforge.net_or_http\\://www.mr-dlib.org_for_more_information_and_updates.=\n+Web_Service_Version_Outdated=\n+The_Mr._dLib_web_service_version_you_trying_to_access_is_outdated.=\n+Update_empty_fields_with_data_fetched_from=\n+Create_New_Entry=\n+Update_Existing_Entry=\n+Mr._dLib=\n+More_information=\n+Fetching_Metadata...=\n+Autocomplete_names_in_'Firstname_Lastname'_format_only=\n+Autocomplete_names_in_'Lastname,_Firstname'_format_only=\n+Autocomplete_names_in_both_formats=\n+Marking_color_%0=\n+The_name_'comment'_can_not_be_used_as_an_entry_type_name.=\n+You_must_enter_an_integer_value_in_the_text_field_for=\n+Send_as_email=\n+References=\n+Sending_of_emails=\n+Subject_for_sending_an_email_with_references=\n+Automatically_open_folders_of_attached_files=\n+Create_entry_based_on_content=\n+Do_not_show_this_box_again_for_this_import=\n+Always_use_this_PDF_import_style_(and_do_not_ask_for_each_import)=\n+Error_creating_email=\n+Entries_added_to_an_email=\n+exportFormat=\n+Output_file_missing=\n+No_search_matches.=\n+The_output_option_depends_on_a_valid_input_option.=\n+Default_import_style_for_drag&drop_of_PDFs=\n+Default_PDF_file_link_action=\n+File_name_format_pattern=\n+PostgreSQL_database=\n+DIN_1505=\n+Wrong_Format=\n+Path_to_gnuclient_or_emacsclient=\n+Additional_parameters=\n+Encrypted_documents_are_not_supported=\n+Cite_selected_entries=\n+Cite_selected_entries_with_in-text_citation=\n+Cite_special=\n+Extra_information_(e.g._page_number)=\n+Manage_citations=\n+Problem_modifying_citation=\n+Citation=\n+Extra_information=\n+Could_not_resolve_BibTeX_entry_for_citation_marker_'%0'.=\n+Styles=\n+Select_style=\n+This_is_the_list_of_available_styles._Select_the_one_you_want_to_use.=\n+Journals=\n+Cite=\n+Cite_in-text=\n+Insert_empty_citation=\n+Merge_citations=\n+Manual_connect=\n+Select_Writer_document=\n+Sync_OO_bibliography=\n+OpenOffice=\n+Select_which_open_Writer_document_to_work_on=\n+Connected_to_document=\n+Insert_a_citation_without_text_(the_entry_will_appear_in_the_reference_list)=\n+Cite_selected_entries_with_extra_information=\n+Ensure_that_the_bibliography_is_up-to-date=\n+Your_OpenOffice_document_references_the_BibTeX_key_'%0',_which_could_not_be_found_in_your_current_database.=\n+Unable_to_synchronize_bibliography=\n+Combine_pairs_of_citations_that_are_separated_by_spaces_only=\n+Autodetection_failed=\n+Connecting=\n+Please_wait...=\n+Set_connection_parameters=\n+Path_to_OpenOffice_directory=\n+Path_to_OpenOffice_executable=\n+Path_to_OpenOffice_library_dir=\n+Connection_lost=\n+The_paragraph_format_is_controlled_by_the_property_'ReferenceParagraphFormat'_or_'ReferenceHeaderParagraphFormat'_in_the_style_file.=\n+The_character_format_is_controlled_by_the_citation_property_'CitationCharacterFormat'_in_the_style_file.=\n+Automatically_sync_bibliography_when_inserting_citations=\n+Look_up_BibTeX_entries_in_the_active_tab_only=\n+Look_up_BibTeX_entries_in_all_open_databases=\n+Use_in-parenthesis_citation=\n+Use_in-text_citation=\n+Autodetecting_paths...=\n+Unable_to_autodetect_OpenOffice_installation._Please_choose_the_installation_directory_manually.=\n+Could_not_find_OpenOffice_installation=\n+Directories=\n+Found_more_than_one_OpenOffice_executable._Please_choose_which_one_to_connect_to\\:=\n+Choose_OpenOffice_executable=\n+Select_document=\n+Edit_Group_Membership=\n+PostgreSQL=\n+\n+Highlight_Words=\n+JSTOR_import_cancelled=\n+HTML_list=\n+Click_group_to_toggle_membership_of_selected_entries=\n+Use_EMACS_23_insertion_string=\n+If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_formatting=\n+Could_not_open_%0=\n+Unknown_import_format=\n+Open_INSPIRE_entry=\n+An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\n+Error_while_fetching_from_Inspire\\:_=\n+Web_search=\n+Autocomplete_names=\n+Default_style=\n+Choose_style_file_directly=\n+Choose_from_a_directory=\n+No_directory_defined_for_%0-files=\n+Allow_file_links_relative_to_each_bib_file's_location=\n+Style_selection=\n+The_panel_below_shows_the_definition_of_the_default_style.=\n+If_you_want_to_use_it_as_a_template_for_a_new_style,_you_can_copy_the_contents_into_a_new_.jstyle_file=\n+Default_style_(author-year_citations)=\n+Default_style_(numerical_citations)=\n+No_valid_style_file_defined=\n+Choose_pattern=\n+Use_the_bib_file_location_as_primary_file_directory=\n+Could_not_run_the_gnuclient/emacsclient_program._Make_sure_you_have_the_emacsclient/gnuclient_program_installed_and_available_in_the_PATH.=\n+Built-in_journal_list=\n+OpenOffice/LibreOffice_connection=\n+You_can_add_additional_journal_names_by_setting_up_a_personal_journal_list,<br>as_well_as_linking_to_external_journal_lists.=\n+JabRef_includes_a_built-in_list_of_journal_abbreviations.=\n+You_must_select_either_a_valid_style_file,_or_use_one_of_the_default_styles.=\n+You_must_select_either_a_valid_style_file,_or_use_a_default_style.=\n+Show=\n+\n+This_is_a_simple_copy_and_paste_dialog._First_load_or_paste_some_text_into_the_text_input_area.<br>After_that,_you_can_mark_text_and_assign_it_to_a_BibTeX_field.=\n+Java_Bouncy_Castle_library_not_found._Please_download_and_install_it._For_more_information_see_http\\://www.bouncycastle.org/.=\n+This_feature_generates_a_new_database_based_on_which_entries_are_needed_in_an_existing_LaTeX_document.=\n+You_need_to_select_one_of_your_open_databases_from_which_to_choose_entries,_as_well_as_the_AUX_file_produced_by_LaTeX_when_compiling_your_document.=\n+\n+First_select_entries_to_clean_up.=\n+Cleanup_entry=\n+Autogenerate_PDF_Names=\n+Auto-generating_PDF-Names_does_not_support_undo._Continue?=\n+File_rename_failed_for=\n+You_have_toggled_the_BibLaTeX_mode.=\n+\n+Use_full_firstname_whenever_possible=\n+Use_abbreviated_firstname_whenever_possible=\n+Use_abbreviated_and_full_firstname=\n+Autocompletion_options=\n+Autocomplete_after_following_number_of_characters=\n+Name_format_used_for_autocompletion=\n+Treatment_of_first_names=\n+Cleanup_entries=\n+Automatically_assign_new_entry_to_selected_groups=\n+\n+Move_DOIs_from_note_and_URL_field_to_DOI_field_and_remove_http_prefix=\n+Format_content_of_month_field_to_#mon#=\n+Ensure_that_page_ranges_are_of_the_form_num1--num2=\n+Make_paths_of_linked_files_relative_(if_possible)=\n+Rename_PDFs_to_given_file_name_format_pattern=\n+Rename_only_PDFs_having_a_relative_path=\n+What_would_you_like_to_clean_up?=\n+Doing_a_cleanup_for_%0_entries...=\n+No_entry_needed_a_clean_up=\n+One_entry_needed_a_clean_up=\n+%0_entries_needed_a_clean_up=\n+Error_importing_from_database=\n+Minimize_to_system_tray=\n+\n+Error_downloading_file_'%0'=\n+Download_failed=\n+%0_databases_will_be_imported=\n+\n+Importing_cancelled=\n+There_are_no_available_databases_to_be_imported=\n+Import_from_SQL_database=\n+Imported_%0_databases_successfully=\n+<_CREATE_NEW_DATABASE_>=\n+Remove_Selected=\n+SQL_Database_Exporter=\n+Select_target_SQL_database\\:=\n+SQL_Database_Importer=\n+Please_select_which_JabRef_databases_do_you_want_to_import\\:=\n+\n+Group_tree_could_not_be_parsed._If_you_save_the_BibTeX_database,_all_groups_will_be_lost.=\n+Attach_file=\n+Setting_all_preferences_to_default_values.=\n+Resetting_preference_key_'%0'=\n+Unknown_preference_key_'%0'=\n+Unable_to_clear_preferences.=\n+\n+Reset_preferences_(key1,key2,..._or_'all')=\n+Find_unlinked_files=\n+Unselect_all=\n+Expand_all=\n+Collapse_all=\n+Select_Directory=\n+Choose_Directory=\n+Use_the_selected_directory_to_start_with_the_search.=\n+Browse...=\n+Opens_the_file_browser.=\n+Scan_directory=\n+Searches_the_selected_directory_for_unlinked_files.=\n+Starts_the_import_of_bibtex_entries.=\n+Leave_this_dialog.=\n+Create_directory_based_keywords=\n+Creates_keywords_in_created_entrys_with_directory_pathnames=\n+Select_a_directory_where_the_search_shall_start.=\n+Select_file_type\\:=\n+These_files_are_not_linked_in_the_active_database.=\n+Entry_type_to_be_created\\:=\n+Searching_file_system...=\n+Importing_into_Database...=\n+Select_directory=\n+Select_files=\n+Bibtex_entry_creation=\n+<No_selection>=\n+Push_selection_to_TeXstudio=\n+Path_to_TeXstudio=\n+Program_'%0'_not_found=\n+Pushed_citations_to_TeXstudio=\n+Unable_to_connect_to_freecite_online_service.=\n+Parse_with_FreeCite=\n+Insert_selected_citations_into_TeXstudio=\n+The_current_BibTeX_key_will_be_overwritten._Continue?=\n+Overwrite_key=\n+Not_overwriting_existing_key._To_change_this_setting,_open_Options_->_Prefererences_->_BibTeX_key_generator=\n+How_would_you_like_to_link_to_'%0'?=\n+Bibtex_key_patterns=\n+Changed_special_field_settings=\n+Clear_priority=\n+Clear_rank=\n+Compact_rank=\n+Convert_1st,_2nd,_..._to_real_superscripts=\n+Dropped_comment_from_database=\n+Enable_PDF_preview=\n+Enable_special_fields=\n+Five_stars=\n+Four_stars=\n+Help_on_special_fields=\n+Keywords_of_selected_entries=\n+Manage_content_selectors=\n+Manage_keywords=\n+No_priority_information=\n+No_rank_information=\n+One_star=\n+Priority=\n+Priority_high=\n+Priority_low=\n+Priority_medium=\n+Quality=\n+Rank=\n+Relevance=\n+Set_priority_to_high=\n+Set_priority_to_low=\n+Set_priority_to_medium=\n+Set_rank_to_five_stars=\n+Set_rank_to_four_stars=\n+Set_rank_to_one_star=\n+Set_rank_to_three_stars=\n+Set_rank_to_two_stars=\n+Show_one_letter_heading_for_icon_columns=\n+Show_priority=\n+Show_quality=\n+Show_rank=\n+Show_relevance=\n+Synchronize_with_keywords=\n+Synchronized_special_fields_based_on_keywords=\n+Three_stars=\n+Toggle_relevance=\n+Toogle_quality_assured=\n+Two_stars=\n+Update_keywords=\n+Write_values_of_special_fields_as_separate_fields_to_BibTeX=\n+You_have_changed_settings_for_special_fields.=\n+no_preview_available=\n+%0_entries_found._To_reduce_server_load,_only_%1_will_be_downloaded.=\n+A_string_with_that_label_already_exists=\n+Connection_to_OpenOffice_has_been_lost._Please_make_sure_OpenOffice_is_running,_and_try_to_reconnect.=\n+\n+Correct_the_entry,_and_reopen_editor_to_display/edit_source.=\n+Could_not_connect_to_a_running_gnuserv_process._Make_sure_that_Emacs_or_XEmacs_is_running,<BR>and_that_the_server_has_been_started_(by_running_the_command_'server-start'/'gnuserv-start').=\n+Could_not_connect_to_running_OpenOffice.\\nMake_sure_you_have_installed_OpenOffice_with_Java_support.\\nIf_connecting_manually,_please_verify_program_and_library_paths.\\n\\nError_message\\:_=\n+Created_group_\"%0\".=\n+If_a_pasted_or_imported_entry_already_has_the_field_set,_overwrite.=\n+Import_Metadata_From_PDF=\n+Not_connected_to_any_Writer_document._Please_make_sure_a_document_is_open,_and_use_the_'Select_Writer_document'_button_to_connect_to_it.=\n+Please_note_that_this_is_an_early_beta_version._Do_not_use_it_without_backing_up_your_files!=\n+Removed_all_subgroups_of_group_\"%0\".=\n+To_disable_the_memory_stick_mode_rename_or_remove_the_jabref.xml_file_in_the_same_folder_as_JabRef.=\n+Unable_to_connect._One_possible_reason_is_that_JabRef_and_OpenOffice/LibreOffice_are_not_both_running_in_either_32_bit_mode_or_64_bit_mode.=\n+Unable_to_determine_plugin_name_and_version._This_may_not_be_a_valid_JabRef_plugin.=\n+Use_the_following_delimiter_character(s)\\:=\n+When_downloading_files,_or_moving_linked_files_to_the_file_directory,_prefer_the_bib_file_location_rather_than_the_file_directory_set_above=\n+Your_style_file_specifies_the_character_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=\n+Your_style_file_specifies_the_paragraph_format_'%0',_which_is_undefined_in_your_current_OpenOffice_document.=\n+Error_fetching_from_Google_Scholar=\n+\n+Run_HTML_converter_on_title=\n+Searching...=\n+You_have_selected_more_than_%0_entries_for_download._Some_web_sites_might_block_you_if_you_make_too_many_rapid_downloads._Do_you_want_to_continue?=\n+Confirm_selection=\n+Unknown_DOI\\:_'%0'.=\n+Get_BibTeX_entry_from_DOI=\n+Prefer_converting_subscripts_and_superscripts_to_equations_rather_than_text=\n+Add_{}_to_specified_title_words_on_search_to_keep_the_correct_case=\n+Import_conversions=\n+Run_filter_on_title_keeping_the_case_of_selected_words=\n+Intermittent_errors_on_the_IEEE_Xplore_server._Please_try_again_in_a_while.=\n+Please_enter_a_search_string=\n+Please_open_or_start_a_new_database_before_searching=\n+An_Error_occurred_while_fetching_from_ADS_(%0)\\:=\n+Error_while_fetching_from_ADS=\n+Error_while_fetching_from_OAI2=\n+An_Error_occurred_while_parsing_abstract=\n+Unknown_DiVA_entry\\:_'%0'.=\n+Get_BibTeX_entry_from_DiVA=\n+Log=\n+\n+ISO_690=\n+Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n+Add_new_entry_and_keep_both_old_entries=\n+Cancelled_merging_entries=\n+Error_in_entry=\n+First_entry=\n+\n+Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n+Merge_entries=\n+Merged_entries_into_a_new_and_kept_the_old=\n+Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entry=\n+None=\n+Parse=\n+Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n+Replace_old_entries_with_new_entry=\n+Result=\n+Second_entry=\n+Show_DOI_first=\n+Show_URL_first=\n+Use_1st=\n+Use_2nd=\n+Use_Emacs_key_bindings=\n+You_have_to_choose_exactly_two_entries_to_merge.=\n+\n+Update_timestamp_on_modification=\n+change_field=\n+All_key_bindings_will_be_reset_to_their_defaults.=\n+\n+Automatically_set_file_links=\n+Continue?=\n+Resetting_all_key_bindings=\n+Save_entries_ordered_by_title=\n+Export_entries_ordered_by_title=\n+Quotes=\n+Curly_Brackets=\n+Include_empty_fields=\n+Field_saving_options=\n+Field_value_delimiter._E.g.,_\"author\\=\n+Run_Unicode_converter_on_title,_author(s),_and_abstract=\n+Database_has_changed._Do_you_want_to_save_before_closing?=\n+Host=\n+Invalid_setting=\n+Network=\n+Please_specify_both_hostname_and_port=\n+Port=\n+\n+Start_field_contents_in_same_column=\n+Use_camel_case_for_field_names_(e.g.,_\"HowPublished\"_instead_of_\"howpublished\")=\n+Use_custom_proxy_configuration=\n+Clear_connection_settings=\n+Cleared_connection_settings.=\n+\n+Rebind_C-a,_too=\n+Rebind_C-f,_too=\n+\n+Show_number_of_elements_contained_in_each_group=\n+\n+Open_folder=\n+Opened_%0_folder(s).=\n+\n+\n+Searches_for_unlinked_PDF_files_on_the_file_system=\n+Export_entries_ordered_as_specified=\n+Export_sort_order=\n+File_Sorting=\n+Newline_separator=\n+\n+Save_entries_ordered_as_specified=\n+Save_sort_order=\n+Show_Extra_columns=\n+Save_entries_as_configured_globally=\n+Open_=\n+\n+Sort_fields_in_alphabeta_order_(as_ver_2.10)=\n+Sort_fields_in_old_fasion_(as_ver_2.9.2)=\n+Save_fields_as_user_defined_order=\n+Parsing_error=\n+illegal_backslash_expression=\n+Backslash_parsing_error_near=\n+\n+Look_at_stderr_for_details=\n+Wrap_fields_as_ver_2.9.2=\n+Move_to_group=\n+\n+Journal_file_not_found=\n+Clear_read_status=\n+Convert_to_BibLatex_format_(for_example,_move_the_value_of_the_'journal'_field_to_'journaltitle')=\n+Could_not_apply_changes.=\n+Deprecated_fields=\n+Hide/show_toolbar=\n+If_possible,_clean_URL_that_Google_search_returned=\n+No_read_status_information=\n+Printed=\n+Read_status=\n+Read_status_read=\n+Read_status_skimmed=\n+Save_selected_as_plain_BibTeX_...=\n+Set_read_status_to_read=\n+Set_read_status_to_skimmed=\n+Show_deprecated_bibtex_fields=\n+\n+Show_gridlines=\n+Show_printed_status=\n+Show_read_status=\n+Table_row_height_padding=\n+Toogle_print_status=\n+\n+Set_rank_to_'%0'_for_%1_entries=\n+Set_priority_to_'%0'_for_%1_entries=\n+Toggled_quality_for_%0_entries=\n+Toggled_print_status_for_%0_entries=\n+Toggled_relevance_for_%0_entries=\n+Set_read_status_to_'%0'_for_%1_entries=\n+\n+Marked_selected_entry=\n+Marked_all_%0_selected_entries=\n+Unmarked_selected_entry=\n+Unmarked_all_%0_selected_entries=\n+Toggle_quality=\n+Toggle_print_status=\n+\n+\n+Unmarked_all_entries=\n+\n+Unable_to_find_the_requested_Look_&_Feel_and_thus_the_default_one_is_used.=\n+\n+Opens_JabRef's_GitHub_page=\n+Could_not_open_browser.=\n+Please_open_http\\://github.com/JabRef/jabref_manually.=\n+\n+Duplicate_Journal_Abbreviation_-_old_one_will_be_overwritten_by_new_one\\nOLD\\:_%0\\nNEW\\:_%1=\n+Found_%0_broken_links=\n+This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n+\n+Invalid_ISBN=\n+MIS_Quarterly=\n+Open_%0_file=, @@ -1660,3 +1660,5 @@ Found_%0_broken_links=%0_liens_cass\u00e9s trouv\u00e9s\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=Ce_groupe_contient_toutes_les_entr\u00e9es._Il_ne_peut_pas_\u00eatre_modifi\u00e9_ou_supprim\u00e9.\n \n Invalid_ISBN=ISBN_invalide\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -1633,3 +1633,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -1744,3 +1744,5 @@ Found_%0_broken_links=Trovati_%0_collegamenti_non_validi\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=Questo_gruppo_contiene_tutte_le_voci._Non_pu\\u00f2_essere_modificato_o_rimosso.\n \n Invalid_ISBN=Codice_ISBN_non_valido\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2463,3 +2463,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2464,3 +2464,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2929,3 +2929,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -1629,3 +1629,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2467,3 +2467,5 @@ Found_%0_broken_links=\u041d\u0430\u0439\u0434\u0435\u043d\u043e_%0_\u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0445_\u0441\u0441\u044b\u043b\u043e\u043a\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\u042d\u0442\u0430_\u0433\u0440\u0443\u043f\u043f\u0430_\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442_\u0432\u0441\u0435_\u0437\u0430\u043f\u0438\u0441\u0438._\u0415\u0435_\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435_\u0438\u043b\u0438_\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435_\u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e.\n \n Invalid_ISBN=\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439_ISBN\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -1651,3 +1651,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2460,3 +2460,5 @@ Found_%0_broken_links=\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -2453,3 +2453,5 @@ Found_%0_broken_links=\\u627e\\u5230_%0_\\u4e2a\\u5931\\u6548\\u7684\\u94fe\\u63a5\n This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\\u8fd9\\u4e2a\\u7ec4\\u5305\\u542b\\u6240\\u6709\\u8bb0\\u5f55\\uff0c\\u4e0d\\u53ef\\u4ee5\\u88ab\\u7f16\\u8f91\\u6216\\u79fb\\u9664\\u3002\n \n Invalid_ISBN=\\u65e0\\u6548\\u7684_ISBN\n+MIS_Quarterly=MIS_Quarterly\n+Open_%0_file=\\, @@ -134,3 +134,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -233,4 +233,5 @@ Find_unlinked_files...=Nicht_verlinkte_Dateien_finden...\n Hide/show_toolbar=Toolbar_zeigen/verbergen\n \n Fork_me_on_GitHub=Forke_mich_auf_GitHub\n-Save_selected_as_plain_BibTeX_...=Auswahl_als_reines_BibTeX_speichern...\n+Save_selected_as_plain_BibTeX_...=Ausgew\\u00e4hlte_Eintr\\u00e4ge_als_reines_BibTeX_speichern_\\u2026\n+ADS_from_ADS-DOI=ADS_von_ADS-DOI, @@ -155,3 +155,4 @@ Hide/show_toolbar=Hide/show_toolbar\n \n Fork_me_on_GitHub=Fork_me_on_GitHub\n Save_selected_as_plain_BibTeX_...=Save_selected_as_plain_BibTeX...\n+ADS_from_ADS-DOI=ADS_from_ADS-DOI, @@ -158,4 +158,5 @@ Find_unlinked_files...=Buscar_archivos_desenlazados...\n Hide/show_toolbar=Mostrar/ocultar_barra_de_herramientas\n \n Fork_me_on_GitHub=Fork_en_GitHub\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=Guardar_seleccionados_como_BibTex_plano...\n+ADS_from_ADS-DOI=, @@ -155,3 +155,4 @@ Hide/show_toolbar=\u0645\u062e\u0641\u06cc\u200c\u06a9\u0631\u062f\u0646/\u0646\u0645\u0627\u06cc\u0634_\u0646\u0648\u0627\u0631_\u0627\u0628\u0632\u0627\u0631\n \n Fork_me_on_GitHub=\u0645\u0631\u0627_\u062f\u0631_GitHub_\u0645\u0646\u0634\u0639\u0628_\u06a9\u0646\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -143,5 +143,6 @@ Find_unlinked_files...=Trouver_les_fichiers_non_li\\u00e9s...\n Hide/show_toolbar=Afficher/masquer_la_barre_d'outils\n \n \n-Fork_me_on_GitHub=Forker-moi_sur_GitHub\n-Save_selected_as_plain_BibTeX_...=\n+Fork_me_on_GitHub=Forkez-moi_sur_GitHub\n+Save_selected_as_plain_BibTeX_...=Enregistrer_la_s\\u00e9lection_en_BibTeX_basique...\n+ADS_from_ADS-DOI=, @@ -131,3 +131,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=\n\\ No newline at end of file, @@ -151,4 +151,5 @@ Find_unlinked_files...=Trovati_file_non_collegati...\n Hide/show_toolbar=Mostra/Nascondi_la_barra_degli_strumenti\n \n Fork_me_on_GitHub=Fork_me_on_GitHub\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=Salva_la_selezione_in_formato_BibTeX_base...\n+ADS_from_ADS-DOI=\n\\ No newline at end of file, @@ -158,3 +158,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -241,3 +241,4 @@ Hide/show_toolbar=Verberg/toon_toolbar\n \n Fork_me_on_GitHub=Forken_op_GitHub\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -154,3 +154,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -131,4 +131,5 @@ Find_unlinked_files...=Encontrar_arquivos_n\\u00e3o_referenciados\n Hide/show_toolbar=Mostrar/esconder_barra_de_ferramentas\n \n Fork_me_on_GitHub=Criar_um_fork_no_GitHub\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=Salvar_selecionado_como_Bibtex_simples\n+ADS_from_ADS-DOI=, @@ -154,4 +154,5 @@ Find_unlinked_files...=\u041d\u0430\u0439\u0442\u0438_\u043d\u0435\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435_\u0444\u0430\u0439\u043b\u044b...\n Hide/show_toolbar=\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c/\u0441\u043a\u0440\u044b\u0442\u044c_\u043f\u0430\u043d\u0435\u043b\u044c_\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n \n Fork_me_on_GitHub=\u041c\u043e\u044f_\u0432\u0435\u0442\u043a\u0430_\u043d\u0430_GitHub\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c_\u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435_\u043a\u0430\u043a_\u043d\u0435\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439_BibTeX_...\n+ADS_from_ADS-DOI=, @@ -133,4 +133,5 @@ Find_unlinked_files...=Ba\\u011flant\\u0131lanmam\\u0131\\u015f_dosyalar\\u0131_bul..\n Hide/show_toolbar=Ara\u00e7_\u00e7ubu\u011funu_gizle/g\u00f6ster\n \n Fork_me_on_GitHub=Beni_GitHub'da_\u00e7atalla\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=Se\u00e7imi_salt_BibTex_olarak_kaydet_...\n+ADS_from_ADS-DOI=, @@ -158,3 +158,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n+ADS_from_ADS-DOI=, @@ -155,4 +155,5 @@ Find_unlinked_files...=\\u67e5\\u8be2\\u672a\\u88ab(\\u8bb0\\u5f55)\\u94fe\\u63a5\\u7684\\\n Hide/show_toolbar=\\u9690\\u85cf/\\u663e\\u793a\\u5de5\\u5177\\u680f\n \n Fork_me_on_GitHub=\\u53bb_GitHub_Fork_JabRef\n-Save_selected_as_plain_BibTeX_...=\n+Save_selected_as_plain_BibTeX_...=\\u9009\\u62e9\\u8bb0\\u5f55\\u53e6\\u5b58\\u4e3a_BibTeX_\\u7eaf\\u6587\\u672c...\n+ADS_from_ADS-DOI=, @@ -1,7 +1,5 @@\n package net.sf.jabref.logic.journals;\n \n-import net.sf.jabref.Globals;\n-\n import static org.junit.Assert.*;\n import org.junit.Test;\n \n@@ -10,7 +8,7 @@\n     @Test\n     public void testReadJournalListFromResource() throws Exception {\n         AbbreviationParser ap = new AbbreviationParser();\n-        ap.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n+        ap.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n          assertFalse(ap.getAbbreviations().isEmpty());\n     }\n }\n\\ No newline at end of file, @@ -1,10 +1,7 @@\n package net.sf.jabref.logic.journals;\n \n-import net.sf.jabref.Globals;\n-\n import static org.junit.Assert.*;\n \n-import org.junit.Ignore;\n import org.junit.Test;\n \n public class JournalAbbreviationRepositoryTest {\n@@ -76,8 +73,8 @@ public void testDuplicateKeys() {\n     @Test\n     public void testParsing() {\n         JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n-        repository.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-        repository.readJournalListFromResource(Globals.JOURNALS_IEEE_INTERNAL_LIST);\n+        repository.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n+        repository.readJournalListFromResource(Abbreviations.JOURNALS_IEEE_INTERNAL_LIST);\n         assertTrue(!repository.getAbbreviations().isEmpty());\n     }\n , @@ -1,5 +1,7 @@\n package net.sf.jabref.logic.l10n;\n \n+import net.sf.jabref.gui.GUIGlobals;\n+import org.junit.Assert;\n import org.junit.Test;\n \n import java.io.IOException;\n@@ -31,6 +33,15 @@ public void testi10nFiles() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void testCompletenessOfBundles() {\n+        for(String lang : GUIGlobals.LANGUAGES.values()) {\n+            Assert.assertTrue(Files.exists(Paths.get(\"src/main/resources\").resolve(Localization.INTEGRITY_RESOURCE_PREFIX + \"_\" + lang + \".properties\")));\n+            Assert.assertTrue(Files.exists(Paths.get(\"src/main/resources\").resolve(Localization.MENU_RESOURCE_PREFIX + \"_\" + lang + \".properties\")));\n+            Assert.assertTrue(Files.exists(Paths.get(\"src/main/resources\").resolve(Localization.RESOURCE_PREFIX + \"_\" + lang + \".properties\")));\n+        }\n+    }\n+\n     private void checkPropertiesFile(Locale locale, String prefix) {\n         Locale oldLocale = Locale.getDefault();\n         try {, ", 3572, 1262, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, renamed, renamed, renamed, renamed, modified, modified, modified, renamed, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 4834], ["Stefan Kolb", "No partial fallbacks for bundles are allowed anymore.", "09/24/15, 12:19:22 PM", "Stefan Kolb", "544d0cc2905743a2a1b47b18951ab706f7874176", ["src/main/java/net/sf/jabref/logic/l10n/Localization.java"], "@@ -29,24 +29,17 @@ public static void setLanguage(String language) {\n \n             // silent fallback to system locale when bundle is not found\n             if(!messages.getLocale().equals(locale)) {\n-                LOGGER.warn(\"Tried loading <\" + RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back to default locale <\" + defaultLocale + \">\");\n-            }\n-\n-            if(!menuTitles.getLocale().equals(locale)) {\n-                LOGGER.warn(\"Tried loading <\" + MENU_RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back to default locale <\" + defaultLocale + \">\");\n-            }\n-\n-            if(!intMessages.getLocale().equals(locale)) {\n-                LOGGER.warn(\"Tried loading <\" + INTEGRITY_RESOURCE_PREFIX + \"> for locale <\" + locale + \"> but had to fall back to default locale <\" + defaultLocale + \">\");\n+                LOGGER.warn(\"Bundle for locale <\" + locale + \"> not found. Falling back to system locale <\" + defaultLocale + \">\");\n             }\n         } catch(MissingResourceException e) {\n-            LOGGER.warn(\"Fallback to system locale <\" + defaultLocale + \"> failed, using locale <en> instead\");\n+            LOGGER.warn(\"Bundle for locale <\" + locale + \"> not found. Fallback to system locale <\" + defaultLocale + \"> failed, using locale <en> instead\");\n \n             locale = new Locale(\"en\");\n             messages = ResourceBundle.getBundle(RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n             menuTitles = ResourceBundle.getBundle(MENU_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n             intMessages = ResourceBundle.getBundle(INTEGRITY_RESOURCE_PREFIX, locale, new EncodingControl(\"UTF-8\"));\n         } finally {\n+            // Set consistent VM locales\n             Locale.setDefault(locale);\n             javax.swing.JComponent.setDefaultLocale(locale);\n         }, ", 3, 10, "\"modified, \"", 13], ["Tobias Denkinger", "CHANGELOG: added reference to feature request #767", "09/24/15, 02:21:00 PM", "Tobias Denkinger", "b7c3850ecff895f3eb353dcca80a116079a63199", ["CHANGELOG"], "@@ -12,6 +12,7 @@\n     - Fix bug #1285: Editing position is not lost on saving\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n+    - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n [dev_2.11]\n 2.11 beta 4\n     - Add of Persian localization (by Behrouz Javanmardi), ", 1, 0, "\"modified, \"", 1], ["Simon Harrer", "Add CHANGELOG entries.", "09/28/15, 03:49:42 PM", "Simon Harrer", "daff8ca0f0e36737f0795f073144176c11036ec4", ["CHANGELOG"], "@@ -16,6 +16,8 @@\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n     - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n+    - Fixes GH Bug #173: Personal journal abbreviation list is not loaded twice\n+    - Bugfix: Preview of external journal abbreviation list now displays the correct list\n [dev_2.11]\n 2.11 beta 4\n     - Add of Persian localization (by Behrouz Javanmardi), ", 2, 0, "\"modified, \"", 2], ["Stefan Kolb", "Simplify action and add feature to CHANGELOG", "09/29/15, 09:08:12 AM", "Stefan Kolb", "72fc4685fc8407f705fd4ee75caba7f870bca193", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditor.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n     - The default language is now automatically set to the system's locale., @@ -255,16 +255,15 @@ public void actionPerformed(ActionEvent e) {\n                 }\n \n                 FileListEntry entry = tableModel.getEntry(row);\n+                // null if file does not exist\n                 File file = FileUtil.expandFilename(metaData, entry.getLink());\n \n+                // transactional delete and unlink\n                 try {\n-                    // transactional delete and unlink\n                     if(file != null) {\n                         Files.delete(file.toPath());\n-                        removeEntries();\n-                    } else {\n-                        removeEntries();\n                     }\n+                    removeEntries();\n                 } catch (IOException ex) {\n                     JOptionPane.showMessageDialog(frame, Localization.lang(\"File permission error\"),\n                             Localization.lang(\"Cannot delete file\"), JOptionPane.ERROR_MESSAGE);, ", 4, 4, "\"modified, modified, \"", 8], ["Joerg Lenhard", "Merge branch 'master' into fix-linebreaking", "10/07/15, 09:32:58 AM", "Joerg Lenhard", "31ef4627081d7967e794ce6ebec37b69c947613b", [".gitattributes", ".gitignore", "CHANGELOG", "CONTRIBUTING.md", "README.md", "build.gradle", "circle.yml", "gradle/wrapper/gradle-wrapper.properties", "scripts/syncLang.py", "src/main/java/net/sf/jabref/Globals.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/exporter/FieldFormatter.java", "src/main/java/net/sf/jabref/exporter/LatexFieldFormatter.java", "src/main/java/net/sf/jabref/exporter/layout/format/DOICheck.java", "src/main/java/net/sf/jabref/exporter/layout/format/JournalAbbreviator.java", "src/main/java/net/sf/jabref/external/DroppedFileHandler.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEntryEditor.java", "src/main/java/net/sf/jabref/external/FindFullText.java", "src/main/java/net/sf/jabref/external/PushToApplicationButton.java", "src/main/java/net/sf/jabref/external/PushToEmacs.java", "src/main/java/net/sf/jabref/external/PushToLatexEditor.java", "src/main/java/net/sf/jabref/external/PushToLyx.java", "src/main/java/net/sf/jabref/external/PushToTeXstudio.java", "src/main/java/net/sf/jabref/external/PushToTexmaker.java", "src/main/java/net/sf/jabref/external/PushToVim.java", "src/main/java/net/sf/jabref/external/PushToWinEdt.java", "src/main/java/net/sf/jabref/groups/AutoGroupDialog.java", "src/main/java/net/sf/jabref/groups/EntryTableTransferHandler.java", "src/main/java/net/sf/jabref/gui/BasePanel.java", "src/main/java/net/sf/jabref/gui/FileListEntryEditor.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/SysTray.java", "src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditor.java", "src/main/java/net/sf/jabref/gui/fieldeditors/contextmenu/ConversionMenu.java", "src/main/java/net/sf/jabref/gui/fieldeditors/contextmenu/FieldTextMenu.java", "src/main/java/net/sf/jabref/gui/journals/AbbreviateAction.java", "src/main/java/net/sf/jabref/gui/journals/JournalAbbreviationsUtil.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsPanel.java", "src/main/java/net/sf/jabref/gui/journals/UnabbreviateAction.java", "src/main/java/net/sf/jabref/gui/keyboard/KeyBinds.java", "src/main/java/net/sf/jabref/gui/labelPattern/ResolveDuplicateLabelDialog.java", "src/main/java/net/sf/jabref/gui/nativeext/WindowsExtensions.java", "src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java", "src/main/java/net/sf/jabref/gui/preftabs/ExternalTab.java", "src/main/java/net/sf/jabref/gui/preftabs/FileTab.java", "src/main/java/net/sf/jabref/gui/preftabs/NetworkTab.java", "src/main/java/net/sf/jabref/gui/remote/JabRefMessageHandler.java", "src/main/java/net/sf/jabref/importer/HTMLConverter.java", "src/main/java/net/sf/jabref/importer/fetcher/DOItoBibTeXFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/logic/autocompleter/ContentAutoCompleters.java", "src/main/java/net/sf/jabref/logic/journals/Abbreviations.java", "src/main/java/net/sf/jabref/logic/journals/JournalAbbreviationRepository.java", "src/main/java/net/sf/jabref/logic/l10n/Localization.java", "src/main/java/net/sf/jabref/logic/util/BuildInfo.java", "src/main/java/net/sf/jabref/logic/util/DOI.java", "src/main/java/net/sf/jabref/logic/util/OS.java", "src/main/java/net/sf/jabref/logic/util/io/FileFinder.java", "src/main/java/net/sf/jabref/logic/util/io/FileUtil.java", "src/main/java/net/sf/jabref/logic/util/strings/CaseChangers.java", "src/main/java/net/sf/jabref/logic/util/strings/Converters.java", "src/main/java/net/sf/jabref/logic/util/strings/NameListNormalizer.java", "src/main/java/net/sf/jabref/migrations/FileLinksUpgradeWarning.java", "src/main/java/net/sf/jabref/util/Util.java", "src/main/resources/build.properties", "src/main/resources/images/crystal_16/Icons.properties", "src/main/resources/images/crystal_16/texmaker.png", "src/main/resources/l10n/JabRef_da.properties", "src/main/resources/l10n/JabRef_de.properties", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties", "src/main/resources/l10n/Menu_da.properties", "src/main/resources/l10n/Menu_de.properties", "src/main/resources/l10n/Menu_es.properties", "src/main/resources/l10n/Menu_fa.properties", "src/main/resources/l10n/Menu_fr.properties", "src/main/resources/l10n/Menu_in.properties", "src/main/resources/l10n/Menu_it.properties", "src/main/resources/l10n/Menu_ja.properties", "src/main/resources/l10n/Menu_nl.properties", "src/main/resources/l10n/Menu_no.properties", "src/main/resources/l10n/Menu_pt_BR.properties", "src/main/resources/l10n/Menu_ru.properties", "src/main/resources/l10n/Menu_tr.properties", "src/main/resources/l10n/Menu_vi.properties", "src/main/resources/l10n/Menu_zh.properties", "src/test/java/net/sf/jabref/FileBasedTestCase.java", "src/test/java/net/sf/jabref/exporter/layout/LatexFieldFormatterTests.java", "src/test/java/net/sf/jabref/logic/journals/AbbreviationParserTest.java", "src/test/java/net/sf/jabref/logic/journals/JournalAbbreviationRepositoryTest.java", "src/test/java/net/sf/jabref/logic/util/CaseChangersTest.java", "src/test/java/net/sf/jabref/logic/util/ConvertersTest.java", "src/test/java/net/sf/jabref/util/DOITest.java"], "@@ -1,2 +1,4 @@\n gradlew eol=lf\n *.sh eol=lf\n+\n+CHANGELOG merge=union, @@ -12,7 +12,6 @@ buildant/\n build.number\n classes/\n user.properties\n-src/main/resources/resource/build.properties\n src/main/resources/windows/nsis/dist/\n \n # Gradle, @@ -1,5 +1,12 @@\n [master]\n     - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n+    - Fixed a bug in the IEEEXploreFetcher\n+    - Replaced some deprecated DefaultFormBuilder with FormBuilder\n+    - Added more characters to HTML/Unicode converter\n+    - Feature: Push citations to Texmaker (SF: #318, #582)\n+    - Case changers improved to honor words (not yet more than single words) within {}\n+    - Feature: Added converters from HTML and Unicode to LaTeX on right click in text fields (#191)\n+    - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n     - The default language is now automatically set to the system's locale.\n@@ -14,16 +21,23 @@\n     - BREAKING: Remove plugin functionality.\n     - Fixes Bug#1297: No console message on closing.\n     - Fix bug #1285: Editing position is not lost on saving\n+    - Fix bug #194: JabRef starts again on Win XP and Win Vista\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n     - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n+    - Fixes GH Bug #173: Personal journal abbreviation list is not loaded twice\n+    - Bugfix: Preview of external journal abbreviation list now displays the correct list\n+    - Feature: DOItoBibTeX fetcher now also handles HTTP URLs\n+    - Feature: \"Normalize to BibTeX name format\" also removes newlines\n+    - Tweak of preference defaults: Autolink requires that the filename starts with the given BibTeX key and the default filename patterns is key followed by title\n [dev_2.11]\n+    - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly\n 2.11 beta 4\n     - Add of Persian localization (by Behrouz Javanmardi)\n     - Backport from 2.80: Fixes #115: Remove whitespaces in serialization\n     - Backport from 2.80: Fixes Bug#1297: No console message on closing.\n     - Backport from 2.80: Fixes Bug#1290: Spanish localization was not displayed correctly.\n-\t- Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n+    - Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n     - Fix for bugs #1221 and #1261 (also partly #1243): order of fields in customized entry types no longer gets destroyed by the entry editor \n     - \"ISBN to BibTeX\" fetcher now uses eBook.de's API (fixes bug #1241)\n     - BREAKING: Search groups now use same search logic as UI --> avoids confusion when converting a UI search into a search group. Behaviour before: contains/regex check of whole search string; behaviour after: contains/regex check of every word of the search string. The new search is more powerful and con simulate the old behaviour: enclose everything in double quotes, e.g., process language --> \"process language\"., @@ -59,6 +59,8 @@ gets\n  *  Copyright (C) 2015 Stefan Jauch\n ```\n \n+Please, **do not add yourself at `@authors`**.\n+We have track this information in the header only.\n \n ### Write a good commit message\n See [good commit message] or [commit guidelines section of Pro Git].\n@@ -76,6 +78,28 @@ In any case, describe the library at [external-libraries.txt](external-libraries\n We need that information for our package maintainers (e.g., those of the [debian package](https://tracker.debian.org/pkg/jabref)).\n \n \n+### When making an architectural decision\n+In case you add a library or do mayor code rewrites, we ask you to document your decision.\n+Recommended reading: http://www.infoq.com/articles/sustainable-architectural-design-decisions\n+\n+Template:\n+```\n+In the context of <use case/user story u>,\n+facing <concern c>\n+we decided for <option o>\n+and neglected <other options>,\n+to achieve <system qualities/desired consequences>,\n+accepting <downside d/undesired consequences>.\n+because <additional rationale>.\n+```\n+\n+\n+### When adding a new Localization.lang entry\n+Run `python scripts/syncLang.py -s` to search for new untranslated strings.\n+If everything is OK, run `python scripts/syncLang.py -s -u` to update `JabRef_en.properties`.\n+\n+\n+\n ### Create a pull request\n Create a pull request on GitHub.\n For text inspirations, consider [How to write the perfect pull request](https://github.com/blog/1943-how-to-write-the-perfect-pull-request)., @@ -6,6 +6,7 @@\n [![License](https://img.shields.io/badge/license-GPLv2-blue.svg)](http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt)\n [![Join the chat at https://gitter.im/JabRef/jabref](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/JabRef/jabref?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n [![Donation](https://img.shields.io/badge/donate-paypal-orange.svg)](https://www.paypal.com/cgi-bin/webscr?item_name=JabRef+Bibliography+Manager&cmd=_donations&lc=US&currency_code=EUR&business=jabrefmail%40gmail.com)\n+[![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=koppor&url=https%3A%2F%2Fgithub.com%2FJabRef%2Fjabref&title=JabRef&language=Java&tags=github&category=software)\n \n This version is a development version. Features may not work as expected.\n , @@ -1,7 +1,7 @@\n import org.gradle.internal.os.OperatingSystem\n \n plugins {\n-    id \"eu.appsatori.fatjar\" version \"0.3\"\n+    id 'com.github.johnrengelman.shadow' version '1.2.2'\n     id \"edu.sc.seis.launch4j\" version \"1.1.4\"\n     id \"com.github.kt3k.coveralls\" version \"2.4.0\"\n     id \"edu.sc.seis.macAppBundle\" version \"2.1.1\"\n@@ -26,7 +26,7 @@ targetCompatibility = 1.8\n mainClassName = \"net.sf.jabref.JabRefMain\"\n \n task wrapper(type: Wrapper) {\n-    gradleVersion = '2.6'\n+    gradleVersion = '2.7'\n }\n \n repositories {\n@@ -63,12 +63,12 @@ dependencies {\n     compile 'org.antlr:antlr4-runtime:4.5.1-1'\n \n     compile 'mysql:mysql-connector-java:5.1.36'\n-    compile 'org.postgresql:postgresql:9.4-1201-jdbc41'\n+    compile 'org.postgresql:postgresql:9.4-1203-jdbc42'\n \n     compile 'net.java.dev.glazedlists:glazedlists_java15:1.9.1'\n     compile fileTree(dir: 'lib', includes: ['*.jar'])\n \n-    compile 'net.java.dev.jna:jna:4.1.0'\n+    compile 'net.java.dev.jna:jna:4.2.0'\n \n     compile 'com.google.guava:guava:18.0'\n \n@@ -92,7 +92,7 @@ processResources {\n                 \"authors\": new File('AUTHORS').readLines().findAll {!it.startsWith(\"#\")}.join(\", \"))\n     }\n \n-    filesMatching(\"resource/build.properties\") {\n+    filesMatching(\"build.properties\") {\n         expand version: project.version\n     }\n \n@@ -101,6 +101,10 @@ processResources {\n     }\n }\n \n+clean {\n+    delete \"src/main/gen\"\n+}\n+\n task generateSource(dependsOn: [\"generateBstGrammarSource\", \"generateSearchGrammarSource\"]) {\n     group = 'JabRef'\n     description 'Generates all Java source files.'\n@@ -185,11 +189,8 @@ format {\n     //files = sourceSets.main.java\n }\n \n-fatJar {\n+shadowJar {\n     classifier 'fat'\n-    manifest {\n-        attributes 'Main-Class': project.mainClassName\n-    }\n }\n \n \n@@ -225,9 +226,9 @@ launch4j {\n     initialHeapSize = 32\n     maxHeapSize = 512\n }\n-createExe.dependsOn \"fatJar\"\n+createExe.dependsOn \"shadowJar\"\n \n-task releaseJar(dependsOn: \"fatJar\") {\n+task releaseJar(dependsOn: \"shadowJar\") {\n     group = 'JabRef - Release'\n     description \"Creates a Jar release.\"\n \n@@ -334,3 +335,10 @@ task releaseSourceTar(type: Exec) {\n         mkdir(\"$buildDir/releases\")\n     }\n }\n+\n+// workaround until https://issues.gradle.org/browse/GRADLE-2274 is resolved\n+eclipseJdt << {\n+    File f = file('.settings/org.eclipse.core.resources.prefs')\n+    f.write('eclipse.preferences.version=1\\n')\n+    f.append('encoding/<project>=UTF-8')\n+}, @@ -10,7 +10,7 @@ dependencies:\n     - chmod +x launch4j/launch4j\n     - wget http://nsis.sourceforge.net/mediawiki/images/5/54/WinShell.zip\n     - unzip WinShell.zip\n-    - sudo cp Plugins/x86-unicode/WinShell.dll /usr/share/nsis/Plugins/\n+    - sudo cp Plugins/x86-ansi/WinShell.dll /usr/share/nsis/Plugins/\n   override:\n     - TERM=dumb ./gradlew dependencies\n , @@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.6-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.7-all.zip, @@ -2,7 +2,7 @@\n import os\n import re\n \n-res_dir = \"../src/main/resources/l10n\"\n+res_dir = \"src/main/resources/l10n\"\n \n keyFiles = {}\n , @@ -21,16 +21,12 @@\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.logic.error.StreamEavesdropper;\n-import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.logic.logging.CacheableHandler;\n import net.sf.jabref.logic.remote.server.RemoteListenerServerLifecycle;\n import net.sf.jabref.logic.util.BuildInfo;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import java.io.File;\n-import java.io.FileNotFoundException;\n-\n public class Globals {\n \n     private static final Log LOGGER = LogFactory.getLog(Globals.class);\n@@ -47,47 +43,6 @@\n     // Remote listener\n     public static RemoteListenerServerLifecycle remoteListener = new RemoteListenerServerLifecycle();\n \n-    // journal initialization\n-    public static final String JOURNALS_FILE_BUILTIN = \"/journals/journalList.txt\";\n-    public static final String JOURNALS_IEEE_INTERNAL_LIST = \"/journals/IEEEJournalList.txt\";\n-\n-    public static JournalAbbreviationRepository journalAbbrev;\n-\n-\n-    public static void initializeJournalNames() {\n-        // Read internal lists:\n-        Globals.journalAbbrev = new JournalAbbreviationRepository();\n-        Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-        if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n-            Globals.journalAbbrev.readJournalListFromResource(JOURNALS_IEEE_INTERNAL_LIST);\n-        }\n-\n-        // Read external lists, if any (in reverse order, so the upper lists\n-        // override the lower):\n-        String[] lists = Globals.prefs.getStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS);\n-        if (lists != null && lists.length > 0) {\n-            for (int i = lists.length - 1; i >= 0; i--) {\n-                try {\n-                    Globals.journalAbbrev.readJournalListFromFile(new File(lists[i]));\n-                } catch (FileNotFoundException e) {\n-                    // The file couldn't be found... should we tell anyone?\n-                    LOGGER.info(\"Cannot find file\", e);\n-                }\n-            }\n-        }\n-\n-        // Read personal list, if set up:\n-        if (Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST) != null) {\n-            try {\n-                Globals.journalAbbrev.readJournalListFromFile(new File(Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST)));\n-            } catch (FileNotFoundException e) {\n-                LOGGER.info(\"Personal journal list file '\" + Globals.prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST) + \"' not found.\", e);\n-            }\n-        }\n-\n-    }\n-\n-\n     public static final ImportFormatReader importFormatReader = new ImportFormatReader();\n \n     public static CacheableHandler handler;, @@ -20,7 +20,6 @@\n \n import java.awt.Font;\n import java.io.File;\n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -34,8 +33,10 @@\n import javax.swing.plaf.FontUIResource;\n \n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.nativeext.WindowsExtensions;\n import net.sf.jabref.importer.fetcher.EntryFetcher;\n import net.sf.jabref.importer.fetcher.EntryFetchers;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n import net.sf.jabref.migrations.PreferencesMigrations;\n@@ -61,12 +62,6 @@\n import net.sf.jabref.logic.logging.CacheableHandler;\n import net.sf.jabref.wizard.auximport.AuxCommandLine;\n \n-import com.sun.jna.Native;\n-import com.sun.jna.NativeLong;\n-import com.sun.jna.Pointer;\n-import com.sun.jna.WString;\n-import com.sun.jna.ptr.PointerByReference;\n-\n /**\n  * JabRef Main Class - The application gets started here.\n  */\n@@ -120,7 +115,7 @@ public void start(String[] args) {\n         ExportFormats.initAllExports();\n \n         // Read list(s) of journal names and abbreviations:\n-        Globals.initializeJournalNames();\n+        Abbreviations.initializeJournalNames(Globals.prefs);\n \n         // Check for running JabRef\n         RemotePreferences remotePreferences = new RemotePreferences(Globals.prefs);\n@@ -145,29 +140,13 @@ public void start(String[] args) {\n             }\n         }\n \n-        /*\n-         * See if the user has a personal journal list set up. If so, add these\n-         * journal names and abbreviations to the list:\n-         */\n-        String personalJournalList = prefs.get(JabRefPreferences.PERSONAL_JOURNAL_LIST);\n-        if (personalJournalList != null && !personalJournalList.isEmpty()) {\n-            try {\n-                Globals.journalAbbrev.readJournalListFromFile(new File(personalJournalList));\n-            } catch (FileNotFoundException e) {\n-                JOptionPane.showMessageDialog(null, Localization.lang(\"Journal file not found\") + \": \" + e.getMessage(), Localization.lang(\"Error opening file\"), JOptionPane.ERROR_MESSAGE);\n-                Globals.prefs.put(JabRefPreferences.PERSONAL_JOURNAL_LIST, \"\");\n-            }\n-        }\n-\n         // override used newline character with the one stored in the preferences\n         // The preferences return the system newline character sequence as default\n         Globals.NEWLINE = Globals.prefs.get(JabRefPreferences.NEWLINE);\n \n         if (OS.WINDOWS) {\n-            // Set application user model id so that pinning JabRef to the Win7/8 taskbar works\n-            // Based on http://stackoverflow.com/a/1928830\n-            JabRef.setCurrentProcessExplicitAppUserModelID(\"JabRef.\" + Globals.BUILD_INFO.getVersion());\n-            //System.out.println(getCurrentProcessExplicitAppUserModelID());\n+            // activate pin to taskbar for Windows 7 and up\n+            WindowsExtensions.enablePinToTaskbar();\n         }\n \n         Vector<ParserResult> loaded = processArguments(args, true);\n@@ -179,46 +158,12 @@ public void start(String[] args) {\n \n         openWindow(loaded);\n     }\n-    \n+\n     private void setupLogHandlerForErrorConsole() {\n         Globals.handler = new CacheableHandler();\n         ((Jdk14Logger)LOGGER).getLogger().addHandler(Globals.handler);\n     }\n \n-    // Do not use this code in release version, it contains some memory leaks\n-    public static String getCurrentProcessExplicitAppUserModelID()\n-    {\n-        final PointerByReference r = new PointerByReference();\n-\n-        if (JabRef.GetCurrentProcessExplicitAppUserModelID(r).longValue() == 0)\n-        {\n-            final Pointer p = r.getValue();\n-\n-            return p.getString(0, true); // here we leak native memory by lazyness\n-        }\n-        return \"N/A\";\n-    }\n-\n-    private static void setCurrentProcessExplicitAppUserModelID(final String appID)\n-    {\n-        if (JabRef.SetCurrentProcessExplicitAppUserModelID(new WString(appID)).longValue() != 0) {\n-            throw new RuntimeException(\"unable to set current process explicit AppUserModelID to: \" + appID);\n-        }\n-    }\n-\n-    private static native NativeLong GetCurrentProcessExplicitAppUserModelID(PointerByReference appID);\n-\n-    private static native NativeLong SetCurrentProcessExplicitAppUserModelID(WString appID);\n-\n-\n-    static\n-    {\n-        if (OS.WINDOWS) {\n-            Native.register(\"shell32\");\n-        }\n-    }\n-\n-\n     public Vector<ParserResult> processArguments(String[] args, boolean initialStartup) {\n \n         cli = new JabRefCLI(args);, @@ -76,7 +76,9 @@\n     public static final String FONT_FAMILY = \"fontFamily\";\n     public static final String WIN_LOOK_AND_FEEL = \"lookAndFeel\";\n     public static final String LATEX_EDITOR_PATH = \"latexEditorPath\";\n+    public static final String TEXSTUDIO_PATH = \"TeXstudioPath\";\n     public static final String WIN_EDT_PATH = \"winEdtPath\";\n+    public static final String TEXMAKER_PATH = \"texmakerPath\";\n     public static final String SHOW_SHORT = \"showShort\";\n     public static final String LANGUAGE = \"language\";\n     public static final String NAMES_LAST_ONLY = \"namesLastOnly\";\n@@ -291,7 +293,9 @@\n     public static final String CITE_COMMAND_LED = \"citeCommandLed\";\n     public static final String CITE_COMMAND_WIN_EDT = \"citeCommandWinEdt\";\n     public static final String CITE_COMMAND_EMACS = \"citeCommandEmacs\";\n+    public static final String CITE_COMMAND_TEXMAKER = \"citeCommandTexmaker\";\n     public static final String CITE_COMMAND_VIM = \"citeCommandVim\";\n+    public static final String CITE_COMMAND_TEXSTUDIO = \"citeCommandTeXstudio\";\n     public static final String CITE_COMMAND = \"citeCommand\";\n     public static final String EXTERNAL_JOURNAL_LISTS = \"externalJournalLists\";\n     public static final String PERSONAL_JOURNAL_LIST = \"personalJournalList\";\n@@ -312,7 +316,7 @@\n     public static final String NUMERIC_FIELDS = \"numericFields\";\n     public static final String DEFAULT_REG_EXP_SEARCH_EXPRESSION_KEY = \"defaultRegExpSearchExpression\";\n     public static final String REG_EXP_SEARCH_EXPRESSION_KEY = \"regExpSearchExpression\";\n-    public static final String USE_REG_EXP_SEARCH_KEY = \"useRegExpSearch\";\n+    public static final String AUTOLINK_USE_REG_EXP_SEARCH_KEY = \"useRegExpSearch\";\n     public static final String DB_CONNECT_USERNAME = \"dbConnectUsername\";\n     public static final String DB_CONNECT_DATABASE = \"dbConnectDatabase\";\n     public static final String DB_CONNECT_HOSTNAME = \"dbConnectHostname\";\n@@ -438,6 +442,7 @@ private JabRefPreferences() {\n             defaults.put(WIN_LOOK_AND_FEEL, \"com.jgoodies.looks.windows.WindowsLookAndFeel\");\n             defaults.put(WIN_EDT_PATH, \"C:\\\\Program Files\\\\WinEdt Team\\\\WinEdt\\\\WinEdt.exe\");\n             defaults.put(LATEX_EDITOR_PATH, \"C:\\\\Program Files\\\\LEd\\\\LEd.exe\");\n+            defaults.put(TEXMAKER_PATH, \"C:\\\\Program Files\\\\Texmaker\\\\texmaker.exe\");\n             defaults.put(EMACS_PATH, \"emacsclient.exe\");\n             defaults.put(EMACS_23, true);\n             defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n@@ -454,6 +459,8 @@ private JabRefPreferences() {\n             defaults.put(EMACS_PATH, \"gnuclient\");\n             defaults.put(EMACS_23, false);\n             defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-batch -eval\");\n+            defaults.put(TEXMAKER_PATH, \"texmaker\");\n+            \n         }\n         defaults.put(USE_PROXY, Boolean.FALSE);\n         defaults.put(PROXY_HOSTNAME, \"my proxy host\");\n@@ -737,7 +744,9 @@ private JabRefPreferences() {\n         defaults.put(CITE_COMMAND_VIM, \"\\\\cite\");\n         defaults.put(CITE_COMMAND_EMACS, \"\\\\cite\");\n         defaults.put(CITE_COMMAND_WIN_EDT, \"\\\\cite\");\n+        defaults.put(CITE_COMMAND_TEXSTUDIO, \"\\\\cite\");\n         defaults.put(CITE_COMMAND_LED, \"\\\\cite\");\n+        defaults.put(CITE_COMMAND_TEXMAKER, \"\\\\cite\");\n         defaults.put(FLOAT_MARKED_ENTRIES, Boolean.TRUE);\n \n         defaults.put(USE_NATIVE_FILE_DIALOG_ON_MAC, Boolean.FALSE);\n@@ -751,7 +760,7 @@ private JabRefPreferences() {\n         defaults.put(SEARCH_DIALOG_WIDTH, 650);\n         defaults.put(SEARCH_DIALOG_HEIGHT, 500);\n         defaults.put(SHOW_FILE_LINKS_UPGRADE_WARNING, Boolean.TRUE);\n-        defaults.put(AUTOLINK_EXACT_KEY_ONLY, Boolean.TRUE);\n+        defaults.put(AUTOLINK_EXACT_KEY_ONLY, Boolean.FALSE);\n         defaults.put(NUMERIC_FIELDS, \"mittnum;author\");\n         defaults.put(RUN_AUTOMATIC_FILE_SEARCH, Boolean.FALSE);\n         defaults.put(USE_LOCK_FILES, Boolean.TRUE);\n@@ -810,7 +819,7 @@ private JabRefPreferences() {\n         String defaultExpression = \"**/.*[bibtexkey].*\\\\\\\\.[extension]\";\n         defaults.put(DEFAULT_REG_EXP_SEARCH_EXPRESSION_KEY, defaultExpression);\n         defaults.put(REG_EXP_SEARCH_EXPRESSION_KEY, defaultExpression);\n-        defaults.put(USE_REG_EXP_SEARCH_KEY, Boolean.FALSE);\n+        defaults.put(AUTOLINK_USE_REG_EXP_SEARCH_KEY, Boolean.FALSE);\n         defaults.put(USE_IEEE_ABRV, Boolean.FALSE);\n         defaults.put(USE_CONVERT_TO_EQUATION, Boolean.FALSE);\n         defaults.put(USE_CASE_KEEPER_ON_SEARCH, Boolean.TRUE);, @@ -17,5 +17,16 @@\n \n public interface FieldFormatter {\n \n+    /**\n+     * Formats the content of a field.\n+     * Currently only one implementation: net.sf.jabref.exporter.LatexFieldFormatter\n+     * \n+     * Reason for this interface: unknown\n+     * \n+     * @param s the content of the field\n+     * @param fieldName the name of the field - used to trigger different serializations, e.g., turning off resolution for some strings\n+     * @return a formatted string suitable for output\n+     * @throws IllegalArgumentException if s is not a correct bibtex string, e.g., because of improperly balanced braces or using # not paired\n+     */\n     String format(String s, String fieldName) throws IllegalArgumentException;\n }, @@ -23,6 +23,14 @@\n \n import java.util.Vector;\n \n+/**\n+ * Currently the only implementation of net.sf.jabref.exporter.FieldFormatter\n+ * \n+ * Obeys following settings:\n+ *  * JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS\n+ *  * JabRefPreferences.DO_NOT_RESOLVE_STRINGS_FOR\n+ *  * JabRefPreferences.WRITEFIELD_WRAPFIELD\n+ */\n public class LatexFieldFormatter implements FieldFormatter {\n \n     // \"Fieldname\" to indicate that a field should be treated as a bibtex string. Used when writing database to file.\n@@ -33,13 +41,13 @@ public static LatexFieldFormatter buildIgnoreHashes() {\n     }\n \n \n-    private StringBuffer sb;\n+    private StringBuilder stringBuilder;\n \n     private final boolean neverFailOnHashes;\n \n     private final boolean resolveStringsAllFields;\n-    private final char valueDelimitersZero;\n-    private final char valueDelimitersOne;\n+    private final char valueDelimiterStartOfValue;\n+    private final char valueDelimiterEndOfValue;\n     private final boolean writefieldWrapfield;\n     private final String[] doNotResolveStringsFors;\n \n@@ -52,8 +60,8 @@ private LatexFieldFormatter(boolean neverFailOnHashes) {\n         this.neverFailOnHashes = neverFailOnHashes;\n \n         this.resolveStringsAllFields = Globals.prefs.getBoolean(JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS);\n-        valueDelimitersZero = Globals.prefs.getValueDelimiters(0);\n-        valueDelimitersOne = Globals.prefs.getValueDelimiters(1);\n+        valueDelimiterStartOfValue = Globals.prefs.getValueDelimiters(0);\n+        valueDelimiterEndOfValue = Globals.prefs.getValueDelimiters(1);\n         doNotResolveStringsFors = Globals.prefs.getStringArray(JabRefPreferences.DO_NOT_RESOLVE_STRINGS_FOR);\n         writefieldWrapfield = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_WRAPFIELD);\n     }\n@@ -63,7 +71,7 @@ public String format(String text, String fieldName)\n             throws IllegalArgumentException {\n \n         if (text == null) {\n-            return valueDelimitersZero + \"\" + valueDelimitersOne;\n+            return valueDelimiterStartOfValue + \"\" + valueDelimiterEndOfValue;\n         }\n \n         if (Globals.prefs.putBracesAroundCapitals(fieldName) && !BIBTEX_STRING.equals(fieldName)) {\n@@ -96,48 +104,53 @@ public String format(String text, String fieldName)\n                     || BIBTEX_STRING.equals(fieldName);\n         }\n         if (!resolveStrings) {\n-            int brc = 0;\n+            int numberOfBrackets = 0;\n             boolean ok = true;\n             for (int i = 0; i < text.length(); i++) {\n                 char c = text.charAt(i);\n                 //Util.pr(\"\"+c);\n                 if (c == '{') {\n-                    brc++;\n+                    numberOfBrackets++;\n                 }\n                 if (c == '}') {\n-                    brc--;\n+                    numberOfBrackets--;\n                 }\n-                if (brc < 0) {\n+                if (numberOfBrackets < 0) {\n                     ok = false;\n                     break;\n                 }\n             }\n-            if (brc > 0) {\n+            if (numberOfBrackets > 0) {\n                 ok = false;\n             }\n             if (!ok) {\n                 throw new IllegalArgumentException(\"Curly braces { and } must be balanced.\");\n             }\n \n-            sb = new StringBuffer(\n-                    valueDelimitersZero + \"\");\n+            stringBuilder = new StringBuilder(\n+                    valueDelimiterStartOfValue + \"\");\n             // No formatting at all for these fields, to allow custom formatting?\n             //            if (Globals.prefs.getBoolean(\"preserveFieldFormatting\"))\n             //              sb.append(text);\n             //            else\n             //             currently, we do not do any more wrapping\n-            if (writefieldWrapfield && !Globals.prefs.isNonWrappableField(fieldName)) {\n-                sb.append(StringUtil.wrap(text, GUIGlobals.LINE_LENGTH));\n+            boolean isAbstract = \"abstract\".equals(fieldName);\n+            boolean isReview = \"review\".equals(fieldName);\n+            boolean doWrap = !isAbstract || !isReview;\n+            boolean strangePrefSettings = writefieldWrapfield && !Globals.prefs.isNonWrappableField(fieldName);\n+\n+            if (strangePrefSettings && doWrap) {\n+                stringBuilder.append(StringUtil.wrap(text, GUIGlobals.LINE_LENGTH));\n             } else {\n-                sb.append(text);\n+                stringBuilder.append(text);\n             }\n \n-            sb.append(valueDelimitersOne);\n+            stringBuilder.append(valueDelimiterEndOfValue);\n \n-            return sb.toString();\n+            return stringBuilder.toString();\n         }\n \n-        sb = new StringBuffer();\n+        stringBuilder = new StringBuilder();\n         int pivot = 0;\n         int pos1;\n         int pos2;\n@@ -200,10 +213,10 @@ public String format(String text, String fieldName)\n         // currently, we do not add newlines and new formatting\n         if (writefieldWrapfield && !Globals.prefs.isNonWrappableField(fieldName)) {\n             //             introduce a line break to be read at the parser\n-            return StringUtil.wrap(sb.toString(), GUIGlobals.LINE_LENGTH);//, but that lead to ugly .tex\n+            return StringUtil.wrap(stringBuilder.toString(), GUIGlobals.LINE_LENGTH);//, but that lead to ugly .tex\n \n         } else {\n-            return sb.toString();\n+            return stringBuilder.toString();\n         }\n \n     }\n@@ -213,7 +226,7 @@ private void writeText(String text, int start_pos,\n         /*sb.append(\"{\");\n         sb.append(text.substring(start_pos, end_pos));\n         sb.append(\"}\");*/\n-        sb.append(valueDelimitersZero);\n+        stringBuilder.append(valueDelimiterStartOfValue);\n         boolean escape = false;\n         boolean inCommandName = false;\n         boolean inCommand = false;\n@@ -275,13 +288,13 @@ else if (inCommandOption && c == ']') {\n if (c == '&' && !escape &&\n                     !(inCommand && commandName.toString().equals(\"url\")) &&\n         nestedEnvironments == 0) {\n-                sb.append(\"\\\\&\");\n+                stringBuilder.append(\"\\\\&\");\n             } else {\n-    sb.append(c);\n+    stringBuilder.append(c);\n }\n             escape = c == '\\\\';\n         }\n-        sb.append(valueDelimitersOne);\n+        stringBuilder.append(valueDelimiterEndOfValue);\n     }\n \n     private void writeStringLabel(String text, int start_pos, int end_pos,\n@@ -293,7 +306,7 @@ private void writeStringLabel(String text, int start_pos, int end_pos,\n     }\n \n     private void putIn(String s) {\n-        sb.append(StringUtil.wrap(s, GUIGlobals.LINE_LENGTH));\n+        stringBuilder.append(StringUtil.wrap(s, GUIGlobals.LINE_LENGTH));\n     }\n \n     private void checkBraces(String text) throws IllegalArgumentException {\n@@ -302,7 +315,7 @@ private void checkBraces(String text) throws IllegalArgumentException {\n         Vector<Integer> right = new Vector<Integer>(5, 3);\n         int current = -1;\n \n-        // First we collect all occurences:\n+        // First we collect all occurrences:\n         while ((current = text.indexOf('{', current + 1)) != -1) {\n             left.add(current);\n         }, @@ -30,6 +30,6 @@ public String format(String fieldText) {\n             return null;\n         }\n \n-        return DOI.build(fieldText).map(doi -> doi.getURL()).orElse(fieldText);\n+        return DOI.build(fieldText).map(doi -> doi.getURLAsASCIIString()).orElse(fieldText);\n     }\n }, @@ -28,7 +28,7 @@\n package net.sf.jabref.exporter.layout.format;\n \n import net.sf.jabref.exporter.layout.LayoutFormatter;\n-import net.sf.jabref.Globals;\n+import net.sf.jabref.logic.journals.Abbreviations;\n \n /**\n  * JournalAbbreviator formats the given text in an abbreviated form\n@@ -49,6 +49,6 @@\n \n     @Override\n     public String format(String fieldText) {\n-        return Globals.journalAbbrev.getIsoAbbreviation(fieldText).orElse(fieldText);\n+        return Abbreviations.journalAbbrev.getIsoAbbreviation(fieldText).orElse(fieldText);\n     }\n }, @@ -23,7 +23,6 @@\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import com.jgoodies.forms.factories.Borders;\n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.undo.NamedCompound;\n@@ -37,8 +36,7 @@\n import net.sf.jabref.util.Util;\n import net.sf.jabref.logic.xmp.XMPUtil;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.CellConstraints;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n \n /**\n@@ -89,17 +87,15 @@ public DroppedFileHandler(JabRefFrame frame, BasePanel panel) {\n \n         FormLayout layout = new FormLayout(\"left:15dlu,pref,pref,pref\", \"bottom:14pt,pref,pref,pref,pref\");\n         layout.setRowGroups(new int[][]{{1, 2, 3, 4, 5}});\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout, optionsPanel);\n-        builder.border(Borders.DIALOG);\n-        CellConstraints cc = new CellConstraints();\n-\n-        builder.add(linkInPlace, cc.xyw(1, 1, 4));\n-        builder.add(destDirLabel, cc.xyw(1, 2, 4));\n-        builder.add(copyRadioButton, cc.xyw(2, 3, 3));\n-        builder.add(moveRadioButton, cc.xyw(2, 4, 3));\n-        builder.add(renameCheckBox, cc.xyw(2, 5, 1));\n-        builder.add(renameToTextBox, cc.xyw(4, 5, 1));\n-\n+        FormBuilder builder = FormBuilder.create().layout(layout);\n+        \n+        builder.add(linkInPlace).xyw(1, 1, 4);\n+        builder.add(destDirLabel).xyw(1, 2, 4);\n+        builder.add(copyRadioButton).xyw(2, 3, 3);\n+        builder.add(moveRadioButton).xyw(2, 4, 3);\n+        builder.add(renameCheckBox).xyw(2, 5, 1);\n+        builder.add(renameToTextBox).xyw(4, 5, 1);\n+        optionsPanel.add(builder.getPanel());\n     }\n \n     /**\n@@ -139,7 +135,6 @@ public void handleDroppedfile(String fileName, ExternalFileType fileType, boolea\n \n         // Show dialog\n         boolean newEntry = false;\n-        String citeKey = entry.getCiteKey();\n         if (!showLinkMoveCopyRenameDialog(fileName, fileType, entry, newEntry, false, panel.database())) {\n             return;\n         }\n@@ -185,7 +180,6 @@ public void linkPdfToEntry(String fileName, MainTable entryTable, BibtexEntry en\n \n         // Show dialog\n         boolean newEntry = false;\n-        String citeKey = entry.getCiteKey();\n         if (!showLinkMoveCopyRenameDialog(fileName, fileType, entry, newEntry, false, panel.database())) {\n             return;\n         }\n@@ -349,8 +343,7 @@ private boolean tryXmpImport(String fileName, ExternalFileType fileType, boolean\n     //\n     private boolean showLinkMoveCopyRenameDialog(String linkFileName, ExternalFileType fileType,\n                                                  BibtexEntry entry, boolean newEntry, final boolean multipleEntries, BibtexDatabase database) {\n-        String citeKey = entry.getCiteKey();\n-\n+       \n         String dialogTitle = Localization.lang(\"Link to file %0\", linkFileName);\n         String[] dirs = panel.metaData().getFileDirectory(GUIGlobals.FILE_FIELD);\n         int found = -1;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -42,6 +42,7 @@\n  */\n public class ExternalFileTypeEditor extends JDialog {\n \n+    private static final long serialVersionUID = 2818719761022588069L;\n     private JFrame frame;\n     private JDialog dialog;\n     private ArrayList<ExternalFileType> fileTypes;\n@@ -101,6 +102,8 @@ public void actionPerformed(ActionEvent e) {\n         });\n         AbstractAction cancelAction = new AbstractAction() {\n \n+            private static final long serialVersionUID = -4147450749465768880L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 dispose();\n@@ -281,6 +284,8 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole\n \n     private class FileTypeTableModel extends AbstractTableModel {\n \n+        private static final long serialVersionUID = 687769574139355925L;\n+\n         @Override\n         public int getColumnCount() {\n             return 5;\n@@ -364,6 +369,7 @@ public void mouseReleased(MouseEvent e) {\n \n     public static class EditExternalFileTypesAction extends MnemonicAwareAction {\n \n+        private static final long serialVersionUID = 6828273495822942935L;\n         private JabRefFrame frame;\n         private JDialog dialog;\n         ExternalFileTypeEditor editor;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -30,7 +30,7 @@\n import net.sf.jabref.gui.FileDialogs;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -55,6 +55,8 @@\n     private final JRadioButton useDefault = new JRadioButton(Localization.lang(\"Default\"));\n     private final JRadioButton other = new JRadioButton(\"\");\n     final String emptyMessage = \"<\" + Localization.lang(\"Use default viewer\") + \">\";\n+    private final String editFileTitle = Localization.lang(\"Edit file type\");\n+    private final String newFileTitle = Localization.lang(\"Add new file type\");\n     boolean applicationFieldEmpty;\n \n     private ExternalFileType entry;\n@@ -79,40 +81,37 @@ private void init(ExternalFileType entry) {\n         bg.add(useDefault);\n         bg.add(other);\n \n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout\n-                (\"left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref\", \"\"));\n-        builder.append(Localization.lang(\"Icon\"));\n-        builder.append(icon);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Name\"));\n-        builder.append(name);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Extension\"));\n-        builder.append(extension);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"MIME type\"));\n-        builder.append(mimeType);\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout\n+                (\"left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref\", \"p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Icon\")).xy(1, 1);\n+        builder.add(icon).xy(3,  1);\n+        builder.add(Localization.lang(\"Name\")).xy(1, 3);\n+        builder.add(name).xy(3, 3);\n+        builder.add(Localization.lang(\"Extension\")).xy(1, 5);\n+        builder.add(extension).xy(3, 5);\n+        builder.add(Localization.lang(\"MIME type\")).xy(1, 7);\n+        builder.add(mimeType).xy(3, 7);\n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Application\"));\n+        builder.add(Localization.lang(\"Application\")).xy(1, 9);\n         JButton browseBut = new JButton(Localization.lang(\"Browse\"));\n         if (OS.WINDOWS) {\n-            builder.append(useDefault);\n-            builder.nextLine();\n+            builder.add(useDefault).xy(3,9);\n+            builder.appendRows(\"2dlu, p\");\n             JPanel p1 = new JPanel();\n-            builder.append(p1);\n+            builder.add(p1).xy(1,11);\n             JPanel p2 = new JPanel();\n             application.setPreferredSize(new Dimension(300, application.getPreferredSize().height));\n             BorderLayout bl = new BorderLayout();\n             bl.setHgap(4);\n             p2.setLayout(bl);\n             p2.add(other, BorderLayout.WEST);\n             p2.add(application, BorderLayout.CENTER);\n-            builder.append(p2);\n-            builder.append(browseBut);\n+            builder.add(p2).xy(3, 11);\n+            builder.add(browseBut).xy(5, 11);\n         } else {\n-            builder.append(application);\n-            builder.append(browseBut);\n+            builder.add(application).xy(3, 9);\n+            builder.add(browseBut).xy(5, 9);\n         }\n         ButtonBarBuilder bb = new ButtonBarBuilder();\n         bb.addGlue();\n@@ -184,10 +183,16 @@ public void changedUpdate(DocumentEvent documentEvent) {\n             });\n         }\n \n+        String title = editFileTitle;\n+        \n+        if (entry.getName().isEmpty()) {\n+            title = newFileTitle;\n+        }\n+        \n         if (dParent != null) {\n-            diag = new JDialog(dParent, Localization.lang(\"Edit file type\"), true);\n+            diag = new JDialog(dParent, title, true);\n         } else {\n-            diag = new JDialog(fParent, Localization.lang(\"Edit file type\"), true);\n+            diag = new JDialog(fParent, title, true);\n         }\n         diag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n         diag.getContentPane().add(bb.getPanel(), BorderLayout.SOUTH);\n@@ -209,6 +214,11 @@ public void changedUpdate(DocumentEvent documentEvent) {\n \n     public void setEntry(ExternalFileType entry) {\n         this.entry = entry;\n+        if(entry.getName().isEmpty()) {\n+            diag.setTitle(newFileTitle);\n+        } else {\n+            diag.setTitle(editFileTitle);\n+        }\n         setValues(entry);\n     }\n , @@ -58,7 +58,7 @@ public FindResult findFullText(BibtexEntry entry) {\n         String doiText = entry.getField(\"doi\");\n         // First try the Doi link, if defined:\n         if (doiText != null && !doiText.trim().isEmpty()) {\n-            FindResult resDoi = lookForFullTextAtURL(new DOI(doiText).getURL());\n+            FindResult resDoi = lookForFullTextAtURL(new DOI(doiText).getURLAsASCIIString());\n             if (resDoi.status == FindFullText.FOUND_PDF) {\n                 return resDoi;\n             } else if (urlText != null && !urlText.trim().isEmpty()) {, @@ -75,6 +75,7 @@\n         PushToApplicationButton.applications.add(new PushToVim());\n         PushToApplicationButton.applications.add(OpenOfficePanel.getInstance());\n         PushToApplicationButton.applications.add(new PushToTeXstudio());\n+        PushToApplicationButton.applications.add(new PushToTexmaker());\n \n         // Finally, sort the entries:\n         //Collections.sort(applications, new PushToApplicationComparator());, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -22,7 +22,7 @@\n \n import net.sf.jabref.*;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.IconTheme;\n@@ -52,7 +52,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.menuTitle(\"Insert selected citations into Emacs\");\n+        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());\n     }\n \n     @Override\n@@ -62,7 +62,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push selection to Emacs\");\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -96,24 +96,21 @@ public void storeSettings() {\n     }\n \n     private void initSettingsPanel() {\n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"left:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-        builder.append(new JLabel(Localization.lang(\"Path to gnuclient or emacsclient\").concat(\":\")));\n-        builder.append(emacsPath);\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p, 2dlu, p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to gnuclient or emacsclient\") + \":\").xy(1, 1);\n+        builder.add(emacsPath).xy(3,1);\n         BrowseAction action = BrowseAction.buildForFile(emacsPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n         browse.addActionListener(action);\n-        builder.append(browse);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Additional parameters\").concat(\":\"));\n-        builder.append(additionalParams);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Use EMACS 23 insertion string\").concat(\":\"));\n-        builder.append(useEmacs23);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Cite command\") + \":\");\n-        builder.append(citeCommand);\n-        settings = builder.getPanel();\n+        builder.add(browse).xy(5,1);\n+        builder.add(Localization.lang(\"Additional parameters\") + \":\").xy(1, 3);\n+        builder.add(additionalParams).xy(3,3);\n+        builder.add(Localization.lang(\"Use EMACS 23 insertion string\") + \":\").xy(1, 5);\n+        builder.add(useEmacs23).xy(3,5);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 7);\n+        builder.add(citeCommand).xy(3,7);\n+        settings = builder.build();\n     }\n \n     @Override\n@@ -205,7 +202,7 @@ public void operationCompleted(BasePanel panel) {\n                             + \"the emacsclient/gnuclient program installed and available in the PATH.\"),\n                     Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n         } else {\n-            panel.output(Localization.lang(\"Pushed citations to Emacs\"));\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -20,7 +20,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.IconTheme;\n@@ -43,7 +43,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.menuTitle(\"Insert selected citations into LatexEditor\");\n+        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());\n     }\n \n     @Override\n@@ -53,7 +53,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push to LatexEditor\");\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -93,12 +93,16 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (notDefined) {\n+            // @formatter:off\n             panel.output(Localization.lang(\"Error\") + \": \" +\n                     Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n-        }\n-        else if (couldNotCall) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\"\n+            // @formatter:on\n+        } else if (couldNotCall) {\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"Could not call executable\") + \" '\"\n                     + Globals.prefs.get(JabRefPreferences.LATEX_EDITOR_PATH) + \"'.\");\n+            // @formatter:on\n         } else {\n             Localization.lang(\"Pushed citations to %0\", \"LatexEditor\");\n         }\n@@ -120,18 +124,17 @@ public JPanel getSettingsPanel() {\n     }\n \n     private void initSettingsPanel() {\n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"left:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-        builder.append(new JLabel(Localization.lang(\"Path to LatexEditor (LEd.exe)\") + \":\"));\n-        builder.append(ledPath);\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to LatexEditor (LEd.exe)\") + \":\").xy(1, 1); // Note the LEd.exe part\n+        builder.add(ledPath).xy(3,1);\n         BrowseAction action = BrowseAction.buildForFile(ledPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n         browse.addActionListener(action);\n-        builder.append(browse);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Cite command\") + \":\");\n-        builder.append(citeCommand);\n-        settings = builder.getPanel();\n+        builder.add(browse).xy(5,1);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n+        builder.add(citeCommand).xy(3,3);\n+        settings = builder.build();\n     }\n \n     @Override, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -83,7 +83,7 @@ public void run() {\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into LyX/Kile\");\n+        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());\n     }\n \n     @Override\n@@ -93,7 +93,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push selection to LyX/Kile\");\n+        return Localization.lang(\"Push to %0\",getApplicationName());\n     }\n \n     @Override\n@@ -109,16 +109,17 @@ public String getKeyStrokeName() {\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (couldNotFindPipe) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"verify that LyX is running and that the lyxpipe is valid\")\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"verify that LyX is running and that the lyxpipe is valid\")\n                     + \". [\" + Globals.prefs.get(JabRefPreferences.LYXPIPE) + \"]\");\n         } else if (couldNotWrite) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"unable to write to\") + \" \" + Globals.prefs.get(JabRefPreferences.LYXPIPE) +\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"unable to write to\") + \" \" + Globals.prefs.get(JabRefPreferences.LYXPIPE) +\n                     \".in\");\n+            // @formatter:on\n         } else {\n-\n-            String message = \"\";\n-            panel.output(Localization.lang(\"Pushed the citations for the following rows to\") + \" Lyx: \" +\n-                    message);\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n \n     }, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.external;\n \n import java.io.IOException;\n@@ -6,25 +21,22 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.IconTheme;\n+import net.sf.jabref.gui.actions.BrowseAction;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n \n /**\n- * Created by IntelliJ IDEA.\n- * User: alver\n- * Date: Jan 14, 2006\n- * Time: 4:55:23 PM\n- * To change this template use File | Settings | File Templates.\n+ * Created by IntelliJ IDEA. User: alver Date: Jan 14, 2006 Time: 4:55:23 PM To change this template use File | Settings\n+ * | File Templates.\n  */\n public class PushToTeXstudio implements PushToApplication {\n \n-    private final String defaultCiteCommand = \"\\\\cite\";\n     private JPanel settings;\n     private final JTextField citeCommand = new JTextField(30);\n     private final JTextField progPath = new JTextField(30);\n@@ -35,7 +47,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into TeXstudio\");\n+        return Localization.lang(\"Insert selected citations into %0\", getApplicationName());\n     }\n \n     @Override\n@@ -45,7 +57,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push selection to TeXstudio\");\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -75,12 +87,10 @@ public JPanel getSettingsPanel() {\n         if (settings == null) {\n             initSettingsPanel();\n         }\n-        String citeCom = Globals.prefs.get(\"citeCommandTeXstudio\");\n-        if (citeCom == null) {\n-            citeCom = defaultCiteCommand;\n-        }\n+        String citeCom = Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXSTUDIO);\n         citeCommand.setText(citeCom);\n-        String programPath = Globals.prefs.get(\"TeXstudioPath\");\n+\n+        String programPath = Globals.prefs.get(JabRefPreferences.TEXSTUDIO_PATH);\n         if (programPath == null) {\n             programPath = defaultProgramPath();\n         }\n@@ -90,39 +100,40 @@ public JPanel getSettingsPanel() {\n \n     @Override\n     public void storeSettings() {\n-        Globals.prefs.put(\"citeCommandTeXstudio\", citeCommand.getText().trim());\n-        Globals.prefs.put(\"TeXstudioPath\", progPath.getText().trim());\n+        Globals.prefs.put(JabRefPreferences.CITE_COMMAND_TEXSTUDIO, citeCommand.getText().trim());\n+        Globals.prefs.put(JabRefPreferences.TEXSTUDIO_PATH, progPath.getText().trim());\n     }\n \n     private void initSettingsPanel() {\n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"left:pref, 4dlu, fill:pref\", \"\"));\n-        builder.append(Localization.lang(\"Cite command\") + \":\");\n-        builder.append(citeCommand);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Path to TeXstudio\") + \":\");\n-        builder.append(progPath);\n-        settings = builder.getPanel();\n+\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n+\n+        builder.addLabel(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n+        builder.add(progPath).xy(3, 1);\n+        BrowseAction action = BrowseAction.buildForFile(progPath);\n+        JButton browse = new JButton(Localization.lang(\"Browse\"));\n+        browse.addActionListener(action);\n+        builder.add(browse).xy(5, 1);\n+        builder.addLabel(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n+        builder.add(citeCommand).xy(3, 3);\n+        settings = builder.build();\n     }\n \n     @Override\n     public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String keys, MetaData metaData) {\n \n         couldNotConnect = false;\n         couldNotRunClient = false;\n-        String citeCom = Globals.prefs.get(\"citeCommandTeXstudio\");\n-        if (citeCom == null) {\n-            citeCom = defaultCiteCommand;\n-        }\n-        String programPath = Globals.prefs.get(\"TeXstudioPath\");\n+        String citeCom = Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXSTUDIO);\n+        String programPath = Globals.prefs.get(JabRefPreferences.TEXSTUDIO_PATH);\n         if (programPath == null) {\n             programPath = defaultProgramPath();\n         }\n         try {\n             String[] com = OS.WINDOWS ?\n-                    // No additional escaping is needed for TeXstudio:\n-                    new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"}\n-                    : new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"};\n+            // No additional escaping is needed for TeXstudio:\n+            new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"} : new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"};\n \n             /*for (int i = 0; i < com.length; i++) {\n                 String s = com[i];\n@@ -163,23 +174,24 @@ public void run() {\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (couldNotConnect) {\n-            JOptionPane.showMessageDialog(\n-                    panel.frame(),\n-                    \"TeXstudio: could not connect\",\n-                    Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n-        }\n-        else if (couldNotRunClient) {\n-            String programPath = Globals.prefs.get(\"TeXstudioPath\");\n+            // @formatter:off\n+            JOptionPane.showMessageDialog(panel.frame(), \n+                    \"TeXstudio: could not connect\", \n+                    Localization.lang(\"Error\"), \n+                    JOptionPane.ERROR_MESSAGE);\n+            // @formatter:on\n+        } else if (couldNotRunClient) {\n+            String programPath = Globals.prefs.get(JabRefPreferences.TEXSTUDIO_PATH);\n             if (programPath == null) {\n                 programPath = defaultProgramPath();\n             }\n-            JOptionPane.showMessageDialog(\n-                    panel.frame(),\n+            JOptionPane.showMessageDialog(panel.frame(),\n+                    // @formatter:off\n                     \"TeXstudio: \" + Localization.lang(\"Program '%0' not found\", programPath),\n                     Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n-        }\n-        else {\n-            panel.output(Localization.lang(\"Pushed citations to TeXstudio\"));\n+                    // @formatter:on\n+        } else {\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n     }\n , @@ -0,0 +1,142 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.external;\n+\n+import java.io.IOException;\n+\n+import javax.swing.*;\n+\n+import net.sf.jabref.*;\n+import com.jgoodies.forms.builder.FormBuilder;\n+import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.IconTheme;\n+import net.sf.jabref.gui.actions.BrowseAction;\n+import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.model.database.BibtexDatabase;\n+import net.sf.jabref.model.entry.BibtexEntry;\n+\n+/**\n+ * Class for pushing entries into TexMaker.\n+ */\n+public class PushToTexmaker implements PushToApplication {\n+\n+    private boolean couldNotCall;\n+    private boolean notDefined;\n+    private JPanel settings;\n+    private final JTextField texmakerPath = new JTextField(30);\n+    private final JTextField citeCommand = new JTextField(30);\n+\n+\n+    @Override\n+    public String getName() {\n+        return Localization.menuTitle(\"Insert selected citations into Texmaker\");\n+    }\n+\n+    @Override\n+    public String getApplicationName() {\n+        return \"Texmaker\";\n+    }\n+\n+    @Override\n+    public String getTooltip() {\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n+    }\n+\n+    @Override\n+    public Icon getIcon() {\n+        return IconTheme.getImage(\"texmaker\");\n+    }\n+\n+    @Override\n+    public String getKeyStrokeName() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String keyString, MetaData metaData) {\n+\n+        couldNotCall = false;\n+        notDefined = false;\n+\n+        String texMaker = Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH);\n+\n+        if ((texMaker == null) || texMaker.trim().isEmpty()) {\n+            notDefined = true;\n+            return;\n+        }\n+\n+        try {\n+            Runtime.getRuntime().exec(texMaker + \" \" + \"-insert \" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXMAKER) + \"{\" + keyString + \"}\");\n+\n+        }\n+\n+        catch (IOException excep) {\n+            couldNotCall = true;\n+            excep.printStackTrace();\n+        }\n+    }\n+\n+    @Override\n+    public void operationCompleted(BasePanel panel) {\n+        if (notDefined) {\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" \n+                    + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n+        } else if (couldNotCall) {\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH) + \"'.\");\n+            // @formatter:on\n+        } else {\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n+        }\n+    }\n+\n+    @Override\n+    public boolean requiresBibtexKeys() {\n+        return true;\n+    }\n+\n+    @Override\n+    public JPanel getSettingsPanel() {\n+        if (settings == null) {\n+            initSettingsPanel();\n+        }\n+        texmakerPath.setText(Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH));\n+        citeCommand.setText(Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXMAKER));\n+        return settings;\n+    }\n+\n+    private void initSettingsPanel() {\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n+        builder.add(texmakerPath).xy(3, 1);\n+        BrowseAction action = BrowseAction.buildForFile(texmakerPath);\n+        JButton browse = new JButton(Localization.lang(\"Browse\"));\n+        browse.addActionListener(action);\n+        builder.add(browse).xy(5, 1);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n+        builder.add(citeCommand).xy(3, 3);\n+        settings = builder.build();\n+    }\n+\n+    @Override\n+    public void storeSettings() {\n+        Globals.prefs.put(JabRefPreferences.TEXMAKER_PATH, texmakerPath.getText());\n+        Globals.prefs.put(JabRefPreferences.CITE_COMMAND_TEXMAKER, citeCommand.getText());\n+    }\n+}, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -15,7 +15,7 @@\n */\n package net.sf.jabref.external;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n import net.sf.jabref.gui.BasePanel;\n@@ -49,7 +49,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into Vim\");\n+        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());\n     }\n \n     @Override\n@@ -59,7 +59,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push selection to Vim\");\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -91,22 +91,19 @@ public void storeSettings() {\n     }\n \n     private void initSettingsPanel() {\n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"left:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-\n-        builder.append(new JLabel(Localization.lang(\"Path to Vim\") + \":\"));\n-        builder.append(vimPath);\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n+        builder.add(vimPath).xy(3,1);\n         BrowseAction action = BrowseAction.buildForFile(vimPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n         browse.addActionListener(action);\n-        builder.append(browse);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Vim Server Name\") + \":\");\n-        builder.append(vimServer);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Cite command\") + \":\");\n-        builder.append(citeCommand);\n-        settings = builder.getPanel();\n+        builder.add(browse).xy(5,1);\n+        builder.add(Localization.lang(\"Vim Server Name\") + \":\").xy(1, 3);\n+        builder.add(vimServer).xy(3,3);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 5);\n+        builder.add(citeCommand).xy(3,5);\n+        settings = builder.build();\n     }\n \n     @Override\n@@ -116,9 +113,13 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n         couldNotConnect = false;\n         couldNotRunClient = false;\n         try {\n-            String[] com = new String[] {Globals.prefs.get(JabRefPreferences.VIM), \"--servername\", Globals.prefs.get(JabRefPreferences.VIM_SERVER), \"--remote-send\",\n+            // @formatter:off\n+            String[] com = new String[] {Globals.prefs.get(JabRefPreferences.VIM), \"--servername\", \n+                    Globals.prefs.get(JabRefPreferences.VIM_SERVER), \"--remote-send\",\n                     \"<C-\\\\><C-N>a\" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_VIM) +\n                             \"{\" + keys + \"}\"};\n+            // @formatter:on\n+\n \n             final Process p = Runtime.getRuntime().exec(com);\n \n@@ -166,7 +167,7 @@ public void operationCompleted(BasePanel panel) {\n                     Localization.lang(\"Could not run the 'vim' program.\"),\n                     Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n         } else {\n-            panel.output(Localization.lang(\"Pushed citations to Vim\"));\n+            panel.output(Localization.lang(\"Pushed citations to %0\",getApplicationName()));\n         }\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -20,7 +20,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.*;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.IconTheme;\n@@ -40,7 +40,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into WinEdt\");\n+        return Localization.lang(\"Insert selected citations into %0\", getApplicationName());\n     }\n \n     @Override\n@@ -50,7 +50,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push selection to WinEdt\");\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -77,7 +77,6 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n \n         try {\n             Runtime.getRuntime().exec(new String[] {winEdt, \"\\\"[InsText('\" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_WIN_EDT) + \"{\" + keyString.replaceAll(\"'\", \"''\") + \"}');]\\\"\"});\n-\n         }\n \n         catch (IOException excep) {\n@@ -90,14 +89,17 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (notDefined) {\n-            panel.output(Localization.lang(\"Error\") + \": \" +\n-                    Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n-        }\n-        else if (couldNotCall) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\"\n-                    + Globals.prefs.get(JabRefPreferences.WIN_EDT_PATH) + \"'.\");\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n+            // @formatter:on\n+        } else if (couldNotCall) {\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.WIN_EDT_PATH) + \"'.\");\n+            // @formatter:on\n         } else {\n-            Localization.lang(\"Pushed citations to WinEdt\");\n+            Localization.lang(\"Pushed citations to %0\", getApplicationName());\n         }\n     }\n \n@@ -117,18 +119,17 @@ public JPanel getSettingsPanel() {\n     }\n \n     private void initSettingsPanel() {\n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"left:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-        builder.append(new JLabel(Localization.lang(\"Path to WinEdt.exe\") + \":\"));\n-        builder.append(winEdtPath);\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n+        builder.add(winEdtPath).xy(3, 1);\n         BrowseAction action = BrowseAction.buildForFile(winEdtPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n         browse.addActionListener(action);\n-        builder.append(browse);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Cite command\") + \":\");\n-        builder.append(citeCommand);\n-        settings = builder.getPanel();\n+        builder.add(browse).xy(5, 1);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n+        builder.add(citeCommand).xy(3, 3);\n+        settings = builder.build();\n     }\n \n     @Override, @@ -36,7 +36,7 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n import net.sf.jabref.gui.undo.NamedCompound;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n \n@@ -168,26 +168,21 @@ public void actionPerformed(ActionEvent e) {\n         bg.add(authors);\n         bg.add(editors);\n         keywords.setSelected(true);\n-        DefaultFormBuilder b = new DefaultFormBuilder(new FormLayout\n-                (\"left:20dlu, 4dlu, left:pref, 4dlu, fill:60dlu, 4dlu, fill:0dlu\", \"\"), main);\n-        b.append(keywords, 5);\n-        b.nextLine();\n-        b.append(new JPanel());\n-        b.append(Localization.lang(\"Field to group by\") + \":\");\n-        b.append(field);\n-        b.nextLine();\n-        b.append(new JPanel());\n-        b.append(Localization.lang(\"Characters to ignore\") + \":\");\n-        b.append(remove);\n-        b.nextLine();\n-        b.append(new JPanel());\n-        b.append(nd);\n-        b.append(deliminator);\n-        b.nextLine();\n-        b.append(authors, 5);\n-        b.nextLine();\n-        b.append(editors, 5);\n-        b.nextLine();\n+        \n+        FormBuilder b = FormBuilder.create();\n+        b.layout(new FormLayout\n+                (\"left:20dlu, 4dlu, left:pref, 4dlu, fill:60dlu\", \"p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p\"));\n+        b.add(keywords).xyw(1, 1, 5);\n+        b.add(Localization.lang(\"Field to group by\") + \":\").xy(3, 3);\n+        b.add(field).xy(5, 3);\n+        b.add(Localization.lang(\"Characters to ignore\") + \":\").xy(3, 5);\n+        b.add(remove).xy(5, 5);\n+        b.add(nd).xy(3, 7);\n+        b.add(deliminator).xy(5, 7);\n+        b.add(authors).xyw(1, 9, 5);\n+        b.add(editors).xyw(1, 11, 5);\n+        b.build();\n+        b.border(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n \n         JPanel opt = new JPanel();\n         ButtonBarBuilder bb = new ButtonBarBuilder(opt);\n@@ -243,9 +238,11 @@ public void actionPerformed(ActionEvent e) {\n         con.gridwidth = GridBagConstraints.REMAINDER;\n         gbl.setConstraints(cancel, con);\n         opt.add(cancel);*/\n+        \n         main.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         opt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         getContentPane().add(main, BorderLayout.CENTER);\n+        getContentPane().add(b.getPanel(), BorderLayout.CENTER);\n         getContentPane().add(opt, BorderLayout.SOUTH);\n         // pack();\n         updateComponents();, @@ -67,18 +67,18 @@\n     private final DataFlavor stringFlavor;\n \n     private static final boolean DROP_ALLOWED = true;\n-    \n+\n     private static final Log LOGGER = LogFactory.getLog(EntryTableTransferHandler.class);\n \n \n     /**\n      * Construct the transfer handler.\n      *\n-     * @param entryTable The table this transfer handler should operate on. This argument is allowed to equal null,\n-     *                   in which case the transfer handler can assume that it works for a JabRef instance\n-     *                   with no databases open, attached to the empty tabbed pane.\n-     * @param frame      The JabRefFrame instance.\n-     * @param panel      The BasePanel this transferhandler works for.\n+     * @param entryTable The table this transfer handler should operate on. This argument is allowed to equal null, in\n+     *            which case the transfer handler can assume that it works for a JabRef instance with no databases open,\n+     *            attached to the empty tabbed pane.\n+     * @param frame The JabRefFrame instance.\n+     * @param panel The BasePanel this transferhandler works for.\n      */\n     public EntryTableTransferHandler(MainTable entryTable, JabRefFrame frame, BasePanel panel) {\n         this.entryTable = entryTable;\n@@ -108,8 +108,7 @@ public Transferable createTransferable(JComponent c) {\n         if (!draggingFile) {\n             /* so we can assume it will never be called if entryTable==null: */\n             return new TransferableEntrySelection(entryTable.getSelectedEntries());\n-        }\n-        else {\n+        } else {\n             draggingFile = false;\n             return new TransferableFileLinkSelection(panel, entryTable.getSelectedEntries());//.getTransferable();\n         }\n@@ -118,8 +117,7 @@ public Transferable createTransferable(JComponent c) {\n     /**\n      * This method is called when stuff is drag to the component.\n      * \n-     * Imports the dropped URL or plain text as a new entry in the current\n-     * database.\n+     * Imports the dropped URL or plain text as a new entry in the current database.\n      * \n      */\n     @Override\n@@ -226,8 +224,7 @@ public boolean canImport(JComponent comp, DataFlavor[] transferFlavors) {\n \n         // accept this if any input flavor matches any of our supported flavors\n         for (DataFlavor inflav : transferFlavors) {\n-            if (inflav.match(urlFlavor) || inflav.match(stringFlavor)\n-                    || inflav.match(DataFlavor.javaFileListFlavor)) {\n+            if (inflav.match(urlFlavor) || inflav.match(stringFlavor) || inflav.match(DataFlavor.javaFileListFlavor)) {\n                 return true;\n             }\n         }\n@@ -279,10 +276,9 @@ private boolean handleDropTransfer(String dropStr, final int dropRow) throws IOE\n         if (dropStr.startsWith(\"file:\")) {\n             // This appears to be a dragged file link and not a reference\n             // format. Check if we can map this to a set of files:\n-            if (handleDraggedFilenames(dropStr, dropRow))\n-             {\n+            if (handleDraggedFilenames(dropStr, dropRow)) {\n                 return true;\n-            // If not, handle it in the normal way...\n+                // If not, handle it in the normal way...\n             }\n         } else if (dropStr.startsWith(\"http:\")) {\n             // This is the way URL links are received on OS X and KDE (Gnome?):\n@@ -306,11 +302,10 @@ private boolean handleDropTransfer(String dropStr, final int dropRow) throws IOE\n     }\n \n     /**\n-     * Translate a String describing a set of files or URLs dragged into JabRef\n-     * into a List of File objects, taking care of URL special characters.\n+     * Translate a String describing a set of files or URLs dragged into JabRef into a List of File objects, taking care\n+     * of URL special characters.\n      *\n-     * @param s\n-     *            String describing a set of files or URLs dragged into JabRef\n+     * @param s String describing a set of files or URLs dragged into JabRef\n      * @return a List<File> containing the individual file objects.\n      *\n      */\n@@ -358,8 +353,7 @@ private boolean handleDropTransfer(String dropStr, final int dropRow) throws IOE\n     /**\n      * Handle a String describing a set of files or URLs dragged into JabRef.\n      * \n-     * @param s\n-     *            String describing a set of files or URLs dragged into JabRef\n+     * @param s String describing a set of files or URLs dragged into JabRef\n      * @param dropRow The row in the table where the files were dragged.\n      * @return success status for the operation\n      *\n@@ -373,8 +367,7 @@ private boolean handleDraggedFilenames(String s, final int dropRow) {\n     /**\n      * Handle a List containing File objects for a set of files to import.\n      * \n-     * @param files\n-     *            A List containing File instances pointing to files.\n+     * @param files A List containing File instances pointing to files.\n      * @param dropRow @param dropRow The row in the table where the files were dragged.\n      * @return success status for the operation\n      */\n@@ -406,12 +399,10 @@ public void run() {\n     }\n \n     /**\n-     * Take a set of filenames. Those with names indicating bib files are opened\n-     * as such if possible. All other files we will attempt to import into the\n-     * current database.\n+     * Take a set of filenames. Those with names indicating bib files are opened as such if possible. All other files we\n+     * will attempt to import into the current database.\n      * \n-     * @param fileNames\n-     *            The names of the files to open.\n+     * @param fileNames The names of the files to open.\n      * @param dropRow success status for the operation\n      */\n     private void loadOrImportFiles(String[] fileNames, int dropRow) {\n@@ -440,10 +431,6 @@ private void loadOrImportFiles(String[] fileNames, int dropRow) {\n                     }\n                 } catch (IOException e) {\n                     notBibFiles.add(fileName);\n-                    // No error message, since we want to try importing the\n-                    // file?\n-                    //\n-                    // Util.showQuickErrorDialog(frame, Globals.lang(\"Open database\"), e);\n                 }\n                 continue;\n             }\n@@ -479,12 +466,12 @@ private void loadOrImportFiles(String[] fileNames, int dropRow) {\n             \t\t\t\t\tc = null;\n             \t\t\t\t\tframe.output(Globals.lang(\"No XMP metadata found in \" + fileNames[i]));\n             \t\t\t\t}\n-\n+            \n             \t\t\t\tif (c != null && c.size() > 0) {\n             \t\t\t\t\tIterator it = c.iterator();\n-\n+            \n             \t\t\t\t\tBasePanel panel = frame.basePanel();\n-\n+            \n             \t\t\t\t\tif (panel == null) {\n             \t\t\t\t\t\t// // Create a new, empty, database.\n             \t\t\t\t\t\tBibtexDatabase database = new BibtexDatabase();\n@@ -493,14 +480,14 @@ private void loadOrImportFiles(String[] fileNames, int dropRow) {\n             \t\t\t\t\t\tframe.output(Globals.lang(\"New database created.\"));\n             \t\t\t\t\t\tpanel = frame.basePanel();\n             \t\t\t\t\t}\n-\n+            \n             \t\t\t\t\tBibtexDatabase database = frame.basePanel().database();\n-\n+            \n             \t\t\t\t\tNamedCompound ce = new NamedCompound(Glbals.lang(\"Drop PDF\"));\n-\n+            \n             \t\t\t\t\twhile (it.hasNext()) {\n             \t\t\t\t\t\tBibtexEntry e = (BibtexEntry) it.next();\n-\n+            \n             \t\t\t\t\t\ttry {\n             \t\t\t\t\t\t\te.setId(Util.next());\n             \t\t\t\t\t\t\tdatabase.insertEntry(e);\n@@ -509,7 +496,7 @@ private void loadOrImportFiles(String[] fileNames, int dropRow) {\n             \t\t\t\t\t\t\t// Should not happen?\n             \t\t\t\t\t\t}\n             \t\t\t\t\t}\n-\n+            \n             \t\t\t\t\tce.end();\n             \t\t\t\t\tpanel.undoManager.addEdit(ce);\n             \t\t\t\t\tpanel.markBaseChanged();, @@ -960,7 +960,7 @@ public void run() {\n                                     }\n                                     // Run the search operation:\n                                     Map<BibtexEntry, List<File>> result;\n-                                    if (Globals.prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY)) {\n+                                    if (Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {\n                                         String regExp = Globals.prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY);\n                                         result = RegExpFileSearch.findFilesForSet(entries, extensions, dirs, regExp);\n                                     } else {, @@ -42,7 +42,7 @@\n import net.sf.jabref.external.UnknownExternalFileType;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n \n /**\n@@ -114,40 +114,37 @@ public void itemStateChanged(ItemEvent itemEvent) {\n             }\n         });\n \n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout\n-                (\"left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-        builder.append(Localization.lang(\"Link\"));\n-        builder.append(link);\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout\n+                (\"left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref, 4dlu, fill:pref\", \"p, 2dlu, p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Link\")).xy(1, 1);\n+        builder.add(link).xy(3, 1);\n         final BrowseListener browse = new BrowseListener(frame, link);\n         final JButton browseBut = new JButton(Localization.lang(\"Browse\"));\n         browseBut.addActionListener(browse);\n-        builder.append(browseBut);\n+        builder.add(browseBut).xy(5, 1);\n         JButton open = new JButton(Localization.lang(\"Open\"));\n         if (showOpenButton) {\n-            builder.append(open);\n+            builder.add(open).xy(7, 1);\n         }\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"Description\"));\n-        builder.append(description, 3);\n+        builder.add(Localization.lang(\"Description\")).xy(1, 3);\n+        builder.add(description).xyw(3,3,3);\n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"File type\"));\n-        builder.append(types, 3);\n+        builder.add(Localization.lang(\"File type\")).xy(1, 5);\n+        builder.add(types).xyw(3, 5, 3);\n         if (showProgressBar) {\n-            builder.nextLine();\n-            builder.append(downloadLabel);\n-            builder.append(prog, 3);\n+            builder.appendRows(\"2dlu, p\");\n+            builder.add(downloadLabel).xy(1,7);\n+            builder.add(prog).xyw(3,7,3);\n         }\n \n         ButtonBarBuilder bb = new ButtonBarBuilder();\n         bb.addGlue();\n-        //bb.addButton(open);\n-        //bb.addRelatedGap();\n         bb.addRelatedGap();\n         bb.addButton(ok);\n         JButton cancel = new JButton(Localization.lang(\"Cancel\"));\n         bb.addButton(cancel);\n         bb.addGlue();\n+        bb.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n \n         ok.addActionListener(okAction);\n         // Add OK action to the two text fields to simplify entering:, @@ -179,8 +179,6 @@ void addAction(Action a) {\n \n     private final FileHistory fileHistory = new FileHistory(prefs, this);\n \n-    private SysTray sysTray;\n-\n     // The help window.\n     public final HelpDialog helpDiag = new HelpDialog(this);\n \n@@ -850,11 +848,6 @@ private void tearDownJabRef(Vector<String> filenames) {\n \n         prefs.flush();\n \n-        // hide systray because the JVM can only shut down when no systray icon is shown\n-        if (sysTray != null) {\n-            sysTray.hide();\n-        }\n-\n         // dispose all windows, even if they are not displayed anymore\n         for (Window window : Window.getWindows()) {\n             window.dispose();\n@@ -1229,7 +1222,6 @@ private void fillMenu() {\n \n         file.addSeparator();\n         file.add(close);\n-        file.add(new MinimizeToSysTrayAction());\n         file.add(quit);\n         mb.add(file);\n         //edit.add(test);\n@@ -1875,10 +1867,6 @@ public void run() {\n                             openInNew);\n                     diag.addEntries(entries);\n                     diag.entryListComplete();\n-                    // On the one hand, the following statement could help at issues when JabRef is minimized to the systray\n-                    // On the other hand, users might dislake modality and this is not required to let the GUI work.\n-                    // Therefore, it is disabled.\n-                    // diag.setModal(true);\n                     Util.placeDialog(diag, JabRefFrame.this);\n                     diag.setVisible(true);\n                     diag.toFront();\n@@ -2478,44 +2466,6 @@ public void actionPerformed(ActionEvent event) {\n         }\n     }\n \n-    class MinimizeToSysTrayAction extends MnemonicAwareAction {\n-\n-        public MinimizeToSysTrayAction() {\n-            putValue(Action.NAME, Localization.menuTitle(\"Minimize to system tray\"));\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Minimize to system tray\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent event) {\n-            if (sysTray == null) {\n-                sysTray = new SysTray(JabRefFrame.this);\n-            }\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                @Override\n-                public void run() {\n-                    sysTray.show();\n-                    JabRefFrame.this.setVisible(false);\n-                }\n-            });\n-        }\n-    }\n-\n-\n-    public void showIfMinimizedToSysTray() {\n-        // TODO: does not work correctly when a dialog is shown\n-        // Workaround: put into invokeLater queue before a dialog is added to that queue\n-        if (!this.isVisible()) {\n-            // isVisible() is false if minimized to systray\n-            if (sysTray != null) {\n-                sysTray.hide();\n-            }\n-            setVisible(true);\n-            this.isActive();\n-            toFront();\n-        }\n-    }\n-\n     private static class MyGlassPane extends JPanel {\n \n         //ForegroundLabel infoLabel = new ForegroundLabel(\"Showing search\");, @@ -1,97 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref.gui;\n-\n-import net.sf.jabref.logic.l10n.Localization;\n-\n-import javax.swing.*;\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-\n-public class SysTray {\n-\n-    private final JabRefFrame frame;\n-    private final TrayIcon icon;\n-    private SystemTray tray;\n-\n-\n-    public SysTray(JabRefFrame frame) {\n-        this.frame = frame;\n-\n-        final ActionListener showJabref = new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent actionEvent) {\n-                SwingUtilities.invokeLater(new Runnable() {\n-\n-                    @Override\n-                    public void run() {\n-                        SysTray.this.frame.showIfMinimizedToSysTray();\n-                    }\n-                });\n-\n-            }\n-        };\n-        MenuItem showWindow = new MenuItem(Localization.lang(\"Show\"));\n-        showWindow.addActionListener(showJabref);\n-        PopupMenu popup = new PopupMenu();\n-        popup.add(showWindow);\n-        ImageIcon imic = new ImageIcon(GUIGlobals.class.getResource(\"/images/icons/JabRef-icon-48.png\"));\n-        icon = new TrayIcon(imic.getImage(), \"JabRef\", popup);\n-        icon.setImageAutoSize(true);\n-        icon.addMouseListener(new MouseAdapter() {\n-\n-            @Override\n-            public void mouseClicked(MouseEvent mouseEvent) {\n-                showJabref.actionPerformed(new ActionEvent(mouseEvent.getSource(), 0, \"\"));\n-            }\n-\n-            @Override\n-            public void mousePressed(MouseEvent mouseEvent) {\n-                super.mousePressed(mouseEvent); //To change body of overridden methods use File | Settings | File Templates.\n-            }\n-\n-            @Override\n-            public void mouseReleased(MouseEvent mouseEvent) {\n-                super.mouseReleased(mouseEvent); //To change body of overridden methods use File | Settings | File Templates.\n-            }\n-        });\n-        if (SystemTray.isSupported()) {\n-            tray = SystemTray.getSystemTray();\n-        }\n-    }\n-\n-    public void show() {\n-        if (tray == null) {\n-            return;\n-        }\n-        try {\n-            tray.add(icon);\n-        } catch (AWTException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    public void hide() {\n-        if (tray == null) {\n-            return;\n-        }\n-        tray.remove(icon);\n-    }\n-}, @@ -28,8 +28,6 @@\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import com.jgoodies.forms.factories.Borders;\n-\n import net.sf.jabref.*;\n import net.sf.jabref.external.ExternalFileType;\n import net.sf.jabref.gui.*;\n@@ -41,8 +39,7 @@\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.CellConstraints;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -145,29 +142,28 @@ public void stateChanged(ChangeEvent arg0) {\n         cleanUpUnits = new JCheckBox(Localization.lang(\"Add brackets and replace separators with their non-breaking version for units\"));\n         cleanUpUnicode = new JCheckBox(Localization.lang(\"Run Unicode converter on title, author(s), and abstract\"));\n         cleanUpBibLatex = new JCheckBox(Localization.lang(\"Convert to BibLatex format (for example, move the value of the 'journal' field to 'journaltitle')\"));\n-        optionsPanel = new JPanel();\n         retrieveSettings();\n \n         FormLayout layout = new FormLayout(\"left:15dlu,pref:grow\", \"pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout, optionsPanel);\n-        builder.border(Borders.DIALOG);\n-        CellConstraints cc = new CellConstraints();\n-        builder.add(cleanUpHTML, cc.xyw(1, 1, 2));\n-        builder.add(cleanUpUnicode, cc.xyw(1, 2, 2));\n-        builder.add(cleanUpCase, cc.xyw(1, 3, 2));\n-        builder.add(cleanUpLaTeX, cc.xyw(1, 4, 2));\n-        builder.add(cleanUpUnits, cc.xyw(1, 5, 2));\n-        builder.add(cleanUpSuperscripts, cc.xyw(1, 6, 2));\n-        builder.add(cleanUpDOI, cc.xyw(1, 7, 2));\n-        builder.add(cleanUpMonth, cc.xyw(1, 8, 2));\n-        builder.add(cleanUpPageNumbers, cc.xyw(1, 9, 2));\n-        builder.add(cleanUpUpgradeExternalLinks, cc.xyw(1, 10, 2));\n-        builder.add(cleanUpMakePathsRelative, cc.xyw(1, 11, 2));\n-        builder.add(cleanUpRenamePDF, cc.xyw(1, 12, 2));\n+        FormBuilder builder = FormBuilder.create().layout(layout);\n+        builder.add(cleanUpHTML).xyw(1, 1, 2);\n+        builder.add(cleanUpUnicode).xyw(1, 2, 2);\n+        builder.add(cleanUpCase).xyw(1, 3, 2);\n+        builder.add(cleanUpLaTeX).xyw(1, 4, 2);\n+        builder.add(cleanUpUnits).xyw(1, 5, 2);\n+        builder.add(cleanUpSuperscripts).xyw(1, 6, 2);\n+        builder.add(cleanUpDOI).xyw(1, 7, 2);\n+        builder.add(cleanUpMonth).xyw(1, 8, 2);\n+        builder.add(cleanUpPageNumbers).xyw(1, 9, 2);\n+        builder.add(cleanUpUpgradeExternalLinks).xyw(1, 10, 2);\n+        builder.add(cleanUpMakePathsRelative).xyw(1, 11, 2);\n+        builder.add(cleanUpRenamePDF).xyw(1, 12, 2);\n         String currentPattern = Localization.lang(\"File name format pattern\").concat(\": \").concat(Globals.prefs.get(ImportSettingsTab.PREF_IMPORT_FILENAMEPATTERN));\n-        builder.add(new JLabel(currentPattern), cc.xyw(2, 13, 1));\n-        builder.add(cleanUpRenamePDFonlyRelativePaths, cc.xyw(2, 14, 1));\n-        builder.add(cleanUpBibLatex, cc.xyw(1, 15, 2));\n+        builder.add(new JLabel(currentPattern)).xy(2, 13);\n+        builder.add(cleanUpRenamePDFonlyRelativePaths).xy(2, 14);\n+        builder.add(cleanUpBibLatex).xyw(1, 15, 2);\n+        optionsPanel = builder.build();\n+        \n     }\n \n     private void retrieveSettings() {, @@ -22,7 +22,9 @@\n import java.awt.event.ActionListener;\n import java.awt.event.MouseAdapter;\n import java.awt.event.MouseEvent;\n+import java.io.File;\n import java.io.IOException;\n+import java.nio.file.Files;\n \n import javax.swing.AbstractAction;\n import javax.swing.JButton;\n@@ -40,11 +42,12 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.external.*;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.logic.util.io.FileUtil;\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.io.JabRefDesktop;\n@@ -73,7 +76,7 @@\n \n \n     public FileListEditor(JabRefFrame frame, MetaData metaData, String fieldName, String content,\n-            EntryEditor entryEditor) {\n+                          EntryEditor entryEditor) {\n         this.frame = frame;\n         this.metaData = metaData;\n         this.fieldName = fieldName;\n@@ -141,14 +144,14 @@ public void actionPerformed(ActionEvent e) {\n                 downloadFile();\n             }\n         });\n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout\n                 (\"fill:pref,1dlu,fill:pref,1dlu,fill:pref\", \"fill:pref,fill:pref\"));\n-        builder.append(up);\n-        builder.append(add);\n-        builder.append(auto);\n-        builder.append(down);\n-        builder.append(remove);\n-        builder.append(download);\n+        builder.add(up).xy(1, 1);\n+        builder.add(add).xy(3, 1);\n+        builder.add(auto).xy(5, 1);\n+        builder.add(down).xy(1, 2);\n+        builder.add(remove).xy(3, 2);\n+        builder.add(download).xy(5, 2);\n         panel = new JPanel();\n         panel.setLayout(new BorderLayout());\n         panel.add(sPane, BorderLayout.CENTER);\n@@ -238,6 +241,35 @@ public void actionPerformed(ActionEvent e) {\n         JMenuItem moveToFileDir = new JMenuItem(Localization.lang(\"Move to file directory\"));\n         menu.add(moveToFileDir);\n         moveToFileDir.addActionListener(new MoveFileAction(frame, entryEditor, this, true));\n+\n+        JMenuItem deleteFile = new JMenuItem(Localization.lang(\"Delete local file\"));\n+        menu.add(deleteFile);\n+        deleteFile.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                int row = getSelectedRow();\n+                // no selection\n+                if (row == -1) {\n+                    return;\n+                }\n+\n+                FileListEntry entry = tableModel.getEntry(row);\n+                // null if file does not exist\n+                File file = FileUtil.expandFilename(metaData, entry.getLink());\n+\n+                // transactional delete and unlink\n+                try {\n+                    if(file != null) {\n+                        Files.delete(file.toPath());\n+                    }\n+                    removeEntries();\n+                } catch (IOException ex) {\n+                    JOptionPane.showMessageDialog(frame, Localization.lang(\"File permission error\"),\n+                            Localization.lang(\"Cannot delete file\"), JOptionPane.ERROR_MESSAGE);\n+                    LOGGER.warn(\"File permission error while deleting: \" + file.toPath());\n+                }\n+            }\n+        });\n     }\n \n     private void openSelectedFile() {\n@@ -367,7 +399,8 @@ private void moveEntry(int i) {\n \n     /**\n      * Open an editor for this entry.\n-     * @param entry The entry to edit.\n+     *\n+     * @param entry      The entry to edit.\n      * @param openBrowse True to indicate that a Browse dialog should be immediately opened.\n      * @return true if the edit was accepted, false if it was cancelled.\n      */\n@@ -434,6 +467,7 @@ private void downloadFile() {\n     /**\n      * This is the callback method that the DownloadExternalFile class uses to report the result\n      * of a download operation. This call may never come, if the user cancelled the operation.\n+     *\n      * @param file The FileListEntry linking to the resulting local file.\n      */\n     @Override\n@@ -453,8 +487,7 @@ public void mouseClicked(MouseEvent e) {\n                     FileListEntry entry = tableModel.getEntry(row);\n                     editListEntry(entry, false);\n                 }\n-            }\n-            else if (e.isPopupTrigger()) {\n+            } else if (e.isPopupTrigger()) {\n                 processPopupTrigger(e);\n             }\n         }, @@ -0,0 +1,57 @@\n+/*  Copyright (C) 2015 JabRef contributors.\n+    Copyright (C) 2015 Oscar Gustafsson.\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.gui.fieldeditors.contextmenu;\n+\n+import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.logic.util.strings.Converters;\n+\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.text.JTextComponent;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * @author Oscar Gustafsson\n+ *\n+ * Menu to show up on right-click in a text field for converting text formats\n+ */\n+public class ConversionMenu extends JMenu {\n+\n+    private static final long serialVersionUID = 8553688191031156265L;\n+    private final JTextComponent parent;\n+\n+\n+    public ConversionMenu(JTextComponent opener) {\n+        super(Localization.lang(\"Convert\"));\n+        parent = opener;\n+\n+        // create menu items, one for each case changer\n+        for (final Converters.Converter converter : Converters.ALL) {\n+            JMenuItem menuItem = new JMenuItem(Localization.lang(converter.getName()));\n+            menuItem.addActionListener(new ActionListener() {\n+\n+                @Override\n+                public void actionPerformed(ActionEvent e) {\n+                    parent.setText(converter.convert(parent.getText()));\n+                }\n+            });\n+            this.add(menuItem);\n+        }\n+    }\n+}, @@ -74,9 +74,11 @@ private void initMenu() {\n \n         if (field.getTextComponent() instanceof JTextComponent) {\n             inputMenu.add(new CaseChangeMenu((JTextComponent) field.getTextComponent()));\n+            inputMenu.add(new ConversionMenu((JTextComponent) field.getTextComponent()));\n         }\n     }\n \n+    @SuppressWarnings(\"serial\")\n     class ReplaceAction extends AbstractAction {\n         public ReplaceAction() {\n             putValue(Action.NAME, Localization.lang(\"Normalize to BibTeX name format\"));, @@ -15,8 +15,8 @@\n */\n package net.sf.jabref.gui.journals;\n \n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.undo.NamedCompound;\n@@ -49,7 +49,7 @@ public void run() {\n             return;\n         }\n \n-        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(Globals.journalAbbrev, iso);\n+        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(Abbreviations.journalAbbrev, iso);\n \n         NamedCompound ce = new NamedCompound(\"Abbreviate journal names\");\n         int count = 0;, @@ -2,8 +2,8 @@\n \n import net.sf.jabref.gui.entryeditor.EntryEditor;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.logic.journals.Abbreviation;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -39,7 +39,7 @@ public static JComponent getNameSwitcher(final EntryEditor entryEditor, final Fi\n             @Override\n             public void actionPerformed(ActionEvent actionEvent) {\n                 String text = editor.getText();\n-                if (Globals.journalAbbrev.isKnownName(text)) {\n+                if (Abbreviations.journalAbbrev.isKnownName(text)) {\n                     String s = toggleAbbreviation(text);\n \n                     if (s != null) {\n@@ -52,7 +52,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n             }\n \n             public String toggleAbbreviation(String currentText) {\n-                return Globals.journalAbbrev.getNextAbbreviation(currentText).orElse(currentText);\n+                return Abbreviations.journalAbbrev.getNextAbbreviation(currentText).orElse(currentText);\n             }\n         });\n , @@ -36,13 +36,13 @@\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.logic.journals.Abbreviation;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n import net.sf.jabref.gui.net.MonitoredURLDownload;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.ButtonStackBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.CellConstraints;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -91,49 +91,47 @@ public ManageJournalsPanel(final JabRefFrame frame) {\n         FormLayout layout = new FormLayout\n                 (\"1dlu, 8dlu, left:pref, 4dlu, fill:200dlu:grow, 4dlu, fill:pref\",// 4dlu, left:pref, 4dlu\",\n                 \"pref, pref, pref, 20dlu, 20dlu, fill:200dlu, 4dlu, pref\");//150dlu\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-\n-        CellConstraints cc = new CellConstraints();\n+        FormBuilder builder = FormBuilder.create().layout(layout);\n \n         /*JLabel description = new JLabel(\"<HTML>\"+Glbals.lang(\"JabRef can switch journal names between \"\n             +\"abbreviated and full form. Since it knows only a limited number of journal names, \"\n             +\"you may need to add your own definitions.\")+\"</HTML>\");*/\n-        builder.addSeparator(Localization.lang(\"Built-in journal list\"), cc.xyw(2, 1, 6));\n+        builder.addSeparator(Localization.lang(\"Built-in journal list\")).xyw(2, 1, 6);\n         JLabel description = new JLabel(\"<HTML>\" + Localization.lang(\"JabRef includes a built-in list of journal abbreviations.\")\n                 + \"<br>\" + Localization.lang(\"You can add additional journal names by setting up a personal journal list,<br>as \"\n                 + \"well as linking to external journal lists.\") + \"</HTML>\");\n         description.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\n-        builder.add(description, cc.xyw(2, 2, 6));\n+        builder.add(description).xyw(2, 2, 6);\n         JButton viewBuiltin = new JButton(Localization.lang(\"View\"));\n-        builder.add(viewBuiltin, cc.xy(7, 2));\n-        builder.addSeparator(Localization.lang(\"Personal journal list\"), cc.xyw(2, 3, 6));\n+        builder.add(viewBuiltin).xy(7, 2);\n+        builder.addSeparator(Localization.lang(\"Personal journal list\")).xyw(2, 3, 6);\n \n-        //builder.add(description, cc.xyw(2,1,6));\n-        builder.add(newFile, cc.xy(3, 4));\n-        builder.add(newNameTf, cc.xy(5, 4));\n+        //builder.add(description).xyw(2,1,6));\n+        builder.add(newFile).xy(3, 4);\n+        builder.add(newNameTf).xy(5, 4);\n         JButton browseNew = new JButton(Localization.lang(\"Browse\"));\n-        builder.add(browseNew, cc.xy(7, 4));\n-        builder.add(oldFile, cc.xy(3, 5));\n-        builder.add(personalFile, cc.xy(5, 5));\n+        builder.add(browseNew).xy(7, 4);\n+        builder.add(oldFile).xy(3, 5);\n+        builder.add(personalFile).xy(5, 5);\n         //BrowseAction action = new BrowseAction(personalFile, false);\n         //JButton browse = new JButton(Globals.lang(\"Browse\"));\n         //browse.addActionListener(action);\n         JButton browseOld = new JButton(Localization.lang(\"Browse\"));\n-        builder.add(browseOld, cc.xy(7, 5));\n+        builder.add(browseOld).xy(7, 5);\n \n         userPanel.setLayout(new BorderLayout());\n         //builtInTable = new JTable(Globals.journalAbbrev.getTableModel());\n-        builder.add(userPanel, cc.xyw(2, 6, 4));\n+        builder.add(userPanel).xyw(2, 6, 4);\n         ButtonStackBuilder butBul = new ButtonStackBuilder();\n         butBul.addButton(add);\n         butBul.addButton(remove);\n \n         butBul.addGlue();\n-        builder.add(butBul.getPanel(), cc.xy(7, 6));\n+        builder.add(butBul.getPanel()).xy(7, 6);\n \n-        builder.addSeparator(Localization.lang(\"External files\"), cc.xyw(2, 8, 6));\n+        builder.addSeparator(Localization.lang(\"External files\")).xyw(2, 8, 6);\n         externalFilesPanel.setLayout(new BorderLayout());\n-        //builder.add(/*new JScrollPane(*/externalFilesPanel/*)*/, cc.xyw(2,8,6));\n+        //builder.add(/*new JScrollPane(*/externalFilesPanel/*)*/).xyw(2,8,6);\n \n         setLayout(new BorderLayout());\n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));//createMatteBorder(1,1,1,1,Color.green));\n@@ -158,22 +156,21 @@ public ManageJournalsPanel(final JabRefFrame frame) {\n \n         // Set up panel for editing a single journal, to be used in a dialog box:\n         FormLayout layout2 = new FormLayout\n-                (\"right:pref, 4dlu, fill:180dlu\", \"\");\n-        DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n-        builder2.append(Localization.lang(\"Journal name\"));\n-        builder2.append(nameTf);\n-        builder2.nextLine();\n-        builder2.append(Localization.lang(\"ISO abbreviation\"));\n-        builder2.append(abbrTf);\n+                (\"right:pref, 4dlu, fill:180dlu\", \"p, 2dlu, p\");\n+        FormBuilder builder2 = FormBuilder.create().layout(layout2);\n+        builder2.add(Localization.lang(\"Journal name\")).xy(1, 1);\n+        builder2.add(nameTf).xy(3, 1);\n+        builder2.add(Localization.lang(\"ISO abbreviation\")).xy(1, 3);\n+        builder2.add(abbrTf).xy(3, 3);\n         journalEditPanel = builder2.getPanel();\n \n         viewBuiltin.addActionListener(new ActionListener() {\n \n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 JournalAbbreviationRepository abbr = new JournalAbbreviationRepository();\n-                abbr.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-                JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Globals.journalAbbrev));\n+                abbr.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n+                JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Abbreviations.journalAbbrev));\n                 JScrollPane pane = new JScrollPane(table);\n                 JOptionPane.showMessageDialog(null, pane, Localization.lang(\"Journal list preview\"), JOptionPane.INFORMATION_MESSAGE);\n             }\n@@ -280,16 +277,17 @@ public void setValues() {\n \n     private void buildExternalsPanel() {\n \n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout(\"fill:pref:grow\", \"\"));\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout(\"fill:pref:grow\", \"p\"));\n+        int row = 1;\n         for (ExternalFileEntry efe : externals) {\n-            builder.append(efe.getPanel());\n-            builder.nextLine();\n+            builder.add(efe.getPanel()).xy(1, row);\n+            builder.appendRows(\"2dlu, p\");\n+            row += 2;\n         }\n-        builder.append(Box.createVerticalGlue());\n-        builder.nextLine();\n-        builder.append(addExtPan);\n-        builder.nextLine();\n-        builder.append(Box.createVerticalGlue());\n+        builder.add(Box.createVerticalGlue()).xy(1,row);\n+        builder.appendRows(\"2dlu, p, 2dlu, p\");\n+        builder.add(addExtPan).xy(1, row+2);\n+        builder.add(Box.createVerticalGlue()).xy(1, row+2);\n \n         //builder.getPanel().setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.green));\n         //externalFilesPanel.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.red));\n@@ -423,7 +421,7 @@ private void storeSettings() throws FileNotFoundException {\n             Globals.prefs.putStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS, list);\n         }\n \n-        Globals.initializeJournalNames();\n+        Abbreviations.initializeJournalNames(Globals.prefs);\n \n         // Update the autocompleter for the \"journal\" field in all base panels,\n         // so added journal names are available:\n@@ -641,13 +639,13 @@ private void setupPanel() {\n             browse.addActionListener(browseA);\n             DownloadAction da = new DownloadAction(tf);\n             download.addActionListener(da);\n-            DefaultFormBuilder builder = new DefaultFormBuilder\n-                    (new FormLayout(\"fill:pref:grow, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"\"));\n-            builder.append(tf);\n-            builder.append(browse);\n-            builder.append(download);\n-            builder.append(view);\n-            builder.append(clear);\n+            FormBuilder builder = FormBuilder.create().\n+                    layout(new FormLayout(\"fill:pref:grow, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref\", \"p\"));\n+            builder.add(tf).xy(1, 1);\n+            builder.add(browse).xy(3, 1);\n+            builder.add(download).xy(5, 1);\n+            builder.add(view).xy(7, 1);\n+            builder.add(clear).xy(9, 1);\n \n             pan = builder.getPanel();\n \n@@ -658,7 +656,8 @@ public void actionPerformed(ActionEvent e) {\n                     try {\n                         JournalAbbreviationRepository abbr = new JournalAbbreviationRepository();\n                         abbr.readJournalListFromFile(new File(tf.getText()));\n-                        JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(Globals.journalAbbrev));\n+\n+                        JTable table = new JTable(JournalAbbreviationsUtil.getTableModel(abbr));\n                         JScrollPane pane = new JScrollPane(table);\n                         JOptionPane.showMessageDialog(null, pane, Localization.lang(\"Journal list preview\"), JOptionPane.INFORMATION_MESSAGE);\n                     } catch (FileNotFoundException ex) {, @@ -17,8 +17,8 @@\n \n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.Globals;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -47,7 +47,7 @@ public void run() {\n             return;\n         }\n \n-        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbrev);\n+        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Abbreviations.journalAbbrev);\n \n         NamedCompound ce = new NamedCompound(\"Unabbreviate journal names\");\n         int count = 0;, @@ -53,7 +53,6 @@\n     public static final String INCREMENTAL_SEARCH = \"Incremental search\";\n     public static final String LOAD_SESSION = \"Load session\";\n     public static final String MARK_ENTRIES = \"Mark entries\";\n-    public static final String MINIMIZE_TO_SYSTEM_TRAY = \"Minimize to system tray\";\n     public static final String NEW_ARTICLE = \"New article\";\n     public static final String NEW_BOOK = \"New book\";\n     public static final String NEW_ENTRY = \"New entry\";\n@@ -212,7 +211,6 @@ public KeyBinds() {\n         keyBindMap.put(REFRESH_OO, \"ctrl alt O\");\n         keyBindMap.put(FILE_LIST_EDITOR_MOVE_ENTRY_UP, \"ctrl UP\");\n         keyBindMap.put(FILE_LIST_EDITOR_MOVE_ENTRY_DOWN, \"ctrl DOWN\");\n-        keyBindMap.put(MINIMIZE_TO_SYSTEM_TRAY, \"ctrl alt W\");\n         keyBindMap.put(HIDE_SHOW_TOOLBAR, \"ctrl alt T\");\n     }\n , @@ -16,7 +16,7 @@\n package net.sf.jabref.gui.labelPattern;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n import net.sf.jabref.gui.BasePanel;\n@@ -58,25 +58,26 @@ public ResolveDuplicateLabelDialog(BasePanel panel, String key,\n             List<BibtexEntry> entries) {\n         diag = new JDialog(panel.frame(), Localization.lang(\"Duplicate BibTeX key\"), true);\n \n-        DefaultFormBuilder b = new DefaultFormBuilder(new FormLayout(\n-                \"left:pref, 4dlu, fill:pref\", \"\"));\n-        b.append(new JLabel(Localization.lang(\"Duplicate key\") + \": \" + key), 3);\n-        b.nextLine();\n+        FormBuilder b = FormBuilder.create().layout(new FormLayout(\n+                \"left:pref, 4dlu, fill:pref\", \"p\"));\n+        b.add(new JLabel(Localization.lang(\"Duplicate key\") + \": \" + key)).xyw(1, 1, 3);\n         b.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n \n         boolean first = true;\n+        int row = 3;\n         for (BibtexEntry entry : entries) {\n             JCheckBox cb = new JCheckBox(Localization.lang(\"Generate key\"), !first);\n             //JPanel pan = new JPanel();\n             //pan.setLayout(new BorderLayout());\n             //pan.add(cb, BorderLayout.NORTH);\n             //cb.add(new JPanel(), BorderLayout.CENTER);\n-            b.append(cb);\n+            b.appendRows(\"1dlu, p\");\n+            b.add(cb).xy(1, row);\n             PreviewPanel pp = new PreviewPanel(null, entry, null, new MetaData(), ResolveDuplicateLabelDialog.layout);\n             pp.setPreferredSize(new Dimension(800, 90));\n             //pp.setBorder(BorderFactory.createEtchedBorder());\n-            b.append(new JScrollPane(pp));\n-            b.nextLine();\n+            b.add(new JScrollPane(pp)).xy(3, row);\n+            row += 2;\n             cbs.add(cb);\n             first = false;\n         }, @@ -0,0 +1,67 @@\n+package net.sf.jabref.gui.nativeext;\n+\n+import com.sun.jna.Native;\n+import com.sun.jna.NativeLong;\n+import com.sun.jna.Pointer;\n+import com.sun.jna.WString;\n+import com.sun.jna.ptr.PointerByReference;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.logic.util.OS;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/**\n+ * Native extensions for Windows.\n+ */\n+public class WindowsExtensions {\n+    private static final Log LOGGER = LogFactory.getLog(WindowsExtensions.class);\n+\n+    // Register native calls for pin to taskbar functionality\n+    static {\n+        if (OS.WINDOWS) {\n+            Native.register(\"shell32\");\n+            LOGGER.info(\"Registered Shell32 DLL\");\n+        }\n+    }\n+\n+    /**\n+     * Sets the application user model id so that JabRef can be pinned to the taskbar\n+     * Only supported by Windows 7 and up!\n+     *\n+     * AppUserModelId must also be set in NSIS setup.nsi\n+     * WinShell::SetLnkAUMI \"$INSTDIR\\$(^Name).lnk\" \"${AppUserModelId}\"\n+     * Structure: JabRef.${VERSION}\n+     *\n+     * Based on http://stackoverflow.com/a/1928830\n+     * http://stackoverflow.com/questions/5438651/launch4j-nsis-and-duplicate-pinned-windows-7-taskbar-icons\n+     */\n+    public static void enablePinToTaskbar() {\n+        if(supportsPinToTaskbar()) {\n+            setCurrentProcessExplicitAppUserModelID(\"JabRef.\" + Globals.BUILD_INFO.getVersion());\n+        } else {\n+            LOGGER.info(\"Does not support pin to taskbar.\");\n+        }\n+    }\n+\n+    private static void setCurrentProcessExplicitAppUserModelID(final String appID) {\n+        if (SetCurrentProcessExplicitAppUserModelID(new WString(appID)).longValue() != 0) {\n+            throw new RuntimeException(\"unable to set current process explicit AppUserModelID to: \" + appID);\n+        }\n+    }\n+\n+    private static native NativeLong SetCurrentProcessExplicitAppUserModelID(WString appID);\n+\n+    private static boolean supportsPinToTaskbar() {\n+        if (!OS.WINDOWS) {\n+            return false;\n+        }\n+\n+        try {\n+            Float version = Float.parseFloat(System.getProperty(\"os.version\"));\n+            // Windows 7 == 6.1\n+            return version >= 6.1;\n+        } catch (NumberFormatException ex) {\n+            return false;\n+        }\n+    }\n+}, @@ -36,6 +36,7 @@\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.gui.help.HelpDialog;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n \n import com.jgoodies.forms.builder.DefaultFormBuilder;\n@@ -233,8 +234,8 @@ public void storeSettings() {\n         UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n         preferences.putBoolean(JabRefPreferences.USE_IEEE_ABRV, useIEEEAbrv.isSelected());\n         if (useIEEEAbrv.isSelected()) {\n-            Globals.journalAbbrev = new JournalAbbreviationRepository();\n-            Globals.journalAbbrev.readJournalListFromResource(Globals.JOURNALS_IEEE_INTERNAL_LIST);\n+            Abbreviations.journalAbbrev = new JournalAbbreviationRepository();\n+            Abbreviations.journalAbbrev.readJournalListFromResource(Abbreviations.JOURNALS_IEEE_INTERNAL_LIST);\n         }\n         storeRemoteSettings();\n , @@ -193,13 +193,14 @@ public void itemStateChanged(ItemEvent e) {\n         builder.nextLine();\n \n         JPanel butpan = new JPanel();\n-        butpan.setLayout(new GridLayout(2, 3));\n+        butpan.setLayout(new GridLayout(3, 3));\n         addSettingsButton(new PushToLyx(), butpan);\n         addSettingsButton(new PushToEmacs(), butpan);\n         addSettingsButton(new PushToWinEdt(), butpan);\n         addSettingsButton(new PushToVim(), butpan);\n         addSettingsButton(new PushToLatexEditor(), butpan);\n         addSettingsButton(new PushToTeXstudio(), butpan);\n+        addSettingsButton(new PushToTexmaker(), butpan);\n         builder.append(new JPanel());\n         builder.append(butpan, 3);\n \n@@ -241,7 +242,7 @@ public void setValues() {\n         emailSubject.setText(prefs.get(JabRefPreferences.EMAIL_SUBJECT));\n         openFoldersOfAttachedFiles.setSelected(prefs.getBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES));\n \n-        if (prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY)) {\n+        if (prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {\n             useRegExpComboBox.setSelected(true);\n         } else if (prefs.getBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY)) {\n             matchExactKeyOnly.setSelected(true);\n@@ -253,7 +254,7 @@ public void setValues() {\n     @Override\n     public void storeSettings() {\n \n-        prefs.putBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY, useRegExpComboBox.isSelected());\n+        prefs.putBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY, useRegExpComboBox.isSelected());\n         if (useRegExpComboBox.isSelected()) {\n             prefs.put(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY, regExpTextField.getText());\n         }, @@ -63,8 +63,8 @@\n     private final JCheckBox includeEmptyFields;\n     private final JCheckBox camelCase;\n     private final JCheckBox sameColumn;\n-    private final JComboBox valueDelimiter;\n-    private final JComboBox newlineSeparator;\n+    private final JComboBox<String> valueDelimiter;\n+    private final JComboBox<String> newlineSeparator;\n     private final JRadioButton resolveStringsStandard;\n     private final JRadioButton resolveStringsAll;\n     private final JTextField bracesAroundCapitalsFields;, @@ -20,12 +20,11 @@\n import javax.swing.JCheckBox;\n import javax.swing.JOptionPane;\n import javax.swing.JPanel;\n-import javax.swing.JLabel;\n import javax.swing.JTextField;\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -65,22 +64,15 @@ public void stateChanged(ChangeEvent event) {\n         });\n \n         FormLayout layout = new FormLayout\n-                (\"1dlu, 8dlu, left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref\", \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-\n-        builder.appendSeparator(Localization.lang(\"Network\"));\n-        builder.nextLine();\n-        builder.append(useProxy, 5);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        JLabel lap = new JLabel(Localization.lang(\"Host\") + ':');\n-        builder.append(lap);\n-        builder.append(defProxyHostname);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        JLabel lap2 = new JLabel(Localization.lang(\"Port\") + ':');\n-        builder.append(lap2);\n-        builder.append(defProxyPort);\n+                (\"8dlu, left:pref, 4dlu, fill:150dlu\", \"p, 2dlu, p, 2dlu, p, 2dlu, p\");\n+        FormBuilder builder = FormBuilder.create().layout(layout);\n+\n+        builder.addSeparator(Localization.lang(\"Network\")).xyw(1, 1, 4);\n+        builder.add(useProxy).xyw(2, 3, 3);\n+        builder.add(Localization.lang(\"Host\") + ':').xy(2, 5);\n+        builder.add(defProxyHostname).xy(4, 5);\n+        builder.add(Localization.lang(\"Port\") + ':').xy(2, 7);\n+        builder.add(defProxyPort).xy(4, 7);\n \n         JPanel pan = builder.getPanel();\n         pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));, @@ -22,18 +22,6 @@ public void handleMessage(String message) {\n             throw new IllegalStateException(\"Could not start JabRef with arguments \" + message);\n         }\n \n-        // put \"bringToFront\" in the queue\n-        // it has to happen before the call to import as the import might open a dialog\n-        // --> Globals.prefs.getBoolean(JabRefPreferences.USE_IMPORT_INSPECTION_DIALOG)\n-        // this dialog has to be shown AFTER JabRef has been brought to front\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                JabRef.jrf.showIfMinimizedToSysTray();\n-            }\n-        });\n-\n         for (int i = 0; i < loaded.size(); i++) {\n             ParserResult pr = loaded.elementAt(i);\n             JabRef.jrf.addParserResult(pr, i == 0);, @@ -20,12 +20,17 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.exporter.layout.LayoutFormatter;\n \n public class HTMLConverter implements LayoutFormatter {\n \n+    private static final Log LOGGER = LogFactory.getLog(HTMLConverter.class);\n+\n     /*   Portions \u00a9 International Organization for Standardization 1986:\n      Permission to copy in any form is granted for use with\n      conforming SGML systems and applications as defined in\n@@ -41,8 +46,7 @@\n     // An array of arrays of strings in the format:\n     // {\"decimal number of HTML entity\", \"text HTML entity\", \"corresponding LaTeX command\"}\n     // Leaving a field empty is OK as it then will not be included\n-    private final String[][] conversionList = new String[][] {\n-            {\"160\", \"nbsp\", \"\\\\{~\\\\}\"}, // no-break space = non-breaking space, \n+    private final String[][] conversionList = new String[][] {{\"160\", \"nbsp\", \"\\\\{~\\\\}\"}, // no-break space = non-breaking space, \n             //                                 U+00A0 ISOnum \n             {\"161\", \"iexcl\", \"\\\\{\\\\\\\\textexclamdown\\\\}\"}, // inverted exclamation mark, U+00A1 ISOnum\n             {\"162\", \"cent\", \"\\\\{\\\\\\\\textcent\\\\}\"}, // cent sign, U+00A2 ISOnum  \n@@ -503,7 +507,8 @@\n             {\"8364\", \"euro\", \"\\\\{\\\\\\\\texteuro\\\\}\"}, // euro sign, U+20AC NEW \n \n             /* Manually added */\n-            {\"24\", \"dollar\", \"\\\\\\\\$\"}, // Percent\n+            {\"35\", \"\", \"\\\\\\\\#\"}, // Hash\n+            {\"36\", \"dollar\", \"\\\\\\\\$\"}, // Dollar\n             {\"37\", \"percnt\", \"\\\\\\\\%\"}, // Percent\n             {\"39\", \"apos\", \"'\"}, // Apostrophe\n             {\"40\", \"lpar\", \"(\"}, // Left bracket\n@@ -558,14 +563,26 @@\n             {\"304\", \"Idot\", \"\\\\{\\\\\\\\.\\\\{I\\\\}\\\\}\"}, // capital I with dot above\n             {\"305\", \"inodot\", \"\\\\{\\\\\\\\i\\\\}\"}, // Small i without the dot\n             {\"\", \"imath\", \"\\\\{\\\\\\\\i\\\\}\"}, // Small i without the dot\n-            {\"321\", \"Lstrok\", \"\\\\{\\\\\\\\L\\\\}\"}, // upper case l with stroke\n+            {\"306\", \"\", \"\\\\{\\\\\\\\IJ\\\\}\"}, // Dutch di-graph IJ\n+            {\"307\", \"\", \"\\\\{\\\\\\\\ij\\\\}\"}, // Dutch di-graph ij\n+            {\"312\", \"\", \"\\\\{\\\\\\\\textkra\\\\}\"}, // Letter kra\n+            {\"321\", \"Lstrok\", \"\\\\{\\\\\\\\L\\\\}\"}, // upper case L with stroke\n             {\"322\", \"lstrok\", \"\\\\{\\\\\\\\l\\\\}\"}, // lower case l with stroke\n+            {\"330\", \"\", \"\\\\{\\\\\\\\NG\\\\}\"}, // upper case letter Eng\n+            {\"331\", \"\", \"\\\\{\\\\\\\\ng\\\\}\"}, // lower case letter Eng\n+            {\"338\", \"\", \"\\\\{\\\\\\\\OE\\\\}\"}, // OE-ligature\n+            {\"339\", \"\", \"\\\\{\\\\\\\\oe\\\\}\"}, // oe-ligature\n             {\"348\", \"Scirc\", \"\\\\{\\\\\\\\\\\\^\\\\{S\\\\}\\\\}\"}, // upper case S with circumflex\n             {\"349\", \"scirc\", \"\\\\{\\\\\\\\\\\\^\\\\{s\\\\}\\\\}\"}, // lower case s with circumflex\n             {\"370\", \"Uogon\", \"\\\\{\\\\\\\\k\\\\{U\\\\}\\\\}\"}, // capital U with ogonek\n             {\"371\", \"uogon\", \"\\\\{\\\\\\\\k\\\\{u\\\\}\\\\}\"}, // small u with ogonek\n             {\"381\", \"Zcaron\", \"\\\\{\\\\\\\\v\\\\{Z\\\\}\\\\}\"}, // capital Z with caron\n             {\"382\", \"zcaron\", \"\\\\{\\\\\\\\v\\\\{z\\\\}\\\\}\"}, // small z with caron\n+            {\"405\", \"\", \"\\\\{\\\\\\\\hv\\\\}\"}, // small letter Hv\n+            {\"416\", \"\", \"\\\\{\\\\\\\\OHORN\\\\}\"}, // capital O with horn\n+            {\"417\", \"\", \"\\\\{\\\\\\\\ohorn\\\\}\"}, // small o with horn\n+            {\"431\", \"\", \"\\\\{\\\\\\\\UHORN\\\\}\"}, // capital U with horn\n+            {\"432\", \"\", \"\\\\{\\\\\\\\uhorn\\\\}\"}, // small u with horn\n             {\"490\", \"Oogon\", \"\\\\{\\\\\\\\k\\\\{O\\\\}\\\\}\"}, // capital letter O with ogonek\n             {\"491\", \"oogon\", \"\\\\{\\\\\\\\k\\\\{o\\\\}\\\\}\"}, // small letter o with ogonek\n             {\"492\", \"\", \"\\\\{\\\\\\\\k\\\\{\\\\\\\\=\\\\{O\\\\}\\\\}\\\\}\"}, // capital letter O with ogonek and macron\n@@ -595,7 +612,9 @@\n             {\"8198\", \"\", \"\\\\\\\\hspace\\\\{0.167em\\\\}\"}, // Six-Per-Em Space\n             {\"8208\", \"hyphen\", \"-\"}, // Hyphen\n             {\"8229\", \"nldr\", \"\\\\.\\\\.\"}, // Double dots - en leader\n-            {\"8450\", \"complexes\", \"\\\\$\\\\\\\\mathbb\\\\{C\\\\}\\\\$\"}, // double struck capital C -- requires e.g. amsfonts\n+            {\"8241\", \"\", \"\\\\{\\\\\\\\textpertenthousand\\\\}\"}, // per ten thousands sign\n+            {\"8244\", \"\", \"\\\\{\\\\\\\\prime\\\\\\\\prime\\\\\\\\prime\\\\}\"}, // triple prime \n+            {\"8251\", \"\", \"\\\\{\\\\\\\\textreferencemark\\\\}\"}, {\"8253\", \"\", \"\\\\{\\\\\\\\textinterrobang\\\\}\"}, {\"8450\", \"complexes\", \"\\\\$\\\\\\\\mathbb\\\\{C\\\\}\\\\$\"}, // double struck capital C -- requires e.g. amsfonts\n             {\"8451\", \"\", \"\\\\$\\\\\\\\deg\\\\$\\\\{C\\\\}\"}, // Degree Celsius\n             {\"8459\", \"Hscr\", \"\\\\$\\\\\\\\mathcal\\\\{H\\\\}\\\\$\"}, // script capital H -- possibly use \\mathscr\n             {\"8460\", \"Hfr\", \"\\\\$\\\\\\\\mathbb\\\\{H\\\\}\\\\$\"}, // black letter capital H -- requires e.g. amsfonts\n@@ -657,8 +676,7 @@\n     };\n \n     // List of combining accents\n-    private final String[][] accentList = new String[][] {\n-            {\"768\", \"`\"}, // Grave \n+    private final String[][] accentList = new String[][] {{\"768\", \"`\"}, // Grave \n             {\"769\", \"'\"}, // Acute\n             {\"770\", \"\\\\^\"}, // Circumflex\n             {\"771\", \"~\"}, // Tilde\n@@ -678,21 +696,21 @@\n             {\"785\", \"t\"}, // Inverted breve\n             //        {\"786\", \"\"},    // Turned comma above\n             //        {\"787\", \"\"},    // Comma above\n-            //        {\"788\", \"\"},    // Reversed comma above\n-            //        {\"789\", \"\"},    // Comma above right\n+            {\"788\", \"textrevcommaabove\"}, // Reversed comma above\n+            {\"789\", \"textcommaabover\"}, // Comma above right\n             {\"790\", \"textsubgrave\"}, // Grave accent below -requires tipa\n             {\"791\", \"textsubacute\"}, // Acute accent below - requires tipa\n             {\"792\", \"textadvancing\"}, // Left tack below - requires tipa\n             {\"793\", \"textretracting\"}, // Right tack below - requires tipa\n-            //        {\"794\", \"\"},    // Left angle above\n-            //        {\"795\", \"\"},    // Horn\n+            {\"794\", \"textlangleabove\"}, // Left angle above\n+            {\"795\", \"textrighthorn\"}, // Horn\n             {\"796\", \"textsublhalfring\"}, // Left half ring below - requires tipa\n             {\"797\", \"textraising\"}, // Up tack below - requires tipa\n             {\"798\", \"textlowering\"}, // Down tack below - requires tipa\n             {\"799\", \"textsubplus\"}, // Plus sign below - requires tipa\n-            //        {\"800\", \"\"},    // Minus sign below\n-            //        {\"801\", \"\"},    // Palatalized hook below\n-            //        {\"802\", \"\"},    // Retroflex hook below\n+            {\"800\", \"textsubbar\"}, // Minus sign below\n+            {\"801\", \"textpalhookbelow\"}, // Palatalized hook below\n+            {\"802\", \"M\"}, // Retroflex hook below - textrethookbelow?\n             {\"803\", \"d\"}, // Dot below\n             {\"804\", \"textsubumlaut\"}, // Diaeresis below - requires tipa\n             {\"805\", \"textsubring\"}, // Ring below - requires tipa\n@@ -704,17 +722,17 @@\n             {\"811\", \"textsubw\"}, // Inverted double arch below - requires tipa\n             {\"812\", \"textsubwedge\"}, // Caron below\n             {\"813\", \"textsubcircum\"}, // Circumflex accent below - requires tipa\n-            //        {\"814\", \"\"},    // Breve below\n+            {\"814\", \"textsubbreve\"}, // Breve below\n             {\"815\", \"textsubarch\"}, // Inverted breve below - requires tipa\n             {\"816\", \"textsubtilde\"}, // Tilde below - requires tipa\n             {\"817\", \"b\"}, // Macron below - not completely correct\n             {\"818\", \"b\"}, // Underline\n             {\"819\", \"subdoublebar\"}, // Double low line -- requires extraipa\n             {\"820\", \"textsuperimposetilde\"}, // Tilde overlay - requires tipa\n-            //        {\"821\", \"\"},    // Short stroke overlay\n-            //        {\"822\", \"\"},    // Long stroke overlay\n-            //        {\"823\", \"\"},    // Short solidus overlay\n-            //        {\"824\", \"\"},    // Long solidus overlay\n+            {\"821\", \"B\"}, // Short stroke overlay - textsstrokethru?\n+            {\"822\", \"textlstrokethru\"}, // Long stroke overlay\n+            {\"823\", \"textsstrikethru\"}, // Short solidus overlay\n+            {\"824\", \"textlstrikethru\"}, // Long solidus overlay\n             {\"825\", \"textsubrhalfring\"}, // Right half ring below - requires tipa\n             {\"826\", \"textinvsubbridge\"}, // inverted bridge below - requires tipa\n             {\"827\", \"textsubsquare\"}, // Square below - requires tipa\n@@ -737,8 +755,11 @@\n             {\"844\", \"doubletilde\"}, // Almost equal to above - requires extraipa\n             {\"845\", \"spreadlips\"}, // Left right arrow below - requires extraipa\n             {\"846\", \"whistle\"}, // Upwards arrow below - requires extraipa\n-            //        {\"864\", \"\"},    // Double tilde\n-            //        {\"865\", \"\"},    // Double inverted breve\n+            {\"861\", \"textdoublebreve\"}, // Double breve\n+            {\"862\", \"textdoublemacron\"}, // Double macron\n+            {\"863\", \"textdoublemacronbelow\"}, // Double macron below\n+            {\"864\", \"textdoubletilde\"}, // Double tilde\n+            {\"865\", \"texttoptiebar\"}, // Double inverted breve\n             {\"866\", \"sliding\"}, // Double rightwards arrow below - requires extraipa\n     };\n \n@@ -779,6 +800,14 @@ public String formatUnicode(String text) {\n             // System.err.println(new Integer((int) character).toString() + \": \" + character.toString() + \": \" + unicodeSymbols.get(character));\n             text = text.replaceAll(character.toString(), unicodeSymbols.get(character));\n         }\n+\n+        Integer cp;\n+        for (int i = 0; i <= text.length() - 1; i++) {\n+            cp = text.codePointAt(i);\n+            if (cp >= 129) {\n+                LOGGER.warn(\"Unicode character not converted: \" + cp.toString());\n+            }\n+        }\n         return text;\n     }\n \n@@ -825,7 +854,7 @@ public String format(String text) {\n         Pattern escapedPattern = Pattern.compile(\"&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         Matcher m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(1).replace(\"x\", \"#\") + m.group(3));\n             if (numSymbols.containsKey(num)) {\n@@ -836,7 +865,7 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"(.)&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(2).replace(\"x\", \"#\") + m.group(4));\n             if (escapedAccents.containsKey(num)) {\n@@ -853,10 +882,10 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(1).replace(\"x\", \"#\") + m.group(3));\n-            System.err.println(\"HTML escaped char not converted: \" + m.group(1) + m.group(2) + m.group(3) + \" = \" + Integer.toString(num));\n+            LOGGER.warn(\"HTML escaped char not converted: \" + m.group(1) + m.group(2) + m.group(3) + \" = \" + Integer.toString(num));\n         }\n \n         // Remove $$ in case of two adjacent conversions\n@@ -866,7 +895,7 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"&(\\\\w+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            System.err.println(\"HTML escaped char not converted: \" + m.group(1));\n+            LOGGER.warn(\"HTML escaped char not converted: \" + m.group(1));\n         }\n \n         return text.trim();\n@@ -878,12 +907,12 @@ public String format(String text) {\n \n     /*private final int MAX_TAG_LENGTH = 30;*/\n     /*private final int MAX_CHAR_LENGTH = 10;\n-\n+    \n     private int readHtmlChar(String text, StringBuffer sb, int position) {\n         // Have just read the < character that starts the tag.\n         int index = text.indexOf(';', position);\n         if ((index > position) && (index-position < MAX_CHAR_LENGTH)) {\n-        \t//String code = text.substring(position, index);\n+            //String code = text.substring(position, index);\n             //System.out.println(\"Removed code: \"+text.substring(position, index));\n             return index; // Just skip the tag.\n         } else return position; // Don't do anything.\n@@ -895,8 +924,7 @@ private int readTag(String text, StringBuffer sb, int position) {\n         if (index > position && index - position < MAX_TAG_LENGTH) {\n             //System.out.println(\"Removed tag: \"+text.substring(position, index));\n             return index; // Just skip the tag.\n-        }\n-        else {\n+        } else {\n             return position; // Don't do anything.\n         }\n     }, @@ -1,4 +1,6 @@\n /*  Copyright (C) 2014 JabRef contributors.\n+    Copyright (C) 2015 Oliver Kopp\n+\n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation, either version 3 of the License, or\n@@ -16,11 +18,9 @@\n \n import java.io.FileNotFoundException;\n import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n-import java.net.URLEncoder;\n \n import javax.swing.JOptionPane;\n import javax.swing.JPanel;\n@@ -31,11 +31,11 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.logic.util.DOI;\n import net.sf.jabref.util.Util;\n \n public class DOItoBibTeXFetcher implements EntryFetcher {\n \n-    private static final String URL_PATTERN = \"http://dx.doi.org/%s\";\n     private final CaseKeeper caseKeeper = new CaseKeeper();\n     private final UnitFormatter unitFormatter = new UnitFormatter();\n \n@@ -47,16 +47,13 @@ public void stopFetching() {\n \n     @Override\n     public boolean processQuery(String query, ImportInspector inspector, OutputPrinter status) {\n-\n         BibtexEntry entry = getEntryFromDOI(query, status);\n-        if (entry != null)\n-        {\n+        if (entry != null) {\n             inspector.addEntry(entry);\n             return true;\n         } else {\n             return false;\n         }\n-\n     }\n \n     @Override\n@@ -80,22 +77,15 @@ public JPanel getOptionsPanel() {\n         return null;\n     }\n \n-    private BibtexEntry getEntryFromDOI(String doi, OutputPrinter status) {\n-        String q;\n-        try {\n-            q = URLEncoder.encode(doi, \"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            // this should never happen\n-            e.printStackTrace();\n-            return null;\n-        }\n-\n-        String urlString = String.format(DOItoBibTeXFetcher.URL_PATTERN, q);\n+    private BibtexEntry getEntryFromDOI(String doiStr, OutputPrinter status) {\n+        DOI doi = new DOI(doiStr);\n \n         // Send the request\n+\n+        // construct URL\n         URL url;\n         try {\n-            url = new URL(urlString);\n+            url = doi.getURI().toURL();\n         } catch (MalformedURLException e) {\n             e.printStackTrace();\n             return null;\n@@ -117,9 +107,11 @@ private BibtexEntry getEntryFromDOI(String doi, OutputPrinter status) {\n         } catch (FileNotFoundException e) {\n \n             if (status != null) {\n-                status.showMessage(Localization.lang(\"Unknown DOI: '%0'.\",\n-                                doi),\n-                        Localization.lang(\"Get BibTeX entry from DOI\"), JOptionPane.INFORMATION_MESSAGE);\n+                // @formatter:off\n+                status.showMessage(Localization.lang(\"Unknown DOI: '%0'.\", doi.getDOI()),\n+                                   Localization.lang(\"Get BibTeX entry from DOI\"),\n+                                   JOptionPane.INFORMATION_MESSAGE);\n+                // @formatter:on\n             }\n             return null;\n         } catch (IOException e) {, @@ -47,17 +47,23 @@\n import javax.swing.JPanel;\n import javax.swing.JRadioButton;\n \n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n import net.sf.jabref.*;\n import net.sf.jabref.importer.*;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.logic.id.IdGenerator;\n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;\n \n public class IEEEXploreFetcher implements EntryFetcher {\n \n+    private static final Log LOGGER = LogFactory.getLog(IEEEXploreFetcher.class);\n+\n     final CaseKeeperList caseKeeperList = new CaseKeeperList();\n     private final CaseKeeper caseKeeper = new CaseKeeper();\n     private final UnitFormatter unitFormatter = new UnitFormatter();\n@@ -83,19 +89,16 @@\n     private String searchUrl;\n \n     private final Pattern hitsPattern = Pattern.compile(\"([0-9,]+) Results\");\n-    private final Pattern idPattern = Pattern.compile(\"<input name=\\'\\' title=\\'.*\\' type=\\'checkbox\\'\" +\n-            \"value=\\'\\'\\\\s*id=\\'([0-9]+)\\'/>\");\n+    private final Pattern idPattern = Pattern.compile(\"<input name=\\'\\' title=\\'.*\\' type=\\'checkbox\\'\" + \"value=\\'\\'\\\\s*id=\\'([0-9]+)\\'/>\");\n     private final Pattern typePattern = Pattern.compile(\"<span class=\\\"type\\\">\\\\s*(.+)\");\n     private final HashMap<String, String> fieldPatterns = new HashMap<String, String>();\n     private final Pattern absPattern = Pattern.compile(\"<p>\\\\s*(.+)\");\n \n-    Pattern stdEntryPattern = Pattern.compile(\".*<strong>(.+)</strong><br>\"\n-            + \"\\\\s+(.+)\");\n+    Pattern stdEntryPattern = Pattern.compile(\".*<strong>(.+)</strong><br>\" + \"\\\\s+(.+)\");\n \n     private final Pattern publicationPattern = Pattern.compile(\"(.*), \\\\d*\\\\.*\\\\s?(.*)\");\n     private final Pattern proceedingPattern = Pattern.compile(\"(.*?)\\\\.?\\\\s?Proceedings\\\\s?(.*)\");\n-    Pattern abstractLinkPattern = Pattern.compile(\n-            \"<a href=\\'(.+)\\'>\\\\s*<span class=\\\"more\\\">View full.*</span> </a>\");\n+    Pattern abstractLinkPattern = Pattern.compile(\"<a href=\\'(.+)\\'>\\\\s*<span class=\\\"more\\\">View full.*</span> </a>\");\n \n     Pattern ieeeArticleNumberPattern = Pattern.compile(\"<a href=\\\".*arnumber=(\\\\d+).*\\\">\");\n \n@@ -158,29 +161,22 @@ public boolean processQuery(String query, ImportInspector dialog, OutputPrinter\n             String page = getResults(url);\n \n             if (page.contains(\"You have entered an invalid search\")) {\n-                status.showMessage(Localization.lang(\"You have entered an invalid search '%0'.\",\n-                                terms),\n-                        Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n+                status.showMessage(Localization.lang(\"You have entered an invalid search '%0'.\", terms), Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n                 return false;\n             }\n \n             if (page.contains(\"Bad request\")) {\n-                status.showMessage(Localization.lang(\"Bad Request '%0'.\",\n-                                terms),\n-                        Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n+                status.showMessage(Localization.lang(\"Bad Request '%0'.\", terms), Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n                 return false;\n             }\n \n             if (page.contains(\"No results were found.\")) {\n-                status.showMessage(Localization.lang(\"No entries found for the search string '%0'\",\n-                                terms),\n-                        Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n+                status.showMessage(Localization.lang(\"No entries found for the search string '%0'\", terms), Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n                 return false;\n             }\n \n             if (page.contains(\"Error Page\")) {\n-                status.showMessage(Localization.lang(\"Intermittent errors on the IEEE Xplore server. Please try again in a while.\"),\n-                        Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n+                status.showMessage(Localization.lang(\"Intermittent errors on the IEEE Xplore server. Please try again in a while.\"), Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n                 return false;\n             }\n \n@@ -190,10 +186,11 @@ public boolean processQuery(String query, ImportInspector dialog, OutputPrinter\n             importBibtex = bibButton.isSelected();\n \n             if (hits > IEEEXploreFetcher.MAX_FETCH) {\n-                status.showMessage(Localization.lang(\"%0 entries found. To reduce server load, \"\n-                                        + \"only %1 will be downloaded.\",\n-                                new String[]{String.valueOf(hits), String.valueOf(IEEEXploreFetcher.MAX_FETCH)}),\n+                // @formatter:off\n+                status.showMessage(Localization.lang(\"%0 entries found. To reduce server load, only %1 will be downloaded.\",\n+                        new String[] {String.valueOf(hits), String.valueOf(IEEEXploreFetcher.MAX_FETCH)}),\n                         Localization.lang(\"Search IEEEXplore\"), JOptionPane.INFORMATION_MESSAGE);\n+                // @formatter:on\n                 hits = IEEEXploreFetcher.MAX_FETCH;\n             }\n \n@@ -216,11 +213,9 @@ public boolean processQuery(String query, ImportInspector dialog, OutputPrinter\n         } catch (MalformedURLException e) {\n             e.printStackTrace();\n         } catch (ConnectException e) {\n-            status.showMessage(Localization.lang(\"Connection to IEEEXplore failed\"),\n-                    Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n+            status.showMessage(Localization.lang(\"Connection to IEEEXplore failed\"), Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n         } catch (IOException e) {\n-            status.showMessage(Localization.lang(e.getMessage()),\n-                    Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n+            status.showMessage(Localization.lang(e.getMessage()), Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n             e.printStackTrace();\n         }\n         return false;\n@@ -255,15 +250,13 @@ private String makeUrl(int startIndex) {\n \n     private void parse(ImportInspector dialog, String text, int startIndex, int firstEntryNumber) {\n         piv = startIndex;\n-        int entryNumber = firstEntryNumber;\n-\n+        \n         if (importBibtex) {\n             //TODO: Login\n             ArrayList<String> idSelected = new ArrayList<String>();\n             String id;\n             while ((id = parseNextEntryId(text, piv)) != null && shouldContinue) {\n                 idSelected.add(id);\n-                entryNumber++;\n             }\n             try {\n                 BibtexDatabase dbase = parseBibtexDatabase(idSelected, includeAbstract);\n@@ -285,7 +278,6 @@ private void parse(ImportInspector dialog, String text, int startIndex, int firs\n                     dialog.setProgress(parsed + unparseable, hits);\n                     parsed++;\n                 }\n-                entryNumber++;\n             }\n         }\n     }\n@@ -303,11 +295,9 @@ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws\n         }\n         conn.setDoInput(true);\n         conn.setDoOutput(true);\n-        conn.setRequestProperty(\"Content-Type\",\n-                \"application/x-www-form-urlencoded\");\n+        conn.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded\");\n         conn.setRequestProperty(\"Referer\", searchUrl);\n-        PrintWriter out = new PrintWriter(\n-                conn.getOutputStream());\n+        PrintWriter out = new PrintWriter(conn.getOutputStream());\n \n         String recordIds = \"\";\n         for (String anId : id) {\n@@ -317,7 +307,7 @@ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws\n         String citation = abs ? \"citation-abstract\" : \"citation-only\";\n \n         String content = \"recordIds=\" + recordIds.replaceAll(\" \", \"%20\") + \"&fromPageName=&citations-format=\" + citation + \"&download-format=download-bibtex\";\n-        System.out.println(content);\n+        LOGGER.debug(content);\n         out.write(content);\n         out.flush();\n         out.close();\n@@ -334,7 +324,7 @@ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws\n                 sb.append(buffer[i]);\n             }\n         }\n-        System.out.println(sb);\n+        LOGGER.debug(sb.toString());\n \n         ParserResult results = new BibtexParser(bufr).parse();\n         bufr.close();\n@@ -478,15 +468,15 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n                 if (parts.length == 3) {\n                     fullName += parts[2];\n                 }\n-                if (entry.getField(\"note\").equals(\"Early Access\")) {\n+                String note = entry.getField(\"note\");\n+                if (note != null && note.equals(\"Early Access\")) {\n                     entry.setField(\"year\", \"to be published\");\n                     entry.clearField(\"month\");\n                     entry.clearField(\"pages\");\n                     entry.clearField(\"number\");\n                 }\n             } else {\n-                fullName = fullName.replace(\"Conference Proceedings\", \"Proceedings\").\n-                        replace(\"Proceedings of\", \"Proceedings\").replace(\"Proceedings.\", \"Proceedings\");\n+                fullName = fullName.replace(\"Conference Proceedings\", \"Proceedings\").replace(\"Proceedings of\", \"Proceedings\").replace(\"Proceedings.\", \"Proceedings\");\n                 fullName = fullName.replaceAll(\"International\", \"Int.\");\n                 fullName = fullName.replaceAll(\"Symposium\", \"Symp.\");\n                 fullName = fullName.replaceAll(\"Conference\", \"Conf.\");\n@@ -521,7 +511,7 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n \n                 fullName = fullName.trim();\n                 if (Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n-                    fullName = Globals.journalAbbrev.getMedlineAbbreviation(fullName).orElse(fullName);\n+                    fullName = Abbreviations.journalAbbrev.getMedlineAbbreviation(fullName).orElse(fullName);\n                 }\n             }\n             if (type.getName().equals(\"Inproceedings\")) {\n@@ -554,7 +544,9 @@ private BibtexEntry cleanup(BibtexEntry entry) {\n \n                 fullName = fullName.replaceAll(\"^[tT]he \", \"\").replaceAll(\"^\\\\d{4} \", \"\").replaceAll(\"[,.]$\", \"\");\n                 String year = entry.getField(\"year\");\n-                fullName = fullName.replaceAll(\", \" + year + \"\\\\.?\", \"\");\n+                if (year != null) {\n+                    fullName = fullName.replaceAll(\", \" + year + \"\\\\.?\", \"\");\n+                }\n \n                 if (!fullName.contains(\"Abstract\") && !fullName.contains(\"Summaries\") && !fullName.contains(\"Conference Record\")) {\n                     fullName = \"Proc. \" + fullName;\n@@ -640,7 +632,8 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n                         typeName.equalsIgnoreCase(\"TUP Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"BIAI Journals &amp; Magazines\")) {\n                     type = BibtexEntryType.getType(\"article\");\n                     sourceField = \"journal\";\n-                } else if (typeName.equalsIgnoreCase(\"IEEE Conference Publications\") || typeName.equalsIgnoreCase(\"IET Conference Publications\") || typeName.equalsIgnoreCase(\"VDE Conference Publications\")) {\n+                } else\n+                    if (typeName.equalsIgnoreCase(\"IEEE Conference Publications\") || typeName.equalsIgnoreCase(\"IET Conference Publications\") || typeName.equalsIgnoreCase(\"VDE Conference Publications\")) {\n                     type = BibtexEntryType.getType(\"inproceedings\");\n                     sourceField = \"booktitle\";\n                 } else if (typeName.equalsIgnoreCase(\"IEEE Standards\") || typeName.equalsIgnoreCase(\"Standards\")) {\n@@ -649,8 +642,8 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n                 } else if (typeName.equalsIgnoreCase(\"IEEE eLearning Library Courses\")) {\n                     type = BibtexEntryType.getType(\"electronic\");\n                     sourceField = \"note\";\n-                } else if (typeName.equalsIgnoreCase(\"Wiley-IEEE Press eBook Chapters\") || typeName.equalsIgnoreCase(\"MIT Press eBook Chapters\") ||\n-                        typeName.equalsIgnoreCase(\"IEEE USA Books &amp; eBooks\")) {\n+                } else\n+                    if (typeName.equalsIgnoreCase(\"Wiley-IEEE Press eBook Chapters\") || typeName.equalsIgnoreCase(\"MIT Press eBook Chapters\") || typeName.equalsIgnoreCase(\"IEEE USA Books &amp; eBooks\")) {\n                     type = BibtexEntryType.getType(\"incollection\");\n                     sourceField = \"booktitle\";\n                 }\n@@ -659,9 +652,8 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n             if (type == null) {\n                 type = BibtexEntryType.getType(\"misc\");\n                 sourceField = \"note\";\n-                System.err.println(\"Type detection failed. Use MISC instead.\");\n+                LOGGER.warn(\"Type detection failed. Use MISC instead. Type string: \" + text);\n                 unparseable++;\n-                System.err.println(text);\n             }\n \n             entry = new BibtexEntry(IdGenerator.next(), type);\n@@ -713,11 +705,14 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n                 //System.out.println(authorCount + \": \" + authorMatcher.group(1));\n                 authorCount++;\n             }\n-            entry.setField(\"author\", authorNames.toString());\n-            if (entry.getField(\"author\") == null || entry.getField(\"author\").startsWith(\"a href\") ||\n-                    entry.getField(\"author\").startsWith(\"Topic(s)\")) { // Fix for some documents without authors\n+\n+            String authorString = authorNames.toString();\n+            if (authorString == null || authorString.startsWith(\"a href\") || authorString.startsWith(\"Topic(s)\")) { // Fix for some documents without authors\n                 entry.setField(\"author\", \"\");\n+            } else {\n+                entry.setField(\"author\", authorString);\n             }\n+\n             if (entry.getType() == BibtexEntryType.getStandardType(\"inproceedings\") && entry.getField(\"author\").equals(\"\")) {\n                 entry.setType(BibtexEntryType.getStandardType(\"proceedings\"));\n             }\n@@ -749,12 +744,13 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n \n     /**\n      * Find out how many hits were found.\n+     * \n      * @param page\n      */\n     private int getNumberOfHits(String page, String marker, Pattern pattern) throws IOException {\n         int ind = page.indexOf(marker);\n         if (ind < 0) {\n-            System.out.println(page);\n+            LOGGER.debug(page);\n             throw new IOException(Localization.lang(\"Could not parse number of hits\"));\n         }\n         String substring = page.substring(ind, page.length());\n@@ -768,6 +764,7 @@ private int getNumberOfHits(String page, String marker, Pattern pattern) throws\n \n     /**\n      * Download the URL and return contents as a String.\n+     * \n      * @param source\n      * @return\n      * @throws IOException\n@@ -791,6 +788,7 @@ private String getResults(URL source) throws IOException {\n \n     /**\n      * Read results from a file instead of an URL. Just for faster debugging.\n+     * \n      * @param f\n      * @return\n      * @throws IOException\n@@ -808,6 +806,7 @@ public String getResultsFromFile(File f) throws IOException {\n                 sb.append((char) buffer[i]);\n             }\n         }\n+        in.close();\n         return sb.toString();\n     }\n }, @@ -3,6 +3,7 @@\n import java.util.Map;\n import java.util.Vector;\n \n+import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n@@ -49,7 +50,7 @@ public void addContentSelectorValuesToAutoCompleters(MetaData metaData) {\n     public void addJournalListToAutoCompleter() {\n         AutoCompleter autoCompleter = get(\"journal\");\n         if(autoCompleter != null) {\n-            for(Abbreviation abbreviation : Globals.journalAbbrev.getAbbreviations()) {\n+            for(Abbreviation abbreviation : Abbreviations.journalAbbrev.getAbbreviations()) {\n                 autoCompleter.addWordToIndex(abbreviation.getName());\n             }\n         }, @@ -0,0 +1,53 @@\n+package net.sf.jabref.logic.journals;\n+\n+import net.sf.jabref.JabRefPreferences;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+\n+public class Abbreviations {\n+\n+    private static final Log LOGGER = LogFactory.getLog(Abbreviations.class);\n+\n+    // journal initialization\n+    public static final String JOURNALS_FILE_BUILTIN = \"/journals/journalList.txt\";\n+    public static final String JOURNALS_IEEE_INTERNAL_LIST = \"/journals/IEEEJournalList.txt\";\n+    public static JournalAbbreviationRepository journalAbbrev;\n+\n+    public static void initializeJournalNames(JabRefPreferences jabRefPreferences) {\n+        // Read internal lists:\n+        journalAbbrev = new JournalAbbreviationRepository();\n+        journalAbbrev.readJournalListFromResource(JOURNALS_FILE_BUILTIN);\n+        if (jabRefPreferences.getBoolean(JabRefPreferences.USE_IEEE_ABRV)) {\n+            journalAbbrev.readJournalListFromResource(JOURNALS_IEEE_INTERNAL_LIST);\n+        }\n+\n+        // Read external lists, if any (in reverse order, so the upper lists\n+        // override the lower):\n+        String[] lists = jabRefPreferences.getStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS);\n+        if (lists != null && lists.length > 0) {\n+            for (int i = lists.length - 1; i >= 0; i--) {\n+                String filename = lists[i];\n+                try {\n+                    journalAbbrev.readJournalListFromFile(new File(filename));\n+                } catch (FileNotFoundException e) {\n+                    // The file couldn't be found... should we tell anyone?\n+                    LOGGER.info(\"Cannot find external journal list file \" + filename, e);\n+                }\n+            }\n+        }\n+\n+        // Read personal list, if set up:\n+        String personalJournalList = jabRefPreferences.get(JabRefPreferences.PERSONAL_JOURNAL_LIST);\n+        if (personalJournalList != null) {\n+            try {\n+                journalAbbrev.readJournalListFromFile(new File(personalJournalList));\n+            } catch (FileNotFoundException e) {\n+                LOGGER.info(\"Personal journal list file '\" + personalJournalList + \"' not found.\", e);\n+            }\n+        }\n+\n+    }\n+}, @@ -45,6 +45,7 @@ public void readJournalListFromResource(String resource) {\n     }\n \n     public void readJournalListFromFile(File file) throws FileNotFoundException {\n+        LOGGER.debug(\"Reading journal list from file \" + file);\n         AbbreviationParser parser = new AbbreviationParser();\n         parser.readJournalListFromFile(Objects.requireNonNull(file));\n         for (Abbreviation abbreviation : parser.getAbbreviations()) {, @@ -45,20 +45,32 @@ public static void setLanguage(String language) {\n         }\n     }\n \n-    public static String lang(String key, String... params) {\n+    /**\n+     * In the translation, %c is translated to \":\", %e is translated to \"=\", %<anythingelse> to <anythingelse>, %0, ... %9 to the respective params given\n+     *\n+     * @param resBundle the ResourceBundle to use\n+     * @param idForErrorMessage output when translation is not found\n+     * @param key the key to lookup in resBundle\n+     * @param params a list of Strings to replace %0, %1, ...\n+     * @return\n+     */\n+    private static String translate(ResourceBundle resBundle, String idForErrorMessage, String key, String... params) {\n         String translation = null;\n         try {\n-            if (messages != null) {\n-                translation = messages.getString(key.replaceAll(\" \", \"_\"));\n+            if (resBundle != null) {\n+                translation = resBundle.getString(key.replaceAll(\" \", \"_\"));\n             }\n         } catch (MissingResourceException ex) {\n-            LOGGER.warn(\"Warning: could not get translation for \\\"\" + key + \"\\\" for locale \" + Locale.getDefault());\n+            LOGGER.warn(\"Warning: could not get \" + idForErrorMessage + \" translation for \\\"\" + key + \"\\\" for locale \" + Locale.getDefault());\n         }\n         if (translation == null) {\n             translation = key;\n         }\n \n+        // replace %0, %1, ...\n         if (translation != null && !translation.isEmpty()) {\n+            // also done if no params are given\n+            //  Then, %c is translated to \":\", %e is translated to \"=\", ...\n             translation = translation.replaceAll(\"_\", \" \");\n             StringBuffer sb = new StringBuffer();\n             boolean b = false;\n@@ -99,43 +111,20 @@ public static String lang(String key, String... params) {\n         return key;\n     }\n \n+    public static String lang(String key, String... params) {\n+        return translate(messages, \"message\", key, params);\n+    }\n+\n     public static String lang(String key) {\n         return lang(key, (String[]) null);\n     }\n \n-    public static String menuTitle(String key) {\n-        String translation = null;\n-        try {\n-            if (messages != null) {\n-                translation = menuTitles.getString(key.replaceAll(\" \", \"_\"));\n-            }\n-        } catch (MissingResourceException ex) {\n-            translation = key;\n-            LOGGER.warn(\"Warning: could not get menu item translation for \\\"\" + key + \"\\\"\");\n-        }\n-        if (translation != null && !translation.isEmpty()) {\n-            return translation.replaceAll(\"_\", \" \");\n-        } else {\n-            return key;\n-        }\n+    public static String menuTitle(String key, String... params) {\n+        return translate(menuTitles, \"menu item\", key, params);\n     }\n \n-    public static String getIntegrityMessage(String key) {\n-        String translation = null;\n-        try {\n-            if (intMessages != null) {\n-                translation = intMessages.getString(key);\n-            }\n-        } catch (MissingResourceException ex) {\n-            translation = key;\n-\n-            LOGGER.warn(\"Warning: could not get translation for integrity message \\\"\" + key + \"\\\"\");\n-        }\n-        if (translation != null && !translation.isEmpty()) {\n-            return translation;\n-        } else {\n-            return key;\n-        }\n+    public static String getIntegrityMessage(String key, String... params) {\n+        return translate(menuTitles, \"integrity message\", key, params);\n     }\n }\n , @@ -24,7 +24,7 @@\n \n \n     public BuildInfo() {\n-        this(\"/resource/build.properties\");\n+        this(\"/build.properties\");\n     }\n \n     public BuildInfo(String path) {, @@ -97,18 +97,27 @@ public String getDOI() {\n     }\n \n     /**\n-     * Return a URL presentation for the DOI\n+     * Return a URI presentation for the DOI\n      *\n-     * @return an encoded URL representation of the DOI\n+     * @return an encoded URI representation of the DOI\n      */\n-    public String getURL() {\n+    public URI getURI() {\n         try {\n             URI uri = new URI(RESOLVER.getScheme(), RESOLVER.getHost(), \"/\" + doi, null);\n-            return uri.toASCIIString();\n+            return uri;\n         } catch(URISyntaxException e) {\n             // should never happen\n-            LOGGER.error(doi + \" could not be encoded as URL.\");\n-            return \"\";\n+            LOGGER.error(doi + \" could not be encoded as URI.\");\n+            return null;\n         }\n     }\n+\n+    /**\n+     * Return an ASCII URL presentation for the DOI\n+     *\n+     * @return an encoded URL representation of the DOI\n+     */\n+    public String getURLAsASCIIString() {\n+        return getURI().toASCIIString();\n+    }\n }, @@ -4,7 +4,6 @@\n  * Operating system (OS) detection\n  */\n public class OS {\n-\n     // TODO: what OS do we support?\n     // https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/SystemUtils.html\n     public static final String osName = System.getProperty(\"os.name\", \"unknown\").toLowerCase();, @@ -101,7 +101,7 @@ public static String findPdf(BibtexEntry entry, String extension, String directo\n     public static String findPdf(BibtexEntry entry, String extension, String[] directories) {\n \n         String regularExpression;\n-        if (Globals.prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY)) {\n+        if (Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {\n             regularExpression = Globals.prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY);\n         } else {\n             regularExpression = Globals.prefs, @@ -3,22 +3,28 @@\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.logic.util.OS;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n+import java.nio.file.DirectoryNotEmptyException;\n+import java.nio.file.Files;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Paths;\n import java.util.ArrayList;\n \n public class FileUtil {\n+    private static final Log LOGGER = LogFactory.getLog(FileUtil.class);\n \n     /**\n      * Returns the extension of a file or null if the file does not have one (no . in name).\n      *\n      * @param file\n-     *\n      * @return The extension, trimmed and in lowercase.\n      */\n     public static String getFileExtension(File file) {\n@@ -34,16 +40,13 @@ public static String getFileExtension(File file) {\n     /**\n      * Copies a file.\n      *\n-     * @param source\n-     *            File Source file\n-     * @param dest\n-     *            File Destination file\n-     * @param deleteIfExists\n-     *            boolean Determines whether the copy goes on even if the file\n-     *            exists.\n-     * @throws IOException\n+     * @param source         File Source file\n+     * @param dest           File Destination file\n+     * @param deleteIfExists boolean Determines whether the copy goes on even if the file\n+     *                       exists.\n      * @return boolean Whether the copy succeeded, or was stopped due to the\n-     *         file already existing.\n+     * file already existing.\n+     * @throws IOException\n      */\n     public static boolean copyFile(File source, File dest, boolean deleteIfExists) throws IOException {\n \n@@ -78,7 +81,6 @@ public static boolean copyFile(File source, File dest, boolean deleteIfExists) t\n     }\n \n     /**\n-     *\n      * @param fileName\n      * @param destFilename\n      * @return\n@@ -97,17 +99,15 @@ public static boolean renameFile(String fileName, String destFilename) {\n     /**\n      * Converts a relative filename to an absolute one, if necessary. Returns\n      * null if the file does not exist.<br/>\n-     *\n+     * <p>\n      * Uses <ul>\n      * <li>the default directory associated with the extension of the file</li>\n      * <li>the standard file directory</li>\n      * <li>the directory of the bib file</li>\n      * </ul>\n      *\n-     * @param metaData\n-     *            The MetaData for the database this file belongs to.\n-     * @param name\n-     *            The file name, may also be a relative path to the file\n+     * @param metaData The MetaData for the database this file belongs to.\n+     * @param name     The file name, may also be a relative path to the file\n      */\n     public static File expandFilename(final MetaData metaData, String name) {\n         int pos = name.lastIndexOf('.');\n@@ -136,7 +136,7 @@ public static File expandFilename(final MetaData metaData, String name) {\n     /**\n      * Converts a relative filename to an absolute one, if necessary. Returns\n      * null if the file does not exist.\n-     *\n+     * <p>\n      * Will look in each of the given dirs starting from the beginning and\n      * returning the first found file to match if any.\n      */\n@@ -206,12 +206,12 @@ public static File expandFilename(String name, String dir) {\n     /**\n      * Converts an absolute filename to a relative one, if necessary.\n      * Returns the parameter fileName itself if no shortening is possible\n-     *\n+     * <p>\n      * This method works correctly only if dirs are sorted decent in their length\n      * i.e. /home/user/literature/important before /home/user/literature\n      *\n      * @param fileName the file name to be shortened\n-     * @param dirs directories to check.\n+     * @param dirs     directories to check.\n      */\n     public static File shortenFileName(File fileName, String[] dirs) {\n         if (fileName == null || fileName.length() == 0) {, @@ -1,4 +1,6 @@\n-/*  Copyright (C) 2003-2015 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors and Moritz Ringler, Simon Harrer\n+    Copyright (C) 2015 Ocar Gustafsson, Oliver Kopp\n+\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -20,10 +22,7 @@\n import java.util.regex.Matcher;\n \n /**\n- * Class with static methods for changing the case of strings and arrays of\n- * strings.\n- *\n- * @author Moritz Ringler, Simon Harrer\n+ * Class with static methods for changing the case of strings and arrays of strings.\n  */\n public class CaseChangers {\n \n@@ -37,16 +36,50 @@\n         String changeCase(String input);\n     }\n \n+    interface WordConversionInterface {\n+\n+        /**\n+         * @param word The current Word\n+         * @param curWordIndex the index of the current word (0..totalWordCount-1)\n+         * @param totalWordCount the number of total words\n+         * @return the converted word\n+         */\n+        String doWordConversion(final String word, final int curWordIndex, int totalWordCount);\n+    }\n+\n+    private static String doConversion(final String input, WordConversionInterface converter) {\n+        // split on spaces\n+        String[] words = input.split(\"\\\\s+\");\n+\n+        // create result array without content\n+        String[] result = new String[words.length];\n+\n+        // iterate over all words\n+        for (int i = 0; i < words.length; i++) {\n+            if (words[i].startsWith(\"{\")) {\n+                result[i] = words[i];\n+            } else {\n+                result[i] = converter.doWordConversion(words[i], i, words.length);\n+            }\n+        }\n+\n+        // create an return result\n+        return StringUtil.join(result, CaseChangers.SPACE_SEPARATOR);\n+    }\n+\n     public static class LowerCaseChanger implements CaseChanger {\n \n         @Override\n         public String getName() {\n             return \"lower\";\n         }\n \n+        /**\n+         * Converts all characters of the string to lower case, but does not change words starting with \"{\"\n+         */\n         @Override\n         public String changeCase(String input) {\n-            return input.toLowerCase();\n+            return doConversion(input, (s, i, c) -> s.toLowerCase());\n         }\n     }\n \n@@ -57,25 +90,30 @@ public String getName() {\n             return \"UPPER\";\n         }\n \n+        /**\n+         * Converts all characters of the given string to upper case, but does not change words starting with \"{\"\n+         */\n         @Override\n         public String changeCase(String input) {\n-            return input.toUpperCase();\n+            return doConversion(input, (s, i, c) -> s.toUpperCase());\n         }\n     }\n \n     public static class UpperFirstCaseChanger implements CaseChanger {\n \n         private static final Pattern UF_PATTERN = Pattern.compile(\"\\\\b\\\\w\");\n \n-\n         @Override\n         public String getName() {\n             return \"Upper first\";\n         }\n \n+        /**\n+         * Converts the first character of the first word of the given string to a upper case (and the remaining characters of the first word to lower case), but does not change anything if word starts with \"{\"\n+         */\n         @Override\n         public String changeCase(String input) {\n-            String lowerCase = input.toLowerCase();\n+            String lowerCase = CaseChangers.LOWER.changeCase(input);\n \n             Matcher matcher = UpperFirstCaseChanger.UF_PATTERN.matcher(lowerCase);\n \n@@ -94,17 +132,12 @@ public String getName() {\n             return \"Upper Each First\";\n         }\n \n+        /**\n+         * Converts the first character of each word of the given string to a upper case (and all others to lower case), but does not change words starting with \"{\"\n+         */\n         @Override\n         public String changeCase(String input) {\n-            String lowerCase = input.toLowerCase();\n-            String[] words = lowerCase.split(\"\\\\s+\");\n-            String[] result = new String[words.length];\n-\n-            for (int i = 0; i < words.length; i++) {\n-                result[i] = StringUtil.capitalizeFirst(words[i]);\n-            }\n-\n-            return StringUtil.join(result, CaseChangers.SPACE_SEPARATOR);\n+            return doConversion(input, (s, i, c) -> StringUtil.capitalizeFirst(s.toLowerCase()));\n         }\n     }\n \n@@ -115,45 +148,45 @@ public String changeCase(String input) {\n         static {\n             Set<String> smallerWords = new HashSet<>();\n \n-            smallerWords.addAll(Arrays.asList(\"a\", \"an\", \"the\", \"and\", \"but\", \"or\", \"for\", \"nor\", \"as\", \"at\", \"by\", \"for\",\n-                    \"from\", \"in\", \"into\", \"near\", \"of\", \"on\", \"onto\", \"to\", \"with\"));\n+            // Articles\n+            smallerWords.addAll(Arrays.asList(\"a\", \"an\", \"the\"));\n+            // Prepositions\n+            smallerWords.addAll(Arrays.asList(\"above\", \"about\", \"across\", \"against\", \"along\", \"among\", \"around\", \"at\", \"before\", \"behind\", \"below\", \"beneath\", \"beside\", \"between\", \"beyond\", \"by\", \"down\", \"during\", \"except\", \"for\", \"from\", \"in\", \"inside\", \"into\", \"like\", \"near\", \"of\", \"off\", \"on\", \"onto\", \"since\", \"to\", \"toward\", \"through\", \"under\", \"until\", \"up\", \"upon\", \"with\", \"within\", \"without\"));\n+            // Conjunctions\n+            smallerWords.addAll(Arrays.asList(\"and\", \"but\", \"for\", \"nor\", \"or\", \"so\", \"yet\"));\n \n             // unmodifiable for thread safety\n             notToCapitalize = Collections.unmodifiableSet(smallerWords);\n         }\n \n-\n         @Override\n         public String getName() {\n             return \"Title\";\n         }\n \n+        /**\n+         * Converts all words to upper case, but converts articles, prepositions, and conjunctions to lower case\n+         * Capitalizes first and last word\n+         * Does not change words starting with \"{\"\n+         */\n         @Override\n         public String changeCase(String input) {\n-            String lowerCase = input.toLowerCase();\n-            String[] words = lowerCase.split(\"\\\\s+\");\n-            String[] result = new String[words.length];\n-\n-            for (int i = 0; i < words.length; i++) {\n-                String word = words[i];\n-                // first word is Always capitalized\n-                boolean alwaysCapitalizeFirstWord = i == 0;\n-                boolean alwaysCapitalizeLastWord = i == words.length - 1;\n-                if (alwaysCapitalizeFirstWord || alwaysCapitalizeLastWord) {\n-                    result[i] = StringUtil.capitalizeFirst(word);\n-                } else if (TitleCaseChanger.notToCapitalize.contains(word)) {\n-                    result[i] = word;\n-                } else {\n-                    result[i] = StringUtil.capitalizeFirst(word);\n-                }\n-            }\n-\n-            return StringUtil.join(result, CaseChangers.SPACE_SEPARATOR);\n+            return doConversion(input, (s, i, c) -> {\n+                    String word = s.toLowerCase();\n+                    boolean isFirstWord = (i == 0);\n+                    boolean isLastWord = (i == (c - 1));\n+                    // first word and last word are always capitalized\n+                    if (isFirstWord || isLastWord) {\n+                        return StringUtil.capitalizeFirst(word);\n+                    } else if (TitleCaseChanger.notToCapitalize.contains(word)) {\n+                        return word;\n+                    } else {\n+                        return StringUtil.capitalizeFirst(word);\n+                    }\n+                });\n         }\n-\n     }\n \n-\n     public static final LowerCaseChanger LOWER = new LowerCaseChanger();\n     public static final UpperCaseChanger UPPER = new UpperCaseChanger();\n     public static final UpperFirstCaseChanger UPPER_FIRST = new UpperFirstCaseChanger();, @@ -0,0 +1,72 @@\n+/*  Copyright (C) 2015 JabRef contributors.\n+    Copyright (C) 2015 Oscar Gustafsson.\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.logic.util.strings;\n+\n+import java.util.*;\n+\n+import net.sf.jabref.importer.HTMLConverter;\n+\n+/**\n+ * Class with static methods for converting strings from HTML and Unicode to LaTeX encoding.\n+ *\n+ * @author Oscar Gustafsson\n+ */\n+public class Converters {\n+\n+    private static final HTMLConverter htmlConverter = new HTMLConverter();\n+\n+\n+    public interface Converter {\n+\n+        String getName();\n+\n+        String convert(String input);\n+    }\n+\n+    public static class UnicodeToLatexConverter implements Converter {\n+\n+        @Override\n+        public String getName() {\n+            return \"Unicode to LaTeX\";\n+        }\n+\n+        @Override\n+        public String convert(String input) {\n+            return Converters.htmlConverter.formatUnicode(input);\n+        }\n+    }\n+\n+    public static class HTMLToLatexConverter implements Converter {\n+\n+        @Override\n+        public String getName() {\n+            return \"HTML to LaTeX\";\n+        }\n+\n+        @Override\n+        public String convert(String input) {\n+            return Converters.htmlConverter.format(input);\n+        }\n+    }\n+\n+\n+    public static final UnicodeToLatexConverter UNICODE_TO_LATEX = new UnicodeToLatexConverter();\n+    public static final HTMLToLatexConverter HTML_TO_LATEX = new HTMLToLatexConverter();\n+\n+    public static final List<Converter> ALL = Arrays.asList(Converters.HTML_TO_LATEX, Converters.UNICODE_TO_LATEX);\n+}, @@ -32,6 +32,8 @@\n \n     public static String normalizeAuthorList(String in) {\n         boolean andSep = false;\n+        // String can contain newlines. Convert each to a space\n+        in = in.replaceAll(\"\\n\", \" \");\n         String[] authors = in.split(\"( |,)and \", -1);\n         if (authors.length > 1) {\n             andSep = true;, @@ -28,7 +28,7 @@\n import net.sf.jabref.importer.PostOpenAction;\n import net.sf.jabref.gui.undo.NamedCompound;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n@@ -108,20 +108,23 @@ public void performAction(BasePanel panel, ParserResult pr) {\n                 false);\n \n         JPanel message = new JPanel();\n-        DefaultFormBuilder b = new DefaultFormBuilder(new FormLayout(\"left:pref\", \"\"), message);\n+        FormBuilder b = FormBuilder.create().layout(new FormLayout(\"left:pref\", \"p\"));\n         // Keep the formatting of these lines. Otherwise, strings have to be translated again.\n         // See updated JabRef_en.properties modifications by python syncLang.py -s -u\n-        b.append(new JLabel(\"<html>\" + Localization.lang(\"This database was written using an older version of JabRef.\") + \"<br>\"\n+        int row = 1;\n+        b.add(new JLabel(\"<html>\" + Localization.lang(\"This database was written using an older version of JabRef.\") + \"<br>\"\n                 + Localization.lang(\"The current version features a new way of handling links to external files.<br>To take advantage of this, your links must be changed into the new format, and<br>JabRef must be configured to show the new links.\") + \"<p>\"\n-                + Localization.lang(\"Do you want JabRef to do the following operations?\") + \"</html>\"));\n-        b.nextLine();\n+                + Localization.lang(\"Do you want JabRef to do the following operations?\") + \"</html>\")).xy(1, row);\n+        \n         if (offerChangeSettings) {\n-            b.append(changeSettings);\n-            b.nextLine();\n+            b.appendRows(\"2dlu, p\");\n+            row += 2;\n+            b.add(changeSettings).xy(1, row);\n         }\n         if (offerChangeDatabase) {\n-            b.append(changeDatabase);\n-            b.nextLine();\n+            b.appendRows(\"2dlu, p\");\n+            row += 2;\n+            b.add(changeDatabase).xy(1, row);\n         }\n         if (offerSetFileDir) {\n             if (Globals.prefs.hasKey(\"pdfDirectory\")) {\n@@ -135,13 +138,15 @@ public void performAction(BasePanel panel, ParserResult pr) {\n             JButton browse = new JButton(Localization.lang(\"Browse\"));\n             browse.addActionListener(BrowseAction.buildForDir(fileDir));\n             pan.add(browse);\n-            b.append(pan);\n-            b.nextLine();\n+            b.appendRows(\"2dlu, p\");\n+            row += 2;\n+            b.add(pan).xy(1, row);\n         }\n-        b.append(\"\");\n-        b.nextLine();\n-        b.append(doNotShowDialog);\n+        b.appendRows(\"6dlu, p\");\n+        b.add(doNotShowDialog).xy(1, row+2);\n \n+        message.add(b.build());\n+        \n         int answer = JOptionPane.showConfirmDialog(panel.frame(),\n                 message, Localization.lang(\"Upgrade file\"), JOptionPane.YES_NO_OPTION);\n         if (doNotShowDialog.isSelected()) {, @@ -344,12 +344,12 @@ public static String sanitizeUrl(String link) {\n         if (link.matches(\"^doi:/*.*\")) {\n             // Remove 'doi:'\n             link = link.replaceFirst(\"^doi:/*\", \"\");\n-            link = new DOI(link).getURL();\n+            link = new DOI(link).getURLAsASCIIString();\n         }\n \n         Optional<DOI> doi = DOI.build(link);\n         if (doi.isPresent() && !link.matches(\"^https?://.*\")) {\n-            link = doi.get().getURL();\n+            link = doi.get().getURLAsASCIIString();\n         }\n \n         // FIXME: everything below is really flawed atm\n@@ -714,55 +714,6 @@ public static OpenFileFilter getFileFilterForField(String fieldName) {\n         return off;\n     }\n \n-    /**\n-     * This method can be used to display a \"rich\" error dialog which offers the\n-     * entire stack trace for an exception.\n-     * \n-     * @param parent\n-     * @param e\n-     */\n-    public static void showQuickErrorDialog(JFrame parent, String title, Exception e) {\n-        // create and configure a text area - fill it with exception text.\n-        final JPanel pan = new JPanel();\n-        final JPanel details = new JPanel();\n-        final CardLayout crd = new CardLayout();\n-        pan.setLayout(crd);\n-        final JTextArea textArea = new JTextArea();\n-        textArea.setFont(new Font(\"Sans-Serif\", Font.PLAIN, 10));\n-        textArea.setEditable(false);\n-        StringWriter writer = new StringWriter();\n-        e.printStackTrace(new PrintWriter(writer));\n-        textArea.setText(writer.toString());\n-        JLabel lab = new JLabel(e.getMessage());\n-        JButton flip = new JButton(Localization.lang(\"Details\"));\n-\n-        FormLayout layout = new FormLayout(\"left:pref\", \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-        builder.append(lab);\n-        builder.nextLine();\n-        builder.append(Box.createVerticalGlue());\n-        builder.nextLine();\n-        builder.append(flip);\n-        final JPanel simple = builder.getPanel();\n-\n-        // stuff it in a scrollpane with a controlled size.\n-        JScrollPane scrollPane = new JScrollPane(textArea);\n-        scrollPane.setPreferredSize(new Dimension(350, 150));\n-        details.setLayout(new BorderLayout());\n-        details.add(scrollPane, BorderLayout.CENTER);\n-\n-        flip.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent event) {\n-                crd.show(pan, \"details\");\n-            }\n-        });\n-        pan.add(simple, \"simple\");\n-        pan.add(details, \"details\");\n-        // pass the scrollpane to the joptionpane.\n-        JOptionPane.showMessageDialog(parent, pan, title, JOptionPane.ERROR_MESSAGE);\n-    }\n \n     /**\n      * Set a given field to a given value for all entries in a Collection. This\n@@ -1143,7 +1094,7 @@ public void run() {\n \n                 // Run the search operation:\n                 Map<BibtexEntry, java.util.List<File>> result;\n-                if (Globals.prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY)) {\n+                if (Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {\n                     String regExp = Globals.prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY);\n                     result = RegExpFileSearch.findFilesForSet(entries, extensions, dirs, regExp);\n                 } else {\n@@ -1229,6 +1180,7 @@ public void run() {\n         };\n         SwingUtilities.invokeLater(new Runnable() {\n \n+            @Override\n             public void run() {\n                 // show dialog which will be hidden when the task is done\n                 if (diag != null) {, @@ -0,0 +1 @@\n+version=${version}\n\\ No newline at end of file, @@ -94,6 +94,7 @@ search=search.png\n secondary_sorted_reverse=secondary_sorted_reverse.png\n setRelevant=relevance.png\n source=viewsource.gif\n+texmaker=texmaker.png\n texstudio=texstudio.png\n toggleGroups=queue.png\n togglePreview=text_bottom.png, None, @@ -1723,4 +1723,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2480,3 +2480,12 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n Open_%0_file=%0_Datei_\\u00f6ffnen\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -416,6 +416,8 @@ Delete_strings=Delete_strings\n \n Deleted=Deleted\n \n+Delete_local_file=Delete_local_file\n+\n Delimit_fields_with_semicolon,_ex.=Delimit_fields_with_semicolon,_ex.\n \n Descending=Descending\n@@ -2469,3 +2471,11 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=This_group_cont\n Invalid_ISBN=Invalid_ISBN\n MIS_Quarterly=MIS_Quarterly\n Open_%0_file=Open_%0_file\n+\n+Cannot_delete_file=Cannot_delete_file\n+File_permission_error=File_permission_error\n+Push_to_%0=Push_to_%0\n+Path_to_%0=Path_to_%0\n+Convert=Convert\n+Normalize_to_BibTeX_name_format=Normalize_to_BibTeX_name_format\n+Help_on_Name_Formatting=Help_on_Name_Formatting, @@ -1614,4 +1614,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1,5 +1,5 @@\n #!\n-#! created/edited by Popeye version 0.55 (popeye.sourceforge.net)\n+#! created/edited by Popeye version 0.55 (https://github.com/JabRef/popeye)\n #! encoding:ISO-8859-1\n \n %0_contains_the_Regular_Expression_<b>%1</b>=\n@@ -1828,7 +1828,7 @@ Note_that_these_settings_are_used_for_the_legacy_<b>pdf</b>_and_<b>ps</b>_fields\n Legacy_file_fields=\n \n This_makes_JabRef_look_up_each_%0_extension_and_check_if_the_file_exists._If_not,_you_will_be_given_options<BR>to_resolve_the_problem.=\n-Run_Fetcher,_e.g._\"--fetch\\=\n+Run_Fetcher,_e.g._\"--fetch\\=Medline\\:cancer\"=Run_Fetcher,_e.g._\"--fetch=Medline:cancer\"\n \n The_ACM_Digital_Library=\n Reset=\n@@ -1975,7 +1975,7 @@ This_database_contains_one_or_more_duplicated_BibTeX_keys.=\n Do_you_want_to_resolve_duplicate_keys_now?=\n \n Find_and_remove_duplicate_BibTeX_keys=\n-Expected_syntax_for_--fetch\\=\n+Expected_syntax_for_--fetch\\='<name_of_fetcher>\\:<query>'=\n Duplicate_BibTeX_key=\n Duplicate_key=\n Generate_key=\n@@ -2369,7 +2369,7 @@ Quotes=\n Curly_Brackets=\n Include_empty_fields=\n Field_saving_options=\n-Field_value_delimiter._E.g.,_\"author\\=\n+Field_value_delimiter._E.g.,_\"author\\={x}\"_or_\"author\\='x'\"=Field_value_delimiter._E.g.,_\"author={x}\"_or_\"author='x'\"\n Run_Unicode_converter_on_title,_author(s),_and_abstract=\n Database_has_changed._Do_you_want_to_save_before_closing?=\n Host=\n@@ -2469,3 +2469,12 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n Invalid_ISBN=\n MIS_Quarterly=\n Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1661,4 +1661,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=Ce_groupe_conti\n \n Invalid_ISBN=ISBN_invalide\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1634,4 +1634,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1745,4 +1745,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=Questo_gruppo_c\n \n Invalid_ISBN=Codice_ISBN_non_valido\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2464,4 +2464,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2465,4 +2465,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2930,4 +2930,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1630,4 +1630,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2468,4 +2468,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\u042d\u0442\u0430_\u0433\u0440\u0443\u043f\n \n Invalid_ISBN=\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439_ISBN\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -1652,4 +1652,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2461,4 +2461,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\n \n Invalid_ISBN=\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -2454,4 +2454,13 @@ This_group_contains_all_entries._It_cannot_be_edited_or_removed.=\\u8fd9\\u4e2a\\u7\n \n Invalid_ISBN=\\u65e0\\u6548\\u7684_ISBN\n MIS_Quarterly=MIS_Quarterly\n-Open_%0_file=\\\n+Open_%0_file=\n+\n+Cannot_delete_file=\n+Convert=\n+Delete_local_file=\n+File_permission_error=\n+Help_on_Name_Formatting=\n+Normalize_to_BibTeX_name_format=\n+Path_to_%0=\n+Push_to_%0=, @@ -134,4 +134,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -233,5 +233,5 @@ Find_unlinked_files...=Nicht_verlinkte_Dateien_finden...\n Hide/show_toolbar=Toolbar_zeigen/verbergen\n \n Fork_me_on_GitHub=Forke_mich_auf_GitHub\n-Save_selected_as_plain_BibTeX_...=Auswahl_als_reines_BibTeX_speichern...\n+Save_selected_as_plain_BibTeX_...=Ausgew\\u00e4hlte_Eintr\\u00e4ge_als_reines_BibTeX_speichern_\\u2026\n ADS_from_ADS-DOI=ADS_von_ADS-DOI, @@ -158,5 +158,5 @@ Find_unlinked_files...=Buscar_archivos_desenlazados...\n Hide/show_toolbar=Mostrar/ocultar_barra_de_herramientas\n \n Fork_me_on_GitHub=Fork_en_GitHub\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=Guardar_seleccionados_como_BibTex_plano...\n+ADS_from_ADS-DOI=, @@ -155,4 +155,4 @@ Hide/show_toolbar=\u0645\u062e\u0641\u06cc\u200c\u06a9\u0631\u062f\u0646/\u0646\u0645\u0627\u06cc\u0634_\u0646\u0648\u0627\u0631_\u0627\u0628\u0632\u0627\u0631\n \n Fork_me_on_GitHub=\u0645\u0631\u0627_\u062f\u0631_GitHub_\u0645\u0646\u0634\u0639\u0628_\u06a9\u0646\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -143,6 +143,6 @@ Find_unlinked_files...=Trouver_les_fichiers_non_li\\u00e9s...\n Hide/show_toolbar=Afficher/masquer_la_barre_d'outils\n \n \n-Fork_me_on_GitHub=Forker-moi_sur_GitHub\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Fork_me_on_GitHub=Forkez-moi_sur_GitHub\n+Save_selected_as_plain_BibTeX_...=Enregistrer_la_s\\u00e9lection_en_BibTeX_basique...\n+ADS_from_ADS-DOI=, @@ -131,4 +131,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=\n\\ No newline at end of file, @@ -151,5 +151,5 @@ Find_unlinked_files...=Trovati_file_non_collegati...\n Hide/show_toolbar=Mostra/Nascondi_la_barra_degli_strumenti\n \n Fork_me_on_GitHub=Fork_me_on_GitHub\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=Salva_la_selezione_in_formato_BibTeX_base...\n+ADS_from_ADS-DOI=\n\\ No newline at end of file, @@ -158,4 +158,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -241,4 +241,4 @@ Hide/show_toolbar=Verberg/toon_toolbar\n \n Fork_me_on_GitHub=Forken_op_GitHub\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -154,4 +154,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -131,5 +131,5 @@ Find_unlinked_files...=Encontrar_arquivos_n\\u00e3o_referenciados\n Hide/show_toolbar=Mostrar/esconder_barra_de_ferramentas\n \n Fork_me_on_GitHub=Criar_um_fork_no_GitHub\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=Salvar_selecionado_como_Bibtex_simples\n+ADS_from_ADS-DOI=, @@ -154,5 +154,5 @@ Find_unlinked_files...=\u041d\u0430\u0439\u0442\u0438_\u043d\u0435\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435_\u0444\u0430\u0439\u043b\u044b...\n Hide/show_toolbar=\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c/\u0441\u043a\u0440\u044b\u0442\u044c_\u043f\u0430\u043d\u0435\u043b\u044c_\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n \n Fork_me_on_GitHub=\u041c\u043e\u044f_\u0432\u0435\u0442\u043a\u0430_\u043d\u0430_GitHub\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c_\u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435_\u043a\u0430\u043a_\u043d\u0435\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439_BibTeX_...\n+ADS_from_ADS-DOI=, @@ -133,5 +133,5 @@ Find_unlinked_files...=Ba\\u011flant\\u0131lanmam\\u0131\\u015f_dosyalar\\u0131_bul..\n Hide/show_toolbar=Ara\u00e7_\u00e7ubu\u011funu_gizle/g\u00f6ster\n \n Fork_me_on_GitHub=Beni_GitHub'da_\u00e7atalla\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=Se\u00e7imi_salt_BibTex_olarak_kaydet_...\n+ADS_from_ADS-DOI=, @@ -158,4 +158,4 @@ Hide/show_toolbar=\n \n Fork_me_on_GitHub=\n Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+ADS_from_ADS-DOI=, @@ -155,5 +155,5 @@ Find_unlinked_files...=\\u67e5\\u8be2\\u672a\\u88ab(\\u8bb0\\u5f55)\\u94fe\\u63a5\\u7684\\\n Hide/show_toolbar=\\u9690\\u85cf/\\u663e\\u793a\\u5de5\\u5177\\u680f\n \n Fork_me_on_GitHub=\\u53bb_GitHub_Fork_JabRef\n-Save_selected_as_plain_BibTeX_...=\n-ADS_from_ADS-DOI=\\\n+Save_selected_as_plain_BibTeX_...=\\u9009\\u62e9\\u8bb0\\u5f55\\u53e6\\u5b58\\u4e3a_BibTeX_\\u7eaf\\u6587\\u672c...\n+ADS_from_ADS-DOI=, @@ -25,11 +25,11 @@\n     @Before\n     public void setUp() throws Exception {\n         Globals.prefs = JabRefPreferences.getInstance();\n-        oldUseRegExp = Globals.prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY);\n+        oldUseRegExp = Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY);\n         oldAutoLinkExcatKeyOnly = Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY);\n         oldPdfDirectory = Globals.prefs.get(\"pdfDirectory\");\n \n-        Globals.prefs.putBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY, false);\n+        Globals.prefs.putBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY, false);\n         Globals.prefs.putBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY, false);\n \n         database = BibtexTestData.getBibtexDatabase();\n@@ -107,7 +107,7 @@ public void setUp() throws Exception {\n     public void tearDown() {\n         FileBasedTestHelper.deleteRecursive(root);\n         Globals.prefs.putBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY, oldAutoLinkExcatKeyOnly);\n-        Globals.prefs.putBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY, oldUseRegExp);\n+        Globals.prefs.putBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY, oldUseRegExp);\n         Globals.prefs.put(\"pdfDirectory\", oldPdfDirectory);\n         // TODO: This is not a great way to do this, sure ;-)\n     }, @@ -0,0 +1,50 @@\n+package net.sf.jabref.exporter.layout;\n+\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.exporter.LatexFieldFormatter;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Created by joerg on 05.10.2015.\n+ */\n+public class LatexFieldFormatterTests {\n+\n+    private LatexFieldFormatter formatter;\n+\n+    @BeforeClass\n+    public static void setUpBeforeClass(){\n+        Globals.prefs = JabRefPreferences.getInstance();\n+    }\n+\n+    @Before\n+    public void setUp() {\n+        this.formatter = new LatexFieldFormatter();\n+    }\n+\n+    @Test\n+    public void preserveNewlineInAbstractField() {\n+        String fieldName = \"abstract\";\n+        String text = \"lorem ipsum lorem ipsum\" + Globals.NEWLINE + \"lorem ipsum lorem ipsum\" + Globals.NEWLINE;\n+\n+        String result = formatter.format(text, fieldName);\n+        String expected = \"{\"+text+\"}\";\n+\n+        assertEquals(expected, result);\n+    }\n+\n+    @Test\n+    public void preserveNewlineInReviewField() {\n+        String fieldName = \"review\";\n+        String text = \"lorem ipsum lorem ipsum\" + Globals.NEWLINE + \"lorem ipsum lorem ipsum\" + Globals.NEWLINE;\n+\n+        String result = formatter.format(text, fieldName);\n+        String expected = \"{\"+text+\"}\";\n+\n+        assertEquals(expected, result);\n+    }\n+}, @@ -1,7 +1,5 @@\n package net.sf.jabref.logic.journals;\n \n-import net.sf.jabref.Globals;\n-\n import static org.junit.Assert.*;\n import org.junit.Test;\n \n@@ -10,7 +8,7 @@\n     @Test\n     public void testReadJournalListFromResource() throws Exception {\n         AbbreviationParser ap = new AbbreviationParser();\n-        ap.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n+        ap.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n          assertFalse(ap.getAbbreviations().isEmpty());\n     }\n }\n\\ No newline at end of file, @@ -1,10 +1,7 @@\n package net.sf.jabref.logic.journals;\n \n-import net.sf.jabref.Globals;\n-\n import static org.junit.Assert.*;\n \n-import org.junit.Ignore;\n import org.junit.Test;\n \n public class JournalAbbreviationRepositoryTest {\n@@ -76,8 +73,8 @@ public void testDuplicateKeys() {\n     @Test\n     public void testParsing() {\n         JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n-        repository.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);\n-        repository.readJournalListFromResource(Globals.JOURNALS_IEEE_INTERNAL_LIST);\n+        repository.readJournalListFromResource(Abbreviations.JOURNALS_FILE_BUILTIN);\n+        repository.readJournalListFromResource(Abbreviations.JOURNALS_IEEE_INTERNAL_LIST);\n         assertTrue(!repository.getAbbreviations().isEmpty());\n     }\n , @@ -19,6 +19,7 @@ public void testNumberOfModes() {\n     public void testChangeCaseLower() {\n         Assert.assertEquals(\"\", CaseChangers.LOWER.changeCase(\"\"));\n         Assert.assertEquals(\"lower\", CaseChangers.LOWER.changeCase(\"LOWER\"));\n+        Assert.assertEquals(\"lower {UPPER}\", CaseChangers.LOWER.changeCase(\"LOWER {UPPER}\"));\n     }\n \n     @Test\n@@ -27,18 +28,23 @@ public void testChangeCaseUpper() {\n         Assert.assertEquals(\"LOWER\", CaseChangers.UPPER.changeCase(\"LOWER\"));\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"upper\"));\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"UPPER\"));\n-    }\n+        Assert.assertEquals(\"UPPER {lower}\", CaseChangers.UPPER.changeCase(\"upper {lower}\"));\n+        }\n \n     @Test\n     public void testChangeCaseUpperFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"upper First\"));\n+        Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"uPPER FIRST\"));\n+        Assert.assertEquals(\"Upper {NOT} first\", CaseChangers.UPPER_FIRST.changeCase(\"upper {NOT} FIRST\"));\n+\n     }\n \n     @Test\n     public void testChangeCaseUpperEachFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each First\"));\n+        Assert.assertEquals(\"Upper Each First {NOT} {this}\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each first {NOT} {this}\"));\n     }\n \n     @Test\n@@ -47,5 +53,6 @@ public void testChangeCaseTitle() {\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.TITLE.changeCase(\"upper each first\"));\n         Assert.assertEquals(\"An Upper Each First And\", CaseChangers.TITLE.changeCase(\"an upper each first and\"));\n         Assert.assertEquals(\"An Upper Each of the and First And\", CaseChangers.TITLE.changeCase(\"an upper each of the and first and\"));\n+        Assert.assertEquals(\"An Upper First with and without {CURLY} {brackets}\", CaseChangers.TITLE.changeCase(\"AN UPPER FIRST WITH AND WITHOUT {CURLY} {brackets}\"));\n     }\n }, @@ -0,0 +1,38 @@\n+package net.sf.jabref.logic.util;\n+\n+import net.sf.jabref.logic.util.strings.Converters;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ConvertersTest {\n+    \n+    @Before\n+    public void setUp() {\n+        Globals.prefs = JabRefPreferences.getInstance();\n+    }\n+    \n+    @Test\n+    public void testNumberOfModes() {\n+        Assert.assertEquals(\"Unicode to LaTeX\", Converters.UNICODE_TO_LATEX.getName());\n+        Assert.assertEquals(\"HTML to LaTeX\", Converters.HTML_TO_LATEX.getName());\n+    }\n+\n+    @Test\n+    public void testUnicodeToLatexConversion() {\n+        Assert.assertEquals(\"\", Converters.UNICODE_TO_LATEX.convert(\"\"));\n+        Assert.assertEquals(\"abc\", Converters.UNICODE_TO_LATEX.convert(\"abc\"));\n+        Assert.assertEquals(\"{{\\\\aa}}{\\\\\\\"{a}}{\\\\\\\"{o}}\", Converters.UNICODE_TO_LATEX.convert(\"\\u00E5\\u00E4\\u00F6\"));\n+    }\n+\n+    @Test\n+    public void testHTMLToLatexConversion() {\n+        Assert.assertEquals(\"\", Converters.HTML_TO_LATEX.convert(\"\"));\n+        Assert.assertEquals(\"abc\", Converters.HTML_TO_LATEX.convert(\"abc\"));\n+        Assert.assertEquals(\"{{\\\\aa}}{\\\\\\\"{a}}{\\\\\\\"{o}}\", Converters.HTML_TO_LATEX.convert(\"&aring;&auml;&ouml;\"));\n+        Assert.assertEquals(\"{\\\\'{\\\\i}}\", Converters.HTML_TO_LATEX.convert(\"i&#x301;\"));\n+    }\n+\n+}, @@ -10,6 +10,7 @@ public void acceptPlainDoi() {\n         Assert.assertEquals(\"10.1006/jmbi.1998.2354\", new DOI(\"10.1006/jmbi.1998.2354\").getDOI());\n         Assert.assertEquals(\"10.231/JIM.0b013e31820bab4c\", new DOI(\"10.231/JIM.0b013e31820bab4c\").getDOI());\n         Assert.assertEquals(\"10.1002/(SICI)1522-2594(199911)42:5<952::AID-MRM16>3.0.CO;2-S\", new DOI(\"10.1002/(SICI)1522-2594(199911)42:5<952::AID-MRM16>3.0.CO;2-S\").getDOI());\n+        Assert.assertEquals(\"10.1126/sciadv.1500214\", new DOI(\"10.1126/sciadv.1500214\").getDOI());\n     }\n \n     @Test\n@@ -87,21 +88,21 @@ public void correctlyDecodeHttpDOIs() {\n     public void correctlyEncodeDOIs() {\n         // See http://www.doi.org/doi_handbook/2_Numbering.html#2.5.2.4\n         // % -> (%25)\n-        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%25.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%25.0001\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%25.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%25.0001\").getURLAsASCIIString());\n         // \" -> (%22)\n-        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%22.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%22.0001\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%22.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%22.0001\").getURLAsASCIIString());\n         // # -> (%23)\n-        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%23.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%23.0001\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%23.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%23.0001\").getURLAsASCIIString());\n         // SPACE -> (%20)\n-        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%20.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%20.0001\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%20.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%20.0001\").getURLAsASCIIString());\n         // ? -> (%3F)\n-        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%3F.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%3F.0001\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/rwei.1999%3F.0001\", new DOI(\"http://doi.org/10.1006/rwei.1999%3F.0001\").getURLAsASCIIString());\n     }\n \n     @Test\n     public void constructCorrectURLForDoi() {\n         // add / to RESOLVER url if missing\n-        Assert.assertEquals(\"http://doi.org/10.1006/jmbi.1998.2354\", new DOI(\"10.1006/jmbi.1998.2354\").getURL());\n-        Assert.assertEquals(\"http://doi.org/10.1006/jmbi.1998.2354\", new DOI(\"http://doi.org/10.1006/jmbi.1998.2354\").getURL());\n+        Assert.assertEquals(\"http://doi.org/10.1006/jmbi.1998.2354\", new DOI(\"10.1006/jmbi.1998.2354\").getURLAsASCIIString());\n+        Assert.assertEquals(\"http://doi.org/10.1006/jmbi.1998.2354\", new DOI(\"http://doi.org/10.1006/jmbi.1998.2354\").getURLAsASCIIString());\n     }\n }, ", 1513, 1023, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, removed, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, added, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, added, modified, modified, modified, added, modified, \"", 2536], ["Simon Harrer", "Reduces CHANGELOG merge conflicts by always relying on the union merge option", "09/29/15, 06:18:01 PM", "Simon Harrer", "3c27e6b7290d14ca2d12f611e17c2c9207ca0ed0", [".gitattributes"], "@@ -1,2 +1,4 @@\n gradlew eol=lf\n *.sh eol=lf\n+\n+CHANGELOG merge=union, ", 2, 0, "\"modified, \"", 2], ["Oscar Gustafsson", "Added test cases and changed tab to spaces in ChangeLog", "10/02/15, 10:04:53 PM", "Oscar Gustafsson", "61ea0aacdfba27c7b7405ff023d2fbccfb93aed0", ["CHANGELOG", "src/test/java/net/sf/jabref/logic/util/CaseChangersTest.java"], "@@ -2,7 +2,7 @@\n     - Fixed a bug in the IEEEXploreFetcher\n     - Added more characters to HTML/Unicode converter\n     - Feature: Push citations to Texmaker (SF: #318, #582)\n-\t- Case changers improved to honor words (not yet more than single words) within {}\n+    - Case changers improved to honor words (not yet more than single words) within {}\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\", @@ -19,6 +19,7 @@ public void testNumberOfModes() {\n     public void testChangeCaseLower() {\n         Assert.assertEquals(\"\", CaseChangers.LOWER.changeCase(\"\"));\n         Assert.assertEquals(\"lower\", CaseChangers.LOWER.changeCase(\"LOWER\"));\n+        Assert.assertEquals(\"lower {UPPER}\", CaseChangers.LOWER.changeCase(\"LOWER {UPPER}\"));\n     }\n \n     @Test\n@@ -27,18 +28,23 @@ public void testChangeCaseUpper() {\n         Assert.assertEquals(\"LOWER\", CaseChangers.UPPER.changeCase(\"LOWER\"));\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"upper\"));\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"UPPER\"));\n-    }\n+        Assert.assertEquals(\"UPPER {lower}\", CaseChangers.UPPER.changeCase(\"upper {lower}\"));\n+        }\n \n     @Test\n     public void testChangeCaseUpperFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"upper First\"));\n+        Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"uPPER FIRST\"));\n+        Assert.assertEquals(\"Upper {NOT} first\", CaseChangers.UPPER_FIRST.changeCase(\"upper {NOT} FIRST\"));\n+\n     }\n \n     @Test\n     public void testChangeCaseUpperEachFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each First\"));\n+        Assert.assertEquals(\"Upper Each First {NOT} {this}\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each first {NOT} {this}\"));\n     }\n \n     @Test\n@@ -47,5 +53,6 @@ public void testChangeCaseTitle() {\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.TITLE.changeCase(\"upper each first\"));\n         Assert.assertEquals(\"An Upper Each First And\", CaseChangers.TITLE.changeCase(\"an upper each first and\"));\n         Assert.assertEquals(\"An Upper Each of the and First And\", CaseChangers.TITLE.changeCase(\"an upper each of the and first and\"));\n+        Assert.assertEquals(\"An Upper First with and without {CURLY} {brackets}\", CaseChangers.TITLE.changeCase(\"AN UPPER FIRST WITH AND WITHOUT {CURLY} {brackets}\"));\n     }\n }, ", 9, 2, "\"modified, modified, \"", 11], ["Oscar Gustafsson", "Merged with latest master, tab to space in ChangeLog, manual line breaks in long if", "10/02/15, 09:49:46 PM", "Oscar Gustafsson", "d62e11080275b0dc2b2279a27fdab740c843852f", ["CHANGELOG", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java"], "@@ -1,5 +1,5 @@\n [master]\n-\t- Fixed a bug in the IEEEXploreFetcher\n+    - Fixed a bug in the IEEEXploreFetcher\n     - Added more characters to HTML/Unicode converter\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType, @@ -622,7 +622,10 @@ private BibtexEntry parseNextEntry(String allText, int startIndex) {\n             Matcher typeMatcher = typePattern.matcher(text);\n             if (typeMatcher.find()) {\n                 typeName = typeMatcher.group(1);\n-                if (typeName.equalsIgnoreCase(\"IEEE Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"IEEE Early Access Articles\") || typeName.equalsIgnoreCase(\"IET Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"AIP Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"AVS Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"IBM Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"TUP Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"BIAI Journals &amp; Magazines\")) {\n+                if (typeName.equalsIgnoreCase(\"IEEE Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"IEEE Early Access Articles\") ||\n+                        typeName.equalsIgnoreCase(\"IET Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"AIP Journals &amp; Magazines\") ||\n+                        typeName.equalsIgnoreCase(\"AVS Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"IBM Journals &amp; Magazines\") ||\n+                        typeName.equalsIgnoreCase(\"TUP Journals &amp; Magazines\") || typeName.equalsIgnoreCase(\"BIAI Journals &amp; Magazines\")) {\n                     type = BibtexEntryType.getType(\"article\");\n                     sourceField = \"journal\";\n                 } else, ", 5, 2, "\"modified, modified, \"", 7], ["Oscar Gustafsson", "Added more charaters to HTML converter and better logging", "10/01/15, 04:03:01 PM", "Oscar Gustafsson", "603565462d6cb755d35e84e1a70626225984839c", ["CHANGELOG", "src/main/java/net/sf/jabref/importer/HTMLConverter.java"], "@@ -1,4 +1,5 @@\n [master]\n+\t- Added more characters to HTML/Unicode converter\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\", @@ -20,12 +20,17 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.exporter.layout.LayoutFormatter;\n \n public class HTMLConverter implements LayoutFormatter {\n \n+    private static final Log LOGGER = LogFactory.getLog(HTMLConverter.class);\n+\n     /*   Portions \u00a9 International Organization for Standardization 1986:\n      Permission to copy in any form is granted for use with\n      conforming SGML systems and applications as defined in\n@@ -41,8 +46,7 @@\n     // An array of arrays of strings in the format:\n     // {\"decimal number of HTML entity\", \"text HTML entity\", \"corresponding LaTeX command\"}\n     // Leaving a field empty is OK as it then will not be included\n-    private final String[][] conversionList = new String[][] {\n-            {\"160\", \"nbsp\", \"\\\\{~\\\\}\"}, // no-break space = non-breaking space, \n+    private final String[][] conversionList = new String[][] {{\"160\", \"nbsp\", \"\\\\{~\\\\}\"}, // no-break space = non-breaking space, \n             //                                 U+00A0 ISOnum \n             {\"161\", \"iexcl\", \"\\\\{\\\\\\\\textexclamdown\\\\}\"}, // inverted exclamation mark, U+00A1 ISOnum\n             {\"162\", \"cent\", \"\\\\{\\\\\\\\textcent\\\\}\"}, // cent sign, U+00A2 ISOnum  \n@@ -503,7 +507,8 @@\n             {\"8364\", \"euro\", \"\\\\{\\\\\\\\texteuro\\\\}\"}, // euro sign, U+20AC NEW \n \n             /* Manually added */\n-            {\"24\", \"dollar\", \"\\\\\\\\$\"}, // Percent\n+            {\"35\", \"\", \"\\\\\\\\#\"}, // Hash\n+            {\"36\", \"dollar\", \"\\\\\\\\$\"}, // Dollar\n             {\"37\", \"percnt\", \"\\\\\\\\%\"}, // Percent\n             {\"39\", \"apos\", \"'\"}, // Apostrophe\n             {\"40\", \"lpar\", \"(\"}, // Left bracket\n@@ -558,14 +563,26 @@\n             {\"304\", \"Idot\", \"\\\\{\\\\\\\\.\\\\{I\\\\}\\\\}\"}, // capital I with dot above\n             {\"305\", \"inodot\", \"\\\\{\\\\\\\\i\\\\}\"}, // Small i without the dot\n             {\"\", \"imath\", \"\\\\{\\\\\\\\i\\\\}\"}, // Small i without the dot\n-            {\"321\", \"Lstrok\", \"\\\\{\\\\\\\\L\\\\}\"}, // upper case l with stroke\n+            {\"306\", \"\", \"\\\\{\\\\\\\\IJ\\\\}\"}, // Dutch di-graph IJ\n+            {\"307\", \"\", \"\\\\{\\\\\\\\ij\\\\}\"}, // Dutch di-graph ij\n+            {\"312\", \"\", \"\\\\{\\\\\\\\textkra\\\\}\"}, // Letter kra\n+            {\"321\", \"Lstrok\", \"\\\\{\\\\\\\\L\\\\}\"}, // upper case L with stroke\n             {\"322\", \"lstrok\", \"\\\\{\\\\\\\\l\\\\}\"}, // lower case l with stroke\n+            {\"330\", \"\", \"\\\\{\\\\\\\\NG\\\\}\"}, // upper case letter Eng\n+            {\"331\", \"\", \"\\\\{\\\\\\\\ng\\\\}\"}, // lower case letter Eng\n+            {\"338\", \"\", \"\\\\{\\\\\\\\OE\\\\}\"}, // OE-ligature\n+            {\"339\", \"\", \"\\\\{\\\\\\\\oe\\\\}\"}, // oe-ligature\n             {\"348\", \"Scirc\", \"\\\\{\\\\\\\\\\\\^\\\\{S\\\\}\\\\}\"}, // upper case S with circumflex\n             {\"349\", \"scirc\", \"\\\\{\\\\\\\\\\\\^\\\\{s\\\\}\\\\}\"}, // lower case s with circumflex\n             {\"370\", \"Uogon\", \"\\\\{\\\\\\\\k\\\\{U\\\\}\\\\}\"}, // capital U with ogonek\n             {\"371\", \"uogon\", \"\\\\{\\\\\\\\k\\\\{u\\\\}\\\\}\"}, // small u with ogonek\n             {\"381\", \"Zcaron\", \"\\\\{\\\\\\\\v\\\\{Z\\\\}\\\\}\"}, // capital Z with caron\n             {\"382\", \"zcaron\", \"\\\\{\\\\\\\\v\\\\{z\\\\}\\\\}\"}, // small z with caron\n+            {\"405\", \"\", \"\\\\{\\\\\\\\hv\\\\}\"}, // small letter Hv\n+            {\"416\", \"\", \"\\\\{\\\\\\\\OHORN\\\\}\"}, // capital O with horn\n+            {\"417\", \"\", \"\\\\{\\\\\\\\ohorn\\\\}\"}, // small o with horn\n+            {\"431\", \"\", \"\\\\{\\\\\\\\UHORN\\\\}\"}, // capital U with horn\n+            {\"432\", \"\", \"\\\\{\\\\\\\\uhorn\\\\}\"}, // small u with horn\n             {\"490\", \"Oogon\", \"\\\\{\\\\\\\\k\\\\{O\\\\}\\\\}\"}, // capital letter O with ogonek\n             {\"491\", \"oogon\", \"\\\\{\\\\\\\\k\\\\{o\\\\}\\\\}\"}, // small letter o with ogonek\n             {\"492\", \"\", \"\\\\{\\\\\\\\k\\\\{\\\\\\\\=\\\\{O\\\\}\\\\}\\\\}\"}, // capital letter O with ogonek and macron\n@@ -595,7 +612,9 @@\n             {\"8198\", \"\", \"\\\\\\\\hspace\\\\{0.167em\\\\}\"}, // Six-Per-Em Space\n             {\"8208\", \"hyphen\", \"-\"}, // Hyphen\n             {\"8229\", \"nldr\", \"\\\\.\\\\.\"}, // Double dots - en leader\n-            {\"8450\", \"complexes\", \"\\\\$\\\\\\\\mathbb\\\\{C\\\\}\\\\$\"}, // double struck capital C -- requires e.g. amsfonts\n+            {\"8241\", \"\", \"\\\\{\\\\\\\\textpertenthousand\\\\}\"}, // per ten thousands sign\n+            {\"8244\", \"\", \"\\\\{\\\\\\\\prime\\\\\\\\prime\\\\\\\\prime\\\\}\"}, // triple prime \n+            {\"8251\", \"\", \"\\\\{\\\\\\\\textreferencemark\\\\}\"}, {\"8253\", \"\", \"\\\\{\\\\\\\\textinterrobang\\\\}\"}, {\"8450\", \"complexes\", \"\\\\$\\\\\\\\mathbb\\\\{C\\\\}\\\\$\"}, // double struck capital C -- requires e.g. amsfonts\n             {\"8451\", \"\", \"\\\\$\\\\\\\\deg\\\\$\\\\{C\\\\}\"}, // Degree Celsius\n             {\"8459\", \"Hscr\", \"\\\\$\\\\\\\\mathcal\\\\{H\\\\}\\\\$\"}, // script capital H -- possibly use \\mathscr\n             {\"8460\", \"Hfr\", \"\\\\$\\\\\\\\mathbb\\\\{H\\\\}\\\\$\"}, // black letter capital H -- requires e.g. amsfonts\n@@ -657,8 +676,7 @@\n     };\n \n     // List of combining accents\n-    private final String[][] accentList = new String[][] {\n-            {\"768\", \"`\"}, // Grave \n+    private final String[][] accentList = new String[][] {{\"768\", \"`\"}, // Grave \n             {\"769\", \"'\"}, // Acute\n             {\"770\", \"\\\\^\"}, // Circumflex\n             {\"771\", \"~\"}, // Tilde\n@@ -678,21 +696,21 @@\n             {\"785\", \"t\"}, // Inverted breve\n             //        {\"786\", \"\"},    // Turned comma above\n             //        {\"787\", \"\"},    // Comma above\n-            //        {\"788\", \"\"},    // Reversed comma above\n-            //        {\"789\", \"\"},    // Comma above right\n+            {\"788\", \"textrevcommaabove\"}, // Reversed comma above\n+            {\"789\", \"textcommaabover\"}, // Comma above right\n             {\"790\", \"textsubgrave\"}, // Grave accent below -requires tipa\n             {\"791\", \"textsubacute\"}, // Acute accent below - requires tipa\n             {\"792\", \"textadvancing\"}, // Left tack below - requires tipa\n             {\"793\", \"textretracting\"}, // Right tack below - requires tipa\n-            //        {\"794\", \"\"},    // Left angle above\n-            //        {\"795\", \"\"},    // Horn\n+            {\"794\", \"textlangleabove\"}, // Left angle above\n+            {\"795\", \"textrighthorn\"}, // Horn\n             {\"796\", \"textsublhalfring\"}, // Left half ring below - requires tipa\n             {\"797\", \"textraising\"}, // Up tack below - requires tipa\n             {\"798\", \"textlowering\"}, // Down tack below - requires tipa\n             {\"799\", \"textsubplus\"}, // Plus sign below - requires tipa\n-            //        {\"800\", \"\"},    // Minus sign below\n-            //        {\"801\", \"\"},    // Palatalized hook below\n-            //        {\"802\", \"\"},    // Retroflex hook below\n+            {\"800\", \"textsubbar\"}, // Minus sign below\n+            {\"801\", \"textpalhookbelow\"}, // Palatalized hook below\n+            {\"802\", \"M\"}, // Retroflex hook below - textrethookbelow?\n             {\"803\", \"d\"}, // Dot below\n             {\"804\", \"textsubumlaut\"}, // Diaeresis below - requires tipa\n             {\"805\", \"textsubring\"}, // Ring below - requires tipa\n@@ -704,17 +722,17 @@\n             {\"811\", \"textsubw\"}, // Inverted double arch below - requires tipa\n             {\"812\", \"textsubwedge\"}, // Caron below\n             {\"813\", \"textsubcircum\"}, // Circumflex accent below - requires tipa\n-            //        {\"814\", \"\"},    // Breve below\n+            {\"814\", \"textsubbreve\"}, // Breve below\n             {\"815\", \"textsubarch\"}, // Inverted breve below - requires tipa\n             {\"816\", \"textsubtilde\"}, // Tilde below - requires tipa\n             {\"817\", \"b\"}, // Macron below - not completely correct\n             {\"818\", \"b\"}, // Underline\n             {\"819\", \"subdoublebar\"}, // Double low line -- requires extraipa\n             {\"820\", \"textsuperimposetilde\"}, // Tilde overlay - requires tipa\n-            //        {\"821\", \"\"},    // Short stroke overlay\n-            //        {\"822\", \"\"},    // Long stroke overlay\n-            //        {\"823\", \"\"},    // Short solidus overlay\n-            //        {\"824\", \"\"},    // Long solidus overlay\n+            {\"821\", \"B\"}, // Short stroke overlay - textsstrokethru?\n+            {\"822\", \"textlstrokethru\"}, // Long stroke overlay\n+            {\"823\", \"textsstrikethru\"}, // Short solidus overlay\n+            {\"824\", \"textlstrikethru\"}, // Long solidus overlay\n             {\"825\", \"textsubrhalfring\"}, // Right half ring below - requires tipa\n             {\"826\", \"textinvsubbridge\"}, // inverted bridge below - requires tipa\n             {\"827\", \"textsubsquare\"}, // Square below - requires tipa\n@@ -737,8 +755,11 @@\n             {\"844\", \"doubletilde\"}, // Almost equal to above - requires extraipa\n             {\"845\", \"spreadlips\"}, // Left right arrow below - requires extraipa\n             {\"846\", \"whistle\"}, // Upwards arrow below - requires extraipa\n-            //        {\"864\", \"\"},    // Double tilde\n-            //        {\"865\", \"\"},    // Double inverted breve\n+            {\"861\", \"textdoublebreve\"}, // Double breve\n+            {\"862\", \"textdoublemacron\"}, // Double macron\n+            {\"863\", \"textdoublemacronbelow\"}, // Double macron below\n+            {\"864\", \"textdoubletilde\"}, // Double tilde\n+            {\"865\", \"texttoptiebar\"}, // Double inverted breve\n             {\"866\", \"sliding\"}, // Double rightwards arrow below - requires extraipa\n     };\n \n@@ -779,6 +800,14 @@ public String formatUnicode(String text) {\n             // System.err.println(new Integer((int) character).toString() + \": \" + character.toString() + \": \" + unicodeSymbols.get(character));\n             text = text.replaceAll(character.toString(), unicodeSymbols.get(character));\n         }\n+\n+        Integer cp;\n+        for (int i = 0; i <= text.length() - 1; i++) {\n+            cp = text.codePointAt(i);\n+            if (cp >= 129) {\n+                LOGGER.warn(\"Unicode character not converted: \" + cp.toString());\n+            }\n+        }\n         return text;\n     }\n \n@@ -825,7 +854,7 @@ public String format(String text) {\n         Pattern escapedPattern = Pattern.compile(\"&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         Matcher m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(1).replace(\"x\", \"#\") + m.group(3));\n             if (numSymbols.containsKey(num)) {\n@@ -836,7 +865,7 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"(.)&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(2).replace(\"x\", \"#\") + m.group(4));\n             if (escapedAccents.containsKey(num)) {\n@@ -853,10 +882,10 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"&#([x]*)([0]*)(\\\\p{XDigit}+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            //\t    System.err.println(\"Found pattern: \" + m.group(1));\n+            //      System.err.println(\"Found pattern: \" + m.group(1));\n             //      System.err.println(\"Found pattern: \" + m.group(2));\n             int num = Integer.decode(m.group(1).replace(\"x\", \"#\") + m.group(3));\n-            System.err.println(\"HTML escaped char not converted: \" + m.group(1) + m.group(2) + m.group(3) + \" = \" + Integer.toString(num));\n+            LOGGER.warn(\"HTML escaped char not converted: \" + m.group(1) + m.group(2) + m.group(3) + \" = \" + Integer.toString(num));\n         }\n \n         // Remove $$ in case of two adjacent conversions\n@@ -866,7 +895,7 @@ public String format(String text) {\n         escapedPattern = Pattern.compile(\"&(\\\\w+);\");\n         m = escapedPattern.matcher(text);\n         while (m.find()) {\n-            System.err.println(\"HTML escaped char not converted: \" + m.group(1));\n+            LOGGER.warn(\"HTML escaped char not converted: \" + m.group(1));\n         }\n \n         return text.trim();\n@@ -878,12 +907,12 @@ public String format(String text) {\n \n     /*private final int MAX_TAG_LENGTH = 30;*/\n     /*private final int MAX_CHAR_LENGTH = 10;\n-\n+    \n     private int readHtmlChar(String text, StringBuffer sb, int position) {\n         // Have just read the < character that starts the tag.\n         int index = text.indexOf(';', position);\n         if ((index > position) && (index-position < MAX_CHAR_LENGTH)) {\n-        \t//String code = text.substring(position, index);\n+            //String code = text.substring(position, index);\n             //System.out.println(\"Removed code: \"+text.substring(position, index));\n             return index; // Just skip the tag.\n         } else return position; // Don't do anything.\n@@ -895,8 +924,7 @@ private int readTag(String text, StringBuffer sb, int position) {\n         if (index > position && index - position < MAX_TAG_LENGTH) {\n             //System.out.println(\"Removed tag: \"+text.substring(position, index));\n             return index; // Just skip the tag.\n-        }\n-        else {\n+        } else {\n             return position; // Don't do anything.\n         }\n     }, ", 59, 30, "\"modified, modified, \"", 89], ["Igor Steinmacher", "Merge pull request #2 from JabRef/master\n\nUpdating my repo", "09/18/15, 01:41:53 AM", "Igor Steinmacher", "5fc2033708aebe04d21b051f870fa456172cb5bb", [".gitattributes", ".gitignore", ".mailmap", ".travis.yml", "AUTHORS", "CHANGELOG", "CLI", "CONTRIBUTING.md", "Jabref.eml", "LICENSE", "README.md", "TODO", "build-wrapper.xml", "build.gradle", "build.xml", "buildlib/appbundler-1.0.jar", "buildlib/jarbundler-2.2.0.jar", "buildlib/licenses.txt", "buildres/nsis/README.txt", "buildres/nsis/fileassoc.nsh", "buildres/nsis/installer_languages/english.nsh", "buildres/nsis/installer_languages/french.nsh", "buildres/nsis/installer_languages/german.nsh", "buildres/nsis/installer_languages/italian.nsh", "buildres/nsis/installer_languages/russian.nsh", "buildres/nsis/installer_languages/spanish.nsh", "buildres/nsis/setup.nsi", "circle.yml", "combineJournalLists.py", "external-libraries.txt", "formatter_settings.xml", "gpl3.txt", "gradle/wrapper/gradle-wrapper.jar", "gradle/wrapper/gradle-wrapper.properties", "htdocs-helper/generate-htdocs-help-from-jabref-src-help.pl", "ide-settings/cleanup_settings.xml", "ide-settings/formatter_settings.xml", "jabref-launch4j.xml", "jabref.ebuild", "lesser.txt", "lib/AppleJavaExtensions.jar", "lib/jgoodies/com.jgoodies.uif_lite-2.1.4.jar", "lib/plugin/JPFCodeGenerator-rt.jar", "lib/plugin/JPFCodeGenerator.jar", "lib/plugin/jpf-boot.jar", "lib/plugin/jpf.jar", "lib/plugin/velocity-dep-1.5.jar", "lib/spl/sciplore/mrDlib-serialization-api.jar", "lib/spl/sciplore/xstream-1.4.1.jar", "osx/JavaApplicationStub", "osx/MacAdapter.class", "scripts/generate-authors.sh", "scripts/syncLang.py", "src/graphics/icons/JabRef-icon-mac.svg", "src/graphics/icons/JabRef-icon.svg", "src/graphics/ranks/ranks.xcf", "src/main/antlr2/net/sf/jabref/search/Lexer.g", "src/main/antlr2/net/sf/jabref/search/Parser.g", "src/main/antlr2/net/sf/jabref/search/TreeParser.g", "src/main/antlr4/net/sf/jabref/search/Search.g4", "src/main/gen/.gitignore", "src/main/java/net/sf/jabref/AbstractWorker.java", "src/main/java/net/sf/jabref/AdvancedTab.java", "src/main/java/net/sf/jabref/AppearancePrefsTab.java", "src/main/java/net/sf/jabref/AuthorList.java", "src/main/java/net/sf/jabref/AutoLinkFilesAction.java", "src/main/java/net/sf/jabref/BaseAction.java", "src/main/java/net/sf/jabref/BasePanel.java", "src/main/java/net/sf/jabref/BibLatexEntryTypes.java", "src/main/java/net/sf/jabref/BibtexDatabase.java", "src/main/java/net/sf/jabref/BibtexEntry.java", "src/main/java/net/sf/jabref/BibtexEntryType.java", "src/main/java/net/sf/jabref/BibtexEntryWriter.java", "src/main/java/net/sf/jabref/BibtexFields.java", "src/main/java/net/sf/jabref/BibtexString.java", "src/main/java/net/sf/jabref/BibtexStringComparator.java", "src/main/java/net/sf/jabref/BrowseAction.java", "src/main/java/net/sf/jabref/CallBack.java", "src/main/java/net/sf/jabref/CheckBoxMessage.java", "src/main/java/net/sf/jabref/ClipBoardManager.java", "src/main/java/net/sf/jabref/ContentSelectorDialog2.java", "src/main/java/net/sf/jabref/CrossRefEntryComparator.java", "src/main/java/net/sf/jabref/CustomEntryType.java", "src/main/java/net/sf/jabref/DOIUtil.java", "src/main/java/net/sf/jabref/DatabaseChangeEvent.java", "src/main/java/net/sf/jabref/DatabaseChangeListener.java", "src/main/java/net/sf/jabref/DuplicateCheck.java", "src/main/java/net/sf/jabref/DuplicateResolverDialog.java", "src/main/java/net/sf/jabref/DuplicateSearch.java", "src/main/java/net/sf/jabref/EasyDateFormat.java", "src/main/java/net/sf/jabref/EntryComparator.java", "src/main/java/net/sf/jabref/EntryContainer.java", "src/main/java/net/sf/jabref/EntryEditor.java", "src/main/java/net/sf/jabref/EntryEditorPrefsTab.java", "src/main/java/net/sf/jabref/EntryEditorTab.java", "src/main/java/net/sf/jabref/EntryEditorTabFocusListener.java", "src/main/java/net/sf/jabref/EntryEditorTabList.java", "src/main/java/net/sf/jabref/EntryMarker.java", "src/main/java/net/sf/jabref/EntrySorter.java", "src/main/java/net/sf/jabref/EntryTypeDialog.java", "src/main/java/net/sf/jabref/ExternalTab.java", "src/main/java/net/sf/jabref/FieldComparator.java", "src/main/java/net/sf/jabref/FieldComparatorStack.java", "src/main/java/net/sf/jabref/FieldContentSelector.java", "src/main/java/net/sf/jabref/FieldEditor.java", "src/main/java/net/sf/jabref/FieldEditorFocusListener.java", "src/main/java/net/sf/jabref/FieldNameLabel.java", "src/main/java/net/sf/jabref/FieldTextArea.java", "src/main/java/net/sf/jabref/FieldTextField.java", "src/main/java/net/sf/jabref/FieldTextMenu.java", "src/main/java/net/sf/jabref/FileBasedLock.java", "src/main/java/net/sf/jabref/FileHistory.java", "src/main/java/net/sf/jabref/FileSortTab.java", "src/main/java/net/sf/jabref/FileTab.java", "src/main/java/net/sf/jabref/FileUtil.java", "src/main/java/net/sf/jabref/FindUnlinkedFilesDialog.java", "src/main/java/net/sf/jabref/FocusRequester.java", "src/main/java/net/sf/jabref/FontSelectorDialog.java", "src/main/java/net/sf/jabref/GUIGlobals.java", "src/main/java/net/sf/jabref/GeneralRenderer.java", "src/main/java/net/sf/jabref/GeneralTab.java", "src/main/java/net/sf/jabref/GlobalFocusListener.java", "src/main/java/net/sf/jabref/Globals.java", "src/main/java/net/sf/jabref/HandleDuplicateWarnings.java", "src/main/java/net/sf/jabref/IdComparator.java", "src/main/java/net/sf/jabref/IdGenerator.java", "src/main/java/net/sf/jabref/ImportSettingsTab.java", "src/main/java/net/sf/jabref/IncrementalSearcher.java", "src/main/java/net/sf/jabref/JTextAreaWithHighlighting.java", "src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefCLI.java", "src/main/java/net/sf/jabref/JabRefExecutorService.java", "src/main/java/net/sf/jabref/JabRefFileChooser.java", "src/main/java/net/sf/jabref/JabRefFrame.java", "src/main/java/net/sf/jabref/JabRefMain.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/KeyBindingsDialog.java", "src/main/java/net/sf/jabref/KeyCollisionException.java", "src/main/java/net/sf/jabref/MarkEntriesAction.java", "src/main/java/net/sf/jabref/MergeDialog.java", "src/main/java/net/sf/jabref/MetaData.java", "src/main/java/net/sf/jabref/MnemonicAwareAction.java", "src/main/java/net/sf/jabref/MonthUtil.java", "src/main/java/net/sf/jabref/NameFormatterTab.java", "src/main/java/net/sf/jabref/NetworkTab.java", "src/main/java/net/sf/jabref/OpenFileFilter.java", "src/main/java/net/sf/jabref/OutputPrinter.java", "src/main/java/net/sf/jabref/OutputPrinterToNull.java", "src/main/java/net/sf/jabref/PdfPreviewPanel.java", "src/main/java/net/sf/jabref/PreambleEditor.java", "src/main/java/net/sf/jabref/PrefsDialog3.java", "src/main/java/net/sf/jabref/PrefsTab.java", "src/main/java/net/sf/jabref/PreviewPanel.java", "src/main/java/net/sf/jabref/PreviewPrefsTab.java", "src/main/java/net/sf/jabref/RegExpRule.java", "src/main/java/net/sf/jabref/ReplaceStringDialog.java", "src/main/java/net/sf/jabref/RightClickMenu.java", "src/main/java/net/sf/jabref/SearchManager2.java", "src/main/java/net/sf/jabref/SearchManagerNoGUI.java", "src/main/java/net/sf/jabref/SearchRule.java", "src/main/java/net/sf/jabref/SearchRuleSet.java", "src/main/java/net/sf/jabref/SearchTextListener.java", "src/main/java/net/sf/jabref/SendAsEMailAction.java", "src/main/java/net/sf/jabref/SidePane.java", "src/main/java/net/sf/jabref/SidePaneComponent.java", "src/main/java/net/sf/jabref/SidePaneManager.java", "src/main/java/net/sf/jabref/SimpleSearchRule.java", "src/main/java/net/sf/jabref/SimpleUrlDragDrop.java", "src/main/java/net/sf/jabref/StringDialog.java", "src/main/java/net/sf/jabref/StringUtil.java", "src/main/java/net/sf/jabref/TabLabelPattern.java", "src/main/java/net/sf/jabref/TableColumnsTab.java", "src/main/java/net/sf/jabref/TablePrefsTab.java", "src/main/java/net/sf/jabref/TitleLabel.java", "src/main/java/net/sf/jabref/TransferableBibtexEntry.java", "src/main/java/net/sf/jabref/UnknownEntryType.java", "src/main/java/net/sf/jabref/UrlDragDrop.java", "src/main/java/net/sf/jabref/Util.java", "src/main/java/net/sf/jabref/UtilFindFiles.java", "src/main/java/net/sf/jabref/Worker.java", "src/main/java/net/sf/jabref/XmpPrefsTab.java", "src/main/java/net/sf/jabref/YearUtil.java", "src/main/java/net/sf/jabref/autocompleter/AbstractAutoCompleter.java", "src/main/java/net/sf/jabref/autocompleter/AutoCompleter.java", "src/main/java/net/sf/jabref/autocompleter/AutoCompleterFactory.java", "src/main/java/net/sf/jabref/autocompleter/AutoCompleters.java", "src/main/java/net/sf/jabref/autocompleter/ContentAutoCompleters.java", "src/main/java/net/sf/jabref/autocompleter/CrossrefAutoCompleter.java", "src/main/java/net/sf/jabref/autocompleter/DefaultAutoCompleter.java", "src/main/java/net/sf/jabref/autocompleter/EntireFieldAutoCompleter.java", "src/main/java/net/sf/jabref/autocompleter/NameFieldAutoCompleter.java", "src/main/java/net/sf/jabref/bst/BibtexCaseChanger.java", "src/main/java/net/sf/jabref/bst/BibtexNameFormatter.java", "src/main/java/net/sf/jabref/bst/BibtexPurify.java", "src/main/java/net/sf/jabref/bst/BibtexTextPrefix.java", "src/main/java/net/sf/jabref/bst/BibtexWidth.java", "src/main/java/net/sf/jabref/bst/FormatNameFunction.java", "src/main/java/net/sf/jabref/bst/PurifyFunction.java", "src/main/java/net/sf/jabref/bst/TextPrefixFunction.java", "src/main/java/net/sf/jabref/bst/VM.java", "src/main/java/net/sf/jabref/bst/Warn.java", "src/main/java/net/sf/jabref/bst/WidthFunction.java", "src/main/java/net/sf/jabref/collab/Change.java", "src/main/java/net/sf/jabref/collab/ChangeDisplayDialog.java", "src/main/java/net/sf/jabref/collab/ChangeScanner.java", "src/main/java/net/sf/jabref/collab/EntryAddChange.java", "src/main/java/net/sf/jabref/collab/EntryChange.java", "src/main/java/net/sf/jabref/collab/EntryDeleteChange.java", "src/main/java/net/sf/jabref/collab/FileUpdateMonitor.java", "src/main/java/net/sf/jabref/collab/FileUpdatePanel.java", "src/main/java/net/sf/jabref/collab/GroupChange.java", "src/main/java/net/sf/jabref/collab/MetaDataChange.java", "src/main/java/net/sf/jabref/collab/PreambleChange.java", "src/main/java/net/sf/jabref/collab/StringAddChange.java", "src/main/java/net/sf/jabref/collab/StringChange.java", "src/main/java/net/sf/jabref/collab/StringNameChange.java", "src/main/java/net/sf/jabref/collab/StringRemoveChange.java", "src/main/java/net/sf/jabref/config/SaveOrderConfig.java", "src/main/java/net/sf/jabref/export/AutoSaveManager.java", "src/main/java/net/sf/jabref/export/CustomExportDialog.java", "src/main/java/net/sf/jabref/export/CustomExportList.java", "src/main/java/net/sf/jabref/export/ExpandEndnoteFilters.java", "src/main/java/net/sf/jabref/export/ExportComparator.java", "src/main/java/net/sf/jabref/export/ExportCustomizationDialog.java", "src/main/java/net/sf/jabref/export/ExportFileFilter.java", "src/main/java/net/sf/jabref/export/ExportFormat.java", "src/main/java/net/sf/jabref/export/ExportFormats.java", "src/main/java/net/sf/jabref/export/ExportToClipboardAction.java", "src/main/java/net/sf/jabref/export/FieldFormatter.java", "src/main/java/net/sf/jabref/export/FileActions.java", "src/main/java/net/sf/jabref/export/IExportFormat.java", "src/main/java/net/sf/jabref/export/IExportFormatProvider.java", "src/main/java/net/sf/jabref/export/LatexFieldFormatter.java", "src/main/java/net/sf/jabref/export/MSBibExportFormat.java", "src/main/java/net/sf/jabref/export/ModsExportFormat.java", "src/main/java/net/sf/jabref/export/MySQLExport.java", "src/main/java/net/sf/jabref/export/OOCalcDatabase.java", "src/main/java/net/sf/jabref/export/OpenDocumentRepresentation.java", "src/main/java/net/sf/jabref/export/OpenDocumentSpreadsheetCreator.java", "src/main/java/net/sf/jabref/export/OpenOfficeDocumentCreator.java", "src/main/java/net/sf/jabref/export/PluginBasedExportFormat.java", "src/main/java/net/sf/jabref/export/PostgreSQLExport.java", "src/main/java/net/sf/jabref/export/RtfSelection.java", "src/main/java/net/sf/jabref/export/SaveAllAction.java", "src/main/java/net/sf/jabref/export/SaveDatabaseAction.java", "src/main/java/net/sf/jabref/export/SaveException.java", "src/main/java/net/sf/jabref/export/SaveSession.java", "src/main/java/net/sf/jabref/export/VerifyingWriter.java", "src/main/java/net/sf/jabref/export/layout/AbstractParamLayoutFormatter.java", "src/main/java/net/sf/jabref/export/layout/Layout.java", "src/main/java/net/sf/jabref/export/layout/LayoutEntry.java", "src/main/java/net/sf/jabref/export/layout/LayoutFormatter.java", "src/main/java/net/sf/jabref/export/layout/LayoutHelper.java", "src/main/java/net/sf/jabref/export/layout/ParamLayoutFormatter.java", "src/main/java/net/sf/jabref/export/layout/StringInt.java", "src/main/java/net/sf/jabref/export/layout/WSITools.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorAbbreviator.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorAndsCommaReplacer.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorAndsReplacer.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstAbbrLastCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstAbbrLastOxfordCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstFirst.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstFirstCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstLastCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorFirstLastOxfordCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLF_FF.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLF_FFAbbr.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirst.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirstAbbrCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirstAbbrOxfordCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirstAbbreviator.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirstCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorLastFirstOxfordCommas.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorNatBib.java", "src/main/java/net/sf/jabref/export/layout/format/AuthorOrgSci.java", "src/main/java/net/sf/jabref/export/layout/format/Authors.java", "src/main/java/net/sf/jabref/export/layout/format/CompositeFormat.java", "src/main/java/net/sf/jabref/export/layout/format/CreateBibORDFAuthors.java", "src/main/java/net/sf/jabref/export/layout/format/CreateDocBookAuthors.java", "src/main/java/net/sf/jabref/export/layout/format/CreateDocBookEditors.java", "src/main/java/net/sf/jabref/export/layout/format/CurrentDate.java", "src/main/java/net/sf/jabref/export/layout/format/DOICheck.java", "src/main/java/net/sf/jabref/export/layout/format/DOIStrip.java", "src/main/java/net/sf/jabref/export/layout/format/Default.java", "src/main/java/net/sf/jabref/export/layout/format/FileLink.java", "src/main/java/net/sf/jabref/export/layout/format/FirstPage.java", "src/main/java/net/sf/jabref/export/layout/format/FormatChars.java", "src/main/java/net/sf/jabref/export/layout/format/FormatPagesForHTML.java", "src/main/java/net/sf/jabref/export/layout/format/FormatPagesForXML.java", "src/main/java/net/sf/jabref/export/layout/format/GetOpenOfficeType.java", "src/main/java/net/sf/jabref/export/layout/format/HTMLChars.java", "src/main/java/net/sf/jabref/export/layout/format/HTMLParagraphs.java", "src/main/java/net/sf/jabref/export/layout/format/IfPlural.java", "src/main/java/net/sf/jabref/export/layout/format/Iso690FormatDate.java", "src/main/java/net/sf/jabref/export/layout/format/Iso690NamesAuthors.java", "src/main/java/net/sf/jabref/export/layout/format/JournalAbbreviator.java", "src/main/java/net/sf/jabref/export/layout/format/LastPage.java", "src/main/java/net/sf/jabref/export/layout/format/NoSpaceBetweenAbbreviations.java", "src/main/java/net/sf/jabref/export/layout/format/NotFoundFormatter.java", "src/main/java/net/sf/jabref/export/layout/format/Number.java"], "@@ -1 +1,2 @@\n gradlew eol=lf\n+*.sh eol=lf, @@ -1,21 +1,43 @@\n-bin\n+# no generated files in version control\n+src/main/gen/\n+\n+# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\n+hs_err*\n+\n+# backup files from JabRef itself\n+*.bak\n+\n+# Ant\n+buildant/\n build.number\n-build/\n-nbproject/private/\n+classes/\n+user.properties\n src/main/resources/resource/build.properties\n src/main/resources/windows/nsis/dist/\n+\n+# Gradle\n+build/\n .gradle\n-hs_err*.log\n-jabref-launch4j.tmp\n-user.properties\n+# generated when `gradlew --gui` is called\n+ui/\n+gradle-app.setting\n+\n+# Netbeans\n+nbproject/private/\n+\n+# IntelliJ IDEA\n out/\n-buildant/\n *.iws\n .idea/\n-classes/\n *.ipr\n *.iml\n+\n+# Eclipse\n .settings/\n .classpath\n .project\n+bin/\n+\n+# UNKNWON\n jabref.xml\n+, @@ -0,0 +1,84 @@\n+# Generate AUTHORS: scripts/generate-authors.sh\n+\n+# Tip for finding duplicates (besides scanning the output of AUTHORS for name\n+# duplicates that aren't also email duplicates): scan the output of:\n+#   git log --format='%aE - %aN' | sort --unique --ignore-case\n+#\n+# For explanation on this file format: man git-shortlog\n+Ruy Minoru Ito Takata <ruy.takata@gmail.com>\n+Ruy Minoru Ito Takata <ruy.takata@gmail.com> <21537850814@serpro-1557637.(none)>\n+Stefan Kolb <stefan-kolb@web.de>\n+<stefan-kolb@web.de> <stefan-kolb@users.noreply.github.com>\n+Nicolas Pavillon <pavillon.nicolas@gmail.com>\n+<pavillon.nicolas@gmail.com> <userid-1711535@users.sf.net>\n+Koji Yokota <yokota33@gmail.com> kojiyokota <yokota33@gmail.com>\n+Koji Yokota <yokota33@gmail.com> <kojiyokota@users.sourceforge.net>\n+Koji Yokota <yokota33@gmail.com> <yokota6@gmail.com>\n+Dominik Wa\u00dfenhoven <domwass@users.sourceforge.net> <domwass@users.sourceforge.net>\n+<domwass@users.sourceforge.net> <domwass@Dominik-Waenhovens-MacBook-Air.local>\n+Thomas Arildsen <tha@es.aau.dk> ThomasArildsen <tha@es.aau.dk>\n+Thomas Arildsen <tha@es.aau.dk> ThomasA <tha@es.aau.dk>\n+Thomas Arildsen <tha@es.aau.dk> <ThomasArildsen@users.sourceforge.net>\n+Thomas Arildsen <tha@es.aau.dk> <thomasarildsen@users.sf.net>\n+Tobias Diez <tobiasdiez@gmx.de>\n+<tobiasdiez@gmx.de> <webmaster@altertoby.de>\n+<olenz@icp.uni-stuttgart.de> <olaf@lenz.name>\n+<jan@kubovy.eu> <jkubovy@faw.jku.at>\n+<kai.mindermann@studi.informatik.uni-stuttgart.de> <minderki@studi.informatik.uni-stuttgart.de>\n+<igorsteinmacher@gmail.com> <ifsteinm@yahoo.com.br>\n+<igorsteinmacher@gmail.com> <igorfs@utfpr.edu.br>\n+<adrian.daerr@univ-paris-diderot.fr> <adaerr@users.sf.net>\n+Waluyo Adi Siswanto <was.uthm@gmail.com> <was123@users.sourceforge.net>\n+Michael Falkenthal <michael.falkenthal@googlemail.com>\n+Michael Falkenthal <michael.falkenthal@googlemail.com> <michael.falkenthal@iaas.uni-stuttgart.de>\n+<ambro2@users.noreply.github.com> <ambro2@users.sourceforge.net>\n+Eduardo Greco <eduardogreco93@gmail.com>\n+Egon Willighagen <egon.willighagen@gmail.com> <egonw@users.sourceforge.net>\n+Fr\u00e9d\u00e9ric Darboux <Frederic.Darboux@orleans.inra.fr>\n+Fr\u00e9d\u00e9ric Darboux <Frederic.Darboux@orleans.inra.fr> <fdar@users.sourceforge.net>\n+Florian Stra\u00dfer <strassfn@studi.informatik.uni-stuttgart.de>\n+Gregor Herrmann <gregoa@debian.org>\n+Hakan Duran <ehakanduran@gmail.com> hakova <ehakanduran@gmail.com>\n+Hakan Duran <ehakanduran@gmail.com> hakova <hakova@users.sourceforge.net>\n+Hakan Duran <ehakanduran@gmail.com> Hakan E. Duran <ehakanduran@gmail.com>\n+Jorge Tornero <jtorlistas@gmail.com> <jtorlistas@gmail.com>\n+Mark Schenk <Mark-Schenk@users.sourceforge.net>\n+Nathan Sheffield <sheffien@users.noreply.github.com>\n+Oscar Gustafsson <ogib@users.sourceforge.net> <Oscar@Oscar-THINK>\n+Renato Massao <renato.massao@live.com>\n+Lorenzo Genta <lorenzo.genta@fastwebnet.it>\n+Morten Alver <mortenalver@gmail.com> <mortenalver@users.sourceforge.net>\n+Morten Alver <mortenalver@gmail.com> <alver@alver-1001PX.(none)>\n+Morten Alver <mortenalver@gmail.com> <mortenalver@gmail.com>\n+Oliver Kopp <kopp.dev@gmail.com>\n+Oliver Kopp <kopp.dev@gmail.com> <olly98@users.sf.net>\n+Oliver Kopp <kopp.dev@gmail.com> <olly98@users.sourceforge.net>\n+Oliver Kopp <kopp.dev@gmail.com> <kopp.dev+format@gmail.com>\n+Oliver Kopp <kopp.dev@gmail.com> <kopp.dev+cleanup@github.com>\n+Oliver Kopp <kopp.dev@gmail.com> Apple Inc <no@mail>\n+Nizar N. Batada <nbatada@users.sourceforge.net>\n+Christopher Oezbek <coezbek@users.sourceforge.net>\n+Andreas Rudert <arudert@users.sourceforge.net>\n+Michael Spiegel <mspiegel@users.sourceforge.net>\n+J\u00f6rg Wegner <wegner@users.sourceforge.net>\n+Michael Wrighton <mwrighton@users.sourceforge.net>\n+J\u00f6rg Zieren <jzieren@users.sourceforge.net>\n+Brian Van Essen <vanessen@users.sourceforge.net>\n+Luciana de Melo e Abud <lucianaabud@uol.com.br>\n+Seb Wills <sebwills@users.sourceforge.net>\n+Waluyo Adi Siswanto <was.uthm@gmail.com>\n+Dale Visser <dwvisser@users.sourceforge.net>\n+Erik Putrycz <eputrycz@users.sourceforge.net>\n+Gert Renckens <gert_@users.sourceforge.net>\n+Guillaume Gardey <glinmac@users.sourceforge.net>\n+Kolja Brix <kbx@users.sourceforge.net>\n+Raik Nagel <kiar@users.sourceforge.net>\n+Carlos Silla <silla@users.sourceforge.net>\n+S M Mahbub Murshed <udvranto@users.sourceforge.net>\n+Robert J\u00e4schke <rjoberon@users.sf.net>\n+Ulrik Stervbo <ulriks@users.sourceforge.net>\n+Stefano Gariazzo <steog88@gmail.com>\n+Lee Patton <lpatton@users.sourceforge.net>\n+J\u00f6rg Lenhard <joerg.lenhard@uni-bamberg.de>\n+<joerg.lenhard@uni-bamberg.de> <joerg@lenhard.info>\n+<joerg.lenhard@uni-bamberg.de> <lenhard@users.noreply.github.com>\n\\ No newline at end of file, @@ -1,15 +1,19 @@\n language: java\n jdk:\n-  - openjdk6\n-  - openjdk7\n-  - oraclejdk7\n   - oraclejdk8\n+sudo: false\n \n before_install:\n   - chmod +x gradlew\n \n+cache:\n+  directories:\n+  - $HOME/.gradle/caches/\n+  - $HOME/.gradle/wrapper/\n+\n script:\n   - ./gradlew check --info\n \n after_success:\n   - ./gradlew jacocoTestReport coveralls\n+  - bash <(curl -s https://codecov.io/bash), @@ -0,0 +1,139 @@\n+# This file lists all individuals having contributed content to the repository.\n+# For how it is generated, see `scripts/generate-authors.sh`.\n+Aaron Chen\n+Adam Rehn\n+Adrian Daerr\n+Alessio Pollero\n+Alex Montgomery\n+Alexis Gallagher\n+Alexsandro Lauber\n+ambro2\n+Ambrogio Oliva\n+Andreas Amann\n+Andreas Rudert\n+Bernd Kalbfuss\n+Brian Quistorff\n+Brian Van Essen\n+captain123\n+Carlos Silla\n+Christian Kopf\n+Christopher Oezbek\n+Christopher S. Lester\n+Cyrille d'Haese\n+Dale Visser\n+Daniel Sv\u00e4rd\n+David Gleich\n+David Weitzman\n+Dominik Wa\u00dfenhoven\n+Douglas Nassif Roma Junior\n+Eduardo Greco\n+Egon Willighagen\n+Ellen Reitmayr\n+Erik Putrycz\n+Ervin Kolenovic\n+Fabian Bieker\n+Fabrice Dessaint\n+Fedor Bezrukov\n+Felix Berger\n+Felix Langner\n+Florian Stra\u00dfer\n+Francois Charette\n+Fred\n+Fr\u00e9d\u00e9ric Darboux\n+Gert Renckens\n+Gregor Herrmann\n+Guillaume Gardey\n+Hakan Duran\n+Hannes Restel\n+Igor Chernyavsky\n+Igor Steinmacher\n+Ingvar Jackal\n+Jan Kubovy\n+Janosch Kutscherauer\n+Jason Pickering\n+Jeffrey Kuhn\n+John David\n+John Relph\n+John Zedlewski\n+Jonathan Powell\n+Jorge Tornero\n+J\u00f6rg Lenhard\n+J\u00f6rg Wegner\n+J\u00f6rg Zieren\n+Kai Mindermann\n+Koji Yokota\n+Kolja Brix\n+Krunoslav Zubrinic\n+Krzysztof A. Ko\u015bciuszkiewicz\n+Laura Hern\u00e1ndez G\u00f3mez\n+Lee Patton\n+Leonardo Haddad\n+Ling Wang\n+Lorenzo Genta\n+Luciana de Melo e Abud\n+Manuel Siebeneicher\n+Mariana Prudencio\n+Marius Kleiner\n+Mark Schenk\n+Martin K\u00e4hmer\n+Martin Stolle\n+Mattias Ulbrich\n+mcmoody\n+Meltem Demirk\u00f6pr\u00fc\n+Michael\n+Michael Beckmann\n+Michael Falkenthal\n+Michael Spiegel\n+Michael Wrighton\n+Michel Baylac\n+Mike Smoot\n+mlep\n+Moritz Ringler\n+Morten Alver\n+Nathan Dunn\n+Nathan Sheffield\n+Nicolas Pavillon\n+nikmilpv\n+Nizar N. Batada\n+noravanq\n+Olaf Lenz\n+Oliver Beckmann\n+Oliver Kopp\n+Oscar Gustafsson\n+payload\n+Peter Ansell\n+Philip Johnson\n+Raik Nagel\n+Renato Massao\n+Robert J\u00e4schke\n+Rudolf Seemann\n+Ruy Minoru Ito Takata\n+Ryo Igarashi\n+S M Mahbub Murshed\n+Saivert\n+Samin Muhammad Ridwanul Karim\n+Sascha Hunold\n+Saverio Mori\n+Seb Wills\n+Simon Harrer\n+Simon Rutishauser\n+speed9\n+Stefan Kolb\n+Stefan Robert\n+Stefano Gariazzo\n+Stephan Lau\n+Stephan Rave\n+The Gitter Badger\n+Thiago Toledo\n+Thomas Arildsen\n+Thorsten Dahlheimer\n+Tobias Diez\n+Toralf Senger\n+uid112001\n+Ulrich St\u00e4rk\n+Ulrik Stervbo\n+Uwe Kuehn\n+Waluyo Adi Siswanto\n+Ward Poelmans\n+wuw\n+Yara Grassi Gouffon, @@ -1,5 +1,42 @@\n [master]\n+    - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n+    - No longer write JabRef version to BibTex file header.\n+    - No longer add blank lines inside a bibtex entry\n+    - Perform syntax improvements enabled by Java 1.7+ (diamond operator, try-with-resources)\n+    - List of authors is now auto generated `scripts/generate-authors.sh` and inserted into L10N About.html\n+    - Remove Mr.DLib support as MR.DLib will be shut down in 2015\n+    - Streamline logging API: Replace usages of java.util.logging with commons.logging\n+    - BREAKING: Remove plugin functionality.\n+    - Fixes Bug#1297: No console message on closing.\n+    - Fix bug #1285: Editing position is not lost on saving\n+    - Remove support for custom icon themes. The user has to use the default one.\n+    - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n+[dev_2.11]\n+2.11 beta 4\n+    - Add of Persian localization (by Behrouz Javanmardi)\n+    - Backport from 2.80: Fixes #115: Remove whitespaces in serialization\n+    - Backport from 2.80: Fixes Bug#1297: No console message on closing.\n+    - Backport from 2.80: Fixes Bug#1290: Spanish localization was not displayed correctly.\n+\t- Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n+    - Fix for bugs #1221 and #1261 (also partly #1243): order of fields in customized entry types no longer gets destroyed by the entry editor \n+    - \"ISBN to BibTeX\" fetcher now uses eBook.de's API (fixes bug #1241)\n+    - BREAKING: Search groups now use same search logic as UI --> avoids confusion when converting a UI search into a search group. Behaviour before: contains/regex check of whole search string; behaviour after: contains/regex check of every word of the search string. The new search is more powerful and con simulate the old behaviour: enclose everything in double quotes, e.g., process language --> \"process language\".\n     - Fix for bug #1276: OO styles do not consider editor fields anymore for sorting\n+    - Fix for bug #1288: Emacs keybindings: Rebinding of C-f can now be configured\n+    - Special fields: .bib files edited with 2.11 beta 3 are not compatible with this release. Other versions are not affected.\n+    - JabRef metadata (\"jabref-meta\") @comments are now always written in alphabetical order\n+    - Changed HTML description of search expressions, expressing the conditional logic more explicitly with brackets.\n+    - Fixed INSPIRE searches compatibility problem (by Stefano Gariazzo).\n+    - Change default of \"use IEEE abbreviations\" from TRUE to FALSE\n+    - Fix for bug #1293: \"Star\" for modified database is correctly shown again.\n+    - Journal abbreviation lists: In case entries are defined more than once, a message is output on the console\n+    - Antialiasing is now enabled and set to LCD\n+    - Update dependencies: jersey, commons.logging, pdfbox, JGoodies, glazedlists, JDBC connectors\n+    - Remove local JGoodies dependency: replace SimpleInteralFrame with SwingX JXTitledPanel and UIFSplitPane by JSplitPane\n+    - Switch from antlr2 grammar to antlr4 for capturing the search expressions. Should be backwards compatible.\n+    - Streamline logging API: Replace usages of java.util.logging with commons.logging\n+    - Refactored preferences\n+    - Fix several FindBugs warnings\n 2.11 beta 3\n     - New MacOSX integration\n     - Two releases for MacOSX: OSX-Java6 for Apple Java 1.6 and OSX for Oracle Java 1.7+, @@ -1,50 +0,0 @@\n-jabref [options] [bibtex-file]\n-\n-JabRef  @optionfile :module: OPTIONS ... :module: OPTIONS\n-\n-Use --menu to invoke the interactive built-in menu.\n-\n-Option Name     Type       Description\n-\n--m, --menu      <NOTIFY>   Displays the built-in interactive menu.\n--f, --fetch     <STRING>   Run Fetcher, e.g. \"--fetch=Medline:cancer\"\n--o, --output    <STRING>   Output or export file: filename[,export format]\n--p, --primp     <STRING>   Import preferences from file\n--n, --nogui     <BOOLEAN>  No GUI. Only process command line options.\n--a, --aux       <STRING>   Subdatabase from aux: file[.aux],new[.bib]\n--h, --help      <BOOLEAN>  Display help on command line options\n-    --importToO <STRING>   Import to open tab\n--b, --blank     <BOOLEAN>  Do not open any files at startup\n--i, --import    <STRING>   Import file: filename[,import format]\n--s, --nosplash  <BOOLEAN>  Do not show splash window at startup\n--x, --prexp     <STRING>   Export preferences to file\n--d, --prdef     <STRING>   Reset preferences (key1,key2,... or 'all')\n--v, --version   <BOOLEAN>  Display version\n--m, --exportMat <STRING>   [field]searchTerm,outputFile: file[,exportFormat\n--l, --loads     <BOOLEAN>  Load session\n-\n-Available import formats:\n-  BibTeX         : bibtex\n-  BibTeXML       : bibtexml\n-  Biblioscape    : biblioscape\n-  Biomail        : biomail\n-  CSA            : csa\n-  Copac          : cpc\n-  INSPEC         : inspec\n-  ISI            : isi\n-  JStor (tab delimited) : jstor\n-  MSBib          : msbib\n-  Medline        : medline\n-  Ovid           : ovid\n-  REPEC New Economic Papers (NEP) : repecnep\n-  RIS            : ris\n-  Refer/Endnote  : refer\n-  Scifinder      : scifinder\n-  SilverPlatter  : silverplatter\n-  Sixpack        : sixpack\n-  XMP-annotated PDF : xmpannotatedpdf\n-\n-Available export formats: MSBib, bibordf, bibtexml, din1505, docbook,\n-\tendnote, harvard, html, iso690rtf, iso690txt, listrefs, misq, mods,\n-\tmysql, ods, oocalc, oocsv, postgresql, ris, simplehtml, tablerefs,\n-\ttablerefsabsbib.\n\\ No newline at end of file, @@ -6,25 +6,22 @@ Take a look at GitHub's excellent [help documentation] for a detailed explanatio\n We also have [guidelines for setting up a local workspace](https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace).\n \n For newcomers, [FLOSS Coach](http://www.flosscoach.com/) might be helpful.\n-It contains steps to get start with JabRef development.\n-\n-Please keep in mind that JabRef relies on Java 6 due to the availability of Java 6 on older Mac OS X operating system.\n+It contains steps to get started with JabRef development.\n \n In case you have any questions, you can use our [GITTER channel](https://gitter.im/JabRef/jabref) or use our [developers mailinglist](https://lists.sourceforge.net/lists/listinfo/jabref-devel).\n \n \n ## Formal requirements for a pull request\n-\n The main goal of the formal requirements is to provide credit to you and to be able to understand the patch.\n Nevertheless we aim to keep the code consistently formatted, therefore we additionally have a requirement regarding the source formatter.\n \n \n ### Ensure consistent formatting\n-\n Ensure your code is formatted according the JabRef formatting guidelines.\n-These are provided as Eclipse formatting configuration in [formatter_settings.xml](formatter_settings.xml).\n+These are provided as Eclipse formatting configuration in [formatter_settings.xml](ide-settings/formatter_settings.xml).\n Ensure that JabRef's code cleanup settings are activated.\n-Import [cleanup_settings.xml](cleanup_settings.xml).\n+Import [cleanup_settings.xml](ide-settings/cleanup_settings.xml).\n+You can also run `gradlew format` to let the [Gradle Format plugin](https://github.com/youribonnaffe/gradle-format-plugin) do the formatting.\n \n \n ### Add your change to the CHANGELOG\n@@ -33,16 +30,21 @@ Add a line with your changes and your name.\n Nicknames are OK.\n \n \n-### Add yourself to src/main/resources/help/About.html\n-We try to keep an updated list of contributors in `About.html`.\n-Open `About.html` and add yourself below `Contributions from:`.\n+### Author credits\n+You will be given credit in the `AUTHORS` file in the root of the repository and the 'About' pages inside the main application.\n+We will periodically update the contributors list inside `AUTHORS`.\n+This is done by an automatic shell script `scripts/generate-authors.sh`.\n \n+If you want to add yourself directly with your pull request please run this script.\n+Please make sure there are no duplicates or alternate spellings of your name listed.\n+If you need to merge different Git usernames or email addresses you can do so by editing `.mailmap`.\n+More information on this can be found via `man git-shortlog`.\n \n-### Add yourself to the header\n \n+### Add yourself to the header\n The headers of each `.java` file state the authors.\n These entries should match the modifications done.\n-If you do not want to add your real name, add yourself as `JabRef contriubtors`.\n+If you do not want to add your real name, add yourself as `JabRef contributors`.\n \n For instance,\n \n@@ -61,6 +63,26 @@ gets\n ### Write a good commit message\n See [good commit message] or [commit guidelines section of Pro Git].\n \n+\n+### Test your code\n+We know that writing test cases causes a lot of time.\n+Nevertheless, we rely on our test cases to ensure that a bug fix or a feature implementation doesn't break anything.\n+In case you do not have time to add a test case, we nevertheless ask you to run `gradlew check` to ensure that your change doesn't break anything else.\n+\n+\n+### When adding a library\n+Please try to use a version available at jCenter and add it to `build.gradle`.\n+In any case, describe the library at [external-libraries.txt](external-libraries.txt).\n+We need that information for our package maintainers (e.g., those of the [debian package](https://tracker.debian.org/pkg/jabref)).\n+\n+\n+### Create a pull request\n+Create a pull request on GitHub.\n+For text inspirations, consider [How to write the perfect pull request](https://github.com/blog/1943-how-to-write-the-perfect-pull-request).\n+\n+You can add the prefix `[WIP]` to indicate that the pull request is not yet complete, but you want to discuss something or inform about the current state of affairs.\n+\n+\n [commit guidelines section of Pro Git]: http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project#Commit-Guidelines\n [good commit message]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n [help documentation]: https://help.github.com/articles/using-pull-requests/, @@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<component>\r\n-\t<exclude-output/>\r\n-\t<contentEntry url=\"file://$MODULE_DIR$\"/>\r\n-\t<lib name=\"commons-logging.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/plugin/commons-logging.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"spin.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/spin.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"microba.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/microba.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"PDFBox-0.7.3-dev-reduced.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/PDFBox-0.7.3-dev-reduced.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"antlr.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/antlr.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"antlr-3.0b5.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/antlr-3.0b5.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"junit.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/junit.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"jpf.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/plugin/jpf.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"jpf-boot.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/plugin/jpf-boot.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"JPFCodeGenerator-rt.jar\" scope=\"COMPILE\">\r\n-\t\t<srcroot url=\"file:///JPFCodeGenerator/src\"/>\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/plugin/JPFCodeGenerator-rt.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"glazedlists-1.7.0_java15.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/glazedlists-1.7.0_java15.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"JempBox-0.2.0.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/JempBox-0.2.0.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"forms-1.1.0.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/forms-1.1.0.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"mysql-connector-java-5.0.7-bin.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/mysql-connector-java-5.0.7-bin.jar!/\"/>\r\n-\t</lib>\r\n-\t<lib name=\"looks-2.3.1.jar\" scope=\"COMPILE\">\r\n-\t\t<relative-module-cls project-related=\"jar://$PROJECT_DIR$/lib/looks-2.3.1.jar!/\"/>\r\n-\t</lib>\r\n-</component>\r, None, @@ -1,12 +1,27 @@\n-# JabRef development version\n+# JabRef Development Version\n \n [![Build Status](https://api.travis-ci.org/JabRef/jabref.png?branch=master)](https://travis-ci.org/JabRef/jabref)\n [![Dependency Status](https://www.versioneye.com/user/projects/557f2723386664002000009c/badge.svg?style=flat)](https://www.versioneye.com/user/projects/557f2723386664002000009c)\n [![Coverage Status](https://coveralls.io/repos/JabRef/jabref/badge.svg)](https://coveralls.io/r/JabRef/jabref)\n+[![License](https://img.shields.io/badge/license-GPLv2-blue.svg)](http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt)\n [![Join the chat at https://gitter.im/JabRef/jabref](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/JabRef/jabref?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n+[![Donation](https://img.shields.io/badge/donate-paypal-orange.svg)](https://www.paypal.com/cgi-bin/webscr?item_name=JabRef+Bibliography+Manager&cmd=_donations&lc=US&currency_code=EUR&business=jabrefmail%40gmail.com)\n \n This version is a development version. Features may not work as expected.\n \n+The branch of this README file is `master`.\n+The intention of this branch is to move JabRef forward to modern technologies such as Java8 and JavaFX.\n+The development version will be called `v2.80` and is meant as preparation to the `v3.0` release.\n+\n+The last version with Java6 support is `v2.11` being developed at the [dev_2.11 branch](https://github.com/JabRef/jabref/tree/dev_2.11).\n+\n+### Breaking Changes in Comparison to v2.11\n+\n+* No plugin support\n+* Transition to Java8\n+\n+### Background\n+\n JabRef is a graphical Java application for editing bibtex (`.bib`) databases.\n JabRef lets you organize your entries into overlapping logical groups, and with a single click limit your view to a single group or an intersection or union of several groups.\n You can customize the entry information shown in the main window, and sort by any of the standard Bibtex fields.\n@@ -17,69 +32,49 @@ JabRef can import from and export to several formats, and you can customize expo\n JabRef can be run as a command line application to convert from any import format to any export format.\n \n * Homepage: http://jabref.sourceforge.net/\n-* Development mailinglist: https://lists.sourceforge.net/lists/listinfo/jabref-devel\n+* Development mailing list: https://lists.sourceforge.net/lists/listinfo/jabref-devel\n * Development page: https://github.com/JabRef\n * Main git repository: https://github.com/JabRef/jabref\n-* CI Server: https://travis-ci.org/JabRef/jabref\n+* CI Servers: https://travis-ci.org/JabRef/jabref and https://circleci.com/gh/JabRef/jabref\n * Open HUB page: https://www.openhub.net/p/jabref\n \n-The main git repository has been generated out of the old git repository at sourceforge.\n-The folder `jabref` of the old repository is now the main repository.\n-Although that changed **all** git commit ids, the advantage is to have a clean separation between plugins, the homepage and the code of JabRef.\n-\n-\n-### Bug reports, suggestions, other feedback\n-\n-We are thankful for any bug reports or other feedback. If there are\n-features you want included in JabRef, tell us!\n-\n-The \"old\" trackers at sourceforge still remain intact:\n+### Bug Reports, Suggestions, Other Feedback\n \n-* Bugs: https://sourceforge.net/p/jabref/bugs/\n-* Feature Requests: https://sourceforge.net/p/jabref/feature-requests/\n+We are thankful for any bug reports or other feedback.\n+If there are features you want included in JabRef, tell us!\n \n-Do *not* file patches using https://sourceforge.net/p/jabref/patches/.\n-Just fork JabRef and create a pull request.\n-For details see [CONTRIBUTING.md](CONTRIBUTING.md).\n+You can use our [GitHub issue tracker](https://github.com/JabRef/jabref/issues) to send in bug reports and suggestions.\n \n-### Next Steps\n+To get your code added to JabRef, just fork JabRef and create a pull request.\n+For details see [CONTRIBUTING](CONTRIBUTING.md).\n \n-* Completely change build system from `ant` to `gradle` to get rid of the binaries in the repository.\n-* Migrate the sourceforge wiki to github\n-* Fix bugs listed at https://sourceforge.net/p/jabref/bugs/.\n \n+## Installing and Running\n \n-## Requirements\n+### Requirements\n \n-JabRef runs on any system equipped with the Java Virtual Machine (1.6 or newer), which can be downloaded at no cost from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html).\n-If you do not plan to compile JabRef, the Java Runtime Environment may be a better choice than the Java Development Kit.\n+JabRef runs on any system equipped with the Java Virtual Machine (1.8 or newer), which can be downloaded at no cost from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html).\n \n-\n-## Installing and running, Mac OS X:\n+### Installing and Running, Mac OS X:\n \n Please see our [Mac OS X FAQ](http://jabref.sourceforge.net/faq.php#osx).\n \n-\n-## Installing and running, Windows:\n+### Installing and Running, Windows:\n \n JabRef offers an installer, which also adds a shortcut to JabRef to your start menu.\n \n Please also see our [Windows FAQ](http://jabref.sourceforge.net/faq.php#windows)\n \n-\n-## Installing and running, general:\n+### Installing and Running, General:\n \n JabRef can be downloaded as an executable .jar file.\n-Try to doubleclick the `jar` file or execute the follwing command:\n+Try to double click the `jar` file or execute the following command:\n      `java -jar <path to jar>`\n \n-If you run JabRef under Java 1.5, you can add the option `-Dswing.aatext=true` before the\n-`-jar` option, to activate antialiased text throughout the application.\n-\n \n ## Documentation\n \n-JabRef comes with an online help function, accessed by pressing F1 or\n+JabRef comes with an online help function, accessed by pressing `F1` or\n clicking on a question mark icon. The help files are probably not\n exhaustive enough to satisfy everyone yet, but they should help sort\n out the most important issues about using the program. The help files\n@@ -88,56 +83,56 @@ If you choose languages other than English, some or all help pages may\n appear in your chosen languages.\n \n \n-## Building JabRef from source:\n+## Building JabRef From Source\n \n If you want a step-by-step tutorial, please check [this guideline](https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace)\n \n-To compile JabRef from source, you need a Java compiler supporting Java 1.6 and `JAVA_HOME` pointing to this JDK.\n+To compile JabRef from source, you need a Java compiler supporting Java 1.8 and `JAVA_HOME` pointing to this JDK.\n \n To run it, just execute `gradlew run`.\n When you want to develop, it is necessary to generate additional sources using `gradlew generateSource`\n-and then generate the Eclipse `gradlew eclipse` or IntelliJ IDEA `gradlew idea` project files.\n+and then generate the Eclipse `gradlew eclipse`.\n+For IntelliJ IDEA, just import the project via a Gradle Import by pointing at the `build.gradle`.\n \n \n ## Release Process\n \n Requires\n- * [launch4j](http://launch4j.sourceforge.net/)\n+ * [launch4j](http://launch4j.sourceforge.net/) available in PATH\n  * [NSIS](http://nsis.sourceforge.net) with the [WinShell plug-in](http://nsis.sourceforge.net/WinShell_plug-in).\n- * Eventually a `user.properties` with correct setting of `launch4j.dir` and `nsis.executable`. See [build.xml](build.xml) for defaults.\n \n-Replace `ANY_ANT_TARGET` with the Ant Target of your choice (e.g., `macbundle`), and the system will build your binaries.\n To get a list of all targets, use `gradlew tasks`.\n+```\n+release - Creates a release for all target platforms.\n+releaseJar - Creates a Jar release.\n+releaseMac - Creates an OSX release.\n+releaseSourceTar - Creates a tar archive of the source code.\n+releaseSourceZip - Creates a zip archive of the source code.\n+releaseWindows - Creates a Windows executable and installer.\n+```\n \n-`gradlew generateSource antTargets.ANY_ANT_TARGET`\n-\n-To compile, use the command `gradlew generateSource antTargets.jars`.\n-After the build is finished, you can find the executable jar file\n-named `JabRef-$VERSION.jar` (where $VERSION is the current version of the\n-source tree) in the `buildant\\lib` directory. Enjoy!\n-The setup files are created by invoking the command `gradlew generateSource antTargets.release`.\n-\n-\n-### Releasing on Linux\n-\n-Run `gradlew antTargets.release.linux`\n-\n-All binaries (including OSX) and the installer are generated in the directory `buildant/lib`.\n+To set the path to your local NSIS executable pass it via a Gradle property:\n \n+`gradlew -PnsisExec=PATH ANY_RELEASE_TASK`\n+Typically, this is `\"C:\\Program Files (x86)\\NSIS\\makensis.exe\"` resulting in the command line `gradlew -PnsisExec=\"C:\\Program Files (x86)\\NSIS\\makensis.exe\" release`.\n \n-### Releasing on Windows\n+All binaries are created inside the directory `build/releases`.\n \n-Run `gradlew antTargets.release`\n+### Releasing Developer Releases\n \n-All binaries (including OSX) and the installer are generated in the directory `buildant/lib`.\n+Run `gradlew -Pdev=true ANY_RELEASE_TASK` to execute any of the previously defined release tasks.\n+The only difference is that the version contains the keyword *snapshot*, the *date*, and the *shortend git hash*.\n \n+Normal: `JabRef--2.80dev.jar`\n+With `-Pdev=true`: `JabRef--2.80dev--snapshot--2015-07-30--48a23d1.jar`\n \n ## License\n \n JabRef is free software: you can redistribute it and/or modify it under the\n terms of the GNU General Public License as published by the Free Software\n Foundation, either version 2 of the License, or (at your option) any later\n version.\n-See the enclosed text files [gpl2.txt](gpl2.txt) and [gpl3.txt](gpl3.txt) for full details.\n+See the [LICENSE](LICENSE) for full details.\n \n-JabRef also uses libraries distributed by other parties; see the About box for details.\n+JabRef also uses libraries distributed by other parties.\n+See [external libraries](external-libraries.txt) for details., @@ -1,28 +0,0 @@\n-\n-Chris:\n-------\n-  * Think about synchronizing XMP.\n-  * Document data schema used (BibteXmp)\n-  * Add build.xml target to export standalone XMPUtil for the CLI.\n-  * Allow search relativ to bibtex-file\n-  * Plugin-System may crash...\n-  \n-Morten:\n-\n-* Encoding used for reading URLs. URLDownload.java\n-\n-* Look into whether incremental search could be made more persistent when search panel loses focus.\n-* Problem: when looking at group with hiding non-hits, newly created entry doesn't appear in entry editor.\n-\n-* Plugins like SVN plugin might need hooks for performing actions before a database is\n-  closed, and may need the ability to cancel the closing, and to avoid questions about\n-  saving changes.\n-\n-* Enable \"Open spires entry\" (\"openSpires\" action)? Think about better integration of this?\n-  Look into which viewer is used.\n-* Add \"Copy all externally linked files for this set of entries\"-feature.\n-  Basic functionality in AccessLinksForEntries.\n-* Problem setting today with Microba calendar.\n-\n-* [POSTPONE] Icon selection for external file types: - select arbitrary images from disk?\n-, @@ -1,3 +0,0 @@\n-<project default=\"test\">\n-    <include file=\"build.xml\" as=\"antTargets\"/>\n-</project>\n\\ No newline at end of file, @@ -1,83 +1,53 @@\n-// must appear before any plugins blocks - see http://gradle.org/docs/2.4/userguide/plugins.html#sec:plugins_block\n-buildscript {\n-    repositories {\n-        jcenter()\n-    }\n-\n-    dependencies {\n-        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'\n-        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'\n-    }\n-}\n+import org.gradle.internal.os.OperatingSystem\n \n plugins {\n-    //The format plugin requires Java 1.8. As JabRef currently supports Java 1.6, the formatter plugin is disabled.\n-    //id \"com.github.youribonnaffe.gradle.format\" version \"1.2\"\n-\n-    // Version 0.3 requires Java 1.7, therefore we use version 0.2\n-    // This version, however, is not available as plugin directly from gradle\n-    // id \"eu.appsatori.fatjar\" version \"0.3\"\n+    id \"eu.appsatori.fatjar\" version \"0.3\"\n+    id \"edu.sc.seis.launch4j\" version \"1.1.4\"\n+    id \"com.github.kt3k.coveralls\" version \"2.4.0\"\n+    id \"edu.sc.seis.macAppBundle\" version \"2.1.1\"\n+    id \"com.github.youribonnaffe.gradle.format\" version \"1.2\"\n }\n \n-apply plugin: \"fatjar\"\n apply plugin: \"java\"\n apply plugin: \"eclipse\"\n-apply plugin: \"idea\"\n apply plugin: \"application\"\n apply plugin: \"project-report\"\n+apply plugin: \"sonar-runner\"\n+apply plugin: \"maven\"\n+apply plugin: 'jacoco'\n+apply plugin: 'com.github.kt3k.coveralls'\n \n-/* disabled, because plugin requires Java 1.8\n-format {\n-    configurationFile = file('formatter_settings.xml')\n-    // default: reformat main and test\n-    //files = sourceSets.main.java\n-}\n-*/\n-\n-fatJar {\n-    classifier 'fat'\n-    manifest {\n-        attributes 'Main-Class': \"net.sf.jabref.JabRefMain\"\n-    }\n-}\n+group = \"net.sf.jabref\"\n+version = \"2.80dev\"\n+project.ext.threeDotVersion = \"2.80.0.0\"\n+project.ext.nsisExec = hasProperty(\"nsisExec\") ? getProperty(\"nsisExec\") : \"C:/Program Files/NSIS/makensis.exe\"\n+sourceCompatibility = 1.8\n+targetCompatibility = 1.8\n+mainClassName = \"net.sf.jabref.JabRefMain\"\n \n-test {\n-    testLogging {\n-        exceptionFormat \"full\" // default is \"short\"\n-    }\n+task wrapper(type: Wrapper) {\n+    gradleVersion = '2.6'\n }\n \n-version = \"2.11dev\"\n-\n repositories {\n     jcenter()\n }\n \n-sourceSets {\n-    main {\n-        java {\n-            srcDirs = [\"src/main/java\", \"src/main/gen\"]\n-        }\n-    }\n-}\n-\n configurations {\n-    generateClasspath\n     antlr3\n-    antlr2\n+    antlr4\n }\n \n dependencies {\n+    compile 'com.jgoodies:jgoodies-common:1.8.1'\n+    compile 'com.jgoodies:jgoodies-forms:1.9.0'\n+    compile 'com.jgoodies:jgoodies-looks:2.7.0'\n \n-    // jgoodies\n-    compile 'com.jgoodies:jgoodies-common:1.4.0'\n-    compile 'com.jgoodies:jgoodies-forms:1.6.0'\n-    compile 'com.jgoodies:jgoodies-looks:2.5.2'\n-    compile fileTree(dir: 'lib/jgoodies/', includes: ['*.jar']) // instead of having the source code inside\n+    compile 'org.swinglabs.swingx:swingx-core:1.6.5-1'\n \n-    compile 'org.apache.pdfbox:pdfbox:1.7.1'\n-    compile 'org.apache.pdfbox:fontbox:1.7.1'\n-    compile 'org.apache.pdfbox:jempbox:1.7.1'\n+    compile 'org.apache.pdfbox:pdfbox:1.8.10'\n+    compile 'org.apache.pdfbox:fontbox:1.8.10'\n+    compile 'org.apache.pdfbox:jempbox:1.8.10'\n \n     compile 'commons-cli:commons-cli:1.3.1'\n \n@@ -86,92 +56,56 @@ dependencies {\n     compile 'org.openoffice:ridl:3.2.1'\n     compile 'org.openoffice:unoil:3.2.1'\n \n-    antlr2 'antlr:antlr:2.7.7'\n-    antlr3 'org.antlr:antlr:3.4'\n-    compile 'org.antlr:antlr-runtime:3.4'\n+    antlr3 'org.antlr:antlr:3.5.2'\n+    compile 'org.antlr:antlr-runtime:3.5.2'\n \n-    compile 'mysql:mysql-connector-java:5.0.7'\n-    compile 'org.postgresql:postgresql:9.2-1002-jdbc4'\n+    antlr4 'org.antlr:antlr4:4.5.1-1'\n+    compile 'org.antlr:antlr4-runtime:4.5.1-1'\n \n-    compile 'net.java.dev.glazedlists:glazedlists_java15:1.8.0'\n-    compile fileTree(dir: 'lib', includes: ['microba.jar', 'spin.jar'])\n+    compile 'mysql:mysql-connector-java:5.1.36'\n+    compile 'org.postgresql:postgresql:9.4-1201-jdbc41'\n \n-    compile 'net.java.dev.jna:jna:4.1.0'\n+    compile 'net.java.dev.glazedlists:glazedlists_java15:1.9.1'\n+    compile fileTree(dir: 'lib', includes: ['*.jar'])\n \n-    compile 'commons-logging:commons-logging:1.0.2'\n-    // not available in maven repository\n-    compile fileTree(dir: 'lib/plugin', includes: ['jpf.jar', 'jpf-boot.jar', 'JPFCodeGenerator-rt.jar'])\n+    compile 'net.java.dev.jna:jna:4.1.0'\n \n-    compile 'com.sun.jersey:jersey-client:1.14'\n-    compile 'com.sun.jersey:jersey-core:1.14'\n-    compile 'com.sun.jersey.contribs:jersey-multipart:1.14'\n+    compile 'com.google.guava:guava:18.0'\n \n-    compile fileTree(dir: 'lib/spl/sciplore', includes: ['*.jar'])\n+    compile 'commons-logging:commons-logging:1.2'\n \n     compile 'junit:junit:4.12'\n-\n-    generateClasspath fileTree(dir: 'lib/plugin', includes: ['jpf.jar', 'jpf-boot.jar', 'JPFCodeGenerator.jar', 'velocity-dep-1.5.jar'])\n-}\n-\n-// use ant targets with prefix antTargets.XXXXX\n-ant.importBuild \"build-wrapper.xml\"\n-// add jars from this classpath to the classpath for the ant build\n-if (org.gradle.internal.os.OperatingSystem.current().windows) {\n-    // according to the discussion at https://github.com/JabRef/jabref/pull/58, the separators are different on Windows and Linux\n-    ant.references.jars.setFiles(configurations.compile.asPath.replace(\";\",\" \"))\n-} else {\n-    ant.references.jars.setFiles(configurations.compile.asPath.replace(\":\",\" \"))\n }\n \n-sourceCompatibility = 1.6\n-mainClassName = \"net.sf.jabref.JabRefMain\"\n-\n-task wrapper(type: Wrapper) {\n-    gradleVersion = '2.4'\n+sourceSets {\n+    main {\n+        java {\n+            srcDirs = [\"src/main/java\", \"src/main/gen\"]\n+        }\n+    }\n }\n \n-compileJava {\n-    // files are all encoded using UTF-8\n-    options.encoding = 'UTF-8'\n-    options.compilerArgs << \"-Xlint:unchecked\"\n-}\n+processResources {\n+    filesMatching(\"help/**/About.html\") {\n+        expand (\"version\": project.version,\n+                \"year\": String.valueOf(Calendar.getInstance().get(Calendar.YEAR)),\n+                \"authors\": new File('AUTHORS').readLines().findAll {!it.startsWith(\"#\")}.join(\", \"))\n+    }\n \n-compileTestJava {\n-    // files are all encoded using UTF-8\n-    options.encoding = 'UTF-8'\n-}\n+    filesMatching(\"resource/build.properties\") {\n+        expand version: project.version\n+    }\n \n-javadoc {\n-    options {\n-        // files are all encoded using UTF-8\n-        encoding = 'UTF-8'\n-        version = true\n-        author = true\n+    filesMatching(\"resource/**/meta.xml\") {\n+        expand version: project.version\n     }\n }\n \n-// jabref specific tasks\n-compileJava.dependsOn \"generateSource\"\n-\n-task generateSource(dependsOn: [\"generatePluginSource\", \"generateBstGrammarSource\", \"generateSearchTreeParserSource\"]) {\n+task generateSource(dependsOn: [\"generateBstGrammarSource\", \"generateSearchGrammarSource\"]) {\n     group = 'JabRef'\n     description 'Generates all Java source files.'\n }\n \n-task generatePluginSource(type: JavaExec) {\n-    group 'JabRef'\n-    description 'Generates _JabRefPlugin.java with JPF.'\n-\n-    ext.pluginsDir = \"src/main/resources/plugins\"\n-\n-    inputs.dir file(ext.pluginsDir)\n-    outputs.file file(\"src/main/gen/net/sf/jabref/plugin/core/generated/_JabRefPlugin.java\")\n-\n-    main = \"net.sf.jabref.plugin.util.CodeGenerator\"\n-    args = [ext.pluginsDir]\n-    classpath = configurations.generateClasspath\n-}\n-\n task generateBstGrammarSource(type: JavaExec) {\n     group 'JabRef'\n     description 'Generates BstLexer.java and BstParser.java from the Bst.g grammar file using antlr3.'\n@@ -187,91 +121,216 @@ task generateBstGrammarSource(type: JavaExec) {\n     args = [\"-o\", file('src/main/gen/net/sf/jabref/bst/'), antlrSource]\n }\n \n-task generateSearchLexerSource(type: JavaExec) {\n-    String grammarFile = \"Lexer\"\n+task generateSearchGrammarSource(type: JavaExec) {\n+    String grammarFile = \"Search\"\n \n     group 'JabRef'\n-    description \"Generates java files for ${grammarFile}.g antlr2.\"\n+    description \"Generates java files for ${grammarFile}.g antlr4.\"\n \n     String packagePath = \"net/sf/jabref/search\"\n-    File antlr2Path = file(\"src/main/antlr2\")\n+    File antlrPath = file(\"src/main/antlr4\")\n     File genPath = file(\"src/main/gen\")\n \n-    File antlrSource = file(\"$antlr2Path/$packagePath/${grammarFile}.g\")\n+    File antlrSource = file(\"$antlrPath/$packagePath/${grammarFile}.g4\")\n     File destinationDir = file(\"$genPath/$packagePath\")\n \n     inputs.file antlrSource\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.smap\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.txt\")\n-\n-    main = 'antlr.Tool'\n-    classpath = configurations.antlr2\n-    args = [\"-o\", destinationDir, antlrSource]\n+    outputs.file file(\"$destinationDir/${grammarFile}Parser.java\")\n+    outputs.file file(\"$destinationDir/${grammarFile}Lexer.java\")\n+    outputs.file file(\"$destinationDir/${grammarFile}Visitor.java\")\n+    outputs.file file(\"$destinationDir/${grammarFile}BaseVisitor.java\")\n+    outputs.file file(\"$destinationDir/${grammarFile}.tokens\")\n+    outputs.file file(\"$destinationDir/${grammarFile}Lexer.tokens\")\n+\n+    main = 'org.antlr.v4.Tool'\n+    classpath = configurations.antlr4\n+    args = [\"-o\", destinationDir, \"-visitor\", \"-no-listener\", \"-package\", \"net.sf.jabref.search\", antlrSource]\n }\n \n-task generateSearchParserSource(type: JavaExec, dependsOn: \"generateSearchLexerSource\") {\n-    String grammarFile = \"Parser\"\n+compileJava {\n+    options.encoding = 'UTF-8'\n+    options.compilerArgs << \"-Xlint:none\"\n+}\n+compileJava.dependsOn \"generateSource\"\n \n-    group 'JabRef'\n-    description \"Generates java files for ${grammarFile}.g antlr2.\"\n+compileTestJava {\n+    options.encoding = 'UTF-8'\n+}\n \n-    String packagePath = \"net/sf/jabref/search\"\n-    File antlr2Path = file(\"src/main/antlr2\")\n-    File genPath = file(\"src/main/gen\")\n+javadoc {\n+    options {\n+        encoding = 'UTF-8'\n+        version = true\n+        author = true\n+    }\n+}\n \n-    File antlrSource = file(\"$antlr2Path/$packagePath/${grammarFile}.g\")\n-    File destinationDir = file(\"$genPath/$packagePath\")\n+test {\n+    testLogging {\n+        exceptionFormat \"full\" // default is \"short\"\n+    }\n+}\n \n-    inputs.file antlrSource\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.smap\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.txt\")\n-\n-    main = 'antlr.Tool'\n-    classpath = configurations.antlr2\n-    args = [\"-o\", destinationDir, antlrSource]\n+jacocoTestReport {\n+    reports {\n+        xml.enabled = true // coveralls plugin depends on xml format report\n+        html.enabled = true\n+    }\n }\n \n-task generateSearchTreeParserSource(type: JavaExec, dependsOn: \"generateSearchParserSource\") {\n-    String grammarFile = \"TreeParser\"\n+// enables `gradlew format`. Currently `LabelPatternUtil.java` is destroyed. Use with care!\n+format {\n+    configurationFile = file('ide-settings/formatter_settings.xml')\n+    // default: reformat main and test\n+    //files = sourceSets.main.java\n+}\n \n-    group 'JabRef'\n-    description \"Generates java files for ${grammarFile}.g antlr2.\"\n+fatJar {\n+    classifier 'fat'\n+    manifest {\n+        attributes 'Main-Class': project.mainClassName\n+    }\n+}\n \n-    String packagePath = \"net/sf/jabref/search\"\n-    File antlr2Path = file(\"src/main/antlr2\")\n-    File genPath = file(\"src/main/gen\")\n \n-    File antlrSource = file(\"$antlr2Path/$packagePath/${grammarFile}.g\")\n-    File destinationDir = file(\"$genPath/$packagePath\")\n \n-    inputs.file antlrSource\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}.smap\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.java\")\n-    outputs.file file(\"$destinationDir/SearchExpression${grammarFile}TokenTypes.txt\")\n-\n-    main = 'antlr.Tool'\n-    classpath = configurations.antlr2\n-    args = [\"-o\", destinationDir, antlrSource]\n+/*\n+ * Changes project.version to VERSION--snapshot--DATE--GIT_HASH\n+ */\n+if (hasProperty('dev')) {\n+    String command = \"git log --pretty=format:'%cd--%h' -n 1 --date=short\"\n+    String result = \"\"\n+    if (OperatingSystem.current().isWindows()) {\n+        result = \"cmd /c $command\".execute().in.text\n+    } else {\n+        result = command.execute().in.text\n+    }\n+\n+    // remove enclosing ' of result\n+    project.version += \"--snapshot--\" + result.substring(1, result.length() - 1)\n+}\n+\n+task release(dependsOn: [\"releaseWindows\", \"releaseMac\", \"releaseJar\", \"releaseSourceZip\", \"releaseSourceTar\"]) {\n+    group = 'JabRef - Release'\n+    description 'Creates a release for all target platforms.'\n+}\n+\n+launch4j {\n+    mainClassName = project.mainClassName\n+    version = project.ext.threeDotVersion\n+    textVersion = project.version\n+    jar = \"../libs/JabRef-${project.version}-fat.jar\"\n+    icon = \"${projectDir}/src/main/resources/images/icons/JabRef.ico\"\n+    copyright = \"JabRef developers\"\n+    initialHeapSize = 32\n+    maxHeapSize = 512\n }\n+createExe.dependsOn \"fatJar\"\n \n-// git support in intellij idea\n-idea.project.ipr {\n-    withXml { provider ->\n-        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'\n+task releaseJar(dependsOn: \"fatJar\") {\n+    group = 'JabRef - Release'\n+    description \"Creates a Jar release.\"\n+\n+    doLast {\n+        copy {\n+            from(\"$buildDir/libs/JabRef-${project.version}-fat.jar\")\n+            into(\"$buildDir/releases\")\n+\n+            rename { String fileName ->\n+                fileName.replace('-fat', '')\n+            }\n+        }\n     }\n }\n \n-apply plugin: 'jacoco'\n-apply plugin: 'com.github.kt3k.coveralls'\n+task releaseWindows(dependsOn: \"launch4j\") {\n+    group = 'JabRef - Release'\n+    description \"Creates a Windows release.\"\n \n-jacocoTestReport {\n-    reports {\n-        xml.enabled = true // coveralls plugin depends on xml format report\n-        html.enabled = true\n+    doLast {\n+        copy {\n+            from(\"$projectDir/LICENSE\")\n+            from(\"$projectDir/README.md\")\n+            from(\"$buildDir/launch4j/JabRef.exe\")\n+            into(\"$buildDir/nsis\")\n+        }\n+        if (OperatingSystem.current().isWindows()) {\n+            exec {\n+               commandLine project.ext.nsisExec, \"/DVERSION=${version}\", \"${projectDir}/buildres/nsis/setup.nsi\"\n+            }\n+        } else {\n+            exec {\n+                commandLine project.ext.nsisExec, \"-DVERSION=${version}\", \"${projectDir}/buildres/nsis/setup.nsi\"\n+            }\n+        }\n+        copy {\n+            from(\"$buildDir/nsis/JabRefSetup-${version}.exe\")\n+            from(\"$buildDir/nsis/JabRef.exe\")\n+            into(\"$buildDir/releases\")\n+        }\n+    }\n+}\n+\n+if(!OperatingSystem.current().isMacOsX()) {\n+    // disable this task as it requires a command line tool only available on Mac OS X\n+    createDmg.enabled = false\n+}\n+\n+task releaseMac(dependsOn: \"createAppZip\") {\n+    group = 'JabRef - Release'\n+    description \"Creates an OSX release.\"\n+\n+    doLast {\n+        copy {\n+            from \"$buildDir/distributions/JabRef-${project.version}.zip\"\n+            into \"$buildDir/releases\"\n+            rename { String fileName ->\n+                fileName.replace('.zip', '-OSX.zip')\n+            }\n+        }\n+    }\n+}\n+\n+macAppBundle {\n+    mainClassName = project.mainClassName\n+    icon = \"src/main/resources/images/icons/JabRef-Logo.icns\"\n+    highResolutionCapable = true\n+\n+    def map = [\n+            \"CFBundleTypeName\"      : \"BibTeX file\",\n+            \"CFBundleTypeRole\"      : \"Editor\",\n+            \"CFBundleTypeIconFile\"  : \"JabRef-Logo.icns\",\n+            \"CFBundleTypeExtensions\": [\"bib\"]\n+    ]\n+    bundleExtras.put(\"CFBundleDocumentTypes\", [map])\n+}\n+\n+task releaseSourceZip(type: Exec) {\n+    group = 'JabRef - Release'\n+    description \"Creates a zip archive of the source code.\"\n+\n+    if (OperatingSystem.current().isWindows()) {\n+        commandLine 'cmd', '/c', \"git -c core.autocrlf=false -c core.eol=lf archive HEAD --format=zip > ${buildDir}/releases/JabRef-${version}-src.zip\"\n+    } else {\n+        commandLine \"bash\", \"-c\", \"git -c core.autocrlf=false -c core.eol=lf archive HEAD --format=zip > ${buildDir}/releases/JabRef-${version}-src.zip\"\n+    }\n+\n+    doFirst {\n+        mkdir(\"$buildDir/releases\")\n+    }\n+}\n+\n+task releaseSourceTar(type: Exec) {\n+    group = 'JabRef - Release'\n+    description \"Creates a tar archive of the source code.\"\n+\n+    if (OperatingSystem.current().isWindows()) {\n+        commandLine 'cmd', '/c', \"git -c core.autocrlf=false -c core.eol=lf archive HEAD > ${buildDir}/releases/JabRef-${version}-src.tar.gz\"\n+    } else {\n+        commandLine \"bash\", \"-c\", \"git -c core.autocrlf=false -c core.eol=lf archive HEAD > ${buildDir}/releases/JabRef-${version}-src.tar.gz\"\n+    }\n+\n+    doFirst {\n+        mkdir(\"$buildDir/releases\")\n     }\n }, @@ -1,576 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n-   Filename: build.xml\n-   Purpose:  Ant build file for Jabref.\n-\n-             Ant-Download: http://jakarta.apache.org/ant\n-             Ant-Manual:   http://jakarta.apache.org/ant/manual/index.html\n-\n-             Jabref homepage:       http://jabref.sourceforge.net\n-             Jabref@OpenHub:        https://www.openhub.net/p/jabref\n-\n-             Further questions:\n-               help mailing list:   https://lists.sourceforge.net/lists/listinfo/jabref-users\n-\n-   Precondition: 1. Ant should be installed.\n-                 2. JAVA_HOME environment variable contains the path to JDK1.6 or higher\n-                 3. ANT_HOME environment variable contains the path to ant's home directory\n-\n-   Language: XML\n-   Compiler: Ant\n-   Authors:  Joerg K. Wegner, wegnerj@informatik.uni-tuebingen.de\n-             Morten O. Alver\n-\n-   modified: see at git checkout and \"gitk build.xml\"\n-\n-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->\n-\n-<project name=\"JabRef\" default=\"jars\" basedir=\".\">\n-\n-\t<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n-        PROPERTY SETUP\n-     +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->\n-\n-\t<!-- some version information -->\n-\t<property name=\"jabref.version\" value=\"2.11dev\" />\n-\t<property name=\"jabref.version.full\" value=\"2.11.4.0\" /> <!-- a version number with 4 places. Required by launch4j -->\n-\t<property name=\"jabref.year\" value=\"2015\" />\n-\t<property name=\"jabref.placeholder.version\" value=\"@version@\" />\n-\t<property name=\"jabref.placeholder.year\" value=\"@year@\" />\n-\t<!-- used by replace task -->\n-\n-\t<!-- Set the properties for intermediate directory -->\n-\t<property name=\"build.jar\" value=\"JabRef-${jabref.version}.jar\" />\n-\t<property name=\"build.dir\" value=\"buildant\" />\n-\t<property name=\"build.classes\" value=\"${build.dir}/classes\" />\n-\t<property name=\"build.tmp\" value=\"${build.dir}/tmp\" />\n-\t<property name=\"build.classes.osx\" value=\"${build.dir}/classes/osx/macadapter\" />\n-\t<property name=\"build.lib\" value=\"${build.dir}/lib\" />\n-\t<property name=\"build.win\" value=\"${build.dir}/windows\" />\n-\t<property name=\"build.images\" value=\"${build.dir}/images\" />\n-\t<property name=\"build.resource\" value=\"${build.dir}/resource\" />\n-\t<property name=\"build.help\" value=\"${build.dir}/help\" />\n-\t<property name=\"build.extensions\" value=\"${build.dir}/extensions\" />\n-\t<property name=\"build.extension-javadocs\" value=\"${build.extensions}/API\" />\n-\t<property name=\"build.extension-layout\" value=\"${build.extensions}/layout\" />\n-\t<property name=\"build.openoffice.meta\" value=\"${build.resource}/openoffice\" />\n-\n-\t<!-- Set the properties for source directories -->\n-\t<property name=\"resources.dir\" value=\"src/main/resources\" />\n-\t<property name=\"plugin.dir\" value=\"${resources.dir}/plugins/\" />\n-\t<property name=\"txt.dir\" value=\".\" />\n-\t<property name=\"java.dir\" value=\"src/main/java\" />\n-    <property name=\"gen.dir\" value=\"src/main/gen\" />\n-\t<property name=\"osx.dir\" value=\"${resources.dir}/osx\" />\n-\t<property name=\"win.installer.dir\" value=\"${resources.dir}/windows/nsis\" />\n-\t<property name=\"resource.dir\" value=\"${resources.dir}/resource\" />\n-\t<property name=\"images.dir\" value=\"${resources.dir}/images\" />\n-\t<property name=\"help.dir\" value=\"${resources.dir}/help\" />\n-\t<property name=\"extensions.dir\" value=\"${resources.dir}/extensions\" />\n-\t<property name=\"layout.dir\" value=\"${resources.dir}/resource/layout\" />\n-\t<property name=\"lib.dir\" value=\"lib\" />\n-\t<property name=\"buildlib.dir\" value=\"buildlib\" />\n-\n-\t<property name=\"osxbin.dir\" value=\"osx\" />\n-\n-\t<!-- Load user dependent properties. Has to happen before setting the properties here -->\n-\t<!-- For instance to redefine the NSIS-compiler write\n-\t\tnsis.executable=\"d:\\\\prog\\\\dev\\\\NSIS\\\\makensis.exe\"\n-\t  -->\n-\t<property file=\"user.properties\" />\n-\n-\t<property name=\"nsis.executable\" value=\"C:\\Program files\\NSIS\\makensis.exe\"/>\n-\t<property name=\"nsis.executable.linux\" value=\"makensis\"/>\n-\t<property name=\"launch4j.dir\" location=\"/opt/launch4j\" />\n-\n-\t<!-- win.installer can only be build under Windows if the nsis.executable is found -->\n-\t<condition property=\"is.windows\">\n-\t  <and>\n-\t    <isset property=\"nsis.executable\" />\n-\t    <os family=\"windows\" />\n-\t  </and>\n-\t</condition>\n-\n-    <!-- Done by MrDlib -->\n-\t<fileset id=\"deletableMeta-InfFiles\" dir=\"${build.tmp}/META-INF\">\n-\t        <exclude name=\"services/**/*\" />\n-\t</fileset>\n-    <!-- Done by MrDlib -->\n-\n-\t<!-- Build classpath -->\n-\t<filelist id=\"jars\" />\n-\t<path id=\"classpath\">\n-\t\t<pathelement path=\"${build.classes}\" />\n-\t\t<pathelement path=\"${build.dir}\" />\n-\t\t<filelist refid=\"jars\" />\n-\t</path>\n-\n-\t<target name=\"run\" depends=\"build\">\n-\t\t<java classname=\"net.sf.jabref.JabRefMain\" fork=\"true\">\n-\t\t\t<classpath refid=\"classpath\" />\n-\t\t</java>\n-\t</target>\n-\n-\t<!-- Runs project -->\n-\t<target name=\"runFromJar\">\n-\t\t<java dir=\"${build.lib}\" classname=\"net.sf.jabref.JabRefMain\" fork=\"true\">\n-\t\t\t<classpath>\n-\t\t\t\t<pathelement location=\"${build.lib}/${build.jar}\" />\n-\t\t\t</classpath>\n-\t\t</java>\n-\t</target>\n-\n-\t<!-- Compiles project -->\n-\t<target name=\"compile\">\n-\t\t<mkdir dir=\"${build.classes}\" />\n-\t\t<javac destdir=\"${build.classes}\" encoding=\"UTF8\" source=\"1.6\" target=\"1.6\">\n-\t\t\t<src path=\"${java.dir}\" />\n-            <src path=\"${gen.dir}\" />\n-\t\t\t<classpath refid=\"classpath\" />\n-\t\t</javac>\n-\t</target>\n-\n-\t<!-- Builds the OSXAdapter -->\n-\t<target name=\"osx\" depends=\"compile\">\n-\t\t<mkdir dir=\"${build.classes}\" />\n-\t\t<javac srcdir=\"${osx.dir}\" destdir=\"${build.classes}\" target=\"1.6\">\n-\t\t\t<!-- Hack to force visibility of com.apple.eawt in rt.jar in JDK7 & 8\n-\t\t\t\t https://bugs.openjdk.java.net/browse/JDK-8008714 -->\n-\t\t\t<compilerarg value=\"-XDignore.symbol.file\"/>\t\t\t\n-\t\t</javac>\n-\t</target>\n-\t\n-\t<!-- Copies in the OSXAdapter class, which is compilable only on Mac\n-\t\t Development on other platforms should also be possible by using the \n-       \t distributed stub of com.apple.eawt as described in \n-         http://stackoverflow.com/questions/2151174/how-can-i-develop-apple-java-extensions-on-windows -->\n-\t<target name=\"non_osx\">\n-\t\t<mkdir dir=\"${build.classes.osx}\" />\n-\t\t<copy file=\"${osxbin.dir}/MacAdapter.class\" todir=\"${build.classes.osx}\" />\n-\t</target>\n-\n-\t<target name=\"jars\" depends=\"build, unjarlib\" description=\"Jars up project\">\n-\t\t<mkdir dir=\"${build.lib}\" />\n-\n-\t\t<mkdir dir=\"${build.tmp}\" />\n-\t\t<jar destfile=\"${build.lib}/${build.jar}\" >\n-\n-\t\t\t<fileset dir=\"${build.classes}\" />\n-\t\t\t<fileset dir=\"${build.tmp}\" />\n-\t\t\t<fileset dir=\"${build.dir}\">\n-\t\t\t\t<include name=\"images/**\" />\n-\t\t\t\t<include name=\"help/**\" />\n-\t\t\t\t<include name=\"resource/**\" />\n-\t\t\t</fileset>\n-\n-\t\t\t<!-- Add Plugins -->\n-\t\t\t<fileset dir=\"${resources.dir}\">\n-\t\t\t\t<include name=\"plugins/**\" />\n-\t\t\t</fileset>\n-\t\t\t<fileset dir=\"${txt.dir}\">\n-\t\t\t\t<include name=\"gpl2.txt\" />\n-\t\t\t\t<include name=\"gpl3.txt\" />\n-\t\t\t\t<include name=\"lesser.txt\" />\n-\t\t\t\t<include name=\"jgoodies.txt\" />\n-\t\t\t\t<include name=\"README\" />\n-\t\t\t</fileset>\n-\t\t\t<manifest>\n-\t\t\t\t<attribute name=\"Main-Class\" value=\"net.sf.jabref.JabRefMain\" />\n-                <attribute name=\"Class-Path\" value=\".\" />\n-\t\t\t</manifest>\n-\t\t</jar>\n-\n-\t</target>\n-\n-\t<!-- updates version information with git information.\n-\t     should be used in development builds only\n-\n-\t     Use \"ant addgitinfo jars\" to generate a jar with version information in the filename\n-\t-->\n-\t<target name=\"addgitinfo\" description=\"Adds git version information in ${jabref.version} and ${build.jar}\">\n-\t\t<exec executable=\"git\" searchpath=\"true\" outputproperty=\"git.version\" failifexecutionfails=\"true\" errorproperty=\"\">\n-\t\t\t<arg value=\"log\" />\n-\t\t\t<arg value=\"-1\" />\n-\t\t\t<arg value=\"--pretty=format:%cd - %H\" />\n-\t\t\t<arg value=\"--date=iso\" />\n-\t\t</exec>\n-\t\t<script language=\"javascript\"><![CDATA[\n-\t\t\tvar gitVersion = project.getProperty(\"git.version\");\n-\t\t\tif ((gitVersion != undefined) && (gitVersion.length() > 0)) {\n-\t\t\t\t// convert \"2012-12-16 15:44:07 +0100 - a249a226\" to \"2012-12-16 15.44.07 - a249a226\"\n-\t\t\t\tgitVersion = gitVersion.substr(0,13) + \".\" + gitVersion.substr(14,2) + \".\" + gitVersion.substr(17, 2) + gitVersion.substr(25);\n-\n-\t\t\t\t// we have to update the properties using JavaScript as properties are normally immutable\n-\t\t\t\t// Properties can be updated using JavaScript and not with the <property>-Task\n-\t\t\t\tvar jabrefVersion = project.getProperty(\"jabref.version\");\n-\t\t\t\tjabrefVersion = jabrefVersion + \" - \" + gitVersion;\n-\t\t\t\tproject.setProperty(\"jabref.version\", jabrefVersion);\n-\t\t\t\tproject.setProperty(\"build.jar\", \"JabRef-\" + jabrefVersion + \".jar\");\n-\t\t\t}\n-\t\t]]></script>\n-\t</target>\n-\n-\t<!-- copy all necessary files and insert version informations -->\n-\t<target name=\"build\" depends=\"compile, buildinfos\" description=\"Build project\">\n-\n-\t\t<mkdir dir=\"${build.resource}\" />\n-\n-\t\t<copy todir=\"${build.resource}\">\n-\t\t\t<fileset dir=\"${resource.dir}\">\n-\t\t\t\t<include name=\"**\" />\n-\t\t\t</fileset>\n-\t\t</copy>\n-\t\t<mkdir dir=\"${build.images}\" />\n-\t\t<copy todir=\"${build.images}\">\n-\t\t\t<fileset dir=\"${images.dir}\">\n-\t\t\t\t<include name=\"**\" />\n-\t\t\t</fileset>\n-\t\t</copy>\n-\n-\t\t<mkdir dir=\"${build.help}\" />\n-\t\t<copy todir=\"${build.help}\">\n-\t\t\t<fileset dir=\"${help.dir}\" />\n-\t\t</copy>\n-\n-\t\t<!-- Insert version informations -->\n-\t\t<replace dir=\"${build.help}\">\n-\t\t    <replacefilter\n-\t\t\t    token=\"${jabref.placeholder.version}\"\n-\t\t\t\tvalue=\"${jabref.version}\" />\n-\t\t    <replacefilter\n-\t\t\t    token=\"${jabref.placeholder.year}\"\n-\t\t\t\tvalue=\"${jabref.year}\" />\n-\t\t\t<include name=\"**/About.html\" />\n-\t\t</replace>\n-\t\t<replace dir=\"${build.openoffice.meta}\" token=\"${jabref.placeholder.version}\" value=\"${jabref.version}\">\n-\t\t\t<include name=\"meta.xml\" />\n-\t\t</replace>\n-\n-\t</target>\n-\n-\t<!-- generate and save some build infos !!! necessary for dynamic build infos !!! -->\n-\t<!-- todo : replace it by the replace task :-),\n-          src/resource/build.properties = template\n-          build/resource/build.properties = real info file\n-\t-->\n-\t<target name=\"buildinfos\">\n-\t\t<tstamp />\n-\t\t<!-- get date -->\n-\t\t<buildnumber />\n-\t\t<!-- generate new build number -> build.number -->\n-\t\t<echo message=\"build number = ${build.number}\" />\n-\t\t<!-- write the file, please do not edit this lines -->\n-\t\t<echo file=\"${resource.dir}/build.properties\">builddate=${TODAY}\n-build=${build.number}\n-version=${jabref.version}</echo>\n-\t</target>\n-\n-\t<target name=\"extension-javadocs\" depends=\"build\" description=\"Generates the javadocs for the extensions archive\">\n-\t\t<mkdir dir=\"${build.extension-javadocs}\" />\n-\t\t<copy todir=\"${build.extension-javadocs}\">\n-\t\t\t<fileset dir=\"${help.dir}\" defaultexcludes=\"yes\">\n-\t\t\t\t<include name=\"CustomExports.html\" />\n-\t\t\t\t<include name=\"CustomImports.html\" />\n-\t\t\t</fileset>\n-\t\t</copy>\n-\n-\t\t<javadoc sourcepath=\"${java.dir}\" destdir=\"${build.extension-javadocs}\" author=\"true\" version=\"true\" windowtitle=\"JabRef-Extensions API\" link=\"http://docs.oracle.com/javase/6/docs/api/\" Overview=\"${extensions.dir}/API/overview.html\" access=\"protected\">\n-\t\t\t<!--\n-                 create javadoc only selectively for classes that\n-                 users extending JabRef are likely to use\n-              -->\n-\t\t\t<fileset dir=\"${java.dir}\" defaultexcludes=\"yes\">\n-\t\t\t\t<include name=\"net/sf/jabref/imports/ImportFormat.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/imports/ImportFormatReader.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/BibtexEntry.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/BibtexEntryType.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/AuthorList.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/AuthorList.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/export/layout/LayoutFormatter.java\" />\n-\t\t\t</fileset>\n-\n-\t\t\t<classpath refid=\"classpath\" />\n-\t\t</javadoc>\n-\t</target>\n-\n-\t<target name=\"extensions\" depends=\"extension-javadocs\" description=\"Generates the extensions archive\">\n-\t\t<copy todir=\"${build.extensions}\" description=\"copy examples\">\n-\t\t\t<fileset dir=\"${java.dir}\">\n-\t\t\t\t<include name=\"net/sf/jabref/export/layout/format/CurrentDate.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/export/layout/format/ToLowerCase.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/export/layout/format/HTMLChars.java\" />\n-\t\t\t\t<include name=\"net/sf/jabref/imports/*Importer.java\" />\n-\t\t\t</fileset>\n-\t\t</copy>\n-\t\t<mkdir dir=\"${build.extension-layout}\" />\n-\t\t<copy todir=\"${build.extension-layout}\">\n-\t\t\t<fileset dir=\"${layout.dir}\" />\n-\t\t</copy>\n-\t\t<copy todir=\"${build.extensions}\">\n-\t\t\t<fileset dir=\"${extensions.dir}\" />\n-\t\t\t<filterset>\n-\t\t\t\t<filter token=\"version\" value=\"${jabref.version}\" />\n-\t\t\t</filterset>\n-\t\t</copy>\n-\t\t<zip destfile=\"${build.dir}/jabref-extensions.zip\" description=\"create extensions-zip file\">\n-\t\t\t<zipfileset dir=\"${build.extensions}\" prefix=\"jabref-extensions\" />\n-\t\t</zip>\n-\t</target>\n-\n-\t<target name=\"clean\" depends=\"win.installer.clean\" description=\"Clean project\">\n-\t\t<delete dir=\"${build.dir}\" />\n-\t</target>\n-\n-\t<target name=\"unjarlib\" description=\"Unpacks jars from lib directory into temp directory\">\n-\t\t<mkdir dir=\"${build.tmp}\" />\n-\t\t<unjar dest=\"${build.tmp}\">\n-\t\t\t<filelist refid=\"jars\" />\n-\t\t</unjar>\n-\t\t<!-- done by MrDlib -->\n-\t\t<delete includeEmptyDirs=\"true\">\n-\t\t\t<fileset refid=\"deletableMeta-InfFiles\" />\n-\t\t</delete>\n-\t\t<!-- done by MrDlib -->\n-\t\t<!-- rename the microba license file -->\n-\t\t<move file=\"${build.tmp}/license.txt\" tofile=\"${build.tmp}/microba-license.txt\" />\n-\t</target>\n-\n-\t<target name=\"java16test\">\n-\t\t<condition property=\"java16\">\n-\t\t\t<equals arg1=\"${ant.java.version}\" arg2=\"1.6\"/>\n-\t\t</condition>\n-\t</target>\n-\n-\t<target name=\"macbundle\" depends=\"java16test, jars\" unless=\"java16\" description=\"creates a bundle made for the Oracle Apple JVM (1.7+)\">\n-\t\t<taskdef\n-\t\t\tname=\"bundleapp\"\n-\t\t\tclassname=\"com.oracle.appbundler.AppBundlerTask\"\n-\t\t\tclasspath=\"${buildlib.dir}/appbundler-1.0.jar\" />\n-\t\t<bundleapp\n-\t\t\tname=\"JabRef\"\n-\t\t\tmainclassname=\"net.sf.jabref.JabRef\"\n-\t\t\toutputdirectory=\"${build.lib}\"\n-\t\t\tdisplayname=\"JabRef\"\n-\t\t\tidentifier=\"jabref.JabRef\"\n-\t\t\ticon=\"${images.dir}/JabRef-Logo.icns\"\n-\t\t\tshortversion=\"${jabref.version}\">\n-\t\t\t<classpath file=\"${build.lib}/JabRef-${jabref.version}.jar\" />\t\n-\t\t\t<!-- Memory options apparently break the bundle \n-\t\t\t<option value=\"-Xms128m -Xmx512m\" /> -->\n-\t\t</bundleapp>\n-\t\t<!-- We still need to hack the Info.plist to enable high resolution for Retina displays -->\n-\t\t<replace file=\"${build.lib}/JabRef.app/Contents/Info.plist\" \n-\t\t\ttoken=\"&lt;key&gt;JVMOptions&lt;/key&gt;\"\n-\t\t\tvalue=\"&lt;key&gt;NSHighResolutionCapable&lt;/key&gt;&#10;\n-\t&lt;true/&gt;&#10;&lt;key&gt;JVMOptions&lt;/key&gt;\"/>\n-\t\t<!-- We also need to add native support for bib files in the Info.plist -->\n-\t\t<replace file=\"${build.lib}/JabRef.app/Contents/Info.plist\" \n-\t\ttoken=\"&lt;key&gt;JVMOptions&lt;/key&gt;\"\n-\t\tvalue=\"&lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;&#10;\n-\t&lt;array&gt;&#10;\n-\t\t&lt;dict&gt;&#10;\n-\t\t\t&lt;key&gt;CFBundleTypeName&lt;/key&gt;&#10;\n-\t\t\t&lt;string&gt;BibTeX file&lt;/string&gt;&#10;\n-\t\t\t&lt;key&gt;CFBundleTypeRole&lt;/key&gt;&#10;\n-\t\t\t&lt;string&gt;Editor&lt;/string&gt;&#10;\n-\t\t\t&lt;key&gt;CFBundleTypeIconFile&lt;/key&gt;&#10;\n-\t\t\t&lt;string&gt;JabRef-Logo.icns&lt;/string&gt;&#10;\n-\t\t\t&lt;key&gt;CFBundleTypeExtensions&lt;/key&gt;&#10;\n-\t\t\t&lt;array&gt;&#10;\n-\t\t\t\t&lt;string&gt;bib&lt;/string&gt;&#10;\n-\t\t\t&lt;/array&gt;&#10;\n-\t\t&lt;/dict&gt;&#10;\n-\t&lt;/array&gt;&#10;\n-\t&lt;key&gt;JVMOptions&lt;/key&gt;\"/>\n-\t\t<zip basedir=\"${build.lib}\"\n-\t\t\tdestfile=\"${build.lib}/JabRef-${jabref.version}-OSX.zip\"\n-\t\t\texcludes=\"JabRef.app/Contents/MacOS/JavaAppLauncher\"\n-\t\t\tincludes=\"JabRef.app/\"\n-\t\t\tlevel=\"9\">\n-\t\t\t<zipfileset dir=\"${build.lib}\" includes=\"JabRef.app/Contents/MacOS/JavaAppLauncher\" filemode=\"755\" />\n-\t\t</zip>\n-\t</target>\n-\t\n-\t<target name=\"macbundle_java16\" depends=\"jars\" description=\"creates a bundle made for the Legacy Apple JVM (1.6)\">\n-\t\t<jarbundler dir=\"${build.lib}\"\n-                    name=\"JabRef_Java6\"\n-                    mainclass=\"net.sf.jabref.JabRef\"\n-                    jar=\"${build.lib}/${build.jar}\"\n-                    icon=\"${images.dir}/JabRef-Logo.icns\"\n-                    version=\"${jabref.version}\"\n-                    jvmversion=\"1.6+\"\n-\t\t    vmoptions=\"-Xms128m -Xmx512m\"\n-                    stubfile=\"${osxbin.dir}/JavaApplicationStub\"\n-                    signature=\"JABr\">\n-            <documenttype name=\"BibTeX file\" extensions=\"bib\" role=\"Editor\"\n-                          iconFile=\"${images.dir}/JabRef-Logo.icns\"/>\n-        </jarbundler>\n-        <!-- After running jarbundler we need to hack the Info.plist file: -->\n-        <replace file=\"${build.lib}/JabRef_Java6.app/Contents/Info.plist\" token=\"&lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;\"\n-            value=\"&lt;key&gt;NSPrincipalClass&lt;/key&gt;${line.separator}\n-   &lt;string&gt;NSApplication&lt;/string&gt;${line.separator}\n-   &lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;\"/>\n-\t\t<zip basedir=\"${build.lib}\"\n-\t\t\tdestfile=\"${build.lib}/JabRef-${jabref.version}-OSX-Java6.zip\"\n-\t\t\texcludes=\"JabRef_Java6.app/Contents/MacOS/JavaApplicationStub\"\n-\t\t\tincludes=\"JabRef_Java6.app/\"\n-\t\t\tlevel=\"9\">\n-\t\t\t<zipfileset dir=\"${build.lib}\" includes=\"JabRef_Java6.app/Contents/MacOS/JavaApplicationStub\" filemode=\"755\" />\n-\t\t</zip>\n-\t</target>\n-\n-\n-\t<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->\n-\t<!-- Build Windows Installer                                                    -->\n-\t<!--                                                                            -->\n-\t<!-- Don't forget to set nsis.executable and launch4j.dir properties            -->\n-\t<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->\n-\n-\t<target name=\"win.installer.clean\" description=\"Delete Installer and Exe-Wrapper + Temp-files\">\n-\t\t<delete failonerror=\"false\" dir=\"${win.installer.dir}/dist\" />\n-\t\t<delete file=\"${win.installer.dir}/JabRefSetup.exe\" />\n-\t</target>\n-\n-\t<target name=\"win.installer.win.pre\" description=\"Precondition for win.installer on Windows\">\n-\t\t<fail unless=\"is.windows\" message=\"Not running on windows or NSIS not found. Please make sure that user.properties exists\" />\n-\t</target>\n-\n-\t<target name=\"win.installer.step1\" description=\"Gather everything that will go into the installer in dist\">\n-\t\t<mkdir dir=\"${win.installer.dir}/dist\" />\n-\n-\t\t<copy file=\"${build.lib}/${build.jar}\" todir=\"${win.installer.dir}/dist\" />\n-\n-\t\t<available property=\"win.installer.jar.available\" file=\"${win.installer.dir}/dist/${build.jar}\" />\n-\n-\t\t<fail unless=\"win.installer.jar.available\" message=\"Did not find jar: ${build.jar}\" />\n-\n-\t\t<copy todir=\"${win.installer.dir}/dist\">\n-\t\t\t<fileset dir=\"${txt.dir}\">\n-\t\t\t\t<include name=\"gpl2.txt\" />\n-\t\t\t\t<include name=\"gpl3.txt\" />\n-\t\t\t\t<include name=\"lesser.txt\" />\n-\t\t\t\t<include name=\"README\" />\n-\t\t\t</fileset>\n-\t\t</copy>\n-\n-\t\t<!-- \"Create Exe-Wrapper\" -->\n-\n-\t\t<!-- first of all, update version information -->\n-\t\t<script language=\"javascript\"><![CDATA[\n-\t\t\t// create new property with a maximum length of 50 characters\n-\t\t\tvar txtFileVersion = project.getProperty(\"jabref.version\");\n-\t\t\tif (txtFileVersion.length()>50) {\n-\t\t\t\ttxtFileVersion = txtFileVersion.substring(0,50);\n-\t\t\t}\n-\t\t\tproject.setProperty(\"txtFileVersion\", txtFileVersion);\n-\t\t]]></script>\n-\t\t<delete file=\"jabref-launch4j.tmp\" />\n-\t\t<copy file=\"jabref-launch4j.xml\" tofile=\"jabref-launch4j.tmp\" />\n-\t\t<replace file=\"jabref-launch4j.tmp\">\n-\t\t\t<replacefilter token=\"1.1.1\" value=\"${jabref.version}\" />\n-\t\t\t<replacefilter token=\"3.3.3\" value=\"${txtFileVersion}\" />\n-\t\t\t<replacefilter token=\"2.2.2.2\" value=\"${jabref.version.full}\" />\n-\t\t\t<replacefilter token=\"./\" value=\"${basedir}/\" />\n-\t\t</replace>\n-\n-\t</target>\n-\n-\t<target name=\"win.installer.step2.linux\" description=\"Create Windows launcher and Windows installer on Linux\">\n-\t\t<!-- launch4j ant task does not work as ld.exe gets the wrong path passed - see https://sourceforge.net/tracker/?func=detail&aid=3598164&group_id=95944&atid=613100 -->\n-\t\t<exec\n-\t\t\texecutable=\"${launch4j.dir}/launch4j\"\n-\t\t\tdir=\"${launch4j.dir}\">\n-\t\t\t<arg value=\"${basedir}/jabref-launch4j.tmp\"/>\n-\t\t</exec>\n-\n-\t\t<!-- Finally create Windows-Installer -->\n-\t\t<exec dir=\".\" executable=\"${nsis.executable.linux}\" failonerror=\"true\">\n-\t\t\t<arg line=\"'-DVERSION=${jabref.version}' ${win.installer.dir}/setup.nsi\" />\n-\t\t</exec>\n-\t</target>\n-\n-\t<target name=\"win.installer.step2.win\" description=\"Create Windows launcher and Windows installer on Windows\">\n-\t\t<!-- launch4j ant task does not work as ld.exe gets the wrong path passed - see https://sourceforge.net/tracker/?func=detail&aid=3598164&group_id=95944&atid=613100 -->\n-\t\t<exec\n-\t\t\texecutable=\"${launch4j.dir}/launch4jc.exe\"\n-\t\t\tdir=\"${launch4j.dir}\">\n-\t\t\t<arg value=\"${basedir}/jabref-launch4j.tmp\"/>\n-\t\t</exec>\n-\n-\t\t<exec dir=\".\" executable=\"${nsis.executable}\" failonerror=\"true\">\n-\t\t\t<arg line=\"'/DVERSION=${jabref.version}' ${win.installer.dir}/setup.nsi\" />\n-\t\t</exec>\n-\t</target>\n-\n-\t<target name=\"win.installer.step3\">\n-\t\t<move file=\"${win.installer.dir}/JabRefSetup.exe\" tofile=\"${build.lib}/JabRef-${jabref.version}-setup.exe\" />\n-\t\t<delete dir=\"${win.installer.dir}/dist\" />\n-\t</target>\n-\n-\t<target name=\"win.installer\" description=\"Copy files in place to be used by the installer\" depends=\"win.installer.win.pre, jars, win.installer.step1, win.installer.step2.win, win.installer.step3\">\n-\t</target>\n-\n-\t<target name=\"win.installer.linux\" description=\"Copy files in place to be used by the installer\" depends=\"jars, win.installer.step1, win.installer.step2.linux, win.installer.step3\">\n-\t\t<delete dir=\"${win.installer.dir}/dist\" />\n-\n-\t</target>\n-\n-\t<!--+++++++++++++++++++++++++++++++++++++++++++++++++\n-\t   Auxiliary targets\n-\t  +++++++++++++++++++++++++++++++++++++++++++++++++-->\n-\n-\t<taskdef name=\"jarbundler\" classpath=\"${buildlib.dir}/jarbundler-2.2.0.jar\" classname=\"net.sourceforge.jarbundler.JarBundler\" />\n-\n-\t<macrodef name=\"compresssrc\">\n-        <attribute name=\"git-core-autocrlf\" />\n-        <attribute name=\"temp-dir\" />\n-        <attribute name=\"base-dir\" />\n-\n-        <sequential>\n-            <!-- clone current repo into tmp dir. Reason: we want to have a clean src.zip, but do not want to execute \"git clean -xdf\" to allow developers having some temporary files (and user.properties) -->\n-            <mkdir dir=\"@{temp-dir}\"/>\n-            <echo message=\"@{temp-dir}\" />\n-            <exec executable=\"git\" searchpath=\"true\" failifexecutionfails=\"true\" outputproperty=\"devnull\" errorproperty=\"devnull\">\n-                <arg value=\"clone\" />\n-                <arg value=\"@{base-dir}\" />\n-                <arg value=\"@{temp-dir}\" />\n-            </exec>\n-\n-            <!-- ensure correct line endings -->\n-            <exec executable=\"git\" searchpath=\"true\" failifexecutionfails=\"true\" outputproperty=\"devnull\" errorproperty=\"devnull\" dir=\"@{temp-dir}\">\n-                <arg value=\"config\" />\n-                <arg value=\"core.autocrlf\" />\n-                <arg value=\"@{git-core-autocrlf}\" />\n-            </exec>\n-            <exec executable=\"git\" searchpath=\"true\" failifexecutionfails=\"true\" outputproperty=\"devnull\" errorproperty=\"devnull\" dir=\"@{temp-dir}\">\n-                <arg value=\"rm\" />\n-                <arg value=\"--cached\" />\n-                <arg value=\"-r\" />\n-                <arg value=\".\" />\n-            </exec>\n-            <exec executable=\"git\" searchpath=\"true\" failifexecutionfails=\"true\" outputproperty=\"devnull\" errorproperty=\"devnull\" dir=\"@{temp-dir}\">\n-                <arg value=\"reset\" />\n-                <arg value=\"--hard\" />\n-            </exec>\n-        </sequential>\n-\t</macrodef>\n-\n-\t<target name=\"zipsrc\">\n-\t\t<tempfile property=\"temp.dir\" destDir=\"${java.io.tmpdir}\" prefix=\"jabrefsrc\" />\n-\t\t<compresssrc git-core-autocrlf=\"true\" temp-dir=\"${temp.dir}/jabref-${jabref.version}\" base-dir=\"${basedir}\" />\n-\t\t<zip destfile=\"${build.lib}/JabRef-${jabref.version}-src.zip\" basedir=\"${temp.dir}\" level=\"9\" />\n-\t\t<delete dir=\"${temp.dir}\" failonerror=\"no\"/>\n-\t</target>\n-\n-\t<target name=\"bzip2src\">\n-\t\t<tempfile property=\"temp.dir\" destDir=\"${java.io.tmpdir}\" prefix=\"jabrefsrc\" />\n-        <compresssrc git-core-autocrlf=\"false\" temp-dir=\"${temp.dir}/jabref-${jabref.version}\" base-dir=\"${basedir}\" />\n-\t\t<tar destfile=\"${build.lib}/JabRef-${jabref.version}-src.tar.bz2\" basedir=\"${temp.dir}\" excludes=\".git/\" compression=\"bzip2\" />\n-\t\t<delete dir=\"${temp.dir}\" failonerror=\"no\"/>\n-\t</target>\n-\n-\t<target name=\"devsnapshot\" depends=\"clean, addgitinfo, non_osx, win.installer, macbundle_java16, macbundle\" description=\"creates development snapshot binaries\" />\n-\n-\t<target name=\"release\" depends=\"clean, non_osx, win.installer, macbundle_java16, macbundle, bzip2src, zipsrc\" description=\"Do a release on Windows. Creates all distribution files in ${build.lib}\"/>\n-\t<target name=\"release.linux\" depends=\"clean, non_osx, win.installer.linux, macbundle_java16, macbundle, bzip2src, zipsrc\" description=\"Do a release on Linux. Creates all distribution files in ${build.lib}\" />\n-</project>, None, None, @@ -1,11 +0,0 @@\n-Path:    appbundler-1.0.jar\n-Project: Mac OS X AppBundler ANT Task\n-URL:     https://java.net/projects/appbundler\n-License: GPLv2\n-Note:    Required to build Mac OS X App\n-\n-Path:    jarbundler-2.2.0.jar\n-Project: Mac OS X JarBundler ANT Task\n-URL:     http://informagen.com/JarBundler/index.html\n-License: GPLv2\n-Note:    Required to build Mac OS X App\n\\ No newline at end of file, @@ -0,0 +1,29 @@\n+\n+JabRef Installer Documentation\n+------------------------------\n+\n+What is here?\n+\n+  * fileassoc.nsh - Helper script to set file-associations. Source: http://nsis.sourceforge.net/FileAssoc\n+  * setup.nsi - Will create the installer.\n+\n+Requirements + Current Status\n+\n+\tInstaller:\n+\t  * Display GPL [done]\n+\t  * Add file association for .bib (if desired) [done]\n+\t  * Install into custom start-menu location (if desired) [done]\n+\t  * Can only run as administrator [done, Uwe]\n+\t  * Install onto desktop (if desired)\n+\t  * Install onto quicklaunch (if desired)\n+\t\n+\tUninstaller:\n+\t  * Uninstaller\n+\t    * Allow to keep configuration\n+\t    \n+\tAll:\n+\t  * Localization\n+\t  \n+Credits\n+\n+\tUwe St\ufffdhr rewrote the installer and fixed a lot of issues with the old one., None, None, None, None, None, @@ -0,0 +1,33 @@\n+!ifndef _JabRef_LANGUAGES_RUSSIAN_NSH_\n+!define _JabRef_LANGUAGES_RUSSIAN_NSH_\n+\n+!ifdef JabRef_LANG\n+  !undef JabRef_LANG\n+!endif\n+!define JabRef_LANG ${LANG_RUSSIAN}\n+\n+LicenseLangString JabRefLicenseData ${JabRef_LANG} \"${PRODUCT_LICENSE_FILE}\"\n+\n+LangString WelcomePageText \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef!\\r\\n\\\n+\t\t\t\t\t     \\r\\n\\\n+\t\t\t\t\t     $_CLICK\"\n+\n+LangString SecAssociateBibTitle \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd BibTeX\"\n+LangString SecDesktopTitle \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\"\n+\n+LangString SecAssociateBibDescription \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd .bib \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.\"\n+LangString SecDesktopDescription \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd.\"\n+\n+LangString StillInstalled \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef ${Version}!\"\n+\n+LangString FinishPageMessage \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd! \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.\"\n+LangString FinishPageRun \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef\"\n+\n+LangString UnNotAdminLabel \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!\"\n+LangString UnReallyRemoveLabel \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd. \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\"\n+LangString UnRemoveSuccessLabel \"${JabRef_LANG}\" \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd JabRef \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.\"\n+\n+\n+!undef JabRef_LANG\n+\n+!endif ; _JabRef_LANGUAGES_RUSSIAN_NSH_, None, @@ -0,0 +1,286 @@\n+# owner\t\tJabRef Team\n+# license\tGPL version 2\n+# author\tUwe St\u00f6hr and others\n+\n+; To compile this script NSIS 2.23 and newer are required\n+; http://nsis.sourceforge.net/\n+\n+\n+; Do a Cyclic Redundancy Check to make sure the installer\n+; was not corrupted by the download.\n+CRCCheck force\n+\n+; Make the installer as small as possible.\n+SetCompressor lzma\n+\n+\n+# general definitions\n+; you only need to change this section for new releases\n+VIProductVersion \"2.2.0.0\" ; file version for the installer in the scheme \"x.x.x.x\"\n+#!define VERSION \"2.2\" #Already set by command line parameter\n+Name \"JabRef ${VERSION}\"\n+!define REGKEY \"SOFTWARE\\JabRef\"\n+!define COMPANY \"JabRef Team\"\n+!define URL \"http://jabref.sourceforge.net\"\n+!define PRODUCT_EXE \"JabRef.exe\"\n+!define PRODUCT_NAME \"JabRef\"\n+!define PRODUCT_UNINST_KEY \"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n+!define PRODUCT_LICENSE_FILE \"../../LICENSE\"\n+!define AppUserModelId \"JabRef.${VERSION}\"\n+\n+# Variables\n+Var StartmenuFolder\n+Var CreateDesktopIcon\n+Var Answer\n+Var UserName\n+Var InstDestination\n+\n+\n+# Included files\n+#from nullsoft distribution\n+!include \"MUI.nsh\"\n+#taken from http://nsis.sourceforge.net/FileAssoc\n+!include \"fileassoc.nsh\"\n+#from nullsoft distribution\n+!include \"LogicLib.nsh\"\n+\n+\n+# macros\n+!macro IsUserAdmin Result UName\n+\n+ ClearErrors\n+ UserInfo::GetName\n+ IfErrors Win9x\n+ Pop $0\n+ StrCpy ${UName} $0\n+ UserInfo::GetAccountType\n+ Pop $1\n+ ${if} $1 == \"Admin\"\n+  StrCpy ${Result} \"yes\"\n+ ${else}\n+  StrCpy ${Result} \"no\"\n+ ${endif}\n+ Goto done\n+\n+ Win9x:\n+  StrCpy ${Result} \"yes\"\n+ done:\n+\n+!macroend\n+\n+\n+# Installer pages\n+; Remember the installer language\n+!define MUI_LANGDLL_REGISTRY_ROOT \"HKCU\"\n+!define MUI_LANGDLL_REGISTRY_KEY \"${PRODUCT_UNINST_KEY}\"\n+!define MUI_LANGDLL_REGISTRY_VALUENAME \"Installer Language\"\n+\n+; let warning appear when installation is canceled\n+!define MUI_ABORTWARNING\n+\n+; Icons for the installer program\n+!define MUI_ICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-install-full.ico\"\n+!define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall-full.ico\"\n+\n+; Welcome page\n+!define MUI_WELCOMEPAGE_TEXT \"$(WelcomePageText)\"\n+!insertmacro MUI_PAGE_WELCOME\n+\n+; Show the license.\n+!insertmacro MUI_PAGE_LICENSE \"${PRODUCT_LICENSE_FILE}\"\n+\n+; Specify the installation directory.\n+!insertmacro MUI_PAGE_DIRECTORY\n+\n+; choose the components to install.\n+!insertmacro MUI_PAGE_COMPONENTS\n+\n+; Specify where to install program shortcuts.\n+!define MUI_STARTMENUPAGE_REGISTRY_ROOT \"HKLM\"\n+!define MUI_STARTMENUPAGE_REGISTRY_KEY \"${PRODUCT_UNINST_KEY}\"\n+!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME \"Start Menu Folder\"\n+!define MUI_STARTMENUPAGE_DEFAULTFOLDER \"${PRODUCT_NAME}\"\n+!insertmacro MUI_PAGE_STARTMENU ${PRODUCT_NAME} $StartmenuFolder\n+\n+; Watch the components being installed.\n+!insertmacro MUI_PAGE_INSTFILES\n+\n+; Finish page\n+!define MUI_FINISHPAGE_RUN \"$INSTDIR\\${PRODUCT_EXE}\"\n+!define MUI_FINISHPAGE_TEXT \"$(FinishPageMessage)\"\n+!define MUI_FINISHPAGE_RUN_TEXT \"$(FinishPageRun)\"\n+!insertmacro MUI_PAGE_FINISH\n+\n+; The uninstaller\n+!insertmacro MUI_UNPAGE_CONFIRM\n+!insertmacro MUI_UNPAGE_INSTFILES\n+\n+\n+# Installer languages\n+!insertmacro MUI_LANGUAGE \"English\" # first language is the default language\n+!insertmacro MUI_LANGUAGE \"French\"\n+!insertmacro MUI_LANGUAGE \"German\"\n+!insertmacro MUI_LANGUAGE \"Italian\"\n+!insertmacro MUI_LANGUAGE \"Russian\"\n+!insertmacro MUI_LANGUAGE \"Spanish\"\n+\n+!include \"installer_languages\\english.nsh\"\n+!include \"installer_languages\\french.nsh\"\n+!include \"installer_languages\\german.nsh\"\n+!include \"installer_languages\\italian.nsh\"\n+!include \"installer_languages\\russian.nsh\"\n+!include \"installer_languages\\spanish.nsh\"\n+\n+\n+# Installer attributes\n+OutFile ..\\..\\build\\nsis\\JabRefSetup-${VERSION}.exe\n+InstallDir \"$PROGRAMFILES\\JabRef\"\n+BrandingText \"$(^Name) installer\" ; appear at the bottom of the installer windows\n+XPStyle on ; use XP style for installer windows\n+LicenseData \"$(JabRefLicenseData)\"\n+\n+; creates file informations for the JabRefSetup.exe\n+VIAddVersionKey ProductName \"JabRef\"\n+VIAddVersionKey ProductVersion \"${VERSION}\"\n+VIAddVersionKey CompanyName \"${COMPANY}\"\n+VIAddVersionKey CompanyWebsite \"${URL}\"\n+VIAddVersionKey FileDescription \"JabRef installation program\"\n+VIAddVersionKey LegalCopyright \"under the GPL version 2\"\n+VIAddVersionKey FileVersion \"\"\n+\n+\n+# Installer sections\n+Section \"!JabRef\" SecCore\n+ SectionIn RO\n+SectionEnd\n+\n+Section \"$(SecAssociateBibTitle)\" SecAssociateBib\n+ !insertmacro APP_ASSOCIATE \"bib\" \"JabRef.BibTeX\" \"$(FileTypeTitle)\" \"$INSTDIR\\${PRODUCT_EXE},0\" \"$(OpenIn)\" \"$INSTDIR\\${PRODUCT_EXE} $\\\"%1$\\\"\"\n+SectionEnd\n+\n+Section \"$(SecDesktopTitle)\" SecDesktop\n+ StrCpy $CreateDesktopIcon \"true\"\n+SectionEnd\n+\n+; section descriptions\n+!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN\n+!insertmacro MUI_DESCRIPTION_TEXT ${SecAssociateBib} \"$(SecAssociateBibDescription)\"\n+!insertmacro MUI_DESCRIPTION_TEXT ${SecDesktop} \"$(SecDesktopDescription)\"\n+!insertmacro MUI_FUNCTION_DESCRIPTION_END\n+\n+Section \"-Installation actions\" SecInstallation\n+\n+  ; copy files\n+  SetOutPath \"$INSTDIR\"\n+  SetOverwrite on\n+  File /r ..\\..\\build\\nsis\\*.*\n+  WriteRegStr SHCTX \"${REGKEY}\\Components\" Main 1\n+  ; register JabRef\n+  WriteRegStr SHCTX \"${REGKEY}\" Path $INSTDIR\n+  WriteUninstaller $INSTDIR\\uninstall.exe\n+  ; register application user model id so that JabRef works with Win7 taskbar\n+  CreateShortCut \"$INSTDIR\\$(^Name).lnk\" \"$INSTDIR\\${PRODUCT_EXE}\" \"\" \"$INSTDIR\\JabRef.exe\" 0 SW_SHOWNORMAL\n+  WinShell::SetLnkAUMI \"$INSTDIR\\$(^Name).lnk\" \"${AppUserModelId}\"\n+  ; create shortcuts to startmenu\n+  SetOutPath \"$INSTDIR\"\n+  CreateDirectory \"$SMPROGRAMS\\$StartmenuFolder\"\n+  CreateShortCut \"$SMPROGRAMS\\$StartmenuFolder\\$(^Name).lnk\" \"$INSTDIR\\${PRODUCT_EXE}\" \"\" \"$INSTDIR\\JabRef.exe\"\n+  CreateShortCut \"$SMPROGRAMS\\$StartmenuFolder\\Uninstall $(^Name).lnk\" \"$INSTDIR\\uninstall.exe\"\n+  ; create desktop icon\n+  ${if} $CreateDesktopIcon == \"true\"\n+   SetOutPath \"$INSTDIR\"\n+   CreateShortCut \"$DESKTOP\\$(^Name).lnk\" \"$INSTDIR\\${PRODUCT_EXE}\" \"\" \"$INSTDIR\\${PRODUCT_EXE}\" ;$(^Name).lnk\n+  ${endif}\n+  WriteRegStr SHCTX \"${PRODUCT_UNINST_KEY}\" \"StartMenu\" \"$SMPROGRAMS\\$StartmenuFolder\"\n+  ${if} $Answer == \"yes\" ; if user is admin\n+   ; register information that appear in Windows' software listing\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"DisplayName\" \"$(^Name)\"\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"DisplayVersion\" \"${VERSION}\"\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"Publisher\" \"${COMPANY}\"\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"URLInfoAbout\" \"${URL}\"\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"DisplayIcon\" \"$INSTDIR\\${PRODUCT_EXE}\"\n+   WriteRegStr HKLM \"${PRODUCT_UNINST_KEY}\" \"UninstallString\" \"$INSTDIR\\uninstall.exe\"\n+   WriteRegDWORD HKLM \"${PRODUCT_UNINST_KEY}\" \"NoModify\" 0x00000001\n+   WriteRegDWORD HKLM \"${PRODUCT_UNINST_KEY}\" \"NoRepair\" 0x00000001\n+  ${endif}\n+\n+SectionEnd\n+\n+\n+# Uninstaller sections\n+Section \"un.JabRef\" un.SecUnProgramFiles\n+\n+  SectionIn RO\n+  ; delete executables\n+  Delete $INSTDIR\\${PRODUCT_EXE}\n+  Delete $INSTDIR\\uninstall.exe\n+  ; remove application user model id\n+  WinShell::UninstAppUserModelId \"${AppUserModelId}\"\n+  WinShell::UninstShortcut \"$INSTDIR\\$(^Name).lnk\"\n+  Delete \"$INSTDIR\\$(^Name).lnk\"\n+  ; delete dir only if empty\n+  RMDir $INSTDIR\n+  ; delete start menu entry\n+  ReadRegStr $0 SHCTX \"${PRODUCT_UNINST_KEY}\" \"StartMenu\"\n+  RMDir /r \"$0\"\n+  ; delete desktop icon\n+  Delete \"$DESKTOP\\$(^Name).lnk\"\n+  ; delete registry entries\n+  DeleteRegKey HKCU \"${PRODUCT_UNINST_KEY}\"\n+  DeleteRegKey SHCTX \"${PRODUCT_UNINST_KEY}\"\n+  DeleteRegKey HKCR \"Applications\\${PRODUCT_EXE}\"\n+  DeleteRegValue HKCR \".bib\" \"JabRef.BibTeX_backup\"\n+  DeleteRegValue HKCU \"Software\\Classes\\.bib\" \"JabRef.BibTeX_backup\"\n+  DeleteRegValue SHCTX \"Software\\Classes\\.bib\" \"JabRef.BibTeX_backup\"\n+  DeleteRegKey HKCU \"${REGKEY}\"\n+  DeleteRegKey SHCTX \"${REGKEY}\"\n+  ; remove file association with .bib-files\n+  !insertmacro APP_UNASSOCIATE \"bib\" \"JabRef.BibTeX\"\n+  ; close uninstaller automatically\n+  SetAutoClose true\n+\n+SectionEnd\n+\n+\n+# Installer functions\n+Function .onInit\n+\n+ InitPluginsDir\n+  ; If the user does *not* have administrator privileges, abort\n+  StrCpy $Answer \"\"\n+  StrCpy $UserName \"\"\n+  !insertmacro IsUserAdmin $Answer $UserName ; macro from LyXUtils.nsh\n+  ${if} $Answer == \"yes\"\n+   SetShellVarContext all ; set that e.g. shortcuts will be created for all users\n+  ${else}\n+   SetShellVarContext current\n+   StrCpy $INSTDIR \"$APPDATA\\$(^Name)\"\n+  ${endif}\n+\n+FunctionEnd\n+\n+\n+# Uninstaller functions\n+Function un.onInit\n+\n+  ; If the user does *not* have administrator privileges, abort\n+  StrCpy $Answer \"\"\n+  !insertmacro IsUserAdmin $Answer $UserName\n+  ${if} $Answer == \"yes\"\n+   SetShellVarContext all\n+  ${else}\n+   SetShellVarContext current\n+  ${endif}\n+\n+  ; ask if it should really be removed\n+  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 \"$(UnReallyRemoveLabel)\" IDYES +2\n+  Abort\n+\n+FunctionEnd\n+\n+Function un.onUninstSuccess\n+\n+  HideWindow\n+  MessageBox MB_ICONINFORMATION|MB_OK \"$(UnRemoveSuccessLabel)\"\n+\n+FunctionEnd, @@ -1,11 +1,25 @@\n machine:\n   java:\n-    version: openjdk6\n+    version: oraclejdk8\n \n dependencies:\n+  pre:\n+    - sudo apt-get update; sudo apt-get install nsis git\n+    - wget http://www.mirrorservice.org/sites/downloads.sourceforge.net/l/la/launch4j/launch4j-3/3.8/launch4j-3.8-linux.tgz\n+    - tar xzf launch4j-3.8-linux.tgz\n+    - chmod +x launch4j/launch4j\n+    - wget http://nsis.sourceforge.net/mediawiki/images/5/54/WinShell.zip\n+    - unzip WinShell.zip\n+    - sudo cp Plugins/x86-unicode/WinShell.dll /usr/share/nsis/Plugins/\n   override:\n     - TERM=dumb ./gradlew dependencies\n \n test:\n   override:\n     - TERM=dumb ./gradlew test\n+  post:\n+    - TERM=dumb export PATH=$PATH:`pwd`/launch4j && ./gradlew -Pdev=true -PnsisExec=\"/usr/bin/makensis\" release --stacktrace\n+\n+general:\n+  artifacts:\n+    - \"build/releases\", @@ -1,31 +0,0 @@\n-#!/usr/bin/python\n-\n-# Python script for combining several journal abbreviation lists\n-# and producing an alphabetically sorted list. If the same journal\n-# names are repeated, only the version found last is retained.\n-#\n-# Usage: combineJournalLists.py outfile infile1 infile2 ...\n-\n-import sys\n-import fnmatch\n-import os\n-\n-outFile = sys.argv[1]\n-dictionary = dict()\n-for i in range(2,len(sys.argv)):\n-    count = 0\n-    f = open(sys.argv[i], \"r\")\n-    for line in f:\n-\tif line[0] != \"#\":\n-\t    count = count+1\n-\t    parts = line.partition(\"=\")\n-\t    dictionary[parts[0].strip()] = line.strip()\n-    f.close()\n-    print sys.argv[i]+\": \"+str(count)\n-\n-print \"Combined key count: \"+str(len(dictionary))\n-\n-f = open(outFile, \"w\")\n-for key in sorted(dictionary.iterkeys()):\n-      f.write(dictionary[key]+\"\\n\")\n-f.close(), @@ -0,0 +1,120 @@\n+This document lists the libraries used by JabRef.\n+This file is manually kept in sync with build.gradle and the binary jars contained in the lib/ directory.\n+\n+Legend\n+------\n+License:\n+ * GPLv2+ means \"GPLv2 or later\"\n+ * GPLv2! means \"exactly version 2.0 of GPL\"\n+ * GPLv2  means, we haven't checked whether later options are allowed\n+ * similar for LGPL and other version of GPL\n+\n+Id:      com.apple:AppleJavaExtensions\n+Project: AppleJavaExtensions\n+URL:     https://developer.apple.com/legacy/library/samplecode/AppleJavaExtensions/Introduction/Intro.html\n+License: Apple License\n+\n+Id:      org.antlr:antlr\n+Project: ANTLR 3\n+URL:     http://www.antlr.org/\n+License: BSD\n+\n+Id:      org.antlr:antlr4\n+Project: ANTLR 4\n+URL:     http://www.antlr.org/\n+License: BSD\n+\n+Id:      commons-cli:commons-cli\n+Project: Apache Commons CLI\n+URL:     http://commons.apache.org/cli/\n+License: Apache 2.0\n+\n+Id:      commons-logging:commons-logging\n+Project: Apache Commongs Logging\n+URL:     http://commons.apache.org/logging/\n+License: Apache 2.0\n+\n+Id:      com.jgoodies:jgoodies-common\n+Project: JGoodies Common\n+URL:     http://www.jgoodies.com/downloads/libraries/\n+License: BSD\n+\n+Id:      com.jgoodies:jgoodies-forms\n+Project: JGoodies Forms\n+URL:     http://www.jgoodies.com/downloads/libraries/\n+License: BSD\n+\n+Id:      com.jgoodies:jgoodies-looks\n+Project: JGoodies Looks\n+URL:     http://www.jgoodies.com/downloads/libraries/\n+License: BSD\n+\n+Id:      mysql:mysql-connector-java\n+Project: MySQL Connector/J\n+URL:     http://www.mysql.de/downloads/connector/j/\n+License: GPLv2! and Oracle's FOSS License Exception (http://www.mysql.com/about/legal/licensing/foss-exception/) allowing GPLv3\n+\n+Id:      net.java.dev.glazedlists:glazedlists_java15\n+Project: Glazed Lists\n+URL:     http://www.glazedlists.com/\n+License: LPGL 2.1! (not explicitly, but no comments in the source header) and MPL\n+\n+Id:      net.java.dev.jna:jna\n+Project: Java Native Access (JNA)\n+URL:     https://github.com/twall/jna\n+License: LGPL 2.1+ and Apache 2.0\n+\n+Id:      org.apache.pdfbox:fontbox\n+Project: Apache PDFBox\n+URL:     http://pdfbox.apache.org\n+License: Apache 2.0\n+\n+Id:      org.apache.pdfbox:jempbox\n+Project: Apache PDFBox\n+URL:     http://pdfbox.apache.org\n+License: Apache 2.0\n+\n+Id:      org.apache.pdfbox:pdfbox\n+Project: Apache PDFBox\n+URL:     http://pdfbox.apache.org\n+License: Apache 2.0\n+\n+Id:      org.openoffice:juh\n+Project: OpenOffice.org\n+URL:     http://www.openoffice.org/api/SDK\n+License: LGPL 3.0\n+\n+Id:      org.openoffice:jurt\n+Project: OpenOffice.org\n+URL:     http://www.openoffice.org/api/SDK\n+License: LGPL 3.0\n+\n+Id:      org.openoffice:ridl\n+Project: OpenOffice.org\n+URL:     http://www.openoffice.org/api/SDK\n+License: LGPL 3.0\n+\n+Id:      org.openoffice:unoil\n+Project: OpenOffice.org\n+URL:     http://www.openoffice.org/api/SDK\n+License: LGPL 3.0\n+\n+Id:      org.swinglabs.swingx:swingx-core\n+Project: SwingX\n+URL:     https://swingx.java.net/\n+License: LGPL 3.0\n+\n+Path:    org.postgresql:postgresql\n+Project: PostgreSQL JDBC Driver\n+URL:     http://jdbc.postgresql.org/download.html\n+License: BSD\n+\n+Path:    lib/microba.jar\n+Project: Microba\n+URL:     https://github.com/tdbear/microba\n+License: BSD\n+\n+Path:    lib/spin.jar\n+Project: Spin\n+URL:     http://spin.sourceforge.net/\n+License: LGPL 2.1+, @@ -1,291 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<profiles version=\"12\">\n-<profile kind=\"CodeFormatterProfile\" name=\"JabRef\" version=\"12\">\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indentation.size\" value=\"4\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.disabling_tag\" value=\"@formatter:off\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value=\"2\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"16\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.enabling_tag\" value=\"@formatter:on\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value=\"error\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.line_length\" value=\"120\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value=\"16\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.compact_else_if\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value=\"error\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_header\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value=\"enabled\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value=\"120\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.source\" value=\"1.7\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.tabulation.size\" value=\"4\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value=\"2\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"16\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value=\"1.7\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_html\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value=\"16\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value=\"2\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value=\"false\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value=\"16\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.compiler.compliance\" value=\"1.7\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value=\"end_of_line\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value=\"0\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value=\"insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value=\"true\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.tabulation.char\" value=\"space\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value=\"1\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.lineSplit\" value=\"120\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value=\"do not insert\"/>\n-<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value=\"insert\"/>\n-</profile>\n-</profiles>, @@ -1,674 +0,0 @@\n-                    GNU GENERAL PUBLIC LICENSE\n-                       Version 3, 29 June 2007\n-\n- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-                            Preamble\n-\n-  The GNU General Public License is a free, copyleft license for\n-software and other kinds of works.\n-\n-  The licenses for most software and other practical works are designed\n-to take away your freedom to share and change the works.  By contrast,\n-the GNU General Public License is intended to guarantee your freedom to\n-share and change all versions of a program--to make sure it remains free\n-software for all its users.  We, the Free Software Foundation, use the\n-GNU General Public License for most of our software; it applies also to\n-any other work released this way by its authors.  You can apply it to\n-your programs, too.\n-\n-  When we speak of free software, we are referring to freedom, not\n-price.  Our General Public Licenses are designed to make sure that you\n-have the freedom to distribute copies of free software (and charge for\n-them if you wish), that you receive source code or can get it if you\n-want it, that you can change the software or use pieces of it in new\n-free programs, and that you know you can do these things.\n-\n-  To protect your rights, we need to prevent others from denying you\n-these rights or asking you to surrender the rights.  Therefore, you have\n-certain responsibilities if you distribute copies of the software, or if\n-you modify it: responsibilities to respect the freedom of others.\n-\n-  For example, if you distribute copies of such a program, whether\n-gratis or for a fee, you must pass on to the recipients the same\n-freedoms that you received.  You must make sure that they, too, receive\n-or can get the source code.  And you must show them these terms so they\n-know their rights.\n-\n-  Developers that use the GNU GPL protect your rights with two steps:\n-(1) assert copyright on the software, and (2) offer you this License\n-giving you legal permission to copy, distribute and/or modify it.\n-\n-  For the developers' and authors' protection, the GPL clearly explains\n-that there is no warranty for this free software.  For both users' and\n-authors' sake, the GPL requires that modified versions be marked as\n-changed, so that their problems will not be attributed erroneously to\n-authors of previous versions.\n-\n-  Some devices are designed to deny users access to install or run\n-modified versions of the software inside them, although the manufacturer\n-can do so.  This is fundamentally incompatible with the aim of\n-protecting users' freedom to change the software.  The systematic\n-pattern of such abuse occurs in the area of products for individuals to\n-use, which is precisely where it is most unacceptable.  Therefore, we\n-have designed this version of the GPL to prohibit the practice for those\n-products.  If such problems arise substantially in other domains, we\n-stand ready to extend this provision to those domains in future versions\n-of the GPL, as needed to protect the freedom of users.\n-\n-  Finally, every program is threatened constantly by software patents.\n-States should not allow patents to restrict development and use of\n-software on general-purpose computers, but in those that do, we wish to\n-avoid the special danger that patents applied to a free program could\n-make it effectively proprietary.  To prevent this, the GPL assures that\n-patents cannot be used to render the program non-free.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.\n-\n-                       TERMS AND CONDITIONS\n-\n-  0. Definitions.\n-\n-  \"This License\" refers to version 3 of the GNU General Public License.\n-\n-  \"Copyright\" also means copyright-like laws that apply to other kinds of\n-works, such as semiconductor masks.\n-\n-  \"The Program\" refers to any copyrightable work licensed under this\n-License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n-\"recipients\" may be individuals or organizations.\n-\n-  To \"modify\" a work means to copy from or adapt all or part of the work\n-in a fashion requiring copyright permission, other than the making of an\n-exact copy.  The resulting work is called a \"modified version\" of the\n-earlier work or a work \"based on\" the earlier work.\n-\n-  A \"covered work\" means either the unmodified Program or a work based\n-on the Program.\n-\n-  To \"propagate\" a work means to do anything with it that, without\n-permission, would make you directly or secondarily liable for\n-infringement under applicable copyright law, except executing it on a\n-computer or modifying a private copy.  Propagation includes copying,\n-distribution (with or without modification), making available to the\n-public, and in some countries other activities as well.\n-\n-  To \"convey\" a work means any kind of propagation that enables other\n-parties to make or receive copies.  Mere interaction with a user through\n-a computer network, with no transfer of a copy, is not conveying.\n-\n-  An interactive user interface displays \"Appropriate Legal Notices\"\n-to the extent that it includes a convenient and prominently visible\n-feature that (1) displays an appropriate copyright notice, and (2)\n-tells the user that there is no warranty for the work (except to the\n-extent that warranties are provided), that licensees may convey the\n-work under this License, and how to view a copy of this License.  If\n-the interface presents a list of user commands or options, such as a\n-menu, a prominent item in the list meets this criterion.\n-\n-  1. Source Code.\n-\n-  The \"source code\" for a work means the preferred form of the work\n-for making modifications to it.  \"Object code\" means any non-source\n-form of a work.\n-\n-  A \"Standard Interface\" means an interface that either is an official\n-standard defined by a recognized standards body, or, in the case of\n-interfaces specified for a particular programming language, one that\n-is widely used among developers working in that language.\n-\n-  The \"System Libraries\" of an executable work include anything, other\n-than the work as a whole, that (a) is included in the normal form of\n-packaging a Major Component, but which is not part of that Major\n-Component, and (b) serves only to enable use of the work with that\n-Major Component, or to implement a Standard Interface for which an\n-implementation is available to the public in source code form.  A\n-\"Major Component\", in this context, means a major essential component\n-(kernel, window system, and so on) of the specific operating system\n-(if any) on which the executable work runs, or a compiler used to\n-produce the work, or an object code interpreter used to run it.\n-\n-  The \"Corresponding Source\" for a work in object code form means all\n-the source code needed to generate, install, and (for an executable\n-work) run the object code and to modify the work, including scripts to\n-control those activities.  However, it does not include the work's\n-System Libraries, or general-purpose tools or generally available free\n-programs which are used unmodified in performing those activities but\n-which are not part of the work.  For example, Corresponding Source\n-includes interface definition files associated with source files for\n-the work, and the source code for shared libraries and dynamically\n-linked subprograms that the work is specifically designed to require,\n-such as by intimate data communication or control flow between those\n-subprograms and other parts of the work.\n-\n-  The Corresponding Source need not include anything that users\n-can regenerate automatically from other parts of the Corresponding\n-Source.\n-\n-  The Corresponding Source for a work in source code form is that\n-same work.\n-\n-  2. Basic Permissions.\n-\n-  All rights granted under this License are granted for the term of\n-copyright on the Program, and are irrevocable provided the stated\n-conditions are met.  This License explicitly affirms your unlimited\n-permission to run the unmodified Program.  The output from running a\n-covered work is covered by this License only if the output, given its\n-content, constitutes a covered work.  This License acknowledges your\n-rights of fair use or other equivalent, as provided by copyright law.\n-\n-  You may make, run and propagate covered works that you do not\n-convey, without conditions so long as your license otherwise remains\n-in force.  You may convey covered works to others for the sole purpose\n-of having them make modifications exclusively for you, or provide you\n-with facilities for running those works, provided that you comply with\n-the terms of this License in conveying all material for which you do\n-not control copyright.  Those thus making or running the covered works\n-for you must do so exclusively on your behalf, under your direction\n-and control, on terms that prohibit them from making any copies of\n-your copyrighted material outside their relationship with you.\n-\n-  Conveying under any other circumstances is permitted solely under\n-the conditions stated below.  Sublicensing is not allowed; section 10\n-makes it unnecessary.\n-\n-  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n-\n-  No covered work shall be deemed part of an effective technological\n-measure under any applicable law fulfilling obligations under article\n-11 of the WIPO copyright treaty adopted on 20 December 1996, or\n-similar laws prohibiting or restricting circumvention of such\n-measures.\n-\n-  When you convey a covered work, you waive any legal power to forbid\n-circumvention of technological measures to the extent such circumvention\n-is effected by exercising rights under this License with respect to\n-the covered work, and you disclaim any intention to limit operation or\n-modification of the work as a means of enforcing, against the work's\n-users, your or third parties' legal rights to forbid circumvention of\n-technological measures.\n-\n-  4. Conveying Verbatim Copies.\n-\n-  You may convey verbatim copies of the Program's source code as you\n-receive it, in any medium, provided that you conspicuously and\n-appropriately publish on each copy an appropriate copyright notice;\n-keep intact all notices stating that this License and any\n-non-permissive terms added in accord with section 7 apply to the code;\n-keep intact all notices of the absence of any warranty; and give all\n-recipients a copy of this License along with the Program.\n-\n-  You may charge any price or no price for each copy that you convey,\n-and you may offer support or warranty protection for a fee.\n-\n-  5. Conveying Modified Source Versions.\n-\n-  You may convey a work based on the Program, or the modifications to\n-produce it from the Program, in the form of source code under the\n-terms of section 4, provided that you also meet all of these conditions:\n-\n-    a) The work must carry prominent notices stating that you modified\n-    it, and giving a relevant date.\n-\n-    b) The work must carry prominent notices stating that it is\n-    released under this License and any conditions added under section\n-    7.  This requirement modifies the requirement in section 4 to\n-    \"keep intact all notices\".\n-\n-    c) You must license the entire work, as a whole, under this\n-    License to anyone who comes into possession of a copy.  This\n-    License will therefore apply, along with any applicable section 7\n-    additional terms, to the whole of the work, and all its parts,\n-    regardless of how they are packaged.  This License gives no\n-    permission to license the work in any other way, but it does not\n-    invalidate such permission if you have separately received it.\n-\n-    d) If the work has interactive user interfaces, each must display\n-    Appropriate Legal Notices; however, if the Program has interactive\n-    interfaces that do not display Appropriate Legal Notices, your\n-    work need not make them do so.\n-\n-  A compilation of a covered work with other separate and independent\n-works, which are not by their nature extensions of the covered work,\n-and which are not combined with it such as to form a larger program,\n-in or on a volume of a storage or distribution medium, is called an\n-\"aggregate\" if the compilation and its resulting copyright are not\n-used to limit the access or legal rights of the compilation's users\n-beyond what the individual works permit.  Inclusion of a covered work\n-in an aggregate does not cause this License to apply to the other\n-parts of the aggregate.\n-\n-  6. Conveying Non-Source Forms.\n-\n-  You may convey a covered work in object code form under the terms\n-of sections 4 and 5, provided that you also convey the\n-machine-readable Corresponding Source under the terms of this License,\n-in one of these ways:\n-\n-    a) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by the\n-    Corresponding Source fixed on a durable physical medium\n-    customarily used for software interchange.\n-\n-    b) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by a\n-    written offer, valid for at least three years and valid for as\n-    long as you offer spare parts or customer support for that product\n-    model, to give anyone who possesses the object code either (1) a\n-    copy of the Corresponding Source for all the software in the\n-    product that is covered by this License, on a durable physical\n-    medium customarily used for software interchange, for a price no\n-    more than your reasonable cost of physically performing this\n-    conveying of source, or (2) access to copy the\n-    Corresponding Source from a network server at no charge.\n-\n-    c) Convey individual copies of the object code with a copy of the\n-    written offer to provide the Corresponding Source.  This\n-    alternative is allowed only occasionally and noncommercially, and\n-    only if you received the object code with such an offer, in accord\n-    with subsection 6b.\n-\n-    d) Convey the object code by offering access from a designated\n-    place (gratis or for a charge), and offer equivalent access to the\n-    Corresponding Source in the same way through the same place at no\n-    further charge.  You need not require recipients to copy the\n-    Corresponding Source along with the object code.  If the place to\n-    copy the object code is a network server, the Corresponding Source\n-    may be on a different server (operated by you or a third party)\n-    that supports equivalent copying facilities, provided you maintain\n-    clear directions next to the object code saying where to find the\n-    Corresponding Source.  Regardless of what server hosts the\n-    Corresponding Source, you remain obligated to ensure that it is\n-    available for as long as needed to satisfy these requirements.\n-\n-    e) Convey the object code using peer-to-peer transmission, provided\n-    you inform other peers where the object code and Corresponding\n-    Source of the work are being offered to the general public at no\n-    charge under subsection 6d.\n-\n-  A separable portion of the object code, whose source code is excluded\n-from the Corresponding Source as a System Library, need not be\n-included in conveying the object code work.\n-\n-  A \"User Product\" is either (1) a \"consumer product\", which means any\n-tangible personal property which is normally used for personal, family,\n-or household purposes, or (2) anything designed or sold for incorporation\n-into a dwelling.  In determining whether a product is a consumer product,\n-doubtful cases shall be resolved in favor of coverage.  For a particular\n-product received by a particular user, \"normally used\" refers to a\n-typical or common use of that class of product, regardless of the status\n-of the particular user or of the way in which the particular user\n-actually uses, or expects or is expected to use, the product.  A product\n-is a consumer product regardless of whether the product has substantial\n-commercial, industrial or non-consumer uses, unless such uses represent\n-the only significant mode of use of the product.\n-\n-  \"Installation Information\" for a User Product means any methods,\n-procedures, authorization keys, or other information required to install\n-and execute modified versions of a covered work in that User Product from\n-a modified version of its Corresponding Source.  The information must\n-suffice to ensure that the continued functioning of the modified object\n-code is in no case prevented or interfered with solely because\n-modification has been made.\n-\n-  If you convey an object code work under this section in, or with, or\n-specifically for use in, a User Product, and the conveying occurs as\n-part of a transaction in which the right of possession and use of the\n-User Product is transferred to the recipient in perpetuity or for a\n-fixed term (regardless of how the transaction is characterized), the\n-Corresponding Source conveyed under this section must be accompanied\n-by the Installation Information.  But this requirement does not apply\n-if neither you nor any third party retains the ability to install\n-modified object code on the User Product (for example, the work has\n-been installed in ROM).\n-\n-  The requirement to provide Installation Information does not include a\n-requirement to continue to provide support service, warranty, or updates\n-for a work that has been modified or installed by the recipient, or for\n-the User Product in which it has been modified or installed.  Access to a\n-network may be denied when the modification itself materially and\n-adversely affects the operation of the network or violates the rules and\n-protocols for communication across the network.\n-\n-  Corresponding Source conveyed, and Installation Information provided,\n-in accord with this section must be in a format that is publicly\n-documented (and with an implementation available to the public in\n-source code form), and must require no special password or key for\n-unpacking, reading or copying.\n-\n-  7. Additional Terms.\n-\n-  \"Additional permissions\" are terms that supplement the terms of this\n-License by making exceptions from one or more of its conditions.\n-Additional permissions that are applicable to the entire Program shall\n-be treated as though they were included in this License, to the extent\n-that they are valid under applicable law.  If additional permissions\n-apply only to part of the Program, that part may be used separately\n-under those permissions, but the entire Program remains governed by\n-this License without regard to the additional permissions.\n-\n-  When you convey a copy of a covered work, you may at your option\n-remove any additional permissions from that copy, or from any part of\n-it.  (Additional permissions may be written to require their own\n-removal in certain cases when you modify the work.)  You may place\n-additional permissions on material, added by you to a covered work,\n-for which you have or can give appropriate copyright permission.\n-\n-  Notwithstanding any other provision of this License, for material you\n-add to a covered work, you may (if authorized by the copyright holders of\n-that material) supplement the terms of this License with terms:\n-\n-    a) Disclaiming warranty or limiting liability differently from the\n-    terms of sections 15 and 16 of this License; or\n-\n-    b) Requiring preservation of specified reasonable legal notices or\n-    author attributions in that material or in the Appropriate Legal\n-    Notices displayed by works containing it; or\n-\n-    c) Prohibiting misrepresentation of the origin of that material, or\n-    requiring that modified versions of such material be marked in\n-    reasonable ways as different from the original version; or\n-\n-    d) Limiting the use for publicity purposes of names of licensors or\n-    authors of the material; or\n-\n-    e) Declining to grant rights under trademark law for use of some\n-    trade names, trademarks, or service marks; or\n-\n-    f) Requiring indemnification of licensors and authors of that\n-    material by anyone who conveys the material (or modified versions of\n-    it) with contractual assumptions of liability to the recipient, for\n-    any liability that these contractual assumptions directly impose on\n-    those licensors and authors.\n-\n-  All other non-permissive additional terms are considered \"further\n-restrictions\" within the meaning of section 10.  If the Program as you\n-received it, or any part of it, contains a notice stating that it is\n-governed by this License along with a term that is a further\n-restriction, you may remove that term.  If a license document contains\n-a further restriction but permits relicensing or conveying under this\n-License, you may add to a covered work material governed by the terms\n-of that license document, provided that the further restriction does\n-not survive such relicensing or conveying.\n-\n-  If you add terms to a covered work in accord with this section, you\n-must place, in the relevant source files, a statement of the\n-additional terms that apply to those files, or a notice indicating\n-where to find the applicable terms.\n-\n-  Additional terms, permissive or non-permissive, may be stated in the\n-form of a separately written license, or stated as exceptions;\n-the above requirements apply either way.\n-\n-  8. Termination.\n-\n-  You may not propagate or modify a covered work except as expressly\n-provided under this License.  Any attempt otherwise to propagate or\n-modify it is void, and will automatically terminate your rights under\n-this License (including any patent licenses granted under the third\n-paragraph of section 11).\n-\n-  However, if you cease all violation of this License, then your\n-license from a particular copyright holder is reinstated (a)\n-provisionally, unless and until the copyright holder explicitly and\n-finally terminates your license, and (b) permanently, if the copyright\n-holder fails to notify you of the violation by some reasonable means\n-prior to 60 days after the cessation.\n-\n-  Moreover, your license from a particular copyright holder is\n-reinstated permanently if the copyright holder notifies you of the\n-violation by some reasonable means, this is the first time you have\n-received notice of violation of this License (for any work) from that\n-copyright holder, and you cure the violation prior to 30 days after\n-your receipt of the notice.\n-\n-  Termination of your rights under this section does not terminate the\n-licenses of parties who have received copies or rights from you under\n-this License.  If your rights have been terminated and not permanently\n-reinstated, you do not qualify to receive new licenses for the same\n-material under section 10.\n-\n-  9. Acceptance Not Required for Having Copies.\n-\n-  You are not required to accept this License in order to receive or\n-run a copy of the Program.  Ancillary propagation of a covered work\n-occurring solely as a consequence of using peer-to-peer transmission\n-to receive a copy likewise does not require acceptance.  However,\n-nothing other than this License grants you permission to propagate or\n-modify any covered work.  These actions infringe copyright if you do\n-not accept this License.  Therefore, by modifying or propagating a\n-covered work, you indicate your acceptance of this License to do so.\n-\n-  10. Automatic Licensing of Downstream Recipients.\n-\n-  Each time you convey a covered work, the recipient automatically\n-receives a license from the original licensors, to run, modify and\n-propagate that work, subject to this License.  You are not responsible\n-for enforcing compliance by third parties with this License.\n-\n-  An \"entity transaction\" is a transaction transferring control of an\n-organization, or substantially all assets of one, or subdividing an\n-organization, or merging organizations.  If propagation of a covered\n-work results from an entity transaction, each party to that\n-transaction who receives a copy of the work also receives whatever\n-licenses to the work the party's predecessor in interest had or could\n-give under the previous paragraph, plus a right to possession of the\n-Corresponding Source of the work from the predecessor in interest, if\n-the predecessor has it or can get it with reasonable efforts.\n-\n-  You may not impose any further restrictions on the exercise of the\n-rights granted or affirmed under this License.  For example, you may\n-not impose a license fee, royalty, or other charge for exercise of\n-rights granted under this License, and you may not initiate litigation\n-(including a cross-claim or counterclaim in a lawsuit) alleging that\n-any patent claim is infringed by making, using, selling, offering for\n-sale, or importing the Program or any portion of it.\n-\n-  11. Patents.\n-\n-  A \"contributor\" is a copyright holder who authorizes use under this\n-License of the Program or a work on which the Program is based.  The\n-work thus licensed is called the contributor's \"contributor version\".\n-\n-  A contributor's \"essential patent claims\" are all patent claims\n-owned or controlled by the contributor, whether already acquired or\n-hereafter acquired, that would be infringed by some manner, permitted\n-by this License, of making, using, or selling its contributor version,\n-but do not include claims that would be infringed only as a\n-consequence of further modification of the contributor version.  For\n-purposes of this definition, \"control\" includes the right to grant\n-patent sublicenses in a manner consistent with the requirements of\n-this License.\n-\n-  Each contributor grants you a non-exclusive, worldwide, royalty-free\n-patent license under the contributor's essential patent claims, to\n-make, use, sell, offer for sale, import and otherwise run, modify and\n-propagate the contents of its contributor version.\n-\n-  In the following three paragraphs, a \"patent license\" is any express\n-agreement or commitment, however denominated, not to enforce a patent\n-(such as an express permission to practice a patent or covenant not to\n-sue for patent infringement).  To \"grant\" such a patent license to a\n-party means to make such an agreement or commitment not to enforce a\n-patent against the party.\n-\n-  If you convey a covered work, knowingly relying on a patent license,\n-and the Corresponding Source of the work is not available for anyone\n-to copy, free of charge and under the terms of this License, through a\n-publicly available network server or other readily accessible means,\n-then you must either (1) cause the Corresponding Source to be so\n-available, or (2) arrange to deprive yourself of the benefit of the\n-patent license for this particular work, or (3) arrange, in a manner\n-consistent with the requirements of this License, to extend the patent\n-license to downstream recipients.  \"Knowingly relying\" means you have\n-actual knowledge that, but for the patent license, your conveying the\n-covered work in a country, or your recipient's use of the covered work\n-in a country, would infringe one or more identifiable patents in that\n-country that you have reason to believe are valid.\n-\n-  If, pursuant to or in connection with a single transaction or\n-arrangement, you convey, or propagate by procuring conveyance of, a\n-covered work, and grant a patent license to some of the parties\n-receiving the covered work authorizing them to use, propagate, modify\n-or convey a specific copy of the covered work, then the patent license\n-you grant is automatically extended to all recipients of the covered\n-work and works based on it.\n-\n-  A patent license is \"discriminatory\" if it does not include within\n-the scope of its coverage, prohibits the exercise of, or is\n-conditioned on the non-exercise of one or more of the rights that are\n-specifically granted under this License.  You may not convey a covered\n-work if you are a party to an arrangement with a third party that is\n-in the business of distributing software, under which you make payment\n-to the third party based on the extent of your activity of conveying\n-the work, and under which the third party grants, to any of the\n-parties who would receive the covered work from you, a discriminatory\n-patent license (a) in connection with copies of the covered work\n-conveyed by you (or copies made from those copies), or (b) primarily\n-for and in connection with specific products or compilations that\n-contain the covered work, unless you entered into that arrangement,\n-or that patent license was granted, prior to 28 March 2007.\n-\n-  Nothing in this License shall be construed as excluding or limiting\n-any implied license or other defenses to infringement that may\n-otherwise be available to you under applicable patent law.\n-\n-  12. No Surrender of Others' Freedom.\n-\n-  If conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot convey a\n-covered work so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you may\n-not convey it at all.  For example, if you agree to terms that obligate you\n-to collect a royalty for further conveying from those to whom you convey\n-the Program, the only way you could satisfy both those terms and this\n-License would be to refrain entirely from conveying the Program.\n-\n-  13. Use with the GNU Affero General Public License.\n-\n-  Notwithstanding any other provision of this License, you have\n-permission to link or combine any covered work with a work licensed\n-under version 3 of the GNU Affero General Public License into a single\n-combined work, and to convey the resulting work.  The terms of this\n-License will continue to apply to the part which is the covered work,\n-but the special requirements of the GNU Affero General Public License,\n-section 13, concerning interaction through a network will apply to the\n-combination as such.\n-\n-  14. Revised Versions of this License.\n-\n-  The Free Software Foundation may publish revised and/or new versions of\n-the GNU General Public License from time to time.  Such new versions will\n-be similar in spirit to the present version, but may differ in detail to\n-address new problems or concerns.\n-\n-  Each version is given a distinguishing version number.  If the\n-Program specifies that a certain numbered version of the GNU General\n-Public License \"or any later version\" applies to it, you have the\n-option of following the terms and conditions either of that numbered\n-version or of any later version published by the Free Software\n-Foundation.  If the Program does not specify a version number of the\n-GNU General Public License, you may choose any version ever published\n-by the Free Software Foundation.\n-\n-  If the Program specifies that a proxy can decide which future\n-versions of the GNU General Public License can be used, that proxy's\n-public statement of acceptance of a version permanently authorizes you\n-to choose that version for the Program.\n-\n-  Later license versions may give you additional or different\n-permissions.  However, no additional obligations are imposed on any\n-author or copyright holder as a result of your choosing to follow a\n-later version.\n-\n-  15. Disclaimer of Warranty.\n-\n-  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n-APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n-HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n-OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n-THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n-IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. Limitation of Liability.\n-\n-  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n-THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n-GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n-USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n-DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n-PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n-EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n-SUCH DAMAGES.\n-\n-  17. Interpretation of Sections 15 and 16.\n-\n-  If the disclaimer of warranty and limitation of liability provided\n-above cannot be given local legal effect according to their terms,\n-reviewing courts shall apply local law that most closely approximates\n-an absolute waiver of all civil liability in connection with the\n-Program, unless a warranty or assumption of liability accompanies a\n-copy of the Program in return for a fee.\n-\n-                     END OF TERMS AND CONDITIONS\n-\n-            How to Apply These Terms to Your New Programs\n-\n-  If you develop a new program, and you want it to be of the greatest\n-possible use to the public, the best way to achieve this is to make it\n-free software which everyone can redistribute and change under these terms.\n-\n-  To do so, attach the following notices to the program.  It is safest\n-to attach them to the start of each source file to most effectively\n-state the exclusion of warranty; and each file should have at least\n-the \"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the program's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation, either version 3 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-  If the program does terminal interaction, make it output a short\n-notice like this when it starts in an interactive mode:\n-\n-    <program>  Copyright (C) <year>  <name of author>\n-    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n-    This is free software, and you are welcome to redistribute it\n-    under certain conditions; type `show c' for details.\n-\n-The hypothetical commands `show w' and `show c' should show the appropriate\n-parts of the General Public License.  Of course, your program's commands\n-might be different; for a GUI interface, you would use an \"about box\".\n-\n-  You should also get your employer (if you work as a programmer) or school,\n-if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n-For more information on this, and how to apply and follow the GNU GPL, see\n-<http://www.gnu.org/licenses/>.\n-\n-  The GNU General Public License does not permit incorporating your program\n-into proprietary programs.  If your program is a subroutine library, you\n-may consider it more useful to permit linking proprietary applications with\n-the library.  If this is what you want to do, use the GNU Lesser General\n-Public License instead of this License.  But first, please read\n-<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\\ No newline at end of file, None, @@ -1,6 +1,6 @@\n-#Wed May 20 10:08:08 CEST 2015\n+#Thu Jul 30 13:20:57 CEST 2015\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.4-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.6-all.zip, @@ -43,7 +43,7 @@\n );\n \n \n-#build.xml for getting string replacements @version@ and @year@\n+#build.xml for getting string replacements ${version} and ${year}\n use constant BUILDXML       => \"../build.xml\";\n \n use warnings;\n@@ -271,8 +271,8 @@ sub handleFile {\n #extracts info out of build.xml\n #\t<property name=\"jabref.version\" value=\"2.8b\" />\n #\t<property name=\"jabref.year\" value=\"2012\" />\n-#\t<property name=\"jabref.placeholder.version\" value=\"@version@\" />\n-#\t<property name=\"jabref.placeholder.year\" value=\"@year@\" />\n+#\t<property name=\"jabref.placeholder.version\" value=\"${version}\" />\n+#\t<property name=\"jabref.placeholder.year\" value=\"${year}\" />\n sub loadPreferences {\n   open(my $buildXML, \"<\", BUILDXML) or die \"cannot open < \" . BUILDXML . \": $!\";\n   my @buildxml = <$buildXML>;, None, @@ -0,0 +1,295 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<profiles version=\"12\">\n+<profile kind=\"CodeFormatterProfile\" name=\"JabRef\" version=\"12\">\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indentation.size\" value=\"4\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.disabling_tag\" value=\"@formatter:off\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"81\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"49\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.enabling_tag\" value=\"@formatter:on\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value=\"error\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.line_length\" value=\"120\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_lambda_body\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.compact_else_if\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value=\"error\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_header\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value=\"enabled\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value=\"120\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.source\" value=\"1.8\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.tabulation.size\" value=\"4\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"49\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value=\"1.8\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_html\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.compliance\" value=\"1.8\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.tabulation.char\" value=\"space\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.lineSplit\" value=\"120\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value=\"insert\"/>\n+</profile>\n+</profiles>, @@ -1,36 +0,0 @@\n-<launch4jConfig>\n-  <dontWrapJar>true</dontWrapJar>\n-  <headerType>gui</headerType>\n-  <jar>JabRef-1.1.1.jar</jar>\n-  <outfile>./src/main/resources/windows/nsis/dist/JabRef.exe</outfile>\n-  <errTitle></errTitle>\n-  <cmdLine></cmdLine>\n-  <chdir></chdir>\n-  <priority>normal</priority>\n-  <downloadUrl>http://java.com/download</downloadUrl>\n-  <supportUrl></supportUrl>\n-  <customProcName>false</customProcName>\n-  <stayAlive>false</stayAlive>\n-  <manifest></manifest>\n-  <icon>./src/main/resources/images/JabRef.ico</icon>\n-  <jre>\n-    <path></path>\n-    <minVersion>1.6.0</minVersion>\n-    <maxVersion></maxVersion>\n-    <jdkPreference>preferJre</jdkPreference>\n-    <initialHeapSize>32</initialHeapSize>\n-    <maxHeapSize>512</maxHeapSize>\n-  </jre>\n-  <versionInfo>\n-    <fileVersion>2.2.2.2</fileVersion>\n-    <txtFileVersion>3.3.3</txtFileVersion>\n-    <fileDescription>JabRef</fileDescription>\n-    <copyright>JabRef developers</copyright>\n-    <productVersion>2.2.2.2</productVersion>\n-    <txtProductVersion>3.3.3</txtProductVersion>\n-    <productName>JabRef</productName>\n-    <companyName></companyName>\n-    <internalName>JabRef</internalName>\n-    <originalFilename>JabRef.exe</originalFilename>\n-  </versionInfo>\n-</launch4jConfig>\n\\ No newline at end of file, @@ -1,79 +0,0 @@\n-#See also https://bugs.gentoo.org/show_bug.cgi?id=385751\n-\n-#=========== jabref ebuild hacked from dmol's 2.8.1 ==============\n-# Copyright 1999-2012 Gentoo Foundation\n-# Distributed under the terms of the GNU General Public License v2\n-# $Header:  $\n-\n-EAPI=4\n-\n-WANT_ANT_TASKS=\"dev-java/jarbundler:0\"\n-#docs aren't builded correctly?\n-JAVA_PKG_IUSE=\"\"\n-inherit eutils java-pkg-2 java-ant-2\n-\n-MY_PV=\"${PV/_beta/b}\"\n-\n-DESCRIPTION=\"GUI frontend for BibTeX, written in Java\"\n-HOMEPAGE=\"http://jabref.sourceforge.net/\"\n-SRC_URI=\"mirror://sourceforge/${PN}/JabRef-${MY_PV}-src.tar.bz2\"\n-\n-LICENSE=\"GPL-2\"\n-SLOT=\"0\"\n-KEYWORDS=\"~amd64 ~x86\"\n-IUSE=\"mysql\"\n-\n-#do not include antlr-3, use shipped antlr-3.0b5.jar ?\n-#       >=dev-java/antlr-3.1.3:3[java]\n-CDEPEND=\"dev-java/spin:0\n-        dev-java/glazedlists:1.8\n-        dev-java/jempbox:1.7\n-        dev-java/pdfbox:1.7\n-        >=dev-java/antlr-2.7.3:0[java]\n-        >=dev-java/jgoodies-forms-1.1.0:0\n-        dev-java/jgoodies-looks:2.0\n-        >=dev-java/microba-0.4.3:0\n-        dev-java/commons-logging:0\n-        dev-java/jpf:1.5\n-        dev-java/jpfcodegen:0\n-        dev-java/jgoodies-forms:0\n-        mysql? ( dev-java/jdbc-mysql:0 )\"\n-\n-RDEPEND=\">=virtual/jre-1.6\n-        ${CDEPEND}\"\n-\n-DEPEND=\">=virtual/jdk-1.6\n-        ${CDEPEND}\"\n-\n-S=\"${WORKDIR}/${PN}-${MY_PV}\"\n-\n-JAVA_ANT_REWRITE_CLASSPATH=\"true\"\n-#EANT_ANT_TASKS=\"jarbundler\"\n-EANT_BUILD_TARGET=\"jars\"\n-EANT_DOC_TARGET=\"docs\"\n-\n-#do not include antlr-3, use shipped antlr-3.0b5.jar\n-EANT_GENTOO_CLASSPATH=\"antlr,commons-logging,glazedlists-1.8,jempbox-1.7,jgoodies-forms,jgoodies-looks-2.0,jpf-1.5,microba,pdfbox-1.7,spin\"\n-EANT_GENTOO_CLASSPATH_EXTRA=\"${S}/lib/antlr-3.0b5.jar\"\n-\n-src_install() {\n-        java-pkg_newjar build/lib/JabRef-${MY_PV}.jar\n-        java-pkg_dojar lib/antlr-3.0b5.jar\n-        java-pkg_dojar lib/plugin/JPFCodeGenerator-rt.jar\n-\n-        #are not builded? Investigate why\n-        #use doc && java-pkg_dojavadoc build/docs/API\n-        dodoc src/resources/txt/README\n-\n-        java-pkg_dolauncher ${PN} \\\n-                --main net.sf.jabref.JabRef\n-\n-        dodir /usr/share/${PN}/lib/plugins\n-        keepdir /usr/share/${PN}/lib/plugins\n-\n-        java-pkg_register-optional-dependency jdbc-mysql\n-\n-        newicon src/resources/images/JabRef-icon-48.png JabRef-icon.png || die\n-        make_desktop_entry ${PN} JabRef JabRef-icon Office\n-        echo \"MimeType=text/x-bibtex;\" >> \"${D}/usr/share/applications/${PN}-${PN}.desktop\"\n-}, @@ -1,502 +0,0 @@\n-                  GNU LESSER GENERAL PUBLIC LICENSE\n-                       Version 2.1, February 1999\n-\n- Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n- 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-[This is the first released version of the Lesser GPL.  It also counts\n- as the successor of the GNU Library Public License, version 2, hence\n- the version number 2.1.]\n-\n-                            Preamble\n-\n-  The licenses for most software are designed to take away your\n-freedom to share and change it.  By contrast, the GNU General Public\n-Licenses are intended to guarantee your freedom to share and change\n-free software--to make sure the software is free for all its users.\n-\n-  This license, the Lesser General Public License, applies to some\n-specially designated software packages--typically libraries--of the\n-Free Software Foundation and other authors who decide to use it.  You\n-can use it too, but we suggest you first think carefully about whether\n-this license or the ordinary General Public License is the better\n-strategy to use in any particular case, based on the explanations below.\n-\n-  When we speak of free software, we are referring to freedom of use,\n-not price.  Our General Public Licenses are designed to make sure that\n-you have the freedom to distribute copies of free software (and charge\n-for this service if you wish); that you receive source code or can get\n-it if you want it; that you can change the software and use pieces of\n-it in new free programs; and that you are informed that you can do\n-these things.\n-\n-  To protect your rights, we need to make restrictions that forbid\n-distributors to deny you these rights or to ask you to surrender these\n-rights.  These restrictions translate to certain responsibilities for\n-you if you distribute copies of the library or if you modify it.\n-\n-  For example, if you distribute copies of the library, whether gratis\n-or for a fee, you must give the recipients all the rights that we gave\n-you.  You must make sure that they, too, receive or can get the source\n-code.  If you link other code with the library, you must provide\n-complete object files to the recipients, so that they can relink them\n-with the library after making changes to the library and recompiling\n-it.  And you must show them these terms so they know their rights.\n-\n-  We protect your rights with a two-step method: (1) we copyright the\n-library, and (2) we offer you this license, which gives you legal\n-permission to copy, distribute and/or modify the library.\n-\n-  To protect each distributor, we want to make it very clear that\n-there is no warranty for the free library.  Also, if the library is\n-modified by someone else and passed on, the recipients should know\n-that what they have is not the original version, so that the original\n-author's reputation will not be affected by problems that might be\n-introduced by others.\n-\f\n-  Finally, software patents pose a constant threat to the existence of\n-any free program.  We wish to make sure that a company cannot\n-effectively restrict the users of a free program by obtaining a\n-restrictive license from a patent holder.  Therefore, we insist that\n-any patent license obtained for a version of the library must be\n-consistent with the full freedom of use specified in this license.\n-\n-  Most GNU software, including some libraries, is covered by the\n-ordinary GNU General Public License.  This license, the GNU Lesser\n-General Public License, applies to certain designated libraries, and\n-is quite different from the ordinary General Public License.  We use\n-this license for certain libraries in order to permit linking those\n-libraries into non-free programs.\n-\n-  When a program is linked with a library, whether statically or using\n-a shared library, the combination of the two is legally speaking a\n-combined work, a derivative of the original library.  The ordinary\n-General Public License therefore permits such linking only if the\n-entire combination fits its criteria of freedom.  The Lesser General\n-Public License permits more lax criteria for linking other code with\n-the library.\n-\n-  We call this license the \"Lesser\" General Public License because it\n-does Less to protect the user's freedom than the ordinary General\n-Public License.  It also provides other free software developers Less\n-of an advantage over competing non-free programs.  These disadvantages\n-are the reason we use the ordinary General Public License for many\n-libraries.  However, the Lesser license provides advantages in certain\n-special circumstances.\n-\n-  For example, on rare occasions, there may be a special need to\n-encourage the widest possible use of a certain library, so that it becomes\n-a de-facto standard.  To achieve this, non-free programs must be\n-allowed to use the library.  A more frequent case is that a free\n-library does the same job as widely used non-free libraries.  In this\n-case, there is little to gain by limiting the free library to free\n-software only, so we use the Lesser General Public License.\n-\n-  In other cases, permission to use a particular library in non-free\n-programs enables a greater number of people to use a large body of\n-free software.  For example, permission to use the GNU C Library in\n-non-free programs enables many more people to use the whole GNU\n-operating system, as well as its variant, the GNU/Linux operating\n-system.\n-\n-  Although the Lesser General Public License is Less protective of the\n-users' freedom, it does ensure that the user of a program that is\n-linked with the Library has the freedom and the wherewithal to run\n-that program using a modified version of the Library.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.  Pay close attention to the difference between a\n-\"work based on the library\" and a \"work that uses the library\".  The\n-former contains code derived from the library, whereas the latter must\n-be combined with the library in order to run.\n-\f\n-                  GNU LESSER GENERAL PUBLIC LICENSE\n-   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n-\n-  0. This License Agreement applies to any software library or other\n-program which contains a notice placed by the copyright holder or\n-other authorized party saying it may be distributed under the terms of\n-this Lesser General Public License (also called \"this License\").\n-Each licensee is addressed as \"you\".\n-\n-  A \"library\" means a collection of software functions and/or data\n-prepared so as to be conveniently linked with application programs\n-(which use some of those functions and data) to form executables.\n-\n-  The \"Library\", below, refers to any such software library or work\n-which has been distributed under these terms.  A \"work based on the\n-Library\" means either the Library or any derivative work under\n-copyright law: that is to say, a work containing the Library or a\n-portion of it, either verbatim or with modifications and/or translated\n-straightforwardly into another language.  (Hereinafter, translation is\n-included without limitation in the term \"modification\".)\n-\n-  \"Source code\" for a work means the preferred form of the work for\n-making modifications to it.  For a library, complete source code means\n-all the source code for all modules it contains, plus any associated\n-interface definition files, plus the scripts used to control compilation\n-and installation of the library.\n-\n-  Activities other than copying, distribution and modification are not\n-covered by this License; they are outside its scope.  The act of\n-running a program using the Library is not restricted, and output from\n-such a program is covered only if its contents constitute a work based\n-on the Library (independent of the use of the Library in a tool for\n-writing it).  Whether that is true depends on what the Library does\n-and what the program that uses the Library does.\n-\n-  1. You may copy and distribute verbatim copies of the Library's\n-complete source code as you receive it, in any medium, provided that\n-you conspicuously and appropriately publish on each copy an\n-appropriate copyright notice and disclaimer of warranty; keep intact\n-all the notices that refer to this License and to the absence of any\n-warranty; and distribute a copy of this License along with the\n-Library.\n-\n-  You may charge a fee for the physical act of transferring a copy,\n-and you may at your option offer warranty protection in exchange for a\n-fee.\n-\f\n-  2. You may modify your copy or copies of the Library or any portion\n-of it, thus forming a work based on the Library, and copy and\n-distribute such modifications or work under the terms of Section 1\n-above, provided that you also meet all of these conditions:\n-\n-    a) The modified work must itself be a software library.\n-\n-    b) You must cause the files modified to carry prominent notices\n-    stating that you changed the files and the date of any change.\n-\n-    c) You must cause the whole of the work to be licensed at no\n-    charge to all third parties under the terms of this License.\n-\n-    d) If a facility in the modified Library refers to a function or a\n-    table of data to be supplied by an application program that uses\n-    the facility, other than as an argument passed when the facility\n-    is invoked, then you must make a good faith effort to ensure that,\n-    in the event an application does not supply such function or\n-    table, the facility still operates, and performs whatever part of\n-    its purpose remains meaningful.\n-\n-    (For example, a function in a library to compute square roots has\n-    a purpose that is entirely well-defined independent of the\n-    application.  Therefore, Subsection 2d requires that any\n-    application-supplied function or table used by this function must\n-    be optional: if the application does not supply it, the square\n-    root function must still compute square roots.)\n-\n-These requirements apply to the modified work as a whole.  If\n-identifiable sections of that work are not derived from the Library,\n-and can be reasonably considered independent and separate works in\n-themselves, then this License, and its terms, do not apply to those\n-sections when you distribute them as separate works.  But when you\n-distribute the same sections as part of a whole which is a work based\n-on the Library, the distribution of the whole must be on the terms of\n-this License, whose permissions for other licensees extend to the\n-entire whole, and thus to each and every part regardless of who wrote\n-it.\n-\n-Thus, it is not the intent of this section to claim rights or contest\n-your rights to work written entirely by you; rather, the intent is to\n-exercise the right to control the distribution of derivative or\n-collective works based on the Library.\n-\n-In addition, mere aggregation of another work not based on the Library\n-with the Library (or with a work based on the Library) on a volume of\n-a storage or distribution medium does not bring the other work under\n-the scope of this License.\n-\n-  3. You may opt to apply the terms of the ordinary GNU General Public\n-License instead of this License to a given copy of the Library.  To do\n-this, you must alter all the notices that refer to this License, so\n-that they refer to the ordinary GNU General Public License, version 2,\n-instead of to this License.  (If a newer version than version 2 of the\n-ordinary GNU General Public License has appeared, then you can specify\n-that version instead if you wish.)  Do not make any other change in\n-these notices.\n-\f\n-  Once this change is made in a given copy, it is irreversible for\n-that copy, so the ordinary GNU General Public License applies to all\n-subsequent copies and derivative works made from that copy.\n-\n-  This option is useful when you wish to copy part of the code of\n-the Library into a program that is not a library.\n-\n-  4. You may copy and distribute the Library (or a portion or\n-derivative of it, under Section 2) in object code or executable form\n-under the terms of Sections 1 and 2 above provided that you accompany\n-it with the complete corresponding machine-readable source code, which\n-must be distributed under the terms of Sections 1 and 2 above on a\n-medium customarily used for software interchange.\n-\n-  If distribution of object code is made by offering access to copy\n-from a designated place, then offering equivalent access to copy the\n-source code from the same place satisfies the requirement to\n-distribute the source code, even though third parties are not\n-compelled to copy the source along with the object code.\n-\n-  5. A program that contains no derivative of any portion of the\n-Library, but is designed to work with the Library by being compiled or\n-linked with it, is called a \"work that uses the Library\".  Such a\n-work, in isolation, is not a derivative work of the Library, and\n-therefore falls outside the scope of this License.\n-\n-  However, linking a \"work that uses the Library\" with the Library\n-creates an executable that is a derivative of the Library (because it\n-contains portions of the Library), rather than a \"work that uses the\n-library\".  The executable is therefore covered by this License.\n-Section 6 states terms for distribution of such executables.\n-\n-  When a \"work that uses the Library\" uses material from a header file\n-that is part of the Library, the object code for the work may be a\n-derivative work of the Library even though the source code is not.\n-Whether this is true is especially significant if the work can be\n-linked without the Library, or if the work is itself a library.  The\n-threshold for this to be true is not precisely defined by law.\n-\n-  If such an object file uses only numerical parameters, data\n-structure layouts and accessors, and small macros and small inline\n-functions (ten lines or less in length), then the use of the object\n-file is unrestricted, regardless of whether it is legally a derivative\n-work.  (Executables containing this object code plus portions of the\n-Library will still fall under Section 6.)\n-\n-  Otherwise, if the work is a derivative of the Library, you may\n-distribute the object code for the work under the terms of Section 6.\n-Any executables containing that work also fall under Section 6,\n-whether or not they are linked directly with the Library itself.\n-\f\n-  6. As an exception to the Sections above, you may also combine or\n-link a \"work that uses the Library\" with the Library to produce a\n-work containing portions of the Library, and distribute that work\n-under terms of your choice, provided that the terms permit\n-modification of the work for the customer's own use and reverse\n-engineering for debugging such modifications.\n-\n-  You must give prominent notice with each copy of the work that the\n-Library is used in it and that the Library and its use are covered by\n-this License.  You must supply a copy of this License.  If the work\n-during execution displays copyright notices, you must include the\n-copyright notice for the Library among them, as well as a reference\n-directing the user to the copy of this License.  Also, you must do one\n-of these things:\n-\n-    a) Accompany the work with the complete corresponding\n-    machine-readable source code for the Library including whatever\n-    changes were used in the work (which must be distributed under\n-    Sections 1 and 2 above); and, if the work is an executable linked\n-    with the Library, with the complete machine-readable \"work that\n-    uses the Library\", as object code and/or source code, so that the\n-    user can modify the Library and then relink to produce a modified\n-    executable containing the modified Library.  (It is understood\n-    that the user who changes the contents of definitions files in the\n-    Library will not necessarily be able to recompile the application\n-    to use the modified definitions.)\n-\n-    b) Use a suitable shared library mechanism for linking with the\n-    Library.  A suitable mechanism is one that (1) uses at run time a\n-    copy of the library already present on the user's computer system,\n-    rather than copying library functions into the executable, and (2)\n-    will operate properly with a modified version of the library, if\n-    the user installs one, as long as the modified version is\n-    interface-compatible with the version that the work was made with.\n-\n-    c) Accompany the work with a written offer, valid for at\n-    least three years, to give the same user the materials\n-    specified in Subsection 6a, above, for a charge no more\n-    than the cost of performing this distribution.\n-\n-    d) If distribution of the work is made by offering access to copy\n-    from a designated place, offer equivalent access to copy the above\n-    specified materials from the same place.\n-\n-    e) Verify that the user has already received a copy of these\n-    materials or that you have already sent this user a copy.\n-\n-  For an executable, the required form of the \"work that uses the\n-Library\" must include any data and utility programs needed for\n-reproducing the executable from it.  However, as a special exception,\n-the materials to be distributed need not include anything that is\n-normally distributed (in either source or binary form) with the major\n-components (compiler, kernel, and so on) of the operating system on\n-which the executable runs, unless that component itself accompanies\n-the executable.\n-\n-  It may happen that this requirement contradicts the license\n-restrictions of other proprietary libraries that do not normally\n-accompany the operating system.  Such a contradiction means you cannot\n-use both them and the Library together in an executable that you\n-distribute.\n-\f\n-  7. You may place library facilities that are a work based on the\n-Library side-by-side in a single library together with other library\n-facilities not covered by this License, and distribute such a combined\n-library, provided that the separate distribution of the work based on\n-the Library and of the other library facilities is otherwise\n-permitted, and provided that you do these two things:\n-\n-    a) Accompany the combined library with a copy of the same work\n-    based on the Library, uncombined with any other library\n-    facilities.  This must be distributed under the terms of the\n-    Sections above.\n-\n-    b) Give prominent notice with the combined library of the fact\n-    that part of it is a work based on the Library, and explaining\n-    where to find the accompanying uncombined form of the same work.\n-\n-  8. You may not copy, modify, sublicense, link with, or distribute\n-the Library except as expressly provided under this License.  Any\n-attempt otherwise to copy, modify, sublicense, link with, or\n-distribute the Library is void, and will automatically terminate your\n-rights under this License.  However, parties who have received copies,\n-or rights, from you under this License will not have their licenses\n-terminated so long as such parties remain in full compliance.\n-\n-  9. You are not required to accept this License, since you have not\n-signed it.  However, nothing else grants you permission to modify or\n-distribute the Library or its derivative works.  These actions are\n-prohibited by law if you do not accept this License.  Therefore, by\n-modifying or distributing the Library (or any work based on the\n-Library), you indicate your acceptance of this License to do so, and\n-all its terms and conditions for copying, distributing or modifying\n-the Library or works based on it.\n-\n-  10. Each time you redistribute the Library (or any work based on the\n-Library), the recipient automatically receives a license from the\n-original licensor to copy, distribute, link with or modify the Library\n-subject to these terms and conditions.  You may not impose any further\n-restrictions on the recipients' exercise of the rights granted herein.\n-You are not responsible for enforcing compliance by third parties with\n-this License.\n-\f\n-  11. If, as a consequence of a court judgment or allegation of patent\n-infringement or for any other reason (not limited to patent issues),\n-conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot\n-distribute so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you\n-may not distribute the Library at all.  For example, if a patent\n-license would not permit royalty-free redistribution of the Library by\n-all those who receive copies directly or indirectly through you, then\n-the only way you could satisfy both it and this License would be to\n-refrain entirely from distribution of the Library.\n-\n-If any portion of this section is held invalid or unenforceable under any\n-particular circumstance, the balance of the section is intended to apply,\n-and the section as a whole is intended to apply in other circumstances.\n-\n-It is not the purpose of this section to induce you to infringe any\n-patents or other property right claims or to contest validity of any\n-such claims; this section has the sole purpose of protecting the\n-integrity of the free software distribution system which is\n-implemented by public license practices.  Many people have made\n-generous contributions to the wide range of software distributed\n-through that system in reliance on consistent application of that\n-system; it is up to the author/donor to decide if he or she is willing\n-to distribute software through any other system and a licensee cannot\n-impose that choice.\n-\n-This section is intended to make thoroughly clear what is believed to\n-be a consequence of the rest of this License.\n-\n-  12. If the distribution and/or use of the Library is restricted in\n-certain countries either by patents or by copyrighted interfaces, the\n-original copyright holder who places the Library under this License may add\n-an explicit geographical distribution limitation excluding those countries,\n-so that distribution is permitted only in or among countries not thus\n-excluded.  In such case, this License incorporates the limitation as if\n-written in the body of this License.\n-\n-  13. The Free Software Foundation may publish revised and/or new\n-versions of the Lesser General Public License from time to time.\n-Such new versions will be similar in spirit to the present version,\n-but may differ in detail to address new problems or concerns.\n-\n-Each version is given a distinguishing version number.  If the Library\n-specifies a version number of this License which applies to it and\n-\"any later version\", you have the option of following the terms and\n-conditions either of that version or of any later version published by\n-the Free Software Foundation.  If the Library does not specify a\n-license version number, you may choose any version ever published by\n-the Free Software Foundation.\n-\f\n-  14. If you wish to incorporate parts of the Library into other free\n-programs whose distribution conditions are incompatible with these,\n-write to the author to ask for permission.  For software which is\n-copyrighted by the Free Software Foundation, write to the Free\n-Software Foundation; we sometimes make exceptions for this.  Our\n-decision will be guided by the two goals of preserving the free status\n-of all derivatives of our free software and of promoting the sharing\n-and reuse of software generally.\n-\n-                            NO WARRANTY\n-\n-  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\n-WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\n-EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\n-OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\n-KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\n-LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\n-THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\n-WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\n-AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\n-FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\n-CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\n-LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\n-RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\n-FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\n-SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n-DAMAGES.\n-\n-                     END OF TERMS AND CONDITIONS\n-\f\n-           How to Apply These Terms to Your New Libraries\n-\n-  If you develop a new library, and you want it to be of the greatest\n-possible use to the public, we recommend making it free software that\n-everyone can redistribute and change.  You can do so by permitting\n-redistribution under these terms (or, alternatively, under the terms of the\n-ordinary General Public License).\n-\n-  To apply these terms, attach the following notices to the library.  It is\n-safest to attach them to the start of each source file to most effectively\n-convey the exclusion of warranty; and each file should have at least the\n-\"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the library's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This library is free software; you can redistribute it and/or\n-    modify it under the terms of the GNU Lesser General Public\n-    License as published by the Free Software Foundation; either\n-    version 2.1 of the License, or (at your option) any later version.\n-\n-    This library is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-    Lesser General Public License for more details.\n-\n-    You should have received a copy of the GNU Lesser General Public\n-    License along with this library; if not, write to the Free Software\n-    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-You should also get your employer (if you work as a programmer) or your\n-school, if any, to sign a \"copyright disclaimer\" for the library, if\n-necessary.  Here is a sample; alter the names:\n-\n-  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n-  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n-\n-  <signature of Ty Coon>, 1 April 1990\n-  Ty Coon, President of Vice\n-\n-That's all there is to it!, None, None, None, None, None, None, None, None, None, None, None, @@ -0,0 +1,59 @@\n+#!/bin/bash\n+set -e\n+\n+cd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")/..\"\n+\n+# see also \".mailmap\" for how email addresses and names are deduplicated\n+{\n+\tcat <<-'EOF'\n+\t# This file lists all individuals having contributed content to the repository.\n+\t# For how it is generated, see `scripts/generate-authors.sh`.\n+\tEOF\n+\n+\t# old manual entries \n+\tread -d '' authors <<-\"EOF\" || true\n+\tMichel Baylac\n+\tCyrille d'Haese\n+\tEllen Reitmayr\n+\tMichael Beckmann\n+\tOliver Beckmann\n+\tFedor Bezrukov\n+\tFabian Bieker\n+\tAaron Chen\n+\tFabrice Dessaint\n+\tNathan Dunn\n+\tAlexis Gallagher\n+\tDavid Gleich\n+\tBehrouz Javanmardi\n+\tBernd Kalbfuss\n+\tMartin K\u00e4hmer\n+\tErvin Kolenovic\n+\tKrzysztof A. Ko\u015bciuszkiewicz\n+\tChristian Kopf\n+\tJeffrey Kuhn\n+\tUwe Kuehn\n+\tFelix Langner\n+\tStephan Lau\n+\tAlex Montgomery\n+\tSaverio Mori\n+\tAmbrogio Oliva\n+\tStephan Rave\n+\tJohn Relph\n+\tHannes Restel\n+\tMoritz Ringler\n+\tRudolf Seemann\n+\tToralf Senger\n+\tManuel Siebeneicher\n+\tMike Smoot\n+\tUlrich St\u00e4rk\n+\tMartin Stolle\n+\tDavid Weitzman\n+\tJohn Zedlewski\n+\tSamin Muhammad Ridwanul Karim\n+\tStefan Robert\n+\tEOF\n+\n+\t# %aN = author name, %aE = author email\n+\techo -e \"$authors\\n$(git log --format='%aN')\" | LC_ALL=C.UTF-8 sort --unique --ignore-case\n+} > AUTHORS\n+, @@ -0,0 +1,351 @@\n+import sys\n+import os\n+import re\n+\n+res_dir = \"../src/main/resources/l10n\"\n+\n+keyFiles = {}\n+\n+# Builds a list of all translation keys in the list of lines.\n+def indexFile(lines):\n+    allKeys = []\n+    for line in lines:\n+        comment = line.find(\"#\")\n+        if (comment != 0):\n+            index = line.find(\"=\")\n+            while ((index > 0) and (line[index-1]==\"\\\\\")):\n+                index = line.find(\"=\", index+1)\n+            if (index > 0):\n+                allKeys.append(line[0:index])\n+    allKeys.sort()\n+    return allKeys\n+        \n+\n+# Finds all keys in the first list that are not present in the second list:\n+def findMissingKeys(first, second):\n+    missing = []\n+    for key in first:\n+        if not key in second:\n+            missing.append(key)\n+    return missing\n+\n+\n+# Appends all the given keys to the file:\n+def appendMissingKeys(filename, keys):\n+    file = open(filename, \"a\")\n+    file.write(\"\\n\")\n+    for key in keys:\n+        file.write(key+\"=\\n\")\n+\n+def handleFileSet(mainFile, files, changeFiles):\n+    f1 = open(mainFile)\n+    lines = f1.readlines()\n+    f1.close()\n+    keys = indexFile(lines)\n+    keysPresent = []\n+    for i in range(0, len(files)):\n+        f2 = open(files[i])\n+        lines = f2.readlines()\n+        f2.close()\n+        keysPresent.append(indexFile(lines))\n+        missing = findMissingKeys(keys, keysPresent[i])\n+        \n+        print \"\\n\\nFile '\"+files[i]+\"'\\n\"\n+        if len(missing) == 0:\n+            print \"----> No missing keys.\"\n+        else:\n+            print \"----> Missing keys:\"\n+            for key in missing:\n+                print key\n+\n+            if changeFiles == 1:\n+                print \"Update file?\",\n+                if raw_input() in ['y', 'Y']:\n+                    appendMissingKeys(files[i], missing)\n+            print \"\"\n+        \n+        # See if this file has keys that are not in the main file:\n+        redundant = findMissingKeys(keysPresent[i], keys)\n+        if len(redundant) > 0:\n+            print \"----> Possible obsolete keys (not in English language file):\"\n+            for key in redundant:\n+                print key\n+                \n+            #if changeFiles == 1:\n+            #   print \"Update file?\",\n+            #   if raw_input() in ['y', 'Y']:\n+            #       removeRedundantKeys(files[i], redundant)\n+            print \"\"\n+        \n+def handleJavaCode(filename, lines, keyList, notTermList):\n+    #Extract first string parameter from Localization.lang call. E.g., Localization.lang(\"Default\")\n+    reOnlyString = r'\"((\\\\\"|[^\"])*)\"[^\"]*'\n+    patt = re.compile(r'Localization\\s*\\.\\s*lang\\s*\\(\\s*' + reOnlyString)\n+    pattOnlyString = re.compile(reOnlyString)\n+\n+    #Find multiline Localization lang statements. E.g.:\n+    #Localization.lang(\"This is my string\" +\n+    # \"with a long text\")\n+    patt2 = re.compile(r'Localization\\s*\\.\\s*lang\\s*\\(([^)])*$')\n+\n+    pattPlus = re.compile(r'^\\s*\\+')\n+\n+    eList = list(enumerate(lines.split(\"\\n\")))\n+    i = 0\n+    while i < len(eList):\n+        linenum, curline = eList[i]\n+        \n+        #Remove Java single line comments\n+        if curline.find(\"http://\") < 0:\n+            curline = re.sub(\"//.*\", \"\", curline)\n+\n+        while (curline != \"\"):\n+            result = patt.search(curline)\n+            result2 = patt2.search(curline)\n+\n+            found = \"\"\n+\n+            if result2 and curline.find('\",') < 0:\n+                # not terminated\n+                # but it could be a multiline string\n+                if result:\n+                    curText = result.group(1)\n+                    searchForPlus = True\n+                else:\n+                    curText = \"\"\n+                    searchForPlus = False\n+                origI = i\n+                #inspect next line\n+                while i+1 < len(eList):\n+                    linenum2, curline2 = eList[i+1]\n+                    if (not searchForPlus) or pattPlus.search(curline2):\n+                        #from now on, we always have to search for a plus\n+                        searchForPlus = True\n+\n+                        #The current line has been handled here, therefore indicate to handle the next line\n+                        i = i+1\n+                        linenum = linenum2\n+                        curline = curline2\n+\n+                        #Search for the occurence of a string\n+                        result = pattOnlyString.search(curline2)\n+                        if result:\n+                            curText = curText + result.group(1)\n+                            #check for several strings in this line\n+                            if curline2.count('\\\"') > 2:\n+                                break\n+                            #check for several arguments in the line\n+                            if curline2.find('\",') > 0:\n+                                break\n+                            if curline2.endswith(\")\"):\n+                                break\n+                        else:\n+                            #plus sign at the beginning found, but no string\n+                            break\n+                    else:\n+                        #no continuation found\n+                        break\n+\n+                if origI == i:\n+                    print \"%s:%d: Not terminated: %s\"%(filename, linenum+1, curline)\n+                else:\n+                    found = curText\n+\n+            if result or (found != \"\"):\n+                if (found == \"\"):\n+                    #not a multiline string, found via the single line matching\n+                    #full string in one line\n+                    found = result.group(1)\n+\n+                found = found.replace(\" \", \"_\")\n+                #replace characters that need to be escaped in the language file\n+                found = found.replace(\"=\", r\"\\=\").replace(\":\",r\"\\:\")\n+                #replace Java-escaped \" to plain \"\n+                found = found.replace(r'\\\"','\"')\n+                #Java-escaped \\ to plain \\ need not to be converted - they have to be kept\n+                #e.g., \"\\\\#\" has to be contained as \"\\\\#\" in the key\n+                #found = found.replace('\\\\\\\\','\\\\')\n+                if (found != \"\") and (found not in keyList):\n+                    keyList.append(found)\n+                    keyFiles[found] = (filename, linenum)\n+                    #print \"Adding \", found\n+                #else:\n+                #   print \"Not adding: \"+found\n+                    \n+            #Prepare a possible second run (multiple Localization.lang on this line)\n+            if result:\n+                lastPos = result.span()[1]\n+                #regular expression is greedy. It will match until Localization.lang(\"\n+                #therefore, we have to adjust lastPos\n+                lastPos = lastPos - 14\n+                if len(curline) <= lastPos:\n+                    curline = \"\"\n+                else:\n+                    curline = curline[lastPos:]\n+            else:\n+                #terminate processing of this line, continue to next line\n+                curline = \"\"\n+                \n+        i = i+1\n+            \n+# Find all Java source files in the given directory, and read the lines of each,\n+# calling handleJavaCode on the contents:   \n+def handleDir(lists, dirname, fnames):\n+    keyList, notTermList = lists    \n+    for file in fnames:\n+        if len(file) > 6 and file[(len(file)-5):len(file)] == \".java\":\n+            fl = open(dirname+os.sep+file)\n+            lines = fl.read()\n+            fl.close()\n+            handleJavaCode(dirname + os.sep + file, lines, keyList, notTermList)\n+            \n+# Go through subdirectories and call handleDir on all diroctories:                      \n+def traverseFileTree(dir):\n+    keyList = []\n+    notTermList = []\n+    os.path.walk(dir, handleDir, (keyList, notTermList))\n+    print \"Keys found: \"+str(len(keyList))\n+    return keyList\n+\n+    \n+# Searches out all translation calls in the Java source files, and reports which\n+# are not present in the given resource file.\n+#\n+# arg: mainFile: a .properties file with the keys to sync with\n+def findNewKeysInJavaCode(mainFile, dir, update):\n+    keystempo = []\n+    keyListtempo = []\n+    f1 = open(mainFile)\n+    lines = f1.readlines()\n+    f1.close()\n+    keys = indexFile(lines)\n+    keyList = traverseFileTree(dir)\n+   \n+    # Open the file again, for appending:\n+    if update:\n+        f1 = open(mainFile, \"a\")\n+        f1.write(\"\\n\")\n+        \n+    # Look for keys that are used in the code, but not present in the language file:\n+    for key in keyList:\n+        value = key.replace(\"\\\\:\",\":\").replace(\"\\\\=\", \"=\")\n+        if key not in keys:\n+            fileName, lineNum = keyFiles[key]\n+            print \"%s:%i:Missing key: %s\"%(fileName, lineNum + 1, value)\n+            if update:\n+                f1.write(key+\"=\"+value+\"\\n\")\n+    \n+    # Look for keys in the language file that are not used in the code:\n+    for key in keys:\n+        if key not in keyList:\n+            print \"Possible obsolete key: \"+key\n+        \n+    if update:\n+        f1.close()\n+    \n+    \n+def lookForDuplicates(file, displayKeys):\n+    duplicount = 0\n+    f1 = open(file)\n+    lines = f1.readlines()\n+    f1.close()\n+    mappings = {}\n+    emptyVals = 0\n+    for line in lines:\n+        comment = line.find(\"#\")\n+        index = line.find(\"=\")\n+        if (comment != 0) and (index > 0):\n+            key = line[0:index]\n+            value = line[index+1:].strip()\n+            if key in mappings:\n+                mappings[key].append(value)\n+                duplicount += 1\n+                if displayKeys:\n+\t\t  print \"Duplicate: \"+file+\": \"+key+\" =\",\n+\t\t  print mappings[key]\n+            else:\n+                mappings[key] = [value]\n+                if value == \"\":\n+\t\t    emptyVals = emptyVals + 1\n+                    if displayKeys:\n+\t\t      print \"Empty value: \"+file+\": \"+key\n+                #print \"New: \"+value\n+    if duplicount > 0:\n+\tdupstring = str(duplicount)+\" duplicates. \"\n+    else:\n+\tdupstring = \"\"\n+    if emptyVals > 0:\n+        emptStr = str(emptyVals)+\" empty values. \"\n+    else:\n+\temptStr = \"\"\n+    if duplicount+emptyVals > 0:\n+\tokString = \"\"\n+    else:\n+\tokString = \"ok\"\n+    print file+\": \"+dupstring+emptStr+okString\n+    #print file+\": \"+str(emptyVals)+\" empty values.\"\n+        \n+        \n+############# Main part ###################\n+\n+if len(sys.argv) == 1:\n+    print \"\"\"This program must be run from the jabref base directory.\n+    \n+Usage: syncLang.py option   \n+Option can be one of the following:\n+ \n+    -c: Search the language files for empty and duplicate translations. Display only\n+        counts for duplicated and empty values in each language file.\n+\n+    -d: Search the language files for empty and duplicate translations. \n+        For each duplicate set found, a list will be printed showing the various \n+        translations for the same key. There is currently to option to remove duplicates\n+        automatically.\n+        \n+    -s [-u]: Search the Java source files for language keys. All keys that are found in the source files\n+        but not in \"JabRef_en.properties\" are listed. If the -u option is specified, these keys will\n+        automatically be added to \"JabRef_en.properties\".\n+        \n+        The program will also list \"Not terminated\" keys. These are keys that are concatenated over \n+        more than one line, that the program is not (currently) able to resolve.\n+        \n+        Finally, the program will list \"Possible obsolete keys\". These are keys that are present in\n+        \"JabRef_en.properties\", but could not be found in the Java source code. Note that the \n+        \"Not terminated\" keys will be likely to appear here, since they were not resolved.\n+        \n+    -t [-u]: Compare the contents of \"JabRef_en.properties\" and \"Menu_en.properties\" against the other \n+        language files. The program will list for all the other files which keys from the English\n+        file are missing. Additionally, the program will list keys in the other files which are\n+        not present in the English file - possible obsolete keys.\n+        \n+        If the -u option is specified, all missing keys will automatically be added to the files.\n+        There is currently no option to remove obsolete keys automatically.\n+\"\"\"\n+    \n+elif (len(sys.argv) >= 2) and (sys.argv[1] == \"-s\"):\n+    if (len(sys.argv) >= 3) and (sys.argv[2] == \"-u\"):\n+        update = 1\n+    else:\n+        update = 0\n+    findNewKeysInJavaCode(os.path.join(res_dir, \"JabRef_en.properties\"), \".\", update)\n+    \n+elif (len(sys.argv) >= 2) and (sys.argv[1] == \"-t\"):\n+    if (len(sys.argv) >= 3) and (sys.argv[2] == \"-u\"):\n+        changeFiles = 1\n+    else:\n+        changeFiles = 0\n+\n+    filesJabRef = filter(lambda s: (s.startswith('JabRef_') and not (s.startswith('JabRef_en'))), os.listdir(res_dir));\n+    filesJabRef = [os.path.join(res_dir, i) for i in filesJabRef];\n+    filesMenu = filter(lambda s: (s.startswith('Menu_') and not (s.startswith('Menu_en'))), os.listdir(res_dir));\n+    filesMenu = [os.path.join(res_dir, i) for i in filesMenu];\n+\n+    handleFileSet(os.path.join(res_dir, \"JabRef_en.properties\"), filesJabRef, changeFiles)\n+    handleFileSet(os.path.join(res_dir, \"Menu_en.properties\"), filesMenu, changeFiles)\n+\n+elif (len(sys.argv) >= 2) and ((sys.argv[1] == \"-d\") or (sys.argv[1] == \"-c\")):\n+    files = filter(lambda s: (s.startswith('JabRef_') and not (s.startswith('JabRef_en'))), os.listdir(res_dir));\n+    files.extend(filter(lambda s: (s.startswith('Menu_') and not (s.startswith('Menu_en'))), os.listdir(res_dir)));\n+    files = [os.path.join(res_dir, i) for i in files];\n+    for file in files:\n+        lookForDuplicates(file, sys.argv[1] == \"-d\"), None, None, None, @@ -1,65 +0,0 @@\n-header {\n-package net.sf.jabref.search;\n-}\n-\n-class SearchExpressionLexer extends Lexer;\n-\n-options {\n-\tk = 2;\n-\texportVocab = SearchExpressionLexer;\n-\tcaseSensitive = false;\n-\tcaseSensitiveLiterals = false;\n-\tcharVocabulary = '\\3'..'\\377'; // 8 bit\n-\ttestLiterals = false;\n-}\n-\n-tokens {\n-\t\"and\";\n-\t\"or\";\n-\t\"not\";\n-\t\"contains\";\n-\t\"matches\";\n-\n-}\n-\n-\n-\n-WS options { paraphrase = \"white space\"; }\n-\t:\t(' '\n-\t|\n-\t'\\t'\n-\t)\n-\t\t{ $setType(Token.SKIP); }\n-\t;\n-\n-LPAREN options { paraphrase = \"'('\"; }\n-\t:\t'('\n-\t;\n-\n-RPAREN options { paraphrase = \"')'\"; }\n-\t:\t')'\n-\t;\n-\n-EQUAL options { paraphrase = \"'='\"; }\n-\t:\t\"=\";\n-\n-EEQUAL options { paraphrase = \"'=='\"; }\n-\t:\t\"==\";\n-\n-NEQUAL options { paraphrase = \"'!='\"; }\n-\t:\t\"!=\";\n-\n-QUOTE options { paraphrase = \"'\\\"'\"; }\n-\t:\t'\"';\n-\n-STRING options { paraphrase = \"a text literal\"; }\n-\t:\tQUOTE! (~'\"')* QUOTE!;\n-\n-protected\n-LETTER options { paraphrase = \"a letter\"; testLiterals = true; }\n-\t: ~(' ' | '\\t' | '\"' | '(' | ')' | '=' | '!'); //'a'..'z';\n-\n-FIELDTYPE options { paraphrase = \"a field type\"; testLiterals = true; }\n-\t:\t( LETTER )+\n-\t;\n-, @@ -1,103 +0,0 @@\n-header {\n-package net.sf.jabref.search;\n-import java.io.StringReader;\n-}\n-\n-class SearchExpressionParser extends Parser;\n-\n-options {\n-\timportVocab = SearchExpressionLexer; // use vocab generated by lexer\n-\texportVocab = SearchExpressionParser;\n-\tdefaultErrorHandler = false;\n-\tbuildAST = true;\n-\tk = 3;\n-}\n-\n-tokens {\n-\tRegularExpression;\n-\tAnd;\n-\tOr;\n-\tNot;\n-\tExpressionSearch;\n-}\n-\n-// ---------- Java Source Code ----------\n-\n-{\n-\tpublic boolean caseSensitive = false;\n-    public boolean regex = true;\n-\t/** Creates a parser and lexer instance and tests the specified String.\n-\t  * Returns the AST if s is in valid syntax for advanced field search, null otherwise. */\n-\tpublic static AST checkSyntax(String s, boolean caseSensitive, boolean regex) {\n-\t\t// Is there some way to prevent instance creation here?\n-\t\t// How can a parser and/or lexer be reused?\n-\t\tSearchExpressionParser parser = new SearchExpressionParser(new SearchExpressionLexer(\n-\t\t\t\tnew StringReader(s)));\n-\t\tparser.caseSensitive = caseSensitive;\n-\t\tparser.regex = regex;\n-\t\ttry {\n-\t\t\tparser.searchExpression();\n-\t\t\treturn parser.getAST();\n-\t\t} catch (Exception e) {\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-}\n-\n-// ---------- Text and Regular Expressions ----------\n-\n-quotedRegularExpression[boolean caseSensitive, boolean regex]:\n-\t\tvar_s:STRING\n-\t\t\t{\n-\t\t\t\t## = astFactory.make((new ASTArray(2)).add(new RegExNode(RegularExpression,var_s.getText(),caseSensitive,regex)).add(##));\n-\t\t\t}\n-\t\t;\n-\n-simpleRegularExpression[boolean caseSensitive, boolean regex]:\n-\t\tvar_s:FIELDTYPE\n-\t\t\t{\n-\t\t\t\t## = astFactory.make((new ASTArray(2)).add(new RegExNode(RegularExpression,var_s.getText(),caseSensitive,regex)).add(##));\n-\t\t\t}\n-\t\t;\n-\n-// ---------- Condition and Expressions ----------\n-\n-searchExpression:\n-\tcondition EOF;\n-\n-condition:\n-\t\t(expression LITERAL_and condition) => expression LITERAL_and! condition { ## = #( [And], ##); }\n-\t\t|\n-\t\t(expression LITERAL_or condition) => expression LITERAL_or! condition { ## = #( [Or], ##); }\n-\t\t|\n-\t\texpression // negation is done in expression\n-\t\t;\n-\n-expression:\n-\t\texpressionSearch\n-\t\t|\n-\t\tLPAREN! condition RPAREN!\n-\t\t|\n-\t\tLITERAL_not! expressionSearch { ## = #( [Not], ## ); }         // NOT single expression\n-\t\t|\n-\t\tLITERAL_not! LPAREN! condition RPAREN! { ## = #( [Not], ## ); } // NOT ( ... )\n-\t\t;\n-\n-expressionSearch:\n-\t\tquotedRegularExpression[false,true] compareType quotedRegularExpression[caseSensitive,regex]\n-\t\t\t{ ## = #( [ExpressionSearch], ## ); }\n-\t\t|\n-\t\tsimpleRegularExpression[false,true] compareType quotedRegularExpression[caseSensitive,regex]\n-\t\t\t{ ## = #( [ExpressionSearch], ## ); }\n-\t\t|\n-\t\tsimpleRegularExpression[false,true] compareType simpleRegularExpression[caseSensitive,regex]\n-\t\t\t{ ## = #( [ExpressionSearch], ## ); }\n-\t\t|\n-\t\tquotedRegularExpression[false,true] compareType simpleRegularExpression[caseSensitive,regex]\n-\t\t\t{ ## = #( [ExpressionSearch], ## ); }\n-\t\t;\n-\n-compareType:\n-\t\tLITERAL_contains | LITERAL_matches | EQUAL | EEQUAL | NEQUAL\n-\t\t;\n-, @@ -1,110 +0,0 @@\n-header {\n-package net.sf.jabref.search;\n-import java.util.*;\n-import java.util.regex.*;\n-import net.sf.jabref.*;\n-}\n-\n-class SearchExpressionTreeParser extends TreeParser;\n-\n-options {\n-\timportVocab = SearchExpressionParser;\n-\texportVocab = SearchExpressionTreeParser;\n-}\n-\n-{\n-\tprivate static final int MATCH_EXACT = 0;\n-\tprivate static final int MATCH_CONTAINS = 1;\n-\tprivate static final int MATCH_DOES_NOT_CONTAIN = 2;\n-\n-\tprivate BibtexEntry bibtexEntry;\n-\tprivate Object[] searchKeys;\n-\n-    private static final int PSEUDOFIELD_TYPE = 1;\n-\n-    public int apply(AST ast, BibtexEntry bibtexEntry) throws antlr.RecognitionException {\n-\t\tthis.bibtexEntry = bibtexEntry;\n-\t\t// specification of fields to search is done in the search expression itself\n-\t\tthis.searchKeys = bibtexEntry.getAllFields().toArray();\n-\t\treturn tSearchExpression(ast) ? 1 : 0;\n-\t}\n-}\n-\n-\n-\n-// ---------- Condition and Expressions ----------\n-\n-tSearchExpression returns [boolean ret = false;] throws PatternSyntaxException\n-{\n-\tboolean a = false, b = false;\n-}\n-\t: // predicates for and/or used to evaluate 2nd expression only if necessary\n-\t#( And a=tSearchExpression ( {a}? b=tSearchExpression | . ) ) { ret = a && b; }\n-\t|\n-\t#( Or a=tSearchExpression ( {!a}? b=tSearchExpression | . ) ) { ret = a || b; }\n-\t|\n-\t#( Not a=tSearchExpression ) { ret = !a; }\n-\t|\n-\tret=tExpressionSearch\n-\t;\n-\n-tSearchType returns [ int matchType = 0; ]\n-\t:\n-\tLITERAL_contains { matchType = MATCH_CONTAINS; }\n-\t|\n-\tLITERAL_matches { matchType = MATCH_EXACT; }\n-\t|\n-\tEQUAL { matchType = MATCH_CONTAINS; }\n-\t|\n-\tEEQUAL { matchType = MATCH_EXACT; }\n-\t|\n-\tNEQUAL { matchType = MATCH_DOES_NOT_CONTAIN; }\n-\t;\n-\n-tExpressionSearch returns [ boolean ret = false; ] throws PatternSyntaxException\n-{\n-\tint matchType = 0;\n-}\n-\t:\n-\t#( ExpressionSearch var_f:RegularExpression matchType=tSearchType var_v:RegularExpression\n-\t\t{\n-\t\t\tPattern fieldSpec = ((RegExNode)var_f).getPattern();\n-\t\t\tPattern valueSpec = ((RegExNode)var_v).getPattern();\n-\t\t\tint pseudoField = 0;\n-            boolean noSuchField = true;\n-\t\t\t// this loop iterates over all regular keys, then over pseudo keys like \"type\"\n-\t\t\tfor (int i = 0; i < searchKeys.length + PSEUDOFIELD_TYPE && !ret; ++i) {\n-\t\t\t\tString content;\n-\t\t\t\tswitch (i - searchKeys.length + 1) {\n-\t\t\t\t\tcase PSEUDOFIELD_TYPE:\n-\t\t\t\t\t\tif (!fieldSpec.matcher(\"entrytype\").matches())\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\tcontent = bibtexEntry.getType().getName();\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tdefault: // regular field\n-\t\t\t\t\t\tif (!fieldSpec.matcher(searchKeys[i].toString()).matches())\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\tcontent = (String)bibtexEntry.getField(searchKeys[i].toString());\n-\t\t\t\t}\n-                noSuchField = false;\n-\t\t\t\tif (content == null)\n-\t\t\t\t\tcontinue; // paranoia\n-\t\t\t\tMatcher matcher = valueSpec.matcher(content);\n-\t\t\t\tswitch (matchType) {\n-\t\t\t\tcase MATCH_CONTAINS:\n-\t\t\t\t\tret = matcher.find();\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase MATCH_EXACT:\n-\t\t\t\t\tret = matcher.matches();\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase MATCH_DOES_NOT_CONTAIN:\n-\t\t\t\t\tret = !matcher.find();\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-            if (noSuchField && matchType == MATCH_DOES_NOT_CONTAIN)\n-                ret = true; // special case\n-\t\t}\n-\t)\n-\t;\n-, @@ -0,0 +1,49 @@\n+/**\n+ * This is the antlr v4 grammar for defining search expressions.\n+ *\n+ * These search expressions are used for searching the bibtex library. They are heavily used for search groups.\n+ */\n+grammar Search;\n+\n+WS: [ \\t] -> skip; // whitespace is ignored/skipped\n+\n+LPAREN:'(';\n+RPAREN:')';\n+\n+EQUAL:'='; // semantically the same as CONTAINS\n+EEQUAL:'=='; // semantically the same as MATCHES\n+NEQUAL:'!=';\n+\n+AND:[aA][nN][dD]; // 'and' case insensitive\n+OR:[oO][rR]; // 'or' case insensitive\n+CONTAINS:[cC][oO][nN][tT][aA][iI][nN][sS]; // 'contains' case insensitive\n+MATCHES:[mM][aA][tT][cC][hH][eE][sS]; // 'matches' case insensitive\n+NOT:[nN][oO][tT]; // 'not' case insensitive\n+\n+STRING:QUOTE (~'\"')* QUOTE;\n+QUOTE:'\"';\n+\n+FIELDTYPE:LETTER+;\n+// fragments are not accessible from the code, they are only for describing the grammar better\n+fragment LETTER : ~[ \\t\"()=!];\n+\n+\n+start:\n+    expression EOF;\n+\n+// labels are used to refer to parts of the rules in the generated code later on\n+// label=actualThingy\n+expression:\n+    LPAREN expression RPAREN                                  #parenExpression  // example: (author=miller)\n+    | left=expression operator=(AND | OR) right=expression    #binaryExpression // example: author = miller and title = test\n+    | NOT expression                                          #unaryExpression  // example: not author = miller\n+    | comparison                                              #atomExpression\n+    ;\n+\n+comparison:\n+    left=name operator=(CONTAINS | MATCHES | EQUAL | EEQUAL | NEQUAL) right=name; // example: author != miller\n+\n+name:\n+    STRING // example: \"miller\"\n+    | FIELDTYPE // example: author\n+    ;\n\\ No newline at end of file, @@ -1 +0,0 @@\n-*.*\n\\ No newline at end of file, @@ -1,68 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import spin.Spin;\n-\n-/**\n- * Convenience class for creating an object used for performing a time-\n- * consuming action off the Swing thread, and optionally performing GUI\n- * work afterwards. This class is supported by runCommand() in BasePanel,\n- * which, if the action called is an AbstractWorker, will run its run()\n- * method through the Worker interface, and then its update() method through\n- * the CallBack interface. This procedure ensures that run() cannot freeze\n- * the GUI, and that update() can safely update GUI components.\n- */\n-public abstract class AbstractWorker implements Worker, CallBack {\n-\n-    private final Worker worker;\n-    private final CallBack callBack;\n-\n-\n-    public AbstractWorker() {\n-        worker = (Worker) Spin.off(this);\n-        callBack = (CallBack) Spin.over(this);\n-\n-    }\n-\n-    public void init() throws Throwable {\n-\n-    }\n-\n-    /**\n-     * This method returns a wrapped Worker instance of this AbstractWorker.\n-     * whose methods will automatically be run off the EDT (Swing) thread.\n-     */\n-    public Worker getWorker() {\n-        return worker;\n-    }\n-\n-    /**\n-     * This method returns a wrapped CallBack instance of this AbstractWorker\n-     * whose methods will automatically be run on the EDT (Swing) thread.\n-     */\n-    public CallBack getCallBack() {\n-        return callBack;\n-    }\n-\n-    /**\n-     * Empty implementation of the update() method. Override this method\n-     * if a callback is needed.\n-     */\n-    @Override\n-    public void update() {\n-    }\n-}, @@ -1,305 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.BorderLayout;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import javax.swing.BorderFactory;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComboBox;\n-import javax.swing.JLabel;\n-import javax.swing.JOptionPane;\n-import javax.swing.JPanel;\n-import javax.swing.JTextField;\n-import javax.swing.UIManager;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n-\n-import net.sf.jabref.help.HelpAction;\n-import net.sf.jabref.help.HelpDialog;\n-import net.sf.jabref.journals.JournalAbbreviations;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-import net.sf.jabref.remote.RemoteListenerLifecycle;\n-import net.sf.jabref.remote.RemoteUtil;\n-\n-public class AdvancedTab extends JPanel implements PrefsTab {\n-\n-    private final JabRefPreferences _prefs;\n-    HelpDialog helpDiag;\n-    JPanel pan = new JPanel();\n-    JLabel lab;\n-    private final JCheckBox useDefault;\n-    private final JCheckBox useRemoteServer;\n-    private final JCheckBox useNativeFileDialogOnMac;\n-    private final JCheckBox filechooserDisableRename;\n-    private final JCheckBox useIEEEAbrv;\n-    private final JCheckBox biblatexMode;\n-    private final JComboBox className;\n-    private final JTextField remoteServerPort;\n-    JPanel p1 = new JPanel();\n-    private String oldLnf = \"\";\n-    private boolean oldUseDef;\n-    private boolean oldBiblMode = false;\n-    private int oldPort = -1;\n-\n-    public final static String PREF_IMPORT_CONVERT_TO_EQUATION = \"importFileConvertToEquation\";\n-    public final static String PREF_IMPORT_FILENAMEPATTERN = \"importFileNamePattern\";\n-\n-    private final JCheckBox useConvertToEquation;\n-    private final JCheckBox useCaseKeeperOnSearch;\n-    private final JCheckBox useUnitFormatterOnSearch;\n-    private final JabRef jabRef;\n-\n-\n-    public AdvancedTab(JabRefPreferences prefs, HelpDialog diag, JabRef jabRef) {\n-        this.jabRef = jabRef;\n-        _prefs = prefs;\n-\n-        HelpAction remoteHelp = new HelpAction(diag, GUIGlobals.remoteHelp, \"Help\",\n-                GUIGlobals.getIconUrl(\"helpSmall\"));\n-        useDefault = new JCheckBox(Globals.lang(\"Use other look and feel\"));\n-        useRemoteServer = new JCheckBox(Globals.lang(\"Listen for remote operation on port\") + ':');\n-        useNativeFileDialogOnMac = new JCheckBox(Globals.lang(\"Use native file dialog\"));\n-        filechooserDisableRename = new JCheckBox(Globals.lang(\"Disable file renaming in non-native file dialog\"));\n-        useIEEEAbrv = new JCheckBox(Globals.lang(\"Use IEEE LaTeX abbreviations\"));\n-        biblatexMode = new JCheckBox(Globals.lang(\"BibLaTeX mode\"));\n-        remoteServerPort = new JTextField();\n-        String[] possibleLookAndFeels = {\n-                \"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\",\n-                \"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\",\n-                \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\",\n-                \"javax.swing.plaf.mac.MacLookAndFeel\",\n-                \"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\",\n-                \"javax.swing.plaf.metal.MetalLookAndFeel\"\n-        };\n-        // Only list L&F which are available\n-        List<String> lookAndFeels = new ArrayList<String>();\n-        for (String lf : possibleLookAndFeels) {\n-            try {\n-                // Try to find L&F, throws exception if not successful\n-                Class.forName(lf);\n-                lookAndFeels.add(lf);\n-            } catch (ClassNotFoundException ignored) {\n-            }\n-        }\n-        className = new JComboBox(lookAndFeels.toArray(new String[lookAndFeels.size()]));\n-        className.setEditable(true);\n-        final JComboBox clName = className;\n-        useDefault.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent e) {\n-                clName.setEnabled(((JCheckBox) e.getSource()).isSelected());\n-            }\n-        });\n-        useConvertToEquation = new JCheckBox(Globals.lang(\"Prefer converting subscripts and superscripts to equations rather than text\"));\n-        useCaseKeeperOnSearch = new JCheckBox(Globals.lang(\"Add {} to specified title words on search to keep the correct case\"));\n-        useUnitFormatterOnSearch = new JCheckBox(Globals.lang(\"Format units by adding non-breaking separators and keeping the correct case on search\"));\n-\n-        FormLayout layout = new FormLayout\n-                (\"1dlu, 8dlu, left:pref, 4dlu, fill:3dlu\",//, 4dlu, fill:pref\",// 4dlu, left:pref, 4dlu\",\n-                \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-        JPanel pan = new JPanel();\n-\n-        if (!Globals.ON_MAC) {\n-            builder.appendSeparator(Globals.lang(\"Look and feel\"));\n-            JLabel lab = new JLabel(Globals.lang(\"Default look and feel\") + \": \" + UIManager.getSystemLookAndFeelClassName());\n-            builder.nextLine();\n-            builder.append(pan);\n-            builder.append(lab);\n-            builder.nextLine();\n-            builder.append(pan);\n-            builder.append(useDefault);\n-            builder.nextLine();\n-            builder.append(pan);\n-            JPanel pan2 = new JPanel();\n-            lab = new JLabel(Globals.lang(\"Class name\") + ':');\n-            pan2.add(lab);\n-            pan2.add(className);\n-            builder.append(pan2);\n-            builder.nextLine();\n-            builder.append(pan);\n-            lab = new JLabel(Globals.lang(\"Note that you must specify the fully qualified class name for the look and feel,\"));\n-            builder.append(lab);\n-            builder.nextLine();\n-            builder.append(pan);\n-            lab = new JLabel(Globals.lang(\"and the class must be available in your classpath next time you start JabRef.\"));\n-            builder.append(lab);\n-            builder.nextLine();\n-        }\n-        builder.appendSeparator(Globals.lang(\"Remote operation\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(new JLabel(\"<html>\" + Globals.lang(\"This feature lets new files be opened or imported into an \"\n-                + \"already running instance of JabRef<BR>instead of opening a new instance. For instance, this \"\n-                + \"is useful when you open a file in JabRef<br>from your web browser.\"\n-                + \"<BR>Note that this will prevent you from running more than one instance of JabRef at a time.\") + \"</html>\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-\n-        JPanel p = new JPanel();\n-        p.add(useRemoteServer);\n-        p.add(remoteServerPort);\n-        p.add(remoteHelp.getIconButton());\n-        builder.append(p);\n-\n-        //if (Globals.ON_MAC) {\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"File dialog\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(useNativeFileDialogOnMac);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(filechooserDisableRename);\n-        //}\n-        // IEEE\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"Search IEEEXplore\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(useIEEEAbrv);\n-\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"BibLaTeX mode\"));\n-        builder.append(new JPanel());\n-        builder.append(biblatexMode);\n-\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"Import conversions\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(useConvertToEquation);\n-        builder.nextLine();\n-        builder.append(pan);\n-        builder.append(useCaseKeeperOnSearch);\n-        builder.nextLine();\n-        builder.append(pan);\n-        builder.append(useUnitFormatterOnSearch);\n-\n-        pan = builder.getPanel();\n-        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        setLayout(new BorderLayout());\n-        add(pan, BorderLayout.CENTER);\n-\n-    }\n-\n-    @Override\n-    public void setValues() {\n-        oldUseDef = _prefs.getBoolean(\"useDefaultLookAndFeel\");\n-        oldLnf = _prefs.get(\"lookAndFeel\");\n-        useDefault.setSelected(!oldUseDef);\n-        className.setSelectedItem(oldLnf);\n-        className.setEnabled(!oldUseDef);\n-        useRemoteServer.setSelected(_prefs.getBoolean(\"useRemoteServer\"));\n-        oldPort = _prefs.getInt(\"remoteServerPort\");\n-        remoteServerPort.setText(String.valueOf(oldPort));\n-        useNativeFileDialogOnMac.setSelected(Globals.prefs.getBoolean(\"useNativeFileDialogOnMac\"));\n-        filechooserDisableRename.setSelected(Globals.prefs.getBoolean(\"filechooserDisableRename\"));\n-        useIEEEAbrv.setSelected(Globals.prefs.getBoolean(\"useIEEEAbrv\"));\n-        oldBiblMode = Globals.prefs.getBoolean(\"biblatexMode\");\n-        biblatexMode.setSelected(oldBiblMode);\n-        useConvertToEquation.setSelected(Globals.prefs.getBoolean(\"useConvertToEquation\"));\n-        useCaseKeeperOnSearch.setSelected(Globals.prefs.getBoolean(\"useCaseKeeperOnSearch\"));\n-        useUnitFormatterOnSearch.setSelected(Globals.prefs.getBoolean(\"useUnitFormatterOnSearch\"));\n-    }\n-\n-    @Override\n-    public void storeSettings() {\n-        _prefs.putBoolean(\"useDefaultLookAndFeel\", !useDefault.isSelected());\n-        _prefs.put(\"lookAndFeel\", className.getSelectedItem().toString());\n-        _prefs.putBoolean(\"useNativeFileDialogOnMac\", useNativeFileDialogOnMac.isSelected());\n-        _prefs.putBoolean(\"filechooserDisableRename\", filechooserDisableRename.isSelected());\n-        UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n-        _prefs.putBoolean(\"useIEEEAbrv\", useIEEEAbrv.isSelected());\n-        if (useIEEEAbrv.isSelected()) {\n-            Globals.journalAbbrev = new JournalAbbreviations(\"/resource/IEEEJournalList.txt\");\n-        }\n-        try {\n-            int port = Integer.parseInt(remoteServerPort.getText());\n-            if (port != oldPort) {\n-                _prefs.putInt(\"remoteServerPort\", port);\n-                /*JOptionPane.showMessageDialog(null, Glbals.lang(\"You have changed the menu and label font size. \"\n-                        + \"You must restart JabRef for this to come into effect.\"), Globals.lang(\"Changed font settings\"),\n-                        JOptionPane.WARNING_MESSAGE);*/\n-            }\n-\n-        } catch (NumberFormatException ex) {\n-            ex.printStackTrace();\n-        }\n-        _prefs.putBoolean(\"useRemoteServer\", useRemoteServer.isSelected());\n-        if (useRemoteServer.isSelected()) {\n-            RemoteListenerLifecycle.openAndStartRemoteListener(jabRef);\n-        } else {\n-            RemoteListenerLifecycle.disableRemoteListener();\n-        }\n-\n-        _prefs.putBoolean(\"biblatexMode\", biblatexMode.isSelected());\n-\n-        if ((useDefault.isSelected() == oldUseDef) ||\n-                !oldLnf.equals(className.getSelectedItem().toString())) {\n-            JOptionPane.showMessageDialog(null,\n-                    Globals.lang(\"You have changed the look and feel setting.\")\n-                            .concat(\" \")\n-                            .concat(Globals.lang(\"You must restart JabRef for this to come into effect.\")),\n-                    Globals.lang(\"Changed look and feel settings\"),\n-                    JOptionPane.WARNING_MESSAGE);\n-        }\n-\n-        if (biblatexMode.isSelected() != oldBiblMode) {\n-            JOptionPane.showMessageDialog(null,\n-                    Globals.lang(\"You have toggled the BibLaTeX mode.\")\n-                            .concat(\" \")\n-                            .concat(\"You must restart JabRef for this change to come into effect.\"),\n-                    Globals.lang(\"BibLaTeX mode\"), JOptionPane.WARNING_MESSAGE);\n-        }\n-\n-        _prefs.putBoolean(\"useConvertToEquation\", useConvertToEquation.isSelected());\n-        _prefs.putBoolean(\"useCaseKeeperOnSearch\", useCaseKeeperOnSearch.isSelected());\n-        _prefs.putBoolean(\"useUnitFormatterOnSearch\", useUnitFormatterOnSearch.isSelected());\n-    }\n-\n-    @Override\n-    public boolean readyToClose() {\n-\n-        try {\n-            int portNumber = Integer.parseInt(remoteServerPort.getText());\n-            if (RemoteUtil.isValidPartNumber(portNumber)) {\n-                return true; // Ok, the number was legal.\n-            } else {\n-                throw new NumberFormatException();\n-            }\n-        } catch (NumberFormatException ex) {\n-            JOptionPane.showMessageDialog\n-                    (null, Globals.lang(\"You must enter an integer value in the interval 1025-65535 in the text field for\") + \" '\" +\n-                            Globals.lang(\"Remote server port\") + '\\'', Globals.lang(\"Remote server port\"),\n-                            JOptionPane.ERROR_MESSAGE);\n-            return false;\n-        }\n-\n-    }\n-\n-    @Override\n-    public String getTabName() {\n-        return Globals.lang(\"Advanced\");\n-    }\n-\n-}, @@ -1,248 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.BorderLayout;\n-import java.awt.Font;\n-import java.awt.GridBagLayout;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-import javax.swing.*;\n-\n-import net.sf.jabref.gui.ColorSetupPanel;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n-class AppearancePrefsTab extends JPanel implements PrefsTab {\n-\n-    private final JabRefPreferences _prefs;\n-    private final JCheckBox colorCodes;\n-    private final JCheckBox overrideFonts;\n-    private final JCheckBox showGrid;//, useCustomIconTheme;\n-    private final ColorSetupPanel colorPanel = new ColorSetupPanel();\n-    private Font font = GUIGlobals.CURRENTFONT;\n-    private int oldMenuFontSize;\n-    private boolean oldOverrideFontSize;\n-    private final JTextField fontSize;\n-    private final JTextField rowPadding;//, customIconThemeFile;\n-\n-\n-    /**\n-     * Customization of appearance parameters.\n-     *\n-     * @param prefs a <code>JabRefPreferences</code> value\n-     */\n-    public AppearancePrefsTab(JabRefPreferences prefs) {\n-        _prefs = prefs;\n-        setLayout(new BorderLayout());\n-\n-        // Font sizes:\n-        fontSize = new JTextField(5);\n-\n-        // Row padding size:\n-        rowPadding = new JTextField(5);\n-\n-        colorCodes = new JCheckBox(\n-                Globals.lang(\"Color codes for required and optional fields\"));\n-        /*antialias = new JCheckBox(Globals.lang\n-                  (\"Use antialiasing font\"));*/\n-        overrideFonts = new JCheckBox(Globals.lang(\"Override default font settings\"));\n-\n-        showGrid = new JCheckBox(Globals.lang(\"Show gridlines\"));\n-\n-        //useCustomIconTheme = new JCheckBox(Globals.lang(\"Use custom icon theme\"));\n-        //customIconThemeFile = new JTextField();\n-        FormLayout layout = new FormLayout\n-                (\"1dlu, 8dlu, left:pref, 4dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, fill:pref\",\n-                        \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-        builder.leadingColumnOffset(2);\n-        JLabel lab;\n-        builder.appendSeparator(Globals.lang(\"General\"));\n-        JPanel p1 = new JPanel();\n-        lab = new JLabel(Globals.lang(\"Menu and label font size\") + \":\");\n-        p1.add(lab);\n-        p1.add(fontSize);\n-        builder.append(p1);\n-        builder.nextLine();\n-        builder.append(overrideFonts);\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"Table appearance\"));\n-        //builder.append(antialias);\n-        //builder.nextLine();\n-        JPanel p2 = new JPanel();\n-        p2.add(new JLabel(Globals.lang(\"Table row height padding\") + \":\"));\n-        p2.add(rowPadding);\n-        builder.append(p2);\n-        builder.nextLine();\n-        builder.append(colorCodes);\n-        builder.nextLine();\n-        builder.append(showGrid);\n-        builder.nextLine();\n-        JButton fontButton = new JButton(Globals.lang(\"Set table font\"));\n-        builder.append(fontButton);\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"Table and entry editor colors\"));\n-        builder.append(colorPanel);\n-        //builder.appendSeparator(Globals.lang(\"Custom icon theme\"));\n-        //builder.append(useCustomIconTheme);\n-        //builder.nextLine();\n-        //JPanel p2 = new JPanel();\n-        //lab = new JLabel(Globals.lang(\"Custom icon theme file\")+\":\");\n-        //p2.add(lab);\n-        //p2.add(customIconThemeFile);\n-        //BrowseAction browse = new BrowseAction(null, customIconThemeFile, false);\n-        //JButton browseBut = new JButton(Globals.lang(\"Browse\"));\n-        //browseBut.addActionListener(browse);\n-        //p2.add(browseBut);\n-        //builder.append(p2);\n-\n-        JPanel upper = new JPanel(), sort = new JPanel(), namesp = new JPanel(), iconCol = new JPanel();\n-        GridBagLayout gbl = new GridBagLayout();\n-        upper.setLayout(gbl);\n-        sort.setLayout(gbl);\n-        namesp.setLayout(gbl);\n-        iconCol.setLayout(gbl);\n-\n-        overrideFonts.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                fontSize.setEnabled(overrideFonts.isSelected());\n-            }\n-        });\n-\n-        fontButton.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                Font f = new FontSelectorDialog\n-                        (null, GUIGlobals.CURRENTFONT).getSelectedFont();\n-                if (f != null) {\n-                    font = f;\n-                }\n-            }\n-        });\n-        /*menuFontButton.addActionListener(new ActionListener() {\n-             public void actionPerformed(ActionEvent e) {\n-                 Font f=new FontSelectorDialog\n-                     (null, menuFont).getSelectedFont();\n-                 if(f==null)\n-                     return;\n-                 else\n-                     menuFont = f;\n-             }\n-             });*/\n-\n-        JPanel pan = builder.getPanel();\n-        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        add(pan, BorderLayout.CENTER);\n-    }\n-\n-    @Override\n-    public void setValues() {\n-        colorCodes.setSelected(_prefs.getBoolean(\"tableColorCodesOn\"));\n-        //antialias.setSelected(_prefs.getBoolean(\"antialias\"));\n-        fontSize.setText(\"\" + _prefs.getInt(\"menuFontSize\"));\n-        rowPadding.setText(\"\" + _prefs.getInt(\"tableRowPadding\"));\n-        oldMenuFontSize = _prefs.getInt(\"menuFontSize\");\n-        overrideFonts.setSelected(_prefs.getBoolean(\"overrideDefaultFonts\"));\n-        oldOverrideFontSize = overrideFonts.isSelected();\n-        fontSize.setEnabled(overrideFonts.isSelected());\n-        //useCustomIconTheme.setSelected(_prefs.getBoolean(\"useCustomIconTheme\"));\n-        //customIconThemeFile.setText(_prefs.get(\"customIconThemeFile\"));\n-        showGrid.setSelected(_prefs.getBoolean(\"tableShowGrid\"));\n-        colorPanel.setValues();\n-    }\n-\n-    /**\n-     * Store changes to table preferences. This method is called when\n-     * the user clicks Ok.\n-     *\n-     */\n-    @Override\n-    public void storeSettings() {\n-\n-        _prefs.putBoolean(\"tableColorCodesOn\", colorCodes.isSelected());\n-        //_prefs.putBoolean(\"antialias\", antialias.isSelected());\n-        _prefs.put(\"fontFamily\", font.getFamily());\n-        _prefs.putInt(\"fontStyle\", font.getStyle());\n-        _prefs.putInt(\"fontSize\", font.getSize());\n-        _prefs.putBoolean(\"overrideDefaultFonts\", overrideFonts.isSelected());\n-        GUIGlobals.CURRENTFONT = font;\n-        colorPanel.storeSettings();\n-        _prefs.putBoolean(\"tableShowGrid\", showGrid.isSelected());\n-        try {\n-            int size = Integer.parseInt(fontSize.getText());\n-            if ((overrideFonts.isSelected() != oldOverrideFontSize) ||\n-                    (size != oldMenuFontSize)) {\n-                _prefs.putInt(\"menuFontSize\", size);\n-                JOptionPane.showMessageDialog(null,\n-                        Globals.lang(\"You have changed the menu and label font size.\")\n-                                .concat(\" \")\n-                                .concat(Globals.lang(\"You must restart JabRef for this to come into effect.\")),\n-                        Globals.lang(\"Changed font settings\"),\n-                        JOptionPane.WARNING_MESSAGE);\n-            }\n-        } catch (NumberFormatException ex) {\n-            ex.printStackTrace();\n-        }\n-        try {\n-            int padding = Integer.parseInt(rowPadding.getText());\n-            _prefs.putInt(\"tableRowPadding\", padding);\n-        } catch (NumberFormatException ex) {\n-            ex.printStackTrace();\n-        }\n-    }\n-\n-    private boolean validateIntegerField(String fieldName, String fieldValue, String errorTitle)\n-    {\n-        try {\n-            // Test if the field value is a number:\n-            Integer.parseInt(fieldValue);\n-        } catch (NumberFormatException ex) {\n-            JOptionPane.showMessageDialog\n-                    (null, Globals.lang(\"You must enter an integer value in the text field for\") + \" '\" +\n-                            Globals.lang(fieldName) + \"'\", Globals.lang(errorTitle),\n-                            JOptionPane.ERROR_MESSAGE);\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean readyToClose() {\n-        // Test if font size is a number:\n-        if (validateIntegerField(\"Menu and label font size\", fontSize.getText(), \"Changed font settings\") == false) {\n-            return false;\n-        }\n-\n-        // Test if row padding is a number:\n-        if (validateIntegerField(\"Table row height padding\", rowPadding.getText(), \"Changed table appearance settings\") == false) {\n-            return false;\n-        }\n-\n-        return true;\n-\n-    }\n-\n-    @Override\n-    public String getTabName() {\n-        return Globals.lang(\"Appearance\");\n-    }\n-}, @@ -1,1312 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.export.layout.format.CreateDocBookAuthors;\n-\n-import java.util.Vector;\n-import java.util.WeakHashMap;\n-\n-/**\n- * This is an immutable class representing information of either <CODE>author</CODE>\n- * or <CODE>editor</CODE> field in bibtex record.\n- * <p>\n- * Constructor performs parsing of raw field text and stores preformatted data.\n- * Various accessor methods return author/editor field in different formats.\n- * <p>\n- * Parsing algorithm is designed to satisfy two requirements: (a) when author's\n- * name is typed correctly, the result should coincide with the one of BiBTeX;\n- * (b) for erroneous names, output should be reasonable (but may differ from\n- * BiBTeX output). The following rules are used:\n- * <ol>\n- * <li> 'author field' is a sequence of tokens;\n- * <ul>\n- * <li> tokens are separated by sequences of whitespaces (<CODE>Character.isWhitespace(c)==true</CODE>),\n- * commas (,), dashes (-), and tildas (~);\n- * <li> every comma separates tokens, while sequences of other separators are\n- * equivalent to a single separator; for example: \"a - b\" consists of 2 tokens\n- * (\"a\" and \"b\"), while \"a,-,b\" consists of 3 tokens (\"a\", \"\", and \"b\")\n- * <li> anything enclosed in braces belonges to a single token; for example:\n- * \"abc x{a,b,-~ c}x\" consists of 2 tokens, while \"abc xa,b,-~ cx\" consists of 4\n- * tokens (\"abc\", \"xa\",\"b\", and \"cx\");\n- * <li> a token followed immediately by a dash is \"dash-terminated\" token, and\n- * all other tokens are \"space-terminated\" tokens; for example: in \"a-b- c - d\"\n- * tokens \"a\" and \"b\" are dash-terminated and \"c\" and \"d\" are space-terminated;\n- * <li> for the purposes of splitting of 'author name' into parts and\n- * construction of abbreviation of first name, one needs definitions of first\n- * latter of a token, case of a token, and abbreviation of a token:\n- * <ul>\n- * <li> 'first letter' of a token is the first letter character (<CODE>Character.isLetter(c)==true</CODE>)\n- * that does not belong to a sequence of letters that immediately follows \"\\\"\n- * character, with one exception: if \"\\\" is followed by \"aa\", \"AA\", \"ae\", \"AE\",\n- * \"l\", \"L\", \"o\", \"O\", \"oe\", \"OE\", \"i\", or \"j\" followed by non-letter, the\n- * 'first letter' of a token is a letter that follows \"\\\"; for example: in\n- * \"a{x}b\" 'first letter' is \"a\", in \"{\\\"{U}}bel\" 'first letter' is \"U\", in\n- * \"{\\noopsort{\\\"o}}xyz\" 'first letter' is \"o\", in \"{\\AE}x\" 'first letter' is\n- * \"A\", in \"\\aex\\ijk\\Oe\\j\" 'first letter' is \"j\"; if there is no letter\n- * satisfying the above rule, 'first letter' is undefined;\n- * <li> token is \"lower-case\" token, if its first letter id defined and is\n- * lower-case (<CODE>Character.isLowerCase(c)==true</CODE>), and token is\n- * \"upper-case\" token otherwise;\n- * <li> 'abbreviation' of a token is the shortest prefix of the token that (a)\n- * contains 'first letter' and (b) is braces-balanced; if 'first letter' is\n- * undefined, 'abbreviation' is the token itself; in the above examples,\n- * 'abbreviation's are \"a\", \"{\\\"{U}}\", \"{\\noopsort{\\\"o}}\", \"{\\AE}\",\n- * \"\\aex\\ijk\\Oe\\j\";\n- * </ul>\n- * <li> the behavior based on the above definitions will be erroneous only in\n- * one case: if the first-name-token is \"{\\noopsort{A}}john\", we abbreviate it\n- * as \"{\\noopsort{A}}.\", while BiBTeX produces \"j.\"; fixing this problem,\n- * however, requires processing of the preabmle;\n- * </ul>\n- * <li> 'author name's in 'author field' are subsequences of tokens separated by\n- * token \"and\" (\"and\" is case-insensitive); if 'author name' is an empty\n- * sequence of tokens, it is ignored; for examle, both \"John Smith and Peter\n- * Black\" and \"and and John Smith and and Peter Black\" consists of 2 'author\n- * name's \"Johm Smith\" and \"Peter Black\" (in erroneous situations, this is a bit\n- * different from BiBTeX behavior);\n- * <li> 'author name' consists of 'first-part', 'von-part', 'last-part', and\n- * 'junior-part', each of which is a sequence of tokens; how a sequence of\n- * tokens has to be splitted into these parts, depends the number of commas:\n- * <ul>\n- * <li> no commas, all tokens are upper-case: 'junior-part' and 'von-part' are\n- * empty, 'last-part' consist of the last token, 'first-part' consists of all\n- * other tokens ('first-part' is empty, if 'author name' consists of a single\n- * token); for example, in \"John James Smith\", 'last-part'=\"Smith\" and\n- * 'first-part'=\"John James\";\n- * <li> no commas, there exists lower-case token: 'junior-part' is empty,\n- * 'first-part' consists of all upper-case tokens before the first lower-case\n- * token, 'von-part' consists of lower-case tokens starting the first lower-case\n- * token and ending the lower-case token that is followed by upper-case token,\n- * 'last-part' consists of the rest of tokens; note that both 'first-part' and\n- * 'latst-part' may be empty and 'last-part' may contain lower-case tokens; for\n- * example: in \"von der\", 'first-part'='last-part'=\"\", 'von-part'=\"von der\"; in\n- * \"Charles Louis Xavier Joseph de la Vall{\\'e}e la Poussin\",\n- * 'first-part'=\"Charles Louis Xavier Joseph\", 'von-part'=\"de la\",\n- * 'last-part'=\"Vall{\\'e}e la Poussin\";\n- * <li> one comma: 'junior-part' is empty, 'first-part' consists of all tokens\n- * after comma, 'von-part' consists of the longest sequence of lower-case tokens\n- * in the very beginning, 'last-part' consists of all tokens after 'von-part'\n- * and before comma; note that any part can be empty; for example: in \"de la\n- * Vall{\\'e}e la Poussin, Charles Louis Xavier Joseph\", 'first-part'=\"Charles\n- * Louis Xavier Joseph\", 'von-part'=\"de la\", 'last-part'=\"Vall{\\'e}e la\n- * Poussin\"; in \"Joseph de la Vall{\\'e}e la Poussin, Charles Louis Xavier\",\n- * 'first-part'=\"Charles Louis Xavier\", 'von-part'=\"\", 'last-part'=\"Joseph de la\n- * Vall{\\'e}e la Poussin\";\n- * <li> two or more commas (any comma after the second one is ignored; it merely\n- * separates tokens): 'junior-part' consists of all tokens between first and\n- * second commas, 'first-part' consists of all tokens after the second comma,\n- * tokens before the first comma are splitted into 'von-part' and 'last-part'\n- * similarly to the case of one comma; for example: in \"de la Vall{\\'e}e\n- * Poussin, Jr., Charles Louis Xavier Joseph\", 'first-part'=\"Charles Louis\n- * Xavier Joseph\", 'von-part'=\"de la\", 'last-part'=\"Vall{\\'e}e la Poussin\", and\n- * 'junior-part'=\"Jr.\";\n- * </ul>\n- * <li> when 'first-part', 'last-part', 'von-part', or 'junior-part' is\n- * reconstructed from tokens, tokens in a part are separated either by space or\n- * by dash, depending on whether the token before the separator was\n- * space-terminated or dash-terminated; for the last token in a part it does not\n- * matter whether it was dash- or space-terminated;\n- * <li> when 'first-part' is abbreviated, each token is replaced by its\n- * abbreviation followed by a period; separators are the same as in the case of\n- * non-abbreviated name; for example: in \"Heinrich-{\\\"{U}}bel Kurt von Minich\",\n- * 'first-part'=\"Heinrich-{\\\"{U}}bel Kurt\", and its abbreviation is \"H.-{\\\"{U}}.\n- * K.\"\n- * </ol>\n- */\n-public class AuthorList {\n-\n-    private final Vector<Author> authors;\n-\n-    // Variables for storing computed strings, so they only need be created\n-    // once:\n-    private String authorsNatbib = null, authorsFirstFirstAnds = null,\n-            authorsAlph = null;\n-\n-    private final String[] authorsFirstFirst = new String[4];\n-    private final String[] authorsLastOnly = new String[2];\n-    private final String[] authorLastFirstAnds = new String[2];\n-    private final String[] authorsLastFirst = new String[4];\n-    private final String[] authorsLastFirstFirstLast = new String[2];\n-\n-    // The following variables are used only during parsing\n-\n-    private String orig; // the raw bibtex author/editor field\n-\n-    // the following variables are updated by getToken procedure\n-    private int token_start; // index in orig\n-\n-    private int token_end; // to point 'abc' in ' abc xyz', start=2 and end=5\n-\n-    // the following variables are valid only if getToken returns TOKEN_WORD\n-    private int token_abbr; // end of token abbreviation (always: token_start <\n-\n-    // token_abbr <= token_end)\n-\n-    private char token_term; // either space or dash\n-\n-    private boolean token_case; // true if upper-case token, false if lower-case\n-\n-    // token\n-\n-    // Tokens of one author name.\n-    // Each token occupies TGL consecutive entries in this vector (as described\n-    // below)\n-    private Vector<Object> tokens;\n-\n-    private static final int TOKEN_GROUP_LENGTH = 4; // number of entries for\n-\n-    // a token\n-\n-    // the following are offsets of an entry in a group of entries for one token\n-    private static final int OFFSET_TOKEN = 0; // String -- token itself;\n-\n-    private static final int OFFSET_TOKEN_ABBR = 1; // String -- token\n-\n-    // abbreviation;\n-\n-    private static final int OFFSET_TOKEN_TERM = 2; // Character -- token\n-\n-    // terminator (either \" \" or\n-    // \"-\")\n-\n-    // comma)\n-\n-    // Token types (returned by getToken procedure)\n-    private static final int TOKEN_EOF = 0;\n-\n-    private static final int TOKEN_AND = 1;\n-\n-    private static final int TOKEN_COMMA = 2;\n-\n-    private static final int TOKEN_WORD = 3;\n-\n-    // Constant Hashtable containing names of TeX special characters\n-    private static final java.util.HashSet<String> tex_names = new java.util.HashSet<String>();\n-    // and static constructor to initialize it\n-    static {\n-        AuthorList.tex_names.add(\"aa\");\n-        AuthorList.tex_names.add(\"ae\");\n-        AuthorList.tex_names.add(\"l\");\n-        AuthorList.tex_names.add(\"o\");\n-        AuthorList.tex_names.add(\"oe\");\n-        AuthorList.tex_names.add(\"i\");\n-        AuthorList.tex_names.add(\"AA\");\n-        AuthorList.tex_names.add(\"AE\");\n-        AuthorList.tex_names.add(\"L\");\n-        AuthorList.tex_names.add(\"O\");\n-        AuthorList.tex_names.add(\"OE\");\n-        AuthorList.tex_names.add(\"j\");\n-    }\n-\n-    private static final WeakHashMap<String, AuthorList> authorCache = new WeakHashMap<String, AuthorList>();\n-\n-\n-    /**\n-     * Parses the parameter strings and stores preformatted author information.\n-     * \n-     * Don't call this constructor directly but rather use the getAuthorList()\n-     * method which caches its results.\n-     * \n-     * @param bibtex_authors\n-     *            contents of either <CODE>author</CODE> or <CODE>editor</CODE>\n-     *            bibtex field.\n-     */\n-    private AuthorList(String bibtex_authors) {\n-        authors = new Vector<Author>(5); // 5 seems to be reasonable initial size\n-        orig = bibtex_authors; // initialization\n-        token_start = 0;\n-        token_end = 0; // of parser\n-        while (token_start < orig.length()) {\n-            Author author = getAuthor();\n-            if (author != null) {\n-                authors.add(author);\n-            }\n-        }\n-        // clean-up\n-        orig = null;\n-        tokens = null;\n-\n-    }\n-\n-    /**\n-     * Retrieve an AuthorList for the given string of authors or editors.\n-     * \n-     * This function tries to cache AuthorLists by string passed in.\n-     * \n-     * @param authors\n-     *            The string of authors or editors in bibtex format to parse.\n-     * @return An AuthorList object representing the given authors.\n-     */\n-    public static AuthorList getAuthorList(String authors) {\n-        AuthorList authorList = AuthorList.authorCache.get(authors);\n-        if (authorList == null) {\n-            authorList = new AuthorList(authors);\n-            AuthorList.authorCache.put(authors, authorList);\n-        }\n-        return authorList;\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsFirstFirst()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsFirstFirst\n-     */\n-    public static String fixAuthor_firstNameFirstCommas(String authors, boolean abbr,\n-            boolean oxfordComma) {\n-        return AuthorList.getAuthorList(authors).getAuthorsFirstFirst(abbr, oxfordComma);\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsFirstFirstAnds()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsFirstFirstAnds\n-     */\n-    public static String fixAuthor_firstNameFirst(String authors) {\n-        return AuthorList.getAuthorList(authors).getAuthorsFirstFirstAnds();\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsLastFirst()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsLastFirst\n-     */\n-    public static String fixAuthor_lastNameFirstCommas(String authors, boolean abbr,\n-            boolean oxfordComma) {\n-        return AuthorList.getAuthorList(authors).getAuthorsLastFirst(abbr, oxfordComma);\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsLastFirstAnds(true)\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsLastFirstAnds\n-     */\n-    public static String fixAuthor_lastNameFirst(String authors) {\n-        return AuthorList.getAuthorList(authors).getAuthorsLastFirstAnds(false);\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsLastFirstAnds()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsLastFirstAnds\n-     */\n-    public static String fixAuthor_lastNameFirst(String authors, boolean abbreviate) {\n-        return AuthorList.getAuthorList(authors).getAuthorsLastFirstAnds(abbreviate);\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsLastOnly()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsLastOnly\n-     */\n-    public static String fixAuthor_lastNameOnlyCommas(String authors, boolean oxfordComma) {\n-        return AuthorList.getAuthorList(authors).getAuthorsLastOnly(oxfordComma);\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsForAlphabetization()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsForAlphabetization\n-     */\n-    public static String fixAuthorForAlphabetization(String authors) {\n-        return AuthorList.getAuthorList(authors).getAuthorsForAlphabetization();\n-    }\n-\n-    /**\n-     * This is a convenience method for getAuthorsNatbib()\n-     * \n-     * @see net.sf.jabref.AuthorList#getAuthorsNatbib\n-     */\n-    public static String fixAuthor_Natbib(String authors) {\n-        return AuthorList.getAuthorList(authors).getAuthorsNatbib();\n-    }\n-\n-    /**\n-     * Parses one author name and returns preformatted information.\n-     * \n-     * @return Preformatted author name; <CODE>null</CODE> if author name is\n-     *         empty.\n-     */\n-    private Author getAuthor() {\n-\n-        tokens = new Vector<Object>(); // initialization\n-        int von_start = -1;\n-        int last_start = -1;\n-        int comma_first = -1;\n-        int comma_second = -1;\n-\n-        // First step: collect tokens in 'tokens' Vector and calculate indices\n-        token_loop: while (true) {\n-            int token = getToken();\n-            switch (token) {\n-            case TOKEN_EOF:\n-            case TOKEN_AND:\n-                break token_loop;\n-            case TOKEN_COMMA:\n-                if (comma_first < 0) {\n-                    comma_first = tokens.size();\n-                } else if (comma_second < 0) {\n-                    comma_second = tokens.size();\n-                }\n-                break;\n-            case TOKEN_WORD:\n-                tokens.add(orig.substring(token_start, token_end));\n-                tokens.add(orig.substring(token_start, token_abbr));\n-                tokens.add(token_term);\n-                tokens.add(token_case);\n-                if (comma_first >= 0) {\n-                    break;\n-                }\n-                if (last_start >= 0) {\n-                    break;\n-                }\n-                if (von_start < 0) {\n-                    if (!token_case) {\n-                        von_start = tokens.size() - AuthorList.TOKEN_GROUP_LENGTH;\n-                        break;\n-                    }\n-                } else if ((last_start < 0) && token_case) {\n-                    last_start = tokens.size() - AuthorList.TOKEN_GROUP_LENGTH;\n-                    break;\n-                }\n-            }\n-        }// end token_loop\n-\n-        // Second step: split name into parts (here: calculate indices\n-        // of parts in 'tokens' Vector)\n-        if (tokens.isEmpty())\n-         {\n-            return null; // no author information\n-        }\n-\n-        // the following negatives indicate absence of the corresponding part\n-        int first_part_start = -1, von_part_start = -1, last_part_start = -1, jr_part_start = -1;\n-        int first_part_end, von_part_end = 0, last_part_end = 0, jr_part_end = 0;\n-        boolean jrAsFirstname = false;\n-        if (comma_first < 0) { // no commas\n-            if (von_start < 0) { // no 'von part'\n-                last_part_end = tokens.size();\n-                last_part_start = tokens.size() - AuthorList.TOKEN_GROUP_LENGTH;\n-                int index = (tokens.size() - (2 * AuthorList.TOKEN_GROUP_LENGTH)) + AuthorList.OFFSET_TOKEN_TERM;\n-                if (index > 0) {\n-                    Character ch = (Character) tokens.elementAt(index);\n-                    if (ch == '-') {\n-                        last_part_start -= AuthorList.TOKEN_GROUP_LENGTH;\n-                    }\n-                }\n-                first_part_end = last_part_start;\n-                if (first_part_end > 0) {\n-                    first_part_start = 0;\n-                }\n-            } else { // 'von part' is present\n-                if (last_start >= 0) {\n-                    last_part_end = tokens.size();\n-                    last_part_start = last_start;\n-                    von_part_end = last_part_start;\n-                } else {\n-                    von_part_end = tokens.size();\n-                }\n-                von_part_start = von_start;\n-                first_part_end = von_part_start;\n-                if (first_part_end > 0) {\n-                    first_part_start = 0;\n-                }\n-            }\n-        } else { // commas are present: it affects only 'first part' and\n-            // 'junior part'\n-            first_part_end = tokens.size();\n-            if (comma_second < 0) { // one comma\n-                if (comma_first < first_part_end) {\n-                    first_part_start = comma_first;\n-                    //if (((String)tokens.get(first_part_start)).toLowerCase().startsWith(\"jr.\"))\n-                    //    jrAsFirstname = true;\n-                }\n-            } else { // two or more commas\n-                if (comma_second < first_part_end) {\n-                    first_part_start = comma_second;\n-                }\n-                jr_part_end = comma_second;\n-                if (comma_first < jr_part_end) {\n-                    jr_part_start = comma_first;\n-                }\n-            }\n-            if (von_start != 0) { // no 'von part'\n-                last_part_end = comma_first;\n-                if (last_part_end > 0) {\n-                    last_part_start = 0;\n-                }\n-            } else { // 'von part' is present\n-                if (last_start < 0) {\n-                    von_part_end = comma_first;\n-                } else {\n-                    last_part_end = comma_first;\n-                    last_part_start = last_start;\n-                    von_part_end = last_part_start;\n-                }\n-                von_part_start = 0;\n-            }\n-        }\n-\n-        if ((first_part_start == -1) && (last_part_start == -1) && (von_part_start != -1)) {\n-            // There is no first or last name, but we have a von part. This is likely\n-            // to indicate a single-entry name without an initial capital letter, such\n-            // as \"unknown\".\n-            // We make the von part the last name, to facilitate handling by last-name formatters:\n-            last_part_start = von_part_start;\n-            last_part_end = von_part_end;\n-            von_part_start = -1;\n-            von_part_end = -1;\n-        }\n-        if (jrAsFirstname) {\n-            // This variable, if set, indicates that the first name starts with \"jr.\", which\n-            // is an indication that we may have a name formatted as \"Firstname Lastname, Jr.\"\n-            // which is an acceptable format for BibTeX.\n-        }\n-\n-        // Third step: do actual splitting, construct Author object\n-        return new Author((first_part_start < 0 ? null : concatTokens(first_part_start,\n-                first_part_end, AuthorList.OFFSET_TOKEN, false)), (first_part_start < 0 ? null : concatTokens(\n-                first_part_start, first_part_end, AuthorList.OFFSET_TOKEN_ABBR, true)), (von_part_start < 0 ? null\n-                : concatTokens(von_part_start, von_part_end, AuthorList.OFFSET_TOKEN, false)),\n-                (last_part_start < 0 ? null : concatTokens(last_part_start, last_part_end,\n-                        AuthorList.OFFSET_TOKEN, false)), (jr_part_start < 0 ? null : concatTokens(jr_part_start,\n-                        jr_part_end, AuthorList.OFFSET_TOKEN, false)));\n-    }\n-\n-    /**\n-     * Concatenates list of tokens from 'tokens' Vector. Tokens are separated by\n-     * spaces or dashes, dependeing on stored in 'tokens'. Callers always ensure\n-     * that start < end; thus, there exists at least one token to be\n-     * concatenated.\n-     * \n-     * @param start\n-     *            index of the first token to be concatenated in 'tokens' Vector\n-     *            (always divisible by TOKEN_GROUP_LENGTH).\n-     * @param end\n-     *            index of the first token not to be concatenated in 'tokens'\n-     *            Vector (always divisible by TOKEN_GROUP_LENGTH).\n-     * @param offset\n-     *            offset within token group (used to request concatenation of\n-     *            either full tokens or abbreviation).\n-     * @param dot_after\n-     *            <CODE>true</CODE> -- add period after each token, <CODE>false</CODE> --\n-     *            do not add.\n-     * @return the result of concatenation.\n-     */\n-    private String concatTokens(int start, int end, int offset, boolean dot_after) {\n-        StringBuilder res = new StringBuilder();\n-        // Here we always have start < end\n-        res.append((String) tokens.get(start + offset));\n-        if (dot_after) {\n-            res.append('.');\n-        }\n-        start += AuthorList.TOKEN_GROUP_LENGTH;\n-        while (start < end) {\n-            res.append(tokens.get((start - AuthorList.TOKEN_GROUP_LENGTH) + AuthorList.OFFSET_TOKEN_TERM));\n-            res.append((String) tokens.get(start + offset));\n-            if (dot_after) {\n-                res.append('.');\n-            }\n-            start += AuthorList.TOKEN_GROUP_LENGTH;\n-        }\n-        return res.toString();\n-    }\n-\n-    /**\n-     * Parses the next token.\n-     * <p>\n-     * The string being parsed is stored in global variable <CODE>orig</CODE>,\n-     * and position which parsing has to start from is stored in global variable\n-     * <CODE>token_end</CODE>; thus, <CODE>token_end</CODE> has to be set\n-     * to 0 before the first invocation. Procedure updates <CODE>token_end</CODE>;\n-     * thus, subsequent invocations do not require any additional variable\n-     * settings.\n-     * <p>\n-     * The type of the token is returned; if it is <CODE>TOKEN_WORD</CODE>,\n-     * additional information is given in global variables <CODE>token_start</CODE>,\n-     * <CODE>token_end</CODE>, <CODE>token_abbr</CODE>, <CODE>token_term</CODE>,\n-     * and <CODE>token_case</CODE>; namely: <CODE>orig.substring(token_start,token_end)</CODE>\n-     * is the thext of the token, <CODE>orig.substring(token_start,token_abbr)</CODE>\n-     * is the token abbreviation, <CODE>token_term</CODE> contains token\n-     * terminator (space or dash), and <CODE>token_case</CODE> is <CODE>true</CODE>,\n-     * if token is upper-case and <CODE>false</CODE> if token is lower-case.\n-     * \n-     * @return <CODE>TOKEN_EOF</CODE> -- no more tokens, <CODE>TOKEN_COMMA</CODE> --\n-     *         token is comma, <CODE>TOKEN_AND</CODE> -- token is the word\n-     *         \"and\" (or \"And\", or \"aND\", etc.), <CODE>TOKEN_WORD</CODE> --\n-     *         token is a word; additional information is given in global\n-     *         variables <CODE>token_start</CODE>, <CODE>token_end</CODE>,\n-     *         <CODE>token_abbr</CODE>, <CODE>token_term</CODE>, and\n-     *         <CODE>token_case</CODE>.\n-     */\n-    private int getToken() {\n-        token_start = token_end;\n-        while (token_start < orig.length()) {\n-            char c = orig.charAt(token_start);\n-            if (!((c == '~') || (c == '-') || Character.isWhitespace(c))) {\n-                break;\n-            }\n-            token_start++;\n-        }\n-        token_end = token_start;\n-        if (token_start >= orig.length()) {\n-            return AuthorList.TOKEN_EOF;\n-        }\n-        if (orig.charAt(token_start) == ',') {\n-            token_end++;\n-            return AuthorList.TOKEN_COMMA;\n-        }\n-        token_abbr = -1;\n-        token_term = ' ';\n-        token_case = true;\n-        int braces_level = 0;\n-        int current_backslash = -1;\n-        boolean first_letter_is_found = false;\n-        while (token_end < orig.length()) {\n-            char c = orig.charAt(token_end);\n-            if (c == '{') {\n-                braces_level++;\n-            }\n-            if (braces_level > 0) {\n-                if (c == '}') {\n-                    braces_level--;\n-                }\n-            }\n-            if (first_letter_is_found && (token_abbr < 0) && (braces_level == 0)) {\n-                token_abbr = token_end;\n-            }\n-            if (!first_letter_is_found && (current_backslash < 0) && Character.isLetter(c)) {\n-                if (braces_level == 0) {\n-                    token_case = Character.isUpperCase(c);\n-                } else {\n-                    // If this is a particle in braces, always treat it as if it starts with\n-                    // an upper case letter. Otherwise a name such as \"{van den Bergen}, Hans\"\n-                    // will not yield a proper last name:\n-                    token_case = true;\n-                }\n-                first_letter_is_found = true;\n-            }\n-            if ((current_backslash >= 0) && !Character.isLetter(c)) {\n-                if (!first_letter_is_found) {\n-                    String tex_cmd_name = orig.substring(current_backslash + 1, token_end);\n-                    if (AuthorList.tex_names.contains(tex_cmd_name)) {\n-                        token_case = Character.isUpperCase(tex_cmd_name.charAt(0));\n-                        first_letter_is_found = true;\n-                    }\n-                }\n-                current_backslash = -1;\n-            }\n-            if (c == '\\\\') {\n-                current_backslash = token_end;\n-            }\n-            if (braces_level == 0) {\n-                if ((c == ',') || (c == '~') || (c == '-') || Character.isWhitespace(c)) {\n-                    break;\n-                }\n-            }\n-            // Morten Alver 18 Apr 2006: Removed check for hyphen '-' above to\n-            // prevent\n-            // problems with names like Bailey-Jones getting broken up and\n-            // sorted wrong.\n-            // Aaron Chen 14 Sep 2008: Enable hyphen check for first names like Chang-Chin\n-            token_end++;\n-        }\n-        if (token_abbr < 0) {\n-            token_abbr = token_end;\n-        }\n-        if ((token_end < orig.length()) && (orig.charAt(token_end) == '-')) {\n-            token_term = '-';\n-        }\n-        if (orig.substring(token_start, token_end).equalsIgnoreCase(\"and\")) {\n-            return AuthorList.TOKEN_AND;\n-        } else {\n-            return AuthorList.TOKEN_WORD;\n-        }\n-    }\n-\n-    /**\n-     * Returns the number of author names in this object.\n-     * \n-     * @return the number of author names in this object.\n-     */\n-    public int size() {\n-        return authors.size();\n-    }\n-\n-    /**\n-     * Returns the <CODE>Author</CODE> object for the i-th author.\n-     * \n-     * @param i\n-     *            Index of the author (from 0 to <CODE>size()-1</CODE>).\n-     * @return the <CODE>Author</CODE> object.\n-     */\n-    public Author getAuthor(int i) {\n-        return authors.get(i);\n-    }\n-\n-    /**\n-     * Returns the list of authors in \"natbib\" format.\n-     * <p>\n-     * <ul>\n-     * <li>\"John Smith\" -> \"Smith\"</li>\n-     * <li>\"John Smith and Black Brown, Peter\" ==> \"Smith and Black Brown\"</li>\n-     * <li>\"John von Neumann and John Smith and Black Brown, Peter\" ==> \"von\n-     * Neumann et al.\" </li>\n-     * </ul>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsNatbib() {\n-        // Check if we've computed this before:\n-        if (authorsNatbib != null) {\n-            return authorsNatbib;\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getLastOnly());\n-            if (size() == 2) {\n-                res.append(\" and \");\n-                res.append(getAuthor(1).getLastOnly());\n-            } else if (size() > 2) {\n-                res.append(\" et al.\");\n-            }\n-        }\n-        authorsNatbib = res.toString();\n-        return authorsNatbib;\n-    }\n-\n-    /**\n-     * Returns the list of authors separated by commas with last name only; If\n-     * the list consists of three or more authors, \"and\" is inserted before the\n-     * last author's name.\n-     * <p>\n-     * \n-     * <ul>\n-     * <li> \"John Smith\" ==> \"Smith\"</li>\n-     * <li> \"John Smith and Black Brown, Peter\" ==> \"Smith and Black Brown\"</li>\n-     * <li> \"John von Neumann and John Smith and Black Brown, Peter\" ==> \"von\n-     * Neumann, Smith and Black Brown\".</li>\n-     * </ul>\n-     * \n-     * @param oxfordComma\n-     *            Whether to put a comma before the and at the end.\n-     * \n-     * @see <a href=\"http://en.wikipedia.org/wiki/Serial_comma\">serial comma for an detailed explaination about the Oxford comma.</a>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsLastOnly(boolean oxfordComma) {\n-        int abbrInt = (oxfordComma ? 0 : 1);\n-\n-        // Check if we've computed this before:\n-        if (authorsLastOnly[abbrInt] != null) {\n-            return authorsLastOnly[abbrInt];\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getLastOnly());\n-            int i = 1;\n-            while (i < (size() - 1)) {\n-                res.append(\", \");\n-                res.append(getAuthor(i).getLastOnly());\n-                i++;\n-            }\n-            if ((size() > 2) && oxfordComma) {\n-                res.append(',');\n-            }\n-            if (size() > 1) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getLastOnly());\n-            }\n-        }\n-        authorsLastOnly[abbrInt] = res.toString();\n-        return authorsLastOnly[abbrInt];\n-    }\n-\n-    /**\n-     * Returns the list of authors separated by commas with first names after\n-     * last name; first names are abbreviated or not depending on parameter. If\n-     * the list consists of three or more authors, \"and\" is inserted before the\n-     * last author's name.\n-     * <p>\n-     * \n-     * <ul>\n-     * <li> \"John Smith\" ==> \"Smith, John\" or \"Smith, J.\"</li>\n-     * <li> \"John Smith and Black Brown, Peter\" ==> \"Smith, John and Black\n-     * Brown, Peter\" or \"Smith, J. and Black Brown, P.\"</li>\n-     * <li> \"John von Neumann and John Smith and Black Brown, Peter\" ==> \"von\n-     * Neumann, John, Smith, John and Black Brown, Peter\" or \"von Neumann, J.,\n-     * Smith, J. and Black Brown, P.\".</li>\n-     * </ul>\n-     * \n-     * @param abbreviate\n-     *            whether to abbreivate first names.\n-     * \n-     * @param oxfordComma\n-     *            Whether to put a comma before the and at the end.\n-     * \n-     * @see <a href=\"http://en.wikipedia.org/wiki/Serial_comma\">serial comma for an detailed explaination about the Oxford comma.</a>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsLastFirst(boolean abbreviate, boolean oxfordComma) {\n-        int abbrInt = (abbreviate ? 0 : 1);\n-        abbrInt += (oxfordComma ? 0 : 2);\n-\n-        // Check if we've computed this before:\n-        if (authorsLastFirst[abbrInt] != null) {\n-            return authorsLastFirst[abbrInt];\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getLastFirst(abbreviate));\n-            int i = 1;\n-            while (i < (size() - 1)) {\n-                res.append(\", \");\n-                res.append(getAuthor(i).getLastFirst(abbreviate));\n-                i++;\n-            }\n-            if ((size() > 2) && oxfordComma) {\n-                res.append(',');\n-            }\n-            if (size() > 1) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getLastFirst(abbreviate));\n-            }\n-        }\n-        authorsLastFirst[abbrInt] = res.toString();\n-        return authorsLastFirst[abbrInt];\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return getAuthorsLastFirstAnds(false);\n-    }\n-\n-    /**\n-     * Returns the list of authors separated by \"and\"s with first names after\n-     * last name; first names are not abbreviated.\n-     * <p>\n-     * <ul>\n-     * <li>\"John Smith\" ==> \"Smith, John\"</li>\n-     * <li>\"John Smith and Black Brown, Peter\" ==> \"Smith, John and Black\n-     * Brown, Peter\"</li>\n-     * <li>\"John von Neumann and John Smith and Black Brown, Peter\" ==> \"von\n-     * Neumann, John and Smith, John and Black Brown, Peter\".</li>\n-     * </ul>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsLastFirstAnds(boolean abbreviate) {\n-        int abbrInt = (abbreviate ? 0 : 1);\n-        // Check if we've computed this before:\n-        if (authorLastFirstAnds[abbrInt] != null) {\n-            return authorLastFirstAnds[abbrInt];\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getLastFirst(abbreviate));\n-            for (int i = 1; i < size(); i++) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getLastFirst(abbreviate));\n-            }\n-        }\n-\n-        authorLastFirstAnds[abbrInt] = res.toString();\n-        return authorLastFirstAnds[abbrInt];\n-    }\n-\n-    public String getAuthorsLastFirstFirstLastAnds(boolean abbreviate) {\n-        int abbrInt = (abbreviate ? 0 : 1);\n-        // Check if we've computed this before:\n-        if (authorsLastFirstFirstLast[abbrInt] != null) {\n-            return authorsLastFirstFirstLast[abbrInt];\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getLastFirst(abbreviate));\n-            for (int i = 1; i < size(); i++) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getFirstLast(abbreviate));\n-            }\n-        }\n-\n-        authorsLastFirstFirstLast[abbrInt] = res.toString();\n-        return authorsLastFirstFirstLast[abbrInt];\n-    }\n-\n-    /**\n-     * Returns the list of authors separated by commas with first names before\n-     * last name; first names are abbreviated or not depending on parameter. If\n-     * the list consists of three or more authors, \"and\" is inserted before the\n-     * last author's name.\n-     * <p>\n-     * <ul>\n-     * <li>\"John Smith\" ==> \"John Smith\" or \"J. Smith\"</li>\n-     * <li>\"John Smith and Black Brown, Peter\" ==> \"John Smith and Peter Black\n-     * Brown\" or \"J. Smith and P. Black Brown\"</li>\n-     * <li> \"John von Neumann and John Smith and Black Brown, Peter\" ==> \"John\n-     * von Neumann, John Smith and Peter Black Brown\" or \"J. von Neumann, J.\n-     * Smith and P. Black Brown\" </li>\n-     * </ul>\n-     * \n-     * @param abbr\n-     *            whether to abbreivate first names.\n-     * \n-     * @param oxfordComma\n-     *            Whether to put a comma before the and at the end.\n-     * \n-     * @see <a href=\"http://en.wikipedia.org/wiki/Serial_comma\">serial comma for an detailed explaination about the Oxford comma.</a>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsFirstFirst(boolean abbr, boolean oxfordComma) {\n-\n-        int abbrInt = (abbr ? 0 : 1);\n-        abbrInt += (oxfordComma ? 0 : 2);\n-\n-        // Check if we've computed this before:\n-        if (authorsFirstFirst[abbrInt] != null) {\n-            return authorsFirstFirst[abbrInt];\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getFirstLast(abbr));\n-            int i = 1;\n-            while (i < (size() - 1)) {\n-                res.append(\", \");\n-                res.append(getAuthor(i).getFirstLast(abbr));\n-                i++;\n-            }\n-            if ((size() > 2) && oxfordComma) {\n-                res.append(',');\n-            }\n-            if (size() > 1) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getFirstLast(abbr));\n-            }\n-        }\n-        authorsFirstFirst[abbrInt] = res.toString();\n-        return authorsFirstFirst[abbrInt];\n-    }\n-\n-    /**\n-     * Compare this object with the given one. \n-     * \n-     * Will return true iff the other object is an Author and all fields are identical on a string comparison.\n-     */\n-    @Override\n-    public boolean equals(Object o) {\n-        if (!(o instanceof AuthorList)) {\n-            return false;\n-        }\n-        AuthorList a = (AuthorList) o;\n-\n-        return this.authors.equals(a.authors);\n-    }\n-\n-    /**\n-     * Returns the list of authors separated by \"and\"s with first names before\n-     * last name; first names are not abbreviated.\n-     * <p>\n-     * <ul>\n-     * <li>\"John Smith\" ==> \"John Smith\"</li>\n-     * <li>\"John Smith and Black Brown, Peter\" ==> \"John Smith and Peter Black\n-     * Brown\"</li>\n-     * <li>\"John von Neumann and John Smith and Black Brown, Peter\" ==> \"John\n-     * von Neumann and John Smith and Peter Black Brown\" </li>\n-     * </li>\n-     * \n-     * @return formatted list of authors.\n-     */\n-    public String getAuthorsFirstFirstAnds() {\n-        // Check if we've computed this before:\n-        if (authorsFirstFirstAnds != null) {\n-            return authorsFirstFirstAnds;\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getFirstLast(false));\n-            for (int i = 1; i < size(); i++) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getFirstLast(false));\n-            }\n-        }\n-        authorsFirstFirstAnds = res.toString();\n-        return authorsFirstFirstAnds;\n-    }\n-\n-    /**\n-     * Returns the list of authors in a form suitable for alphabetization. This\n-     * means that last names come first, never preceded by \"von\" particles, and\n-     * that any braces are removed. First names are abbreviated so the same name\n-     * is treated similarly if abbreviated in one case and not in another. This\n-     * form is not intended to be suitable for presentation, only for sorting.\n-     * \n-     * <p>\n-     * <ul>\n-     * <li>\"John Smith\" ==> \"Smith, J.\";</li>\n-     * \n-     * \n-     * @return formatted list of authors\n-     */\n-    public String getAuthorsForAlphabetization() {\n-        if (authorsAlph != null) {\n-            return authorsAlph;\n-        }\n-\n-        StringBuilder res = new StringBuilder();\n-        if (size() > 0) {\n-            res.append(getAuthor(0).getNameForAlphabetization());\n-            for (int i = 1; i < size(); i++) {\n-                res.append(\" and \");\n-                res.append(getAuthor(i).getNameForAlphabetization());\n-            }\n-        }\n-        authorsAlph = res.toString();\n-        return authorsAlph;\n-    }\n-\n-\n-    /**\n-     * This is an immutable class that keeps information regarding single\n-     * author. It is just a container for the information, with very simple\n-     * methods to access it.\n-     * <p>\n-     * Current usage: only methods <code>getLastOnly</code>,\n-     * <code>getFirstLast</code>, and <code>getLastFirst</code> are used;\n-     * all other methods are provided for completeness.\n-     */\n-    public static class Author {\n-\n-        private final String first_part;\n-\n-        private final String first_abbr;\n-\n-        private final String von_part;\n-\n-        private final String last_part;\n-\n-        private final String jr_part;\n-\n-\n-        /**\n-         * Compare this object with the given one. \n-         * \n-         * Will return true iff the other object is an Author and all fields are identical on a string comparison.\n-         */\n-        @Override\n-        public boolean equals(Object o) {\n-            if (!(o instanceof Author)) {\n-                return false;\n-            }\n-            Author a = (Author) o;\n-            return Util.equals(first_part, a.first_part)\n-                    && Util.equals(first_abbr, a.first_abbr)\n-                    && Util.equals(von_part, a.von_part)\n-                    && Util.equals(last_part, a.last_part)\n-                    && Util.equals(jr_part, a.jr_part);\n-        }\n-\n-        /**\n-         * Creates the Author object. If any part of the name is absent, <CODE>null</CODE>\n-         * must be passed; otherwise other methods may return erroneous results.\n-         * \n-         * @param first\n-         *            the first name of the author (may consist of several\n-         *            tokens, like \"Charles Louis Xavier Joseph\" in \"Charles\n-         *            Louis Xavier Joseph de la Vall{\\'e}e Poussin\")\n-         * @param firstabbr\n-         *            the abbreviated first name of the author (may consist of\n-         *            several tokens, like \"C. L. X. J.\" in \"Charles Louis\n-         *            Xavier Joseph de la Vall{\\'e}e Poussin\"). It is a\n-         *            responsibility of the caller to create a reasonable\n-         *            abbreviation of the first name.\n-         * @param von\n-         *            the von part of the author's name (may consist of several\n-         *            tokens, like \"de la\" in \"Charles Louis Xavier Joseph de la\n-         *            Vall{\\'e}e Poussin\")\n-         * @param last\n-         *            the lats name of the author (may consist of several\n-         *            tokens, like \"Vall{\\'e}e Poussin\" in \"Charles Louis Xavier\n-         *            Joseph de la Vall{\\'e}e Poussin\")\n-         * @param jr\n-         *            the junior part of the author's name (may consist of\n-         *            several tokens, like \"Jr. III\" in \"Smith, Jr. III, John\")\n-         */\n-        public Author(String first, String firstabbr, String von, String last, String jr) {\n-            first_part = removeStartAndEndBraces(first);\n-            first_abbr = removeStartAndEndBraces(firstabbr);\n-            von_part = removeStartAndEndBraces(von);\n-            last_part = removeStartAndEndBraces(last);\n-            jr_part = removeStartAndEndBraces(jr);\n-        }\n-\n-        /**\n-         * \n-         * @return true if the brackets in s are properly paired\n-         */\n-        private boolean properBrackets(String s) {\n-            // nested construct is there, check for \"proper\" nesting\n-            int i = 0;\n-            int level = 0;\n-            loop: while (i < s.length()) {\n-                char c = s.charAt(i);\n-                switch (c) {\n-                case '{':\n-                    level++;\n-                    break;\n-                case '}':\n-                    level--;\n-                    if (level == -1) {\n-                        // the improper nesting\n-                        break loop;\n-                    }\n-                    break;\n-                }\n-                i++;\n-            }\n-            return (level == 0);\n-        }\n-\n-        /**\n-         * Removes start and end brace at a string\n-         * \n-         * E.g., \n-         *   * {Vall{\\'e}e Poussin} -> Vall{\\'e}e Poussin\n-         *   * {Vall{\\'e}e} {Poussin} -> Vall{\\'e}e Poussin\n-         *   * Vall{\\'e}e Poussin -> Vall{\\'e}e Poussin\n-         */\n-        private String removeStartAndEndBraces(String name) {\n-            if (name == null) {\n-                return null;\n-            }\n-            if (!name.contains(\"{\")) {\n-                return name;\n-            }\n-\n-            String[] split = name.split(\" \");\n-            StringBuilder b = new StringBuilder();\n-            for (String s : split) {\n-                if (s.length() > 2) {\n-                    if (s.startsWith(\"{\") && s.endsWith(\"}\")) {\n-                        // quick solution (which we don't do: just remove first \"{\" and last \"}\"\n-                        // however, it might be that s is like {A}bbb{c}, where braces may not be removed\n-\n-                        // inner \n-                        String inner = s.substring(1, s.length() - 1);\n-\n-                        if (inner.contains(\"}\")) {\n-                            if (properBrackets(inner)) {\n-                                s = inner;\n-                            } else {\n-                                // no proper brackets if inner string: s is left untouched\n-                            }\n-                        } else {\n-                            //  no inner curly brackets found, no check needed, inner can just be used as s\n-                            s = inner;\n-                        }\n-                    }\n-                }\n-                b.append(s);\n-                b.append(' ');\n-            }\n-            // delete last\n-            b.deleteCharAt(b.length() - 1);\n-\n-            // now, all inner words are cleared\n-            // case {word word word} remains\n-            // as above, we have to be aware of {w}ord word wor{d} and {{w}ord word word}\n-\n-            name = b.toString();\n-\n-            if (name.startsWith(\"{\") && name.endsWith(\"}\")) {\n-                String inner = name.substring(1, name.length() - 1);\n-                if (properBrackets(inner)) {\n-                    return inner;\n-                } else {\n-                    return name;\n-                }\n-            } else {\n-                return name;\n-            }\n-        }\n-\n-        /**\n-         * Returns the first name of the author stored in this object (\"First\").\n-         * \n-         * @return first name of the author (may consist of several tokens)\n-         */\n-        public String getFirst() {\n-            return first_part;\n-        }\n-\n-        /**\n-         * Returns the abbreviated first name of the author stored in this\n-         * object (\"F.\").\n-         * \n-         * @return abbreviated first name of the author (may consist of several\n-         *         tokens)\n-         */\n-        public String getFirstAbbr() {\n-            return first_abbr;\n-        }\n-\n-        /**\n-         * Returns the von part of the author's name stored in this object\n-         * (\"von\").\n-         * \n-         * @return von part of the author's name (may consist of several tokens)\n-         */\n-        public String getVon() {\n-            return von_part;\n-        }\n-\n-        /**\n-         * Returns the last name of the author stored in this object (\"Last\").\n-         * \n-         * @return last name of the author (may consist of several tokens)\n-         */\n-        public String getLast() {\n-            return last_part;\n-        }\n-\n-        /**\n-         * Returns the junior part of the author's name stored in this object\n-         * (\"Jr\").\n-         * \n-         * @return junior part of the author's name (may consist of several\n-         *         tokens) or null if the author does not have a Jr. Part\n-         */\n-        public String getJr() {\n-            return jr_part;\n-        }\n-\n-        /**\n-         * Returns von-part followed by last name (\"von Last\"). If both fields\n-         * were specified as <CODE>null</CODE>, the empty string <CODE>\"\"</CODE>\n-         * is returned.\n-         * \n-         * @return 'von Last'\n-         */\n-        public String getLastOnly() {\n-            if (von_part == null) {\n-                return (last_part == null ? \"\" : last_part);\n-            } else {\n-                return (last_part == null ? von_part : von_part + ' ' + last_part);\n-            }\n-        }\n-\n-        /**\n-         * Returns the author's name in form 'von Last, Jr., First' with the\n-         * first name full or abbreviated depending on parameter.\n-         * \n-         * @param abbr\n-         *            <CODE>true</CODE> - abbreviate first name, <CODE>false</CODE> -\n-         *            do not abbreviate\n-         * @return 'von Last, Jr., First' (if <CODE>abbr==false</CODE>) or\n-         *         'von Last, Jr., F.' (if <CODE>abbr==true</CODE>)\n-         */\n-        public String getLastFirst(boolean abbr) {\n-            String res = getLastOnly();\n-            if (jr_part != null) {\n-                res += \", \" + jr_part;\n-            }\n-            if (abbr) {\n-                if (first_abbr != null) {\n-                    res += \", \" + first_abbr;\n-                }\n-            } else {\n-                if (first_part != null) {\n-                    res += \", \" + first_part;\n-                }\n-            }\n-            return res;\n-        }\n-\n-        /**\n-         * Returns the author's name in form 'First von Last, Jr.' with the\n-         * first name full or abbreviated depending on parameter.\n-         * \n-         * @param abbr\n-         *            <CODE>true</CODE> - abbreviate first name, <CODE>false</CODE> -\n-         *            do not abbreviate\n-         * @return 'First von Last, Jr.' (if <CODE>abbr==false</CODE>) or 'F.\n-         *         von Last, Jr.' (if <CODE>abbr==true</CODE>)\n-         */\n-        public String getFirstLast(boolean abbr) {\n-            String res = getLastOnly();\n-            if (abbr) {\n-                res = (first_abbr == null ? \"\" : first_abbr + ' ') + res;\n-            } else {\n-                res = (first_part == null ? \"\" : first_part + ' ') + res;\n-            }\n-            if (jr_part != null) {\n-                res += \", \" + jr_part;\n-            }\n-            return res;\n-        }\n-\n-        /**\n-         * Returns the name as \"Last, Jr, F.\" omitting the von-part and removing\n-         * starting braces.\n-         * \n-         * @return \"Last, Jr, F.\" as described above or \"\" if all these parts\n-         *         are empty.\n-         */\n-        public String getNameForAlphabetization() {\n-            StringBuilder res = new StringBuilder();\n-            if (last_part != null) {\n-                res.append(last_part);\n-            }\n-            if (jr_part != null) {\n-                res.append(\", \");\n-                res.append(jr_part);\n-            }\n-            if (first_abbr != null) {\n-                res.append(\", \");\n-                res.append(first_abbr);\n-            }\n-            while ((res.length() > 0) && (res.charAt(0) == '{')) {\n-                res.deleteCharAt(0);\n-            }\n-            return res.toString();\n-        }\n-    }// end Author\n-\n-\n-    public static void main(String[] args) {\n-        //String s = \"Ford, Jr., Henry and Guy L. {Steele Jr.} and Olaf Nilsen, Jr.\";\n-        String s = \"Olaf von Nilsen, Jr.\";\n-        AuthorList al = AuthorList.getAuthorList(s);\n-        for (int i = 0; i < al.size(); i++) {\n-            Author a = al.getAuthor(i);\n-            System.out.println((i + 1) + \": first = '\" + a.getFirst() + '\\'');\n-            System.out.println((i + 1) + \": last = '\" + a.getLast() + '\\'');\n-            System.out.println((i + 1) + \": jr = '\" + a.getJr() + '\\'');\n-            System.out.println((i + 1) + \": von = '\" + a.getVon() + '\\'');\n-        }\n-\n-        System.out.println((new CreateDocBookAuthors()).format(s));\n-    }\n-}// end AuthorList, @@ -1,56 +0,0 @@\n-package net.sf.jabref;\n-\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.JDialog;\n-\n-import net.sf.jabref.undo.NamedCompound;\n-\n-/**\n- * This Action may only be used in a menu or button.\n- * Never in the entry editor. FileListEditor and EntryEditor have other ways to update the file links\n- */\n-class AutoLinkFilesAction extends AbstractAction {\n-\n-    public AutoLinkFilesAction() {\n-        putValue(Action.SMALL_ICON, GUIGlobals.getImage(\"autoGroup\"));\n-        putValue(Action.NAME, Globals.lang(\"Automatically set file links\"));\n-        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Automatically link files\"));\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent event) {\n-        ArrayList<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n-        Collections.addAll(entries, JabRef.jrf.basePanel().getSelectedEntries());\n-        if (entries.isEmpty()) {\n-            JabRef.jrf.basePanel().output(Globals.lang(\"No entries selected.\"));\n-            return;\n-        }\n-        JDialog diag = new JDialog(JabRef.jrf, true);\n-        final NamedCompound nc = new NamedCompound(Globals.lang(\"Automatically set file links\"));\n-        Runnable runnable = Util.autoSetLinks(entries, nc, null, null, JabRef.jrf.basePanel().metaData(), new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                if (e.getID() > 0) {\n-                    // entry has been updated in Util.autoSetLinks, only treat nc and status message\n-                    if (nc.hasEdits()) {\n-                        nc.end();\n-                        JabRef.jrf.basePanel().undoManager.addEdit(nc);\n-                        JabRef.jrf.basePanel().markBaseChanged();\n-                    }\n-                    JabRef.jrf.output(Globals.lang(\"Finished autosetting external links.\"));\n-                } else {\n-                    JabRef.jrf.output(Globals.lang(\"Finished autosetting external links.\")\n-                            + \" \" + Globals.lang(\"No files found.\"));\n-                }\n-            }\n-        }, diag);\n-        JabRefExecutorService.INSTANCE.execute(runnable);\n-    }\n-}, @@ -1,26 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-/**\n- * BaseAction is used to define actions that are called from the\n- * base frame through runCommand(). runCommand() finds the\n- * appropriate BaseAction object, and runs its action() method.\n- */\n-public interface BaseAction {//implements Runnable {\n-\n-    void action() throws Throwable;\n-}, None, @@ -1,1185 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-/**\n- * This class defines entry types for BibLatex support.\n- */\n-\n-class BibLatexEntryTypes {\n-\n-    /*\n-        \"rare\" fields?\n-            \"annotator\", \"commentator\", \"titleaddon\", \"editora\", \"editorb\", \"editorc\",\n-            \"issuetitle\", \"issuesubtitle\", \"origlanguage\", \"version\", \"addendum\"\n-\n-     */\n-\n-    public static final BibtexEntryType ARTICLE = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Article\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"journaltitle\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"translator\", \"annotator\", \"commentator\", \"subtitle\", \"titleaddon\",\n-                    \"editor\", \"editora\", \"editorb\", \"editorc\", \"journalsubtitle\", \"issuetitle\",\n-                    \"issuesubtitle\", \"language\", \"origlanguage\", \"series\", \"volume\", \"number\",\n-                    \"eid\", \"issue\", \"month\", \"year\", \"pages\", \"version\", \"note\", \"issn\",\n-                    \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\",\n-                    \"urldate\"};\n-        }\n-\n-        // TODO: number vs issue?\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"editor\", \"series\", \"volume\", \"number\",\n-                    \"eid\", \"issue\", \"pages\", \"note\", \"issn\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType BOOK = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Book\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editor\", \"editora\", \"editorb\", \"editorc\", \"translator\",\n-                    \"annotator\", \"commentator\", \"introduction\",\n-                    \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"language\", \"origlanguage\", \"volume\", \"part\",\n-                    \"edition\", \"volumes\", \"series\", \"number\", \"month\", \"year\", \"note\", \"publisher\",\n-                    \"location\", \"isbn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"editor\", \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"volume\", \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType INBOOK = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Inbook\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"booktitle\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"bookauthor\", \"editor\", \"editora\", \"editorb\", \"editorc\",\n-                    \"translator\", \"annotator\", \"commentator\", \"introduction\", \"foreword\", \"afterword\",\n-                    \"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\", \"maintitleaddon\",\n-                    \"booksubtitle\", \"booktitleaddon\", \"language\", \"origlanguage\", \"volume\", \"part\",\n-                    \"edition\", \"volumes\", \"series\", \"number\", \"note\", \"publisher\", \"location\", \"isbn\",\n-                    \"chapter\", \"pages\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"bookauthor\", \"editor\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType BOOKINBOOK = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Bookinbook\";\n-        }\n-\n-        // Same fields as \"INBOOK\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.INBOOK.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.INBOOK.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.INBOOK.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType SUPPBOOK = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Suppbook\";\n-        }\n-\n-        // Same fields as \"INBOOK\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.INBOOK.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.INBOOK.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.INBOOK.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType BOOKLET = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Booklet\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\", \"note\",\n-                    \"location\", \"chapter\", \"year\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"chapter\", \"pages\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType COLLECTION = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Collection\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n-                    \"commentator\", \"introduction\", \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\",\n-                    \"maintitle\", \"mainsubtitle\", \"maintitleaddon\", \"language\", \"origlanguage\", \"volume\",\n-                    \"part\", \"edition\", \"volumes\", \"series\", \"number\", \"note\", \"publisher\", \"location\", \"isbn\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType INCOLLECTION = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Incollection\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"booktitle\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"translator\", \"annotator\",\n-                    \"commentator\", \"introduction\", \"foreword\", \"afterword\", \"subtitle\", \"titleaddon\",\n-                    \"maintitle\", \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\",\n-                    \"language\", \"origlanguage\", \"volume\", \"part\", \"edition\", \"volumes\", \"series\", \"number\",\n-                    \"note\", \"publisher\", \"location\", \"isbn\", \"chapter\", \"pages\", \"addendum\", \"pubstate\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\", \"year\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"translator\", \"subtitle\", \"titleaddon\", \"maintitle\",\n-                    \"mainsubtitle\", \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"volume\",\n-                    \"edition\", \"publisher\", \"isbn\", \"chapter\", \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType SUPPCOLLECTION = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Suppcollection\";\n-        }\n-\n-        // Treated as alias of \"INCOLLECTION\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType MANUAL = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Manual\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"edition\", \"type\", \"series\",\n-                    \"number\", \"version\", \"note\", \"organization\", \"publisher\", \"location\", \"isbn\", \"chapter\",\n-                    \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\", \"year\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"edition\", \"publisher\", \"isbn\", \"chapter\",\n-                    \"pages\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType MISC = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Misc\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"type\",\n-                    \"version\", \"note\", \"organization\", \"location\", \"month\", \"year\", \"addendum\",\n-                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"location\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType ONLINE = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Online\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"date\", \"url\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"version\", \"note\",\n-                    \"organization\", \"month\", \"year\", \"addendum\", \"pubstate\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"note\", \"organization\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType PATENT = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Patent\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"number\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"holder\", \"subtitle\", \"titleaddon\", \"type\", \"version\", \"location\", \"note\",\n-                    \"month\", \"year\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"holder\", \"subtitle\", \"titleaddon\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType PERIODICAL = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Periodical\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"editora\", \"editorb\", \"editorc\", \"subtitle\", \"issuetitle\",\n-                    \"issuesubtitle\", \"language\", \"series\", \"volume\", \"number\", \"issue\", \"month\", \"year\",\n-                    \"note\", \"issn\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\",\n-                    \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"issuetitle\", \"issuesubtitle\", \"issn\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType SUPPPERIODICAL = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Suppperiodical\";\n-        }\n-\n-        // Treated as alias of \"ARTICLE\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.ARTICLE.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.ARTICLE.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.ARTICLE.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType PROCEEDINGS = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Proceedings\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"editor\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"eventtitle\", \"eventdate\", \"venue\", \"language\", \"volume\", \"part\",\n-                    \"volumes\", \"series\", \"number\", \"note\", \"organization\", \"publisher\", \"location\", \"month\",\n-                    \"year\", \"isbn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"eventtitle\", \"volume\", \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"pagetotal\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType INPROCEEDINGS = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Inproceedings\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"editor\", \"title\", \"booktitle\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"eventtitle\", \"eventdate\", \"venue\",\n-                    \"language\", \"volume\", \"part\", \"volumes\", \"series\", \"number\", \"note\", \"organization\",\n-                    \"publisher\", \"location\", \"month\", \"year\", \"isbn\", \"chapter\", \"pages\", \"addendum\",\n-                    \"pubstate\", \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"maintitle\", \"mainsubtitle\",\n-                    \"maintitleaddon\", \"booksubtitle\", \"booktitleaddon\", \"eventtitle\", \"volume\",\n-                    \"publisher\", \"isbn\", \"chapter\", \"pages\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType REFERENCE = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Reference\";\n-        }\n-\n-        // Treated as alias of \"COLLECTION\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.COLLECTION.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.COLLECTION.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.COLLECTION.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType INREFERENCE = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Inreference\";\n-        }\n-\n-        // Treated as alias of \"INCOLLECTION\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.INCOLLECTION.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType REPORT = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Report\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"type\", \"institution\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"number\", \"version\", \"note\",\n-                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"doi\",\n-                    \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType SET = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Set\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"entryset\", \"crossref\"};\n-        }\n-\n-        // These are all the standard entry fields, custom fields and field aliases not included:\n-        /* Optional fields left out since they take up too much space - I think the set type is mainly supposed\n-           to fall back on content from the entries contained in the set, so only the required fields are included.*/\n-        @Override\n-        public String[] getOptionalFields() {\n-            return null;\n-            /*return new String[] {\"abstract\", \"addendum\", \"afterword\", \"annotation\", \"annotator\", \"author\", \"authortype\",\n-            \t \"bookauthor\", \"bookpagination\", \"booksubtitle\", \"booktitle\", \"booktitleaddon\",\n-            \t \"chapter\", \"commentator\", \"date\", \"doi\", \"edition\", \"editor\", \"editora\", \"editorb\",\n-            \t \"editorc\", \"editortype\", \"editoratype\", \"editorbtype\", \"editorctype\", \"eid\", \"eprint\",\n-            \t \"eprintclass\", \"eprinttype\", \"eventdate\", \"eventtitle\", \"file\", \"foreword\", \"holder\",\n-            \t \"howpublished\", \"indextitle\", \"insitution\", \"introduction\", \"isan\", \"isbn\", \"ismn\",\n-            \t \"isrn\", \"issn\", \"issue\", \"issuesubtitle\", \"issuetitle\", \"iswc\", \"journalsubtitle\",\n-            \t \"journaltitle\", \"label\", \"language\", \"library\", \"location\", \"mainsubtitle\",\n-            \t \"maintitle\", \"maintitleaddon\", \"month\", \"nameaddon\", \"note\", \"number\", \"organization\",\n-            \t \"origdate\", \"origlanguage\", \"origlocation\", \"origpublisher\", \"origtitle\", \"pages\",\n-            \t \"pagetotal\", \"pagination\", \"part\", \"publisher\", \"pubstate\", \"reprinttitle\", \"series\",\n-            \t \"shortauthor\", \"shorteditor\", \"shorthand\", \"shorthandintro\", \"shortjournal\",\n-            \t \"shortseries\", \"shorttitle\", \"subtitle\", \"title\", \"titleaddon\", \"translator\", \"type\",\n-            \t \"url\", \"urldate\", \"venue\", \"version\", \"volume\", \"volumes\", \"year\", \"crossref\",\n-            \t \"entryset\", \"entrysubtype\", \"execute\", \"gender\", \"hyphenation\", \"indexsorttitle\",\n-            \t \"keywords\", \"options\", \"presort\", \"sortkey\", \"sortname\", \"sorttitle\", \"sortyear\",\n-            \t \"xref\"};*/\n-        }\n-\n-        // These are just appr. the first half of the above fields:\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return null;\n-            /*return new String[] {\"abstract\", \"addendum\", \"afterword\", \"annotation\", \"annotator\", \"author\", \"authortype\",\n-            \t \"bookauthor\", \"bookpagination\", \"booksubtitle\", \"booktitle\", \"booktitleaddon\",\n-            \t \"chapter\", \"commentator\", \"date\", \"doi\", \"edition\", \"editor\", \"editora\", \"editorb\",\n-            \t \"editorc\", \"editortype\", \"editoratype\", \"editorbtype\", \"editorctype\", \"eid\", \"eprint\",\n-            \t \"eprintclass\", \"eprinttype\", \"eventdate\", \"eventtitle\", \"file\", \"foreword\", \"holder\",\n-            \t \"howpublished\", \"indextitle\", \"insitution\", \"introduction\", \"isan\", \"isbn\", \"ismn\",\n-            \t \"isrn\", \"issn\", \"issue\", \"issuesubtitle\", \"issuetitle\", \"iswc\", \"journalsubtitle\",\n-            \t \"journaltitle\", \"label\", \"language\", \"library\", \"location\", \"mainsubtitle\",\n-            \t \"maintitle\", \"maintitleaddon\", \"month\", \"nameaddon\"};*/\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType THESIS = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Thesis\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"type\", \"institution\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType UNPUBLISHED = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Unpublished\";\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"language\", \"howpublished\", \"note\",\n-                    \"location\", \"month\", \"year\", \"addendum\", \"pubstate\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"howpublished\", \"pubstate\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    // === Type aliases: ===\n-\n-    public static final BibtexEntryType CONFERENCE = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Conference\";\n-        }\n-\n-        // Treated as alias of \"INPROCEEDINGS\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.INPROCEEDINGS.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.INPROCEEDINGS.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.INPROCEEDINGS.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType ELECTRONIC = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Electronic\";\n-        }\n-\n-        // Treated as alias of \"ONLINE\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.ONLINE.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.ONLINE.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.ONLINE.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType MASTERSTHESIS = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Mastersthesis\";\n-        }\n-\n-        // Treated as alias of \"THESIS\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType PHDTHESIS = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Phdthesis\";\n-        }\n-\n-        // Treated as alias of \"THESIS\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"note\", \"location\", \"month\", \"year\",\n-                    \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\", \"doi\", \"eprint\", \"eprintclass\",\n-                    \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"chapter\", \"pages\", \"pagetotal\", \"doi\", \"eprint\",\n-                    \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType TECHREPORT = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Techreport\";\n-        }\n-\n-        // Treated as alias of \"REPORT\", except \"type\" field is optional\n-        @Override\n-        public String[] getRequiredFields() {\n-            return new String[] {\"author\", \"title\", \"institution\", \"date\"};\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"language\", \"number\", \"version\", \"note\",\n-                    \"location\", \"month\", \"year\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\", \"addendum\", \"pubstate\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {\"subtitle\", \"titleaddon\", \"type\", \"number\", \"isrn\", \"chapter\", \"pages\", \"pagetotal\",\n-                    \"doi\", \"eprint\", \"eprintclass\", \"eprinttype\", \"url\", \"urldate\"};\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    public static final BibtexEntryType WWW = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName() {\n-            return \"Www\";\n-        }\n-\n-        // Treated as alias of \"ONLINE\" according to Biblatex 1.0: \n-        @Override\n-        public String[] getRequiredFields() {\n-            return BibLatexEntryTypes.ONLINE.getRequiredFields();\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields() {\n-            return BibLatexEntryTypes.ONLINE.getOptionalFields();\n-        }\n-\n-        @Override\n-        public String[] getPrimaryOptionalFields() {\n-            return BibLatexEntryTypes.ONLINE.getPrimaryOptionalFields();\n-        }\n-\n-        @Override\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };\n-\n-    /**\n-     * This type is used for IEEEtran.bst to control various \n-     * be repeated or not. Not a very elegant solution, but it works...\n-     */\n-    public static final BibtexEntryType IEEETRANBSTCTL = new BibtexEntryType() {\n-\n-        @Override\n-        public String getName()\n-        {\n-            return \"IEEEtranBSTCTL\";\n-        }\n-\n-        @Override\n-        public String[] getOptionalFields()\n-        {\n-            return new String[] {\n-                    \"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n-                    \"ctlmax_names_forced_etal\", \"ctlnames_show_etal\", \"ctluse_alt_spacing\",\n-                    \"ctlalt_stretch_factor\", \"ctldash_repeated_names\", \"ctlname_format_string\",\n-                    \"ctlname_latex_cmd\", \"ctlname_url_prefix\"\n-            };\n-        }\n-\n-        @Override\n-        public String[] getRequiredFields()\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public String describeRequiredFields()\n-        {\n-            return \"None\";\n-        }\n-\n-        @Override\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-        {\n-            return true;\n-        }\n-    };\n-\n-    // Unsupported types and custom types left out\n-\n-    /*public static final BibtexEntryType ARTICLE = new BibtexEntryType() {\n-        public String getName() {\n-            return \"Article\";\n-        }\n-        public String[] getRequiredFields() {\n-            return new String[] {};\n-        }\n-        public String[] getOptionalFields() {\n-            return new String[] {};\n-        }\n-        public String[] getPrimaryOptionalFields() {\n-            return new String[] {};\n-        }\n-        public String describeRequiredFields() {\n-            return \"\";\n-        }\n-        public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-            return entry.allFieldsPresent(getRequiredFields(), database);\n-        }\n-    };*/\n-}, @@ -1,677 +0,0 @@\n-/*\n-Copyright (C) 2003 David Weitzman, Morten O. Alver\n-\n-All programs in this directory and\n-subdirectories are published under the GNU General Public License as\n-described below.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2 of the License, or (at\n-your option) any later version.\n-\n-This program is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n-USA\n-\n-Further information about the GNU GPL is available at:\n-http://www.gnu.org/copyleft/gpl.ja.html\n-\n-Note:\n-Modified for use in JabRef\n-\n-*/\n-\n-// created by : ?\n-//\n-// modified : r.nagel 23.08.2004\n-//                - insert getEntryByKey() methode needed by AuxSubGenerator\n-\n-package net.sf.jabref;\n-\n-import java.beans.PropertyChangeEvent;\n-import java.beans.PropertyVetoException;\n-import java.beans.VetoableChangeListener;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Comparator;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Hashtable;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import javax.swing.JOptionPane;\n-\n-public class BibtexDatabase {\n-\n-    private final Map<String, BibtexEntry> _entries = new Hashtable<String, BibtexEntry>();\n-\n-    private String _preamble = null;\n-\n-    private final HashMap<String, BibtexString> _strings = new HashMap<String, BibtexString>();\n-\n-    private final Set<DatabaseChangeListener> changeListeners = new HashSet<DatabaseChangeListener>();\n-\n-    private boolean followCrossrefs = true;\n-\n-    /**\n-     * use a map instead of a set since i need to know how many of each key is\n-     * inthere\n-     */\n-    private final HashMap<String, Integer> allKeys = new HashMap<String, Integer>();\n-\n-    /*\n-     * Entries are stored in a HashMap with the ID as key. What happens if\n-     * someone changes a BibtexEntry's ID after it has been added to this\n-     * BibtexDatabase? The key of that entry would be the old ID, not the new\n-     * one. Use a PropertyChangeListener to identify an ID change and update the\n-     * Map.\n-     */\n-    private final VetoableChangeListener listener =\n-            new VetoableChangeListener()\n-            {\n-\n-                @Override\n-                public void vetoableChange(PropertyChangeEvent pce)\n-                        throws PropertyVetoException\n-                {\n-                    if (pce.getPropertyName() == null) {\n-                        fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this, DatabaseChangeEvent.ChangeType.CHANGING_ENTRY, (BibtexEntry) pce.getSource()));\n-                    } else if (\"id\".equals(pce.getPropertyName()))\n-                    {\n-                        // locate the entry under its old key\n-                        BibtexEntry oldEntry =\n-                                _entries.remove(pce.getOldValue());\n-\n-                        if (oldEntry != pce.getSource())\n-                        {\n-                            // Something is very wrong!\n-                            // The entry under the old key isn't\n-                            // the one that sent this event.\n-                            // Restore the old state.\n-                            _entries.put((String) pce.getOldValue(), oldEntry);\n-                            throw new PropertyVetoException(\"Wrong old ID\", pce);\n-                        }\n-\n-                        if (_entries.get(pce.getNewValue()) != null)\n-                        {\n-                            _entries.put((String) pce.getOldValue(), oldEntry);\n-                            throw new PropertyVetoException\n-                            (\"New ID already in use, please choose another\",\n-                                    pce);\n-                        }\n-\n-                        // and re-file this entry\n-                        _entries.put((String) pce.getNewValue(),\n-                                (BibtexEntry) pce.getSource());\n-                    } else {\n-                        fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this, DatabaseChangeEvent.ChangeType.CHANGED_ENTRY, (BibtexEntry) pce.getSource()));\n-                        //Util.pr(pce.getSource().toString()+\"\\n\"+pce.getPropertyName()\n-                        //    +\"\\n\"+pce.getNewValue());\n-                    }\n-                }\n-            };\n-\n-\n-    /**\n-     * Returns the number of entries.\n-     */\n-    public synchronized int getEntryCount()\n-    {\n-        return _entries.size();\n-    }\n-\n-    /**\n-     * Returns a Set containing the keys to all entries.\n-     * Use getKeySet().iterator() to iterate over all entries.\n-     */\n-    public synchronized Set<String> getKeySet()\n-    {\n-        return _entries.keySet();\n-    }\n-\n-    /**\n-     * Returns an EntrySorter with the sorted entries from this base,\n-     * sorted by the given Comparator.\n-     */\n-    public synchronized EntrySorter getSorter(Comparator<BibtexEntry> comp) {\n-        EntrySorter sorter = new EntrySorter(_entries, comp);\n-        addDatabaseChangeListener(sorter);\n-        return sorter;\n-    }\n-\n-    /**\n-     * Just temporary, for testing purposes....\n-     * @return\n-     */\n-    public Map<String, BibtexEntry> getEntryMap() {\n-        return _entries;\n-    }\n-\n-    /**\n-     * Returns the entry with the given ID (-> entry_type + hashcode).\n-     */\n-    public synchronized BibtexEntry getEntryById(String id)\n-    {\n-        return _entries.get(id);\n-    }\n-\n-    public synchronized Collection<BibtexEntry> getEntries() {\n-        return _entries.values();\n-    }\n-\n-    /**\n-     * Returns the entry with the given bibtex key.\n-     */\n-    public synchronized BibtexEntry getEntryByKey(String key)\n-    {\n-        BibtexEntry back = null;\n-\n-        int keyHash = key.hashCode(); // key hash for better performance\n-\n-        Set<String> keySet = _entries.keySet();\n-        for (String entrieID : keySet) {\n-            BibtexEntry entry = getEntryById(entrieID);\n-            if ((entry != null) && (entry.getCiteKey() != null)) {\n-                String citeKey = entry.getCiteKey();\n-                if (citeKey != null) {\n-                    if (keyHash == citeKey.hashCode()) {\n-                        back = entry;\n-                    }\n-                }\n-            }\n-        }\n-        return back;\n-    }\n-\n-    public synchronized BibtexEntry[] getEntriesByKey(String key) {\n-\n-        ArrayList<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n-\n-        for (BibtexEntry entry : _entries.values()) {\n-            if (key.equals(entry.getCiteKey())) {\n-                entries.add(entry);\n-            }\n-        }\n-\n-        return entries.toArray(new BibtexEntry[entries.size()]);\n-    }\n-\n-    /**\n-     * Inserts the entry, given that its ID is not already in use.\n-     * use Util.createId(...) to make up a unique ID for an entry.\n-     */\n-    public synchronized boolean insertEntry(BibtexEntry entry)\n-            throws KeyCollisionException\n-    {\n-        String id = entry.getId();\n-        if (getEntryById(id) != null)\n-        {\n-            throw new KeyCollisionException(\n-                    \"ID is already in use, please choose another\");\n-        }\n-\n-        entry.addPropertyChangeListener(listener);\n-\n-        _entries.put(id, entry);\n-\n-        fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.ADDED_ENTRY, entry));\n-\n-        return checkForDuplicateKeyAndAdd(null, entry.getCiteKey(), false);\n-    }\n-\n-    /**\n-     * Removes the entry with the given string.\n-     * \n-     * Returns null if not found.\n-     */\n-    public synchronized BibtexEntry removeEntry(String id)\n-    {\n-        BibtexEntry oldValue = _entries.remove(id);\n-\n-        if (oldValue == null) {\n-            return null;\n-        }\n-\n-        removeKeyFromSet(oldValue.getCiteKey());\n-        oldValue.removePropertyChangeListener(listener);\n-        fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.REMOVED_ENTRY, oldValue));\n-\n-        return oldValue;\n-    }\n-\n-    public synchronized boolean setCiteKeyForEntry(String id, String key) {\n-        if (!_entries.containsKey(id))\n-         {\n-            return false; // Entry doesn't exist!\n-        }\n-        BibtexEntry entry = getEntryById(id);\n-        String oldKey = entry.getCiteKey();\n-        if (key != null) {\n-            entry.setField(BibtexFields.KEY_FIELD, key);\n-        } else {\n-            entry.clearField(BibtexFields.KEY_FIELD);\n-        }\n-        return checkForDuplicateKeyAndAdd(oldKey, entry.getCiteKey(), false);\n-    }\n-\n-    /**\n-     * Sets the database's preamble.\n-     */\n-    public synchronized void setPreamble(String preamble)\n-    {\n-        _preamble = preamble;\n-    }\n-\n-    /**\n-     * Returns the database's preamble.\n-     */\n-    public synchronized String getPreamble()\n-    {\n-        return _preamble;\n-    }\n-\n-    /**\n-     * Inserts a Bibtex String at the given index.\n-     */\n-    public synchronized void addString(BibtexString string)\n-            throws KeyCollisionException\n-    {\n-        if (hasStringLabel(string.getName())) {\n-            throw new KeyCollisionException(Globals.lang(\"A string with this label already exists\"));\n-        }\n-\n-        if (_strings.containsKey(string.getId())) {\n-            throw new KeyCollisionException(\"Duplicate BibtexString id.\");\n-        }\n-\n-        _strings.put(string.getId(), string);\n-    }\n-\n-    /**\n-     * Removes the string at the given index.\n-     */\n-    public synchronized void removeString(String id) {\n-        _strings.remove(id);\n-    }\n-\n-    /**\n-     * Returns a Set of keys to all BibtexString objects in the database.\n-     * These are in no sorted order.\n-     */\n-    public Set<String> getStringKeySet() {\n-        return _strings.keySet();\n-    }\n-\n-    /**\n-     * Returns a Collection of all BibtexString objects in the database.\n-     * These are in no particular order.\n-     */\n-    public Collection<BibtexString> getStringValues() {\n-        return _strings.values();\n-    }\n-\n-    /**\n-     * Returns the string at the given index.\n-     */\n-    public synchronized BibtexString getString(String o) {\n-        return _strings.get(o);\n-    }\n-\n-    /**\n-     * Returns the number of strings.\n-     */\n-    public synchronized int getStringCount() {\n-        return _strings.size();\n-    }\n-\n-    /**\n-     * Returns true if a string with the given label already exists.\n-     */\n-    public synchronized boolean hasStringLabel(String label) {\n-        for (BibtexString value : _strings.values()) {\n-            if (value.getName().equals(label)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    /**\n-     * Resolves any references to strings contained in this field content,\n-     * if possible.\n-     */\n-    public String resolveForStrings(String content) {\n-        if (content == null) {\n-            throw new IllegalArgumentException(\"Content for resolveForStrings must not be null.\");\n-        }\n-        return resolveContent(content, new HashSet<String>());\n-    }\n-\n-    /**\n-     * Take the given collection of BibtexEntry and resolve any string\n-     * references.\n-     * \n-     * @param entries\n-     *            A collection of BibtexEntries in which all strings of the form\n-     *            #xxx# will be resolved against the hash map of string\n-     *            references stored in the databasee.\n-     *            \n-     * @param inPlace If inPlace is true then the given BibtexEntries will be modified, if false then copies of the BibtexEntries are made before resolving the strings.\n-     * \n-     * @return a list of bibtexentries, with all strings resolved. It is dependent on the value of inPlace whether copies are made or the given BibtexEntries are modified. \n-     */\n-    public List<BibtexEntry> resolveForStrings(Collection<BibtexEntry> entries, boolean inPlace) {\n-\n-        if (entries == null) {\n-            throw new NullPointerException();\n-        }\n-\n-        List<BibtexEntry> results = new ArrayList<BibtexEntry>(entries.size());\n-\n-        for (BibtexEntry entry : entries) {\n-            results.add(this.resolveForStrings(entry, inPlace));\n-        }\n-        return results;\n-    }\n-\n-    /**\n-     * Take the given BibtexEntry and resolve any string references.\n-     * \n-     * @param entry\n-     *            A BibtexEntry in which all strings of the form #xxx# will be\n-     *            resolved against the hash map of string references stored in\n-     *            the databasee.\n-     * \n-     * @param inPlace\n-     *            If inPlace is true then the given BibtexEntry will be\n-     *            modified, if false then a copy is made using close made before\n-     *            resolving the strings.\n-     * \n-     * @return a BibtexEntry with all string references resolved. It is\n-     *         dependent on the value of inPlace whether a copy is made or the\n-     *         given BibtexEntries is modified.\n-     */\n-    public BibtexEntry resolveForStrings(BibtexEntry entry, boolean inPlace) {\n-\n-        if (!inPlace) {\n-            entry = (BibtexEntry) entry.clone();\n-        }\n-\n-        for (Object field : entry.getAllFields()) {\n-            entry.setField(field.toString(), this.resolveForStrings(entry.getField(field.toString())));\n-        }\n-\n-        return entry;\n-    }\n-\n-    /**\n-     * If the label represents a string contained in this database, returns\n-     * that string's content. Resolves references to other strings, taking\n-     * care not to follow a circular reference pattern.\n-     * If the string is undefined, returns null.\n-     */\n-    private String resolveString(String label, HashSet<String> usedIds) {\n-        for (BibtexString string : _strings.values()) {\n-\n-            //Util.pr(label+\" : \"+string.getName());\n-            if (string.getName().toLowerCase().equals(label.toLowerCase())) {\n-\n-                // First check if this string label has been resolved\n-                // earlier in this recursion. If so, we have a\n-                // circular reference, and have to stop to avoid\n-                // infinite recursion.\n-                if (usedIds.contains(string.getId())) {\n-                    Util.pr(\"Stopped due to circular reference in strings: \" + label);\n-                    return label;\n-                }\n-                // If not, log this string's ID now.\n-                usedIds.add(string.getId());\n-\n-                // Ok, we found the string. Now we must make sure we\n-                // resolve any references to other strings in this one.\n-                String res = string.getContent();\n-                res = resolveContent(res, usedIds);\n-\n-                // Finished with recursing this branch, so we remove our\n-                // ID again:\n-                usedIds.remove(string.getId());\n-\n-                return res;\n-            }\n-        }\n-\n-        // If we get to this point, the string has obviously not been defined locally.\n-        // Check if one of the standard BibTeX month strings has been used:\n-        MonthUtil.Month month = MonthUtil.getMonthByShortName(label);\n-        if (month.isValid()) {\n-            return month.fullName;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    private String resolveContent(String res, HashSet<String> usedIds) {\n-        //if (res.matches(\".*#[-\\\\^\\\\:\\\\w]+#.*\")) {\n-        if (res.matches(\".*#[^#]+#.*\")) {\n-            StringBuilder newRes = new StringBuilder();\n-            int piv = 0, next;\n-            while ((next = res.indexOf(\"#\", piv)) >= 0) {\n-\n-                // We found the next string ref. Append the text\n-                // up to it.\n-                if (next > 0) {\n-                    newRes.append(res.substring(piv, next));\n-                }\n-                int stringEnd = res.indexOf(\"#\", next + 1);\n-                if (stringEnd >= 0) {\n-                    // We found the boundaries of the string ref,\n-                    // now resolve that one.\n-                    String refLabel = res.substring(next + 1, stringEnd);\n-                    String resolved = resolveString(refLabel, usedIds);\n-\n-                    if (resolved == null) {\n-                        // Could not resolve string. Display the #\n-                        // characters rather than removing them:\n-                        newRes.append(res.substring(next, stringEnd + 1));\n-                    } else {\n-                        // The string was resolved, so we display its meaning only,\n-                        // stripping the # characters signifying the string label:\n-                        newRes.append(resolved);\n-                    }\n-                    piv = stringEnd + 1;\n-                } else {\n-                    // We didn't find the boundaries of the string ref. This\n-                    // makes it impossible to interpret it as a string label.\n-                    // So we should just append the rest of the text and finish.\n-                    newRes.append(res.substring(next));\n-                    piv = res.length();\n-                    break;\n-                }\n-\n-            }\n-            if (piv < (res.length() - 1)) {\n-                newRes.append(res.substring(piv));\n-            }\n-            res = newRes.toString();\n-        }\n-        return res;\n-    }\n-\n-    //##########################################\n-    //  usage:\n-    //  isDuplicate=checkForDuplicateKeyAndAdd( null, b.getKey() , issueDuplicateWarning);\n-    //############################################\n-    // if the newkey already exists and is not the same as oldkey it will give a warning\n-    // else it will add the newkey to the to set and remove the oldkey\n-    private boolean checkForDuplicateKeyAndAdd(String oldKey, String newKey, boolean issueWarning) {\n-        // Globals.logger(\" checkForDuplicateKeyAndAdd [oldKey = \" + oldKey + \"] [newKey = \" + newKey + \"]\");\n-\n-        boolean duplicate;\n-        if (oldKey == null) {// this is a new entry so don't bother removing oldKey\n-            duplicate = addKeyToSet(newKey);\n-        } else {\n-            if (oldKey.equals(newKey)) {// were OK because the user did not change keys\n-                duplicate = false;\n-            } else {// user changed the key\n-\n-                // removed the oldkey\n-                // But what if more than two have the same key?\n-                // this means that user can add another key and would not get a warning!\n-                // consider this: i add a key xxx, then i add another key xxx . I get a warning. I delete the key xxx. JBM\n-                // removes this key from the allKey. then I add another key xxx. I don't get a warning!\n-                // i need a way to count the number of keys of each type\n-                // hashmap=>int (increment each time)\n-\n-                removeKeyFromSet(oldKey);\n-                duplicate = addKeyToSet(newKey);\n-            }\n-        }\n-        if (duplicate && issueWarning) {\n-            JOptionPane.showMessageDialog(null, Globals.lang(\"Warning there is a duplicate key\") + ':' + newKey,\n-                    Globals.lang(\"Duplicate Key Warning\"),\n-                    JOptionPane.WARNING_MESSAGE);//, options);\n-\n-        }\n-        return duplicate;\n-    }\n-\n-    /**\n-     * Returns the number of occurences of the given key in this database.\n-     */\n-    public int getNumberOfKeyOccurences(String key) {\n-        Object o = allKeys.get(key);\n-        if (o == null) {\n-            return 0;\n-        } else {\n-            return (Integer) o;\n-        }\n-\n-    }\n-\n-    //========================================================\n-    // keep track of all the keys to warn if there are duplicates\n-    //========================================================\n-    private boolean addKeyToSet(String key) {\n-        boolean exists = false;\n-        if ((key == null) || key.isEmpty())\n-         {\n-            return false;//don't put empty key\n-        }\n-        if (allKeys.containsKey(key)) {\n-            // warning\n-            exists = true;\n-            allKeys.put(key, allKeys.get(key) + 1);// incrementInteger( allKeys.get(key)));\n-        } else {\n-            allKeys.put(key, 1);\n-        }\n-        return exists;\n-    }\n-\n-    //========================================================\n-    // reduce the number of keys by 1. if this number goes to zero then remove from the set\n-    // note: there is a good reason why we should not use a hashset but use hashmap instead\n-    //========================================================\n-    private void removeKeyFromSet(String key) {\n-        if ((key == null) || key.isEmpty()) {\n-            return;\n-        }\n-        if (allKeys.containsKey(key)) {\n-            Integer tI = allKeys.get(key); // if(allKeys.get(key) instanceof Integer)\n-            if (tI == 1) {\n-                allKeys.remove(key);\n-            }\n-            else {\n-                allKeys.put(key, tI - 1);//decrementInteger( tI ));\n-            }\n-        }\n-    }\n-\n-    private void fireDatabaseChanged(DatabaseChangeEvent e) {\n-        for (DatabaseChangeListener listener : changeListeners) {\n-            listener.databaseChanged(e);\n-        }\n-    }\n-\n-    public void addDatabaseChangeListener(DatabaseChangeListener l) {\n-        changeListeners.add(l);\n-    }\n-\n-    public void removeDatabaseChangeListener(DatabaseChangeListener l) {\n-        changeListeners.remove(l);\n-    }\n-\n-    /**\n-     * Returns the text stored in the given field of the given bibtex entry\n-     * which belongs to the given database.\n-     * \n-     * If a database is given, this function will try to resolve any string\n-     * references in the field-value.\n-     * Also, if a database is given, this function will try to find values for\n-     * unset fields in the entry linked by the \"crossref\" field, if any.\n-     * \n-     * @param field\n-     *            The field to return the value of.\n-     * @param bibtex maybenull\n-     *            The bibtex entry which contains the field.\n-     * @param database maybenull\n-     *            The database of the bibtex entry.\n-     * @return The resolved field value or null if not found.\n-     */\n-    public static String getResolvedField(String field, BibtexEntry bibtex,\n-            BibtexDatabase database) {\n-\n-        if (field.equals(\"bibtextype\")) {\n-            return bibtex.getType().getName();\n-        }\n-\n-        // TODO: Changed this to also consider alias fields, which is the expected \n-        // behavior for the preview layout and for the check whatever all fields are present.\n-        // But there might be unwanted side-effects?!\n-        Object o = bibtex.getFieldOrAlias(field);\n-\n-        // If this field is not set, and the entry has a crossref, try to look up the\n-        // field in the referred entry: Do not do this for the bibtex key.\n-        if ((o == null) && (database != null) && database.followCrossrefs && !field.equals(BibtexFields.KEY_FIELD)) {\n-            Object crossRef = bibtex.getField(\"crossref\");\n-            if (crossRef != null) {\n-                BibtexEntry referred = database.getEntryByKey((String) crossRef);\n-                if (referred != null) {\n-                    // Ok, we found the referred entry. Get the field value from that\n-                    // entry. If it is unset there, too, stop looking:\n-                    o = referred.getField(field);\n-                }\n-            }\n-        }\n-\n-        return BibtexDatabase.getText((String) o, database);\n-    }\n-\n-    /**\n-     * Returns a text with references resolved according to an optionally given\n-     * database.\n-    \n-     * @param toResolve maybenull The text to resolve.\n-     * @param database maybenull The database to use for resolving the text.\n-     * @return The resolved text or the original text if either the text or the database are null\n-     */\n-    public static String getText(String toResolve, BibtexDatabase database) {\n-        if ((toResolve != null) && (database != null)) {\n-            return database.resolveForStrings(toResolve);\n-        }\n-\n-        return toResolve;\n-    }\n-\n-    public void setFollowCrossrefs(boolean followCrossrefs) {\n-        this.followCrossrefs = followCrossrefs;\n-    }\n-}, @@ -1,550 +0,0 @@\n-/*\n-Copyright (C) 2003 David Weitzman, Morten O. Alver\n-\n-All programs in this directory and\n-subdirectories are published under the GNU General Public License as\n-described below.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2 of the License, or (at\n-your option) any later version.\n-\n-This program is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n-USA\n-\n-Further information about the GNU GPL is available at:\n-http://www.gnu.org/copyleft/gpl.ja.html\n-\n-Note:\n-Modified for use in JabRef.\n-\n-*/\n-\n-package net.sf.jabref;\n-\n-import java.beans.PropertyChangeEvent;\n-import java.beans.PropertyVetoException;\n-import java.beans.VetoableChangeListener;\n-import java.beans.VetoableChangeSupport;\n-import java.io.IOException;\n-import java.io.Writer;\n-import java.text.DateFormat;\n-import java.text.FieldPosition;\n-import java.text.ParseException;\n-import java.text.ParsePosition;\n-import java.text.SimpleDateFormat;\n-import java.util.*;\n-\n-import net.sf.jabref.export.FieldFormatter;\n-\n-public class BibtexEntry\n-{\n-\n-    private final static String ID_FIELD = \"id\";\n-    public static final Map<String, String> FieldAliasesOldToNew = new HashMap<String, String>(); // Bibtex to BibLatex\n-    public static final Map<String, String> FieldAliasesNewToOld = new HashMap<String, String>(); // BibLatex to Bibtex\n-\n-    static {\n-        BibtexEntry.FieldAliasesOldToNew.put(\"address\", \"location\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"location\", \"address\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"annote\", \"annotation\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"annotation\", \"annote\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"archiveprefix\", \"eprinttype\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"eprinttype\", \"archiveprefix\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"journal\", \"journaltitle\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"journaltitle\", \"journal\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"key\", \"sortkey\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"sortkey\", \"key\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"pdf\", \"file\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"file\", \"pdf\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"primaryclass\", \"eprintclass\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"eprintclass\", \"primaryclass\");\n-\n-        BibtexEntry.FieldAliasesOldToNew.put(\"school\", \"institution\");\n-        BibtexEntry.FieldAliasesNewToOld.put(\"institution\", \"school\");\n-    }\n-\n-    private String _id;\n-    private BibtexEntryType _type;\n-    private Map<String, String> _fields = new HashMap<String, String>();\n-    private final VetoableChangeSupport _changeSupport = new VetoableChangeSupport(this);\n-\n-    // Search and grouping status is stored in boolean fields for quick reference:\n-    private boolean searchHit, groupHit;\n-\n-\n-    public BibtexEntry() {\n-        this(IdGenerator.next());\n-    }\n-\n-    public BibtexEntry(String id)\n-    {\n-        this(id, BibtexEntryType.OTHER);\n-    }\n-\n-    public BibtexEntry(String id, BibtexEntryType type)\n-    {\n-        if (id == null)\n-        {\n-            throw new NullPointerException(\"Every BibtexEntry must have an ID\");\n-        }\n-\n-        _id = id;\n-        setType(type);\n-    }\n-\n-    /**\n-     * Returns an array describing the optional fields for this entry.\n-     */\n-    public String[] getOptionalFields()\n-    {\n-        return _type.getOptionalFields();\n-    }\n-\n-    /**\n-     * Returns an array describing the required fields for this entry.\n-     */\n-    public String[] getRequiredFields()\n-    {\n-        return _type.getRequiredFields();\n-    }\n-\n-    public String[] getUserDefinedFields()\n-    {\n-\n-        return Globals.prefs.getStringArray(JabRefPreferences.WRITEFIELD_USERDEFINEDORDER);\n-    }\n-\n-    /**\n-     * Returns an set containing the names of all fields that are\n-     * set for this particular entry.\n-     */\n-    public Set<String> getAllFields() {\n-        return new TreeSet<String>(_fields.keySet());\n-    }\n-\n-    /**\n-     * Returns a string describing the required fields for this entry.\n-     */\n-    public String describeRequiredFields()\n-    {\n-        return _type.describeRequiredFields();\n-    }\n-\n-    /**\n-     * Returns true if this entry contains the fields it needs to be\n-     * complete.\n-     */\n-    public boolean hasAllRequiredFields(BibtexDatabase database)\n-    {\n-        return _type.hasAllRequiredFields(this, database);\n-    }\n-\n-    /**\n-     * Returns this entry's type.\n-     */\n-    public BibtexEntryType getType()\n-    {\n-        return _type;\n-    }\n-\n-    /**\n-     * Sets this entry's type.\n-     */\n-    public void setType(BibtexEntryType type)\n-    {\n-        if (type == null)\n-        {\n-            throw new NullPointerException(\n-                    \"Every BibtexEntry must have a type.  Instead of null, use type OTHER\");\n-        }\n-\n-        BibtexEntryType oldType = _type;\n-\n-        try {\n-            // We set the type before throwing the changeEvent, to enable\n-            // the change listener to access the new value if the change\n-            // sets off a change in database sorting etc.\n-            _type = type;\n-            firePropertyChangedEvent(GUIGlobals.TYPE_HEADER,\n-                    oldType != null ? oldType.getName() : null,\n-                    type.getName());\n-        } catch (PropertyVetoException pve) {\n-            pve.printStackTrace();\n-        }\n-\n-    }\n-\n-    /**\n-     * Prompts the entry to call BibtexEntryType.getType(String) with\n-     * its current type name as argument, and sets its type according\n-     * to what is returned. This method is called when a user changes\n-     * the type customization, to make sure all entries are set with\n-     * current types.\n-     * @return true if the entry could find a type, false if not (in\n-     * this case the type will have been set to\n-     * BibtexEntryType.TYPELESS).\n-     */\n-    public boolean updateType() {\n-        BibtexEntryType newType = BibtexEntryType.getType(_type.getName());\n-        if (newType != null) {\n-            _type = newType;\n-            return true;\n-        }\n-        _type = BibtexEntryType.TYPELESS;\n-        return false;\n-    }\n-\n-    /**\n-     * Sets this entry's ID, provided the database containing it\n-     * doesn't veto the change.\n-     */\n-    public void setId(String id) throws KeyCollisionException {\n-\n-        if (id == null) {\n-            throw new NullPointerException(\"Every BibtexEntry must have an ID\");\n-        }\n-\n-        try\n-        {\n-            firePropertyChangedEvent(BibtexEntry.ID_FIELD, _id, id);\n-        } catch (PropertyVetoException pv)\n-        {\n-            throw new KeyCollisionException(\"Couldn't change ID: \" + pv);\n-        }\n-\n-        _id = id;\n-    }\n-\n-    /**\n-     * Returns this entry's ID.\n-     */\n-    public String getId()\n-    {\n-        return _id;\n-    }\n-\n-    /**\n-     * Returns the contents of the given field, or null if it is not set.\n-     */\n-    public String getField(String name) {\n-        return _fields.get(name);\n-    }\n-\n-    /**\n-     * Returns the contents of the given field, its alias or null if both are\n-     * not set.\n-     * \n-     * The following aliases are considered (old bibtex <-> new biblatex) based\n-     * on the BibLatex documentation, chapter 2.2.5:\n-     *  address \t\t<-> location\n-     *  annote\t\t\t<-> annotation \n-     *  archiveprefix \t<-> eprinttype \n-     *  journal \t\t<-> journaltitle \n-     *  key\t\t\t\t<-> sortkey \n-     * \tpdf \t\t\t<-> file \n-     * \tprimaryclass \t<-> eprintclass \n-     * \tschool \t\t\t<-> institution \n-     * These work bidirectional.\n-     * \n-     * Special attention is paid to dates: (see the BibLatex documentation,\n-     * chapter 2.3.8) \n-     * \tThe fields 'year' and 'month' are used if the 'date'\n-     * \tfield is empty. Conversely, getFieldOrAlias(\"year\") also tries to\n-     * \textract the year from the 'date' field (analogously for 'month').\n-     */\n-    public String getFieldOrAlias(String name) {\n-        String fieldValue = getField(name);\n-        if ((fieldValue != null) && (!fieldValue.isEmpty())) {\n-            return fieldValue;\n-        }\n-\n-        // No value of this field found, so look at the alias\n-\n-        // Create bidirectional dictionary between field names and their aliases\n-        Map<String, String> aliases = new HashMap<String, String>();\n-        aliases.putAll(BibtexEntry.FieldAliasesOldToNew);\n-        aliases.putAll(BibtexEntry.FieldAliasesNewToOld);\n-\n-        String aliasForField = aliases.get(name);\n-        if (aliasForField != null) {\n-            return getField(aliasForField);\n-        }\n-\n-        // So we did not found the field itself or its alias...\n-        // Finally, handle dates\n-        if (name.equals(\"date\"))\n-        {\n-            String year = getField(\"year\");\n-            MonthUtil.Month month = MonthUtil.getMonth(getField(\"month\"));\n-            if (year != null)\n-            {\n-                if (month.isValid()) {\n-                    return year + '-' + month.twoDigitNumber;\n-                } else {\n-                    return year;\n-                }\n-            }\n-        }\n-        if (name.equals(\"year\") || name.equals(\"month\"))\n-        {\n-            String date = getField(\"date\");\n-            if (date == null) {\n-                return null;\n-            }\n-\n-            // Create date format matching dates with year and month\n-            DateFormat df = new DateFormat() {\n-\n-                static final String FORMAT1 = \"yyyy-MM-dd\";\n-                static final String FORMAT2 = \"yyyy-MM\";\n-                final SimpleDateFormat sdf1 = new SimpleDateFormat(FORMAT1);\n-                final SimpleDateFormat sdf2 = new SimpleDateFormat(FORMAT2);\n-\n-\n-                @Override\n-                public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition) {\n-                    throw new UnsupportedOperationException();\n-                }\n-\n-                @Override\n-                public Date parse(String source, ParsePosition pos) {\n-                    if ((source.length() - pos.getIndex()) == FORMAT1.length()) {\n-                        return sdf1.parse(source, pos);\n-                    }\n-                    return sdf2.parse(source, pos);\n-                }\n-            };\n-\n-            try {\n-                Date parsedDate = df.parse(date);\n-                Calendar calendar = Calendar.getInstance();\n-                calendar.setTime(parsedDate);\n-                if (name.equals(\"year\")) {\n-                    return Integer.toString(calendar.get(Calendar.YEAR));\n-                }\n-                if (name.equals(\"month\"))\n-                 {\n-                    return Integer.toString(calendar.get(Calendar.MONTH) + 1); // Shift by 1 since in this calendar Jan = 0\t\t\t\n-                }\n-            } catch (ParseException e) {\n-                // So not a date with year and month, try just to parse years\n-                df = new SimpleDateFormat(\"yyyy\");\n-\n-                try {\n-                    Date parsedDate = df.parse(date);\n-                    Calendar calendar = Calendar.getInstance();\n-                    calendar.setTime(parsedDate);\n-                    if (name.equals(\"year\")) {\n-                        return Integer.toString(calendar.get(Calendar.YEAR));\n-                    }\n-                } catch (ParseException e2) {\n-                    return null; // Date field not in valid format\n-                }\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    public String getCiteKey() {\n-        return (_fields.containsKey(BibtexFields.KEY_FIELD) ?\n-                _fields.get(BibtexFields.KEY_FIELD) : null);\n-    }\n-\n-    /**\n-     * Sets a number of fields simultaneously. The given HashMap contains field\n-     * names as keys, each mapped to the value to set.\n-     * WARNING: this method does not notify change listeners, so it should *NOT*\n-     * be used for entries that are being displayed in the GUI. Furthermore, it\n-     * does not check values for content, so e.g. empty strings will be set as such.\n-     */\n-    public void setField(Map<String, String> fields) {\n-        _fields.putAll(fields);\n-    }\n-\n-    /**\n-     * Set a field, and notify listeners about the change.\n-     *\n-     * @param name The field to set.\n-     * @param value The value to set.\n-     */\n-    public void setField(String name, String value) {\n-\n-        if (BibtexEntry.ID_FIELD.equals(name)) {\n-            throw new IllegalArgumentException(\"The field name '\" + name +\n-                    \"' is reserved\");\n-        }\n-\n-        String oldValue = _fields.get(name);\n-        try {\n-            // We set the field before throwing the changeEvent, to enable\n-            // the change listener to access the new value if the change\n-            // sets off a change in database sorting etc.\n-            _fields.put(name, value);\n-            firePropertyChangedEvent(name, oldValue, value);\n-        } catch (PropertyVetoException pve) {\n-            // Since we have already made the change, we must undo it since\n-            // the change was rejected:\n-            _fields.put(name, oldValue);\n-            throw new IllegalArgumentException(\"Change rejected: \" + pve);\n-        }\n-\n-    }\n-\n-    /**\n-     * Remove the mapping for the field name, and notify listeners about\n-     * the change.\n-     *\n-     * @param name The field to clear.\n-     */\n-    public void clearField(String name) {\n-\n-        if (BibtexEntry.ID_FIELD.equals(name)) {\n-            throw new IllegalArgumentException(\"The field name '\" + name +\n-                    \"' is reserved\");\n-        }\n-        Object oldValue = _fields.get(name);\n-        _fields.remove(name);\n-        try {\n-            firePropertyChangedEvent(name, oldValue, null);\n-        } catch (PropertyVetoException pve) {\n-            throw new IllegalArgumentException(\"Change rejected: \" + pve);\n-        }\n-\n-    }\n-\n-    /**\n-     * Determines whether this entry has all the given fields present. If a non-null\n-     * database argument is given, this method will try to look up missing fields in\n-     * entries linked by the \"crossref\" field, if any.\n-     *\n-     * @param fields An array of field names to be checked.\n-     * @param database The database in which to look up crossref'd entries, if any. This\n-     *  argument can be null, meaning that no attempt will be made to follow crossrefs.\n-     * @return true if all fields are set or could be resolved, false otherwise.\n-     */\n-    boolean allFieldsPresent(String[] fields, BibtexDatabase database) {\n-        for (String field : fields) {\n-            if (BibtexDatabase.getResolvedField(field, this, database) == null) {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n-    }\n-\n-    boolean atLeastOnePresent(String[] fields, BibtexDatabase database) {\n-        for (String field : fields) {\n-            String value = BibtexDatabase.getResolvedField(field, this, database);\n-            if ((value != null) && (!value.isEmpty())) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    private void firePropertyChangedEvent(String fieldName, Object oldValue,\n-            Object newValue) throws PropertyVetoException\n-    {\n-        _changeSupport.fireVetoableChange(new PropertyChangeEvent(this,\n-                fieldName, oldValue, newValue));\n-    }\n-\n-    /**\n-     * Adds a VetoableChangeListener, which is notified of field\n-     * changes. This is useful for an object that needs to update\n-     * itself each time a field changes.\n-     */\n-    public void addPropertyChangeListener(VetoableChangeListener listener)\n-    {\n-        _changeSupport.addVetoableChangeListener(listener);\n-    }\n-\n-    /**\n-     * Removes a property listener.\n-     */\n-    public void removePropertyChangeListener(VetoableChangeListener listener)\n-    {\n-        _changeSupport.removeVetoableChangeListener(listener);\n-    }\n-\n-    /**\n-     * Write this entry to the given Writer, with the given FieldFormatter.\n-     * @param write True if this is a write, false if it is a display. The write will\n-     * not include non-writeable fields if it is a write, otherwise non-displayable fields\n-     * will be ignored. Refer to GUIGlobals for isWriteableField(String) and\n-     * isDisplayableField(String).\n-     */\n-    public void write(Writer out, FieldFormatter ff, boolean write) throws IOException {\n-        new BibtexEntryWriter(ff, write).write(this, out);\n-    }\n-\n-    /**\n-     * Returns a clone of this entry. Useful for copying.\n-     */\n-    @Override\n-    public Object clone() {\n-        BibtexEntry clone = new BibtexEntry(_id, _type);\n-        clone._fields = new HashMap<String, String>(_fields);\n-        return clone;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return getType().getName() + ':' + getField(BibtexFields.KEY_FIELD);\n-    }\n-\n-    public boolean isSearchHit() {\n-        return searchHit;\n-    }\n-\n-    public void setSearchHit(boolean searchHit) {\n-        this.searchHit = searchHit;\n-    }\n-\n-    public boolean isGroupHit() {\n-        return groupHit;\n-    }\n-\n-    public void setGroupHit(boolean groupHit) {\n-        this.groupHit = groupHit;\n-    }\n-\n-    /**\n-     * @param maxCharacters The maximum number of characters (additional\n-     * characters are replaced with \"...\"). Set to 0 to disable truncation.\n-     * @return A short textual description of the entry in the format:\n-     * Author1, Author2: Title (Year)\n-     */\n-    public String getAuthorTitleYear(int maxCharacters) {\n-        String[] s = new String[] {\n-                getField(\"author\"),\n-                getField(\"title\"),\n-                getField(\"year\")};\n-        for (int i = 0; i < s.length; ++i) {\n-            if (s[i] == null) {\n-                s[i] = \"N/A\";\n-            }\n-        }\n-        String text = s[0] + \": \\\"\" + s[1] + \"\\\" (\" + s[2] + ')';\n-        if ((maxCharacters <= 0) || (text.length() <= maxCharacters)) {\n-            return text;\n-        }\n-        return text.substring(0, maxCharacters + 1) + \"...\";\n-    }\n-}, @@ -1,1204 +0,0 @@\n-/*\n-Copyright (C) 2003 David Weitzman, Morten O. Alver\n-\n-All programs in this directory and\n-subdirectories are published under the GNU General Public License as\n-described below.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2 of the License, or (at\n-your option) any later version.\n-\n-This program is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n-USA\n-\n-Further information about the GNU GPL is available at:\n-http://www.gnu.org/copyleft/gpl.ja.html\n-\n-Note:\n-Modified for use in JabRef.\n-\n-*/\n-package net.sf.jabref;\n-\n-import java.util.Iterator;\n-import java.util.TreeMap;\n-import java.util.Locale;\n-\n-/**\n- * Provides a list of known entry types\n- *\n- * The list of optional and required fields is derived from http://en.wikipedia.org/wiki/BibTeX#Entry_types\n- */\n-public abstract class BibtexEntryType implements Comparable<BibtexEntryType>\n-{\n-\n-    public static final BibtexEntryType OTHER =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Other\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[0];\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[0];\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return true;\n-                }\n-            };\n-\n-    public static final BibtexEntryType ARTICLE =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Article\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"volume\", \"pages\", \"number\", \"month\", \"note\", //- \"volume\", \"pages\", \"part\", \"eid\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"journal\", \"year\" //+ \"volume\", \"pages\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, JOURNAL and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"journal\", \"year\", \"bibtexkey\", \"volume\", \"pages\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType BOOKLET =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Booklet\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"howpublished\", \"address\", \"month\", \"year\", \"note\" //+ \"lastchecked\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType INBOOK =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"InBook\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"volume\", \"number\", \"series\", \"type\", \"address\", \"edition\",\n-                            \"month\", \"note\" //+ \"pages\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"chapter\", \"pages\", \"title\", \"publisher\", \"year\", \"editor\",\n-                            \"author\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFieldsForCustomization() {\n-                    return new String[] {\"author/editor\", \"title\", \"chapter/pages\", \"year\", \"publisher\"};\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE, CHAPTER and/or PAGES, PUBLISHER, YEAR, and an \"\n-                            + \"EDITOR and/or AUTHOR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"publisher\", \"year\", \"bibtexkey\"\n-                    }, database) &&\n-                            entry.atLeastOnePresent(new String[] {\"author\", \"editor\"}, database) &&\n-                            entry.atLeastOnePresent(new String[] {\"chapter\", \"pages\"}, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType BOOK =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Book\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"volume\", \"number\", \"series\", \"address\", \"edition\", \"month\",\n-                            \"note\" //+ pages\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\", \"publisher\", \"year\", \"editor\", \"author\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFieldsForCustomization()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\", \"publisher\", \"year\", \"author/editor\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE, PUBLISHER, YEAR, and an EDITOR and/or AUTHOR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"publisher\", \"year\", \"bibtexkey\"\n-                    }, database) &&\n-                            entry.atLeastOnePresent(new String[] {\"author\", \"editor\"}, database);\n-\n-                }\n-            };\n-\n-    public static final BibtexEntryType INCOLLECTION =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"InCollection\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"editor\", \"volume\", \"number\", \"series\", \"type\", \"chapter\",\n-                            \"pages\", \"address\", \"edition\", \"month\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"publisher\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, BOOKTITLE, PUBLISHER and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"publisher\", \"year\",\n-                            \"bibtexkey\"\n-\n-                    }, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType CONFERENCE =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Conference\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"editor\", \"volume\", \"number\", \"series\", \"pages\",\n-                            \"address\", \"month\", \"organization\", \"publisher\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, BOOKTITLE and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType INPROCEEDINGS =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"InProceedings\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"editor\", \"volume\", \"number\", \"series\", \"pages\",\n-                            \"address\", \"month\", \"organization\", \"publisher\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, BOOKTITLE and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"booktitle\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType PROCEEDINGS =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Proceedings\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"editor\", \"volume\", \"number\", \"series\", \"address\",\n-                            \"publisher\", \"note\", \"month\", \"organization\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType MANUAL =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Manual\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"organization\", \"address\", \"edition\",\n-                            \"month\", \"year\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType TECHREPORT =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"TechReport\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"type\", \"number\", \"address\", \"month\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"institution\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, INSTITUTION and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"institution\", \"year\",\n-                            \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType MASTERSTHESIS =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"MastersThesis\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"type\", \"address\", \"month\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"school\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, SCHOOL and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"school\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType PHDTHESIS =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"PhdThesis\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"type\", \"address\", \"month\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"school\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE, SCHOOL and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"school\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType UNPUBLISHED =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Unpublished\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"month\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"AUTHOR, TITLE and NOTE\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"author\", \"title\", \"note\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType PERIODICAL =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Periodical\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"editor\", \"language\", \"series\", \"volume\", \"number\", \"organization\", \"month\", \"note\", \"url\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\", \"year\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE and YEAR\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"year\", \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    private static final BibtexEntryType PATENT =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Patent\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"language\", \"assignee\", \"address\", \"type\", \"number\", \"day\", \"dayfiled\", \"month\", \"monthfiled\", \"note\", \"url\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"nationality\", \"number\", \"year\", \"yearfiled\"\n-                    };\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"NATIONALITY, NUMBER, YEAR or YEARFILED\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"number\", \"bibtexkey\"\n-                    }, database) &&\n-                            entry.atLeastOnePresent(new String[] {\"year\", \"yearfiled\"}, database);\n-\n-                }\n-            };\n-\n-    private static final BibtexEntryType STANDARD =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Standard\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"language\", \"howpublished\", \"type\", \"number\", \"revision\", \"address\", \"month\", \"year\", \"note\", \"url\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"title\", \"organization\", \"institution\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFieldsForCustomization() {\n-                    return new String[] {\"title\", \"organization/institution\"};\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"TITLE, ORGANIZATION or INSTITUTION\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"title\", \"bibtexkey\"\n-                    }, database) &&\n-                            entry.atLeastOnePresent(new String[] {\"organization\", \"institution\"}, database);\n-\n-                }\n-            };\n-\n-    private static final BibtexEntryType ELECTRONIC =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Electronic\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"month\", \"year\", \"title\", \"language\", \"howpublished\", \"organization\", \"address\", \"note\", \"url\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return null;\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"None\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    public static final BibtexEntryType MISC =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Misc\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[]\n-                    {\n-                            \"author\", \"title\", \"howpublished\", \"month\", \"year\", \"note\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return null;\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"None\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return entry.allFieldsPresent(new String[]\n-                    {\n-                            \"bibtexkey\"\n-                    }, database);\n-                }\n-            };\n-\n-    /**\n-     * This type is used for IEEEtran.bst to control various \n-     * be repeated or not. Not a very elegant solution, but it works...\n-     */\n-    private static final BibtexEntryType IEEETRANBSTCTL =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"IEEEtranBSTCTL\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return new String[] {\n-                            \"ctluse_article_number\", \"ctluse_paper\", \"ctluse_forced_etal\",\n-                            \"ctlmax_names_forced_etal\", \"ctlnames_show_etal\", \"ctluse_alt_spacing\",\n-                            \"ctlalt_stretch_factor\", \"ctldash_repeated_names\", \"ctlname_format_string\",\n-                            \"ctlname_latex_cmd\", \"ctlname_url_prefix\"\n-                    };\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return null;\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"None\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return true;\n-                }\n-\n-                @Override\n-                public boolean isVisibleAtNewEntryDialog() {\n-                    return false;\n-                }\n-            };\n-\n-    /**\n-     * This type is provided as an emergency choice if the user makes\n-     * customization changes that remove the type of an entry.\n-     */\n-    public static final BibtexEntryType TYPELESS =\n-            new BibtexEntryType()\n-            {\n-\n-                @Override\n-                public String getName()\n-                {\n-                    return \"Typeless\";\n-                }\n-\n-                @Override\n-                public String[] getOptionalFields()\n-                {\n-                    return null;\n-                }\n-\n-                @Override\n-                public String[] getRequiredFields()\n-                {\n-                    return null;\n-                }\n-\n-                @Override\n-                public String describeRequiredFields()\n-                {\n-                    return \"None\";\n-                }\n-\n-                @Override\n-                public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database)\n-                {\n-                    return false;\n-                }\n-            };\n-\n-\n-    public abstract String getName();\n-\n-    @Override\n-    public int compareTo(BibtexEntryType o) {\n-        return getName().compareTo(o.getName());\n-    }\n-\n-    public abstract String[] getOptionalFields();\n-\n-    public abstract String[] getRequiredFields();\n-\n-    public String[] getPrimaryOptionalFields() {\n-        return new String[0];\n-    }\n-\n-    public abstract String describeRequiredFields();\n-\n-    public abstract boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database);\n-\n-    public String[] getUtilityFields() {\n-        return new String[] {\"search\"};\n-    }\n-\n-    public boolean isRequired(String field) {\n-        String[] req = getRequiredFields();\n-        if (req == null) {\n-            return false;\n-        }\n-        for (String aReq : req) {\n-            if (aReq.equals(field)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    public boolean isOptional(String field) {\n-        String[] opt = getOptionalFields();\n-        if (opt == null) {\n-            return false;\n-        }\n-        for (String anOpt : opt) {\n-            if (anOpt.equals(field)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    public boolean isVisibleAtNewEntryDialog() {\n-        return true;\n-    }\n-\n-\n-    public static final TreeMap<String, BibtexEntryType> ALL_TYPES = new TreeMap<String, BibtexEntryType>();\n-    private static final TreeMap<String, BibtexEntryType> STANDARD_TYPES;\n-    static {\n-        // Put the standard entry types into the type map.\n-        if (!Globals.prefs.getBoolean(\"biblatexMode\")) {\n-            BibtexEntryType.ALL_TYPES.put(\"article\", BibtexEntryType.ARTICLE);\n-            BibtexEntryType.ALL_TYPES.put(\"inbook\", BibtexEntryType.INBOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"book\", BibtexEntryType.BOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"booklet\", BibtexEntryType.BOOKLET);\n-            BibtexEntryType.ALL_TYPES.put(\"incollection\", BibtexEntryType.INCOLLECTION);\n-            BibtexEntryType.ALL_TYPES.put(\"conference\", BibtexEntryType.CONFERENCE);\n-            BibtexEntryType.ALL_TYPES.put(\"inproceedings\", BibtexEntryType.INPROCEEDINGS);\n-            BibtexEntryType.ALL_TYPES.put(\"proceedings\", BibtexEntryType.PROCEEDINGS);\n-            BibtexEntryType.ALL_TYPES.put(\"manual\", BibtexEntryType.MANUAL);\n-            BibtexEntryType.ALL_TYPES.put(\"mastersthesis\", BibtexEntryType.MASTERSTHESIS);\n-            BibtexEntryType.ALL_TYPES.put(\"phdthesis\", BibtexEntryType.PHDTHESIS);\n-            BibtexEntryType.ALL_TYPES.put(\"techreport\", BibtexEntryType.TECHREPORT);\n-            BibtexEntryType.ALL_TYPES.put(\"unpublished\", BibtexEntryType.UNPUBLISHED);\n-            BibtexEntryType.ALL_TYPES.put(\"patent\", BibtexEntryType.PATENT);\n-            BibtexEntryType.ALL_TYPES.put(\"standard\", BibtexEntryType.STANDARD);\n-            BibtexEntryType.ALL_TYPES.put(\"electronic\", BibtexEntryType.ELECTRONIC);\n-            BibtexEntryType.ALL_TYPES.put(\"periodical\", BibtexEntryType.PERIODICAL);\n-            BibtexEntryType.ALL_TYPES.put(\"misc\", BibtexEntryType.MISC);\n-            BibtexEntryType.ALL_TYPES.put(\"other\", BibtexEntryType.OTHER);\n-            BibtexEntryType.ALL_TYPES.put(\"ieeetranbstctl\", BibtexEntryType.IEEETRANBSTCTL);\n-        }\n-        else {\n-            BibtexEntryType.ALL_TYPES.put(\"article\", BibLatexEntryTypes.ARTICLE);\n-            BibtexEntryType.ALL_TYPES.put(\"book\", BibLatexEntryTypes.BOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"inbook\", BibLatexEntryTypes.INBOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"bookinbook\", BibLatexEntryTypes.BOOKINBOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"suppbook\", BibLatexEntryTypes.SUPPBOOK);\n-            BibtexEntryType.ALL_TYPES.put(\"booklet\", BibLatexEntryTypes.BOOKLET);\n-            BibtexEntryType.ALL_TYPES.put(\"collection\", BibLatexEntryTypes.COLLECTION);\n-            BibtexEntryType.ALL_TYPES.put(\"incollection\", BibLatexEntryTypes.INCOLLECTION);\n-            BibtexEntryType.ALL_TYPES.put(\"suppcollection\", BibLatexEntryTypes.SUPPCOLLECTION);\n-            BibtexEntryType.ALL_TYPES.put(\"manual\", BibLatexEntryTypes.MANUAL);\n-            BibtexEntryType.ALL_TYPES.put(\"misc\", BibLatexEntryTypes.MISC);\n-            BibtexEntryType.ALL_TYPES.put(\"online\", BibLatexEntryTypes.ONLINE);\n-            BibtexEntryType.ALL_TYPES.put(\"patent\", BibLatexEntryTypes.PATENT);\n-            BibtexEntryType.ALL_TYPES.put(\"periodical\", BibLatexEntryTypes.PERIODICAL);\n-            BibtexEntryType.ALL_TYPES.put(\"suppperiodical\", BibLatexEntryTypes.SUPPPERIODICAL);\n-            BibtexEntryType.ALL_TYPES.put(\"proceedings\", BibLatexEntryTypes.PROCEEDINGS);\n-            BibtexEntryType.ALL_TYPES.put(\"inproceedings\", BibLatexEntryTypes.INPROCEEDINGS);\n-            BibtexEntryType.ALL_TYPES.put(\"reference\", BibLatexEntryTypes.REFERENCE);\n-            BibtexEntryType.ALL_TYPES.put(\"inreference\", BibLatexEntryTypes.INREFERENCE);\n-            BibtexEntryType.ALL_TYPES.put(\"report\", BibLatexEntryTypes.REPORT);\n-            BibtexEntryType.ALL_TYPES.put(\"set\", BibLatexEntryTypes.SET);\n-            BibtexEntryType.ALL_TYPES.put(\"thesis\", BibLatexEntryTypes.THESIS);\n-            BibtexEntryType.ALL_TYPES.put(\"unpublished\", BibLatexEntryTypes.UNPUBLISHED);\n-            BibtexEntryType.ALL_TYPES.put(\"conference\", BibLatexEntryTypes.CONFERENCE);\n-            BibtexEntryType.ALL_TYPES.put(\"electronic\", BibLatexEntryTypes.ELECTRONIC);\n-            BibtexEntryType.ALL_TYPES.put(\"mastersthesis\", BibLatexEntryTypes.MASTERSTHESIS);\n-            BibtexEntryType.ALL_TYPES.put(\"phdthesis\", BibLatexEntryTypes.PHDTHESIS);\n-            BibtexEntryType.ALL_TYPES.put(\"techreport\", BibLatexEntryTypes.TECHREPORT);\n-            BibtexEntryType.ALL_TYPES.put(\"www\", BibLatexEntryTypes.WWW);\n-            BibtexEntryType.ALL_TYPES.put(\"ieeetranbstctl\", BibLatexEntryTypes.IEEETRANBSTCTL);\n-        }\n-\n-        // We need a record of the standard types, in case the user wants\n-        // to remove a customized version. Therefore we clone the map.\n-        STANDARD_TYPES = new TreeMap<String, BibtexEntryType>(BibtexEntryType.ALL_TYPES);\n-    }\n-\n-\n-    /**\n-     * This method returns the BibtexEntryType for the name of a type,\n-     * or null if it does not exist.\n-     */\n-    public static BibtexEntryType getType(String name) {\n-        //Util.pr(\"'\"+name+\"'\");\n-        Object o = BibtexEntryType.ALL_TYPES.get(name.toLowerCase(Locale.US));\n-        if (o == null) {\n-            return null;\n-        } else {\n-            return (BibtexEntryType) o;\n-        }\n-    }\n-\n-    /**\n-     * This method returns the standard BibtexEntryType for the\n-     * name of a type, or null if it does not exist.\n-     */\n-    public static BibtexEntryType getStandardType(String name) {\n-        //Util.pr(\"'\"+name+\"'\");\n-        Object o = BibtexEntryType.STANDARD_TYPES.get(name.toLowerCase());\n-        if (o == null) {\n-            return null;\n-        } else {\n-            return (BibtexEntryType) o;\n-        }\n-    }\n-\n-    /**\n-     * Removes a customized entry type from the type map. If this type\n-     * overrode a standard type, we reinstate the standard one.\n-     *\n-     * @param name The customized entry type to remove.\n-     */\n-    public static void removeType(String name) {\n-        //BibtexEntryType type = getType(name);\n-        String nm = name.toLowerCase();\n-        //System.out.println(ALL_TYPES.size());\n-        BibtexEntryType.ALL_TYPES.remove(nm);\n-        //System.out.println(ALL_TYPES.size());\n-        if (BibtexEntryType.STANDARD_TYPES.get(nm) != null) {\n-            // In this case the user has removed a customized version\n-            // of a standard type. We reinstate the standard type.\n-            BibtexEntryType.ALL_TYPES.put(nm, BibtexEntryType.STANDARD_TYPES.get(nm));\n-        }\n-\n-    }\n-\n-    /**\n-     * Load all custom entry types from preferences. This method is\n-     * called from JabRef when the program starts.\n-     */\n-    public static void loadCustomEntryTypes(JabRefPreferences prefs) {\n-        int number = 0;\n-        CustomEntryType type;\n-        while ((type = prefs.getCustomEntryType(number)) != null) {\n-            BibtexEntryType.ALL_TYPES.put(type.getName().toLowerCase(), type);\n-            number++;\n-        }\n-    }\n-\n-    /**\n-     * Iterate through all entry types, and store those that are\n-     * custom defined to preferences. This method is called from\n-     * JabRefFrame when the program closes.\n-     */\n-    public static void saveCustomEntryTypes(JabRefPreferences prefs) {\n-        Iterator<String> i = BibtexEntryType.ALL_TYPES.keySet().iterator();\n-        int number = 0;\n-        //Vector customTypes = new Vector(10, 10);\n-        while (i.hasNext()) {\n-            Object o = BibtexEntryType.ALL_TYPES.get(i.next());\n-            if (o instanceof CustomEntryType) {\n-                // Store this entry type.\n-                prefs.storeCustomEntryType((CustomEntryType) o, number);\n-                number++;\n-            }\n-        }\n-        // Then, if there are more 'old' custom types defined, remove these\n-        // from preferences. This is necessary if the number of custom types\n-        // has decreased.\n-        prefs.purgeCustomEntryTypes(number);\n-    }\n-\n-    /**\n-     * Get an array of the required fields in a form appropriate for the entry customization\n-     * dialog - that is, thie either-or fields together and separated by slashes.\n-     * @return Array of the required fields in a form appropriate for the entry customization dialog.\n-     */\n-    public String[] getRequiredFieldsForCustomization() {\n-        return getRequiredFields();\n-    }\n-}, @@ -1,315 +0,0 @@\n-package net.sf.jabref;\n-\n-import net.sf.jabref.export.FieldFormatter;\n-\n-import java.io.IOException;\n-import java.io.Writer;\n-import java.util.*;\n-\n-public class BibtexEntryWriter {\n-\n-    /**\n-     * Display name map for entry field names.\n-     */\n-    private static final Map<String, String> tagDisplayNameMap = new HashMap<String, String>();\n-\n-    static {\n-        // The field name display map.\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"bibtexkey\", \"BibTeXKey\");\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"howpublished\", \"HowPublished\");\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"lastchecked\", \"LastChecked\");\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"isbn\", \"ISBN\");\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"issn\", \"ISSN\");\n-        BibtexEntryWriter.tagDisplayNameMap.put(\"UNKNOWN\", \"UNKNOWN\");\n-    }\n-\n-    /**\n-     * The maximum length of a field name to properly make the alignment of the\n-     * equal sign.\n-     */\n-    private static final int maxFieldLength;\n-\n-    static {\n-        // Looking for the longest field name.\n-        // XXX JK: Look for all used field names not only defined once, since\n-        //         there may be some unofficial field name used.\n-        int max = 0;\n-        for (BibtexEntryType t : BibtexEntryType.ALL_TYPES.values()) {\n-            if (t.getRequiredFields() != null) {\n-                for (String field : t.getRequiredFields()) {\n-                    max = Math.max(max, field.length());\n-                }\n-            }\n-            if (t.getOptionalFields() != null) {\n-                for (String field : t.getOptionalFields()) {\n-                    max = Math.max(max, field.length());\n-                }\n-            }\n-        }\n-        maxFieldLength = max;\n-    }\n-\n-    private final FieldFormatter fieldFormatter;\n-    private final boolean write;\n-    private final boolean writeFieldCameCaseName = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_CAMELCASENAME);\n-    private final boolean writeFieldAddSpaces = Globals.prefs.getBoolean(JabRefPreferences.WRITEFIELD_ADDSPACES);\n-    private final boolean includeEmptyFields = Globals.prefs.getBoolean(\"includeEmptyFields\");\n-    private final int writeFieldSortStype = Globals.prefs.getInt(JabRefPreferences.WRITEFIELD_SORTSTYLE);\n-\n-\n-    public BibtexEntryWriter(FieldFormatter fieldFormatter, boolean write) {\n-        this.fieldFormatter = fieldFormatter;\n-        this.write = write;\n-    }\n-\n-    public void write(BibtexEntry entry, Writer out) throws IOException {\n-        switch (writeFieldSortStype) {\n-        case 0:\n-            writeSorted(entry, out);\n-            break;\n-        case 1:\n-            writeUnsorted(entry, out);\n-            break;\n-        case 2:\n-            writeUserDefinedOrder(entry, out);\n-            break;\n-        }\n-    }\n-\n-    /**\n-     * new style ver>=2.10, sort the field for requiredFields, optionalFields and other fields separately\n-     *\n-     * @param entry\n-     * @param out\n-     * @throws IOException\n-     */\n-    private void writeSorted(BibtexEntry entry, Writer out) throws IOException {\n-        // Write header with type and bibtex-key.\n-        out.write('@' + entry.getType().getName() + '{');\n-\n-        String str = StringUtil.shaveString(entry.getField(BibtexFields.KEY_FIELD));\n-        out.write(((str == null) ? \"\" : str) + ',' + Globals.NEWLINE);\n-        HashMap<String, String> written = new HashMap<String, String>();\n-        written.put(BibtexFields.KEY_FIELD, null);\n-        // Write required fields first.\n-        // Thereby, write the title field first.\n-        boolean hasWritten = writeField(entry, out, \"title\", false, false);\n-        written.put(\"title\", null);\n-        String[] s = entry.getRequiredFields();\n-        if (s != null) {\n-            Arrays.sort(s); // Sorting in alphabetic order.\n-            for (String value : s) {\n-                if (!written.containsKey(value)) { // If field appears both in req. and opt. don't repeat.\n-                    hasWritten = hasWritten | writeField(entry, out, value, hasWritten, false);\n-                    written.put(value, null);\n-                }\n-            }\n-        }\n-        // Then optional fields.\n-        s = entry.getOptionalFields();\n-        boolean first = true, previous;\n-        previous = false;\n-        if (s != null) {\n-            Arrays.sort(s); // Sorting in alphabetic order.\n-            for (String value : s) {\n-                if (!written.containsKey(value)) { // If field appears both in req. and opt. don't repeat.\n-                    //writeField(s[i], out, fieldFormatter);\n-                    hasWritten = hasWritten | writeField(entry, out, value, hasWritten, hasWritten && first);\n-                    written.put(value, null);\n-                    first = false;\n-                    previous = true;\n-                }\n-            }\n-        }\n-        // Then write remaining fields in alphabetic order.\n-        TreeSet<String> remainingFields = new TreeSet<String>();\n-        for (String key : entry.getAllFields()) {\n-            boolean writeIt = (write ? BibtexFields.isWriteableField(key) :\n-                    BibtexFields.isDisplayableField(key));\n-            if (!written.containsKey(key) && writeIt) {\n-                remainingFields.add(key);\n-            }\n-        }\n-        first = previous;\n-        for (String field : remainingFields) {\n-            hasWritten = hasWritten | writeField(entry, out, field, hasWritten, hasWritten && first);\n-            first = false;\n-        }\n-\n-        // Finally, end the entry.\n-        out.write((hasWritten ? Globals.NEWLINE : \"\") + '}' + Globals.NEWLINE);\n-    }\n-\n-    /**\n-     * old style ver<=2.9.2, write fields in the order of requiredFields, optionalFields and other fields, but does not sort the fields.\n-     *\n-     * @param entry\n-     * @param out\n-     * @throws IOException\n-     */\n-    private void writeUnsorted(BibtexEntry entry, Writer out) throws IOException {\n-        // Write header with type and bibtex-key.\n-        out.write('@' + entry.getType().getName().toUpperCase(Locale.US) + '{');\n-\n-        String str = StringUtil.shaveString(entry.getField(BibtexFields.KEY_FIELD));\n-        out.write(((str == null) ? \"\" : str) + ',' + Globals.NEWLINE);\n-        HashMap<String, String> written = new HashMap<String, String>();\n-        written.put(BibtexFields.KEY_FIELD, null);\n-        boolean hasWritten = false;\n-        // Write required fields first.\n-        String[] s = entry.getRequiredFields();\n-        if (s != null) {\n-            for (String value : s) {\n-                hasWritten = hasWritten | writeField(entry, out, value, hasWritten, false);\n-                written.put(value, null);\n-            }\n-        }\n-        // Then optional fields.\n-        s = entry.getOptionalFields();\n-        if (s != null) {\n-            for (String value : s) {\n-                if (!written.containsKey(value)) { // If field appears both in req. and opt. don't repeat.\n-                    //writeField(s[i], out, fieldFormatter);\n-                    hasWritten = hasWritten | writeField(entry, out, value, hasWritten, false);\n-                    written.put(value, null);\n-                }\n-            }\n-        }\n-        // Then write remaining fields in alphabetic order.\n-        TreeSet<String> remainingFields = new TreeSet<String>();\n-        for (String key : entry.getAllFields()) {\n-            boolean writeIt = (write ? BibtexFields.isWriteableField(key) :\n-                    BibtexFields.isDisplayableField(key));\n-            if (!written.containsKey(key) && writeIt) {\n-                remainingFields.add(key);\n-            }\n-        }\n-        for (String field : remainingFields) {\n-            hasWritten = hasWritten | writeField(entry, out, field, hasWritten, false);\n-        }\n-\n-        // Finally, end the entry.\n-        out.write((hasWritten ? Globals.NEWLINE : \"\") + '}' + Globals.NEWLINE);\n-    }\n-\n-    private void writeUserDefinedOrder(BibtexEntry entry, Writer out) throws IOException {\n-        // Write header with type and bibtex-key.\n-        out.write('@' + entry.getType().getName() + '{');\n-\n-        String str = StringUtil.shaveString(entry.getField(BibtexFields.KEY_FIELD));\n-        out.write(((str == null) ? \"\" : str) + ',' + Globals.NEWLINE);\n-        HashMap<String, String> written = new HashMap<String, String>();\n-        written.put(BibtexFields.KEY_FIELD, null);\n-        boolean hasWritten = false;\n-\n-        // Write user defined fields first.\n-        String[] s = entry.getUserDefinedFields();\n-        if (s != null) {\n-            //do not sort, write as it is.\n-            for (String value : s) {\n-                if (!written.containsKey(value)) { // If field appears both in req. and opt. don't repeat.\n-                    hasWritten = hasWritten | writeField(entry, out, value, hasWritten, false);\n-                    written.put(value, null);\n-                }\n-            }\n-        }\n-\n-        // Then write remaining fields in alphabetic order.\n-        boolean first, previous;\n-        previous = false;\n-        //STA get remaining fields\n-        TreeSet<String> remainingFields = new TreeSet<String>();\n-        for (String key : entry.getAllFields()) {\n-            //iterate through all fields\n-            boolean writeIt = (write ? BibtexFields.isWriteableField(key) :\n-                    BibtexFields.isDisplayableField(key));\n-            //find the ones has not been written.\n-            if (!written.containsKey(key) && writeIt) {\n-                remainingFields.add(key);\n-            }\n-        }\n-        //END get remaining fields\n-\n-        first = previous;\n-        for (String field : remainingFields) {\n-            hasWritten = hasWritten | writeField(entry, out, field, hasWritten, hasWritten && first);\n-            first = false;\n-        }\n-\n-        // Finally, end the entry.\n-        out.write((hasWritten ? Globals.NEWLINE : \"\") + '}' + Globals.NEWLINE);\n-\n-    }\n-\n-    /**\n-     * Write a single field, if it has any content.\n-     *\n-     * @param entry      the entry to write\n-     * @param out        the target of the write\n-     * @param name       The field name\n-     * @param isNotFirst Indicates whether this is the first field written for\n-     *                   this entry - if not, start by writing a comma and newline   @return true if this field was written, false if it was skipped because\n-     *                   it was not set\n-     * @throws IOException In case of an IO error\n-     */\n-    private boolean writeField(BibtexEntry entry, Writer out, String name, boolean isNotFirst, boolean isNextGroup) throws IOException {\n-        String o = entry.getField(name);\n-        if ((o != null) || includeEmptyFields) {\n-            if (isNotFirst) {\n-                out.write(',' + Globals.NEWLINE);\n-            }\n-            if (isNextGroup) {\n-                out.write(Globals.NEWLINE);\n-            }\n-            out.write(\"  \" + getFieldDisplayName(name) + \" = \");\n-\n-            try {\n-                out.write(fieldFormatter.format(o, name));\n-            } catch (Throwable ex) {\n-                throw new IOException(Globals.lang(\"Error in field\") + \" '\" + name + \"': \" + ex.getMessage());\n-            }\n-            return true;\n-        } else {\n-            return false;\n-        }\n-    }\n-\n-    /**\n-     * Get display version of a entry field.\n-     * <p/>\n-     * BibTeX is case-insensitive therefore there is no difference between:\n-     * howpublished, HOWPUBLISHED, HowPublished, etc. Since the camel case\n-     * version is the most easy to read this should be the one written in the\n-     * *.bib file. Since there is no way how do detect multi-word strings by\n-     * default the first character will be made uppercase. In other characters\n-     * case needs to be changed the {@link #tagDisplayNameMap} will be used.\n-     *\n-     * @param field The name of the field.\n-     * @return The display version of the field name.\n-     */\n-    private String getFieldDisplayName(String field) {\n-        if (field.isEmpty()) {\n-            // hard coded \"UNKNOWN\" is assigned to a field without any name\n-            field = \"UNKNOWN\";\n-        }\n-\n-        String suffix = \"\";\n-        if (writeFieldAddSpaces) {\n-            for (int i = BibtexEntryWriter.maxFieldLength - field.length(); i > 0; i--) {\n-                suffix += \" \";\n-            }\n-        }\n-\n-        String res;\n-        if (writeFieldCameCaseName) {\n-            if (BibtexEntryWriter.tagDisplayNameMap.containsKey(field.toLowerCase())) {\n-                res = BibtexEntryWriter.tagDisplayNameMap.get(field.toLowerCase()) + suffix;\n-            } else {\n-                res = (field.charAt(0) + \"\").toUpperCase() + field.substring(1) + suffix;\n-            }\n-        } else {\n-            res = field + suffix;\n-        }\n-        return res;\n-    }\n-}, @@ -1,735 +0,0 @@\n-/*  Copyright (C) 2003-2014 Raik Nagel and JabRef contributors\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-//\n-// function : Handling of bibtex fields.\n-//            All bibtex-field related stuff should be placed here!\n-//            Because we can export these informations into additional\n-//            config files -> simple extension and definition of new fields....\n-//\n-// todo     : - handling of identically fields with different names\n-//              e.g. LCCN = lib-congress\n-//            - group id for each fields, e.g. standard, jurabib, bio....\n-//            - add a additional properties functionality into the\n-//              BibtexSingleField class\n-//\n-// modified : r.nagel 25.04.2006\n-//            export/import of some definition from/to a xml file\n-\n-package net.sf.jabref;\n-\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Vector;\n-import java.util.HashSet;\n-\n-import net.sf.jabref.specialfields.SpecialFieldsUtils;\n-import net.sf.jabref.util.TXMLReader;\n-\n-import org.w3c.dom.Element;\n-import org.w3c.dom.NodeList;\n-\n-public class BibtexFields\n-{\n-\n-    public static final String KEY_FIELD = \"bibtexkey\";\n-\n-    // some internal fields\n-    public static final String\n-            SEARCH = \"__search\";\n-    public static final String GROUPSEARCH = \"__groupsearch\";\n-    public static final String MARKED = \"__markedentry\";\n-    public static final String OWNER = \"owner\";\n-    public static final String TIMESTAMP = \"timestamp\"; // it's also definied at the JabRefPreferences class\n-            private static final String ENTRYTYPE = \"entrytype\";\n-\n-    public static final String// Using this when I have no database open or when I read\n-            // non bibtex file formats (used by the ImportFormatReader.java)\n-            DEFAULT_BIBTEXENTRY_ID = \"__ID\";\n-\n-    public static final String[] DEFAULT_INSPECTION_FIELDS = new String[]\n-    {\"author\", \"title\", \"year\", BibtexFields.KEY_FIELD};\n-\n-    // singleton instance\n-    private static final BibtexFields runtime = new BibtexFields();\n-\n-    // contains all bibtex-field objects (BibtexSingleField)\n-    private final HashMap<String, BibtexSingleField> fieldSet;\n-\n-    // contains all known (and public) bibtex fieldnames\n-    private String[] PUBLIC_FIELDS = null;\n-\n-\n-    private BibtexFields()\n-    {\n-        fieldSet = new HashMap<String, BibtexSingleField>();\n-        BibtexSingleField dummy;\n-\n-        // FIRST: all standard fields\n-        // These are the fields that BibTex might want to treat, so these\n-        // must conform to BibTex rules.\n-        add(new BibtexSingleField(\"address\", true, GUIGlobals.SMALL_W));\n-        // An annotation. It is not used by the standard bibliography styles,\n-        // but may be used by others that produce an annotated bibliography.\n-        // http://www.ecst.csuchico.edu/~jacobsd/bib/formats/bibtex.html\n-        add(new BibtexSingleField(\"annote\", true, GUIGlobals.LARGE_W));\n-        add(new BibtexSingleField(\"author\", true, GUIGlobals.MEDIUM_W, 280));\n-        add(new BibtexSingleField(\"booktitle\", true, 175));\n-        add(new BibtexSingleField(\"chapter\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"crossref\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"edition\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"editor\", true, GUIGlobals.MEDIUM_W, 280));\n-        add(new BibtexSingleField(\"howpublished\", true, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"institution\", true, GUIGlobals.MEDIUM_W));\n-\n-        dummy = new BibtexSingleField(\"journal\", true, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"journalNames\");\n-        add(dummy);\n-        dummy = new BibtexSingleField(\"journaltitle\", true, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"journalNames\");\n-        add(dummy);\n-\n-        add(new BibtexSingleField(\"key\", true));\n-        add(new BibtexSingleField(\"month\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"note\", true, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"number\", true, GUIGlobals.SMALL_W, 60).setNumeric(true));\n-        add(new BibtexSingleField(\"organization\", true, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"pages\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"publisher\", true, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"school\", true, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"series\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"title\", true, 400));\n-        add(new BibtexSingleField(\"type\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"language\", true, GUIGlobals.SMALL_W));\n-        add(new BibtexSingleField(\"volume\", true, GUIGlobals.SMALL_W, 60).setNumeric(true));\n-        add(new BibtexSingleField(\"year\", true, GUIGlobals.SMALL_W, 60).setNumeric(true));\n-\n-        // custom fields not displayed at editor, but as columns in the UI\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_RANKING, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_PRIORITY, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_RELEVANCE, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_QUALITY, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_READ, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-        dummy = new BibtexSingleField(SpecialFieldsUtils.FIELDNAME_PRINTED, false);\n-        if (!Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS)) {\n-            dummy.setPrivate();\n-            dummy.setWriteable(false);\n-            dummy.setDisplayable(false);\n-        }\n-        add(dummy);\n-\n-        // some semi-standard fields\n-        dummy = new BibtexSingleField(BibtexFields.KEY_FIELD, true);\n-        dummy.setPrivate();\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(\"doi\", true, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"external\");\n-        add(dummy);\n-        add(new BibtexSingleField(\"eid\", true, GUIGlobals.SMALL_W));\n-\n-        dummy = new BibtexSingleField(\"date\", true);\n-        dummy.setPrivate();\n-        add(dummy);\n-\n-        add(new BibtexSingleField(\"pmid\", false, GUIGlobals.SMALL_W, 60).setNumeric(true));\n-\n-        // additional fields ------------------------------------------------------ \n-        add(new BibtexSingleField(\"location\", false));\n-        add(new BibtexSingleField(\"abstract\", false, GUIGlobals.LARGE_W, 400));\n-\n-        dummy = new BibtexSingleField(\"url\", false, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"external\");\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(\"pdf\", false, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"browseDoc\");\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(\"ps\", false, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"browseDocZip\");\n-        add(dummy);\n-        add(new BibtexSingleField(\"comment\", false, GUIGlobals.MEDIUM_W));\n-        add(new BibtexSingleField(\"keywords\", false, GUIGlobals.SMALL_W));\n-        //FIELD_EXTRAS.put(\"keywords\", \"selector\");\n-\n-        dummy = new BibtexSingleField(GUIGlobals.FILE_FIELD, false);\n-        dummy.setEditorType(GUIGlobals.FILE_LIST_EDITOR);\n-        add(dummy);\n-\n-        add(new BibtexSingleField(\"search\", false, 75));\n-\n-        // some internal fields ----------------------------------------------\n-        dummy = new BibtexSingleField(GUIGlobals.NUMBER_COL, false, 32);\n-        dummy.setPrivate();\n-        dummy.setWriteable(false);\n-        dummy.setDisplayable(false);\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.OWNER, false, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"setOwner\");\n-        dummy.setPrivate();\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.TIMESTAMP, false, GUIGlobals.SMALL_W);\n-        dummy.setExtras(\"datepicker\");\n-        dummy.setPrivate();\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.ENTRYTYPE, false, 75);\n-        dummy.setPrivate();\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.SEARCH, false);\n-        dummy.setPrivate();\n-        dummy.setWriteable(false);\n-        dummy.setDisplayable(false);\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.GROUPSEARCH, false);\n-        dummy.setPrivate();\n-        dummy.setWriteable(false);\n-        dummy.setDisplayable(false);\n-        add(dummy);\n-\n-        dummy = new BibtexSingleField(BibtexFields.MARKED, false);\n-        dummy.setPrivate();\n-        dummy.setWriteable(true); // This field must be written to file!\n-        dummy.setDisplayable(false);\n-        add(dummy);\n-\n-        // read external field definitions\n-        readXML(Globals.additionalFields);\n-\n-        // collect all public fields for the PUBLIC_FIELDS array\n-        Vector<String> pFields = new Vector<String>(fieldSet.size());\n-        for (BibtexSingleField sField : fieldSet.values()) {\n-            if (sField.isPublic())\n-            {\n-                pFields.add(sField.getFieldName());\n-                // or export the complet BibtexSingleField ?\n-                // BibtexSingleField.toString() { return fieldname ; }\n-            }\n-        }\n-\n-        PUBLIC_FIELDS = pFields.toArray(new String[pFields.size()]);\n-        // sort the entries\n-        java.util.Arrays.sort(PUBLIC_FIELDS);\n-\n-    }\n-\n-    /**\n-     * Read the \"numericFields\" string array from preferences, and activate numeric\n-     * sorting for all fields listed in the array. If an unknown field name is included,\n-     * add a field descriptor for the new field.\n-     */\n-    public static void setNumericFieldsFromPrefs() {\n-        String[] numFields = Globals.prefs.getStringArray(\"numericFields\");\n-        if (numFields == null) {\n-            return;\n-        }\n-        // Build a Set of field names for the fields that should be sorted numerically:\n-        HashSet<String> nF = new HashSet<String>();\n-        Collections.addAll(nF, numFields);\n-        // Look through all registered fields, and activate numeric sorting if necessary:\n-        for (String fieldName : BibtexFields.runtime.fieldSet.keySet()) {\n-            BibtexSingleField field = BibtexFields.runtime.fieldSet.get(fieldName);\n-            if (!field.isNumeric() && nF.contains(fieldName)) {\n-                field.setNumeric(nF.contains(fieldName));\n-            }\n-            nF.remove(fieldName); // remove, so we clear the set of all standard fields.\n-        }\n-        // If there are fields left in nF, these must be non-standard fields. Add descriptors for them:\n-        for (String fieldName : nF) {\n-            BibtexSingleField field = new BibtexSingleField(fieldName, false);\n-            field.setNumeric(true);\n-            BibtexFields.runtime.fieldSet.put(fieldName, field);\n-        }\n-\n-    }\n-\n-    /** insert a field into the internal list */\n-    private void add(BibtexSingleField field)\n-    {\n-        // field == null check\n-        String key = field.name;\n-        fieldSet.put(key, field);\n-    }\n-\n-    /** read a xml definiton file and put only NEW fields into the field list */\n-    private void readXML(String resName)\n-    {\n-        TXMLReader reader = new TXMLReader(resName);\n-        if (reader.isReady())\n-        {\n-            // get a list of all fields\n-            NodeList fieldNodes = reader.getNodes(\"field\");\n-\n-            int tagsCount = fieldNodes.getLength();\n-            for (int t = 0; t < tagsCount; t++)\n-            {\n-                Element entry = (Element) fieldNodes.item(t);\n-                String fName = reader.readStringAttribute(entry, \"name\", null);\n-                if (fName != null) // something found ?\n-                {\n-                    fName = fName.toLowerCase();\n-                    BibtexSingleField dummy = fieldSet.get(fName);\n-                    if (dummy == null) // unknown field\n-                    {\n-                        dummy = new BibtexSingleField(reader, entry);\n-                        fieldSet.put(fName, dummy);\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n-    // --------------------------------------------------------------------------\n-    //  the \"static area\"\n-    // --------------------------------------------------------------------------\n-    private static BibtexSingleField getField(String name)\n-    {\n-        if (name != null)\n-        {\n-            return BibtexFields.runtime.fieldSet.get(name.toLowerCase());\n-        }\n-\n-        return null;\n-    }\n-\n-    public static String getFieldExtras(String name)\n-    {\n-        BibtexSingleField sField = BibtexFields.getField(name);\n-        if (sField != null)\n-        {\n-            return sField.getExtras();\n-        }\n-        return null;\n-    }\n-\n-    public static int getEditorType(String name) {\n-        BibtexSingleField sField = BibtexFields.getField(name);\n-        if (sField != null)\n-        {\n-            return sField.getEditorType();\n-        }\n-        return GUIGlobals.STANDARD_EDITOR;\n-    }\n-\n-    public static double getFieldWeight(String name)\n-    {\n-        BibtexSingleField sField = BibtexFields.getField(name);\n-        if (sField != null)\n-        {\n-            return sField.getWeight();\n-        }\n-        return GUIGlobals.DEFAULT_FIELD_WEIGHT;\n-    }\n-\n-    public static void setFieldWeight(String fieldName, double weight)\n-    {\n-        BibtexSingleField sField = BibtexFields.getField(fieldName);\n-        if (sField != null)\n-        {\n-            sField.setWeight(weight);\n-        }\n-    }\n-\n-    public static int getFieldLength(String name)\n-    {\n-        BibtexSingleField sField = BibtexFields.getField(name);\n-        if (sField != null)\n-        {\n-            return sField.getLength();\n-        }\n-        return GUIGlobals.DEFAULT_FIELD_LENGTH;\n-    }\n-\n-    // returns an alternative name for the given fieldname\n-    public static String getFieldDisplayName(String fieldName)\n-    {\n-        BibtexSingleField sField = BibtexFields.getField(fieldName);\n-        if (sField != null)\n-        {\n-            return sField.getAlternativeDisplayName();\n-        }\n-        return null;\n-    }\n-\n-    public static boolean isWriteableField(String field) {\n-        BibtexSingleField sField = BibtexFields.getField(field);\n-        return sField == null || sField.isWriteable();\n-    }\n-\n-    public static boolean isDisplayableField(String field) {\n-        BibtexSingleField sField = BibtexFields.getField(field);\n-        return sField == null || sField.isDisplayable();\n-    }\n-\n-    /**\n-     * Returns true if the given field is a standard Bibtex field.\n-     *\n-     * @param field a <code>String</code> value\n-     * @return a <code>boolean</code> value\n-     */\n-    public static boolean isStandardField(String field) {\n-        BibtexSingleField sField = BibtexFields.getField(field);\n-        return sField != null && sField.isStandard();\n-    }\n-\n-    public static boolean isNumeric(String field) {\n-        BibtexSingleField sField = BibtexFields.getField(field);\n-        return sField != null && sField.isNumeric();\n-    }\n-\n-    /** returns an string-array with all fieldnames */\n-    public static String[] getAllFieldNames()\n-    {\n-        return BibtexFields.runtime.PUBLIC_FIELDS;\n-    }\n-\n-    /** returns an string-array with only private fieldnames */\n-    public static String[] getAllPrivateFieldNames() {\n-        Vector<String> pFields = new Vector<String>();\n-        for (BibtexSingleField sField : BibtexFields.runtime.fieldSet.values()) {\n-            if (sField.isPrivate()) {\n-                pFields.add(sField.getFieldName());\n-            }\n-        }\n-        return pFields.toArray(new String[pFields.size()]);\n-\n-    }\n-\n-    /** returns the fieldname of the entry at index t */\n-    public static String getFieldName(int t)\n-    {\n-        return BibtexFields.runtime.PUBLIC_FIELDS[t];\n-    }\n-\n-    /** returns the number of available fields */\n-    public static int numberOfPublicFields()\n-    {\n-        return BibtexFields.runtime.PUBLIC_FIELDS.length;\n-    }\n-\n-\n-    /*\n-       public static int getPreferredFieldLength(String name) {\n-       int l = DEFAULT_FIELD_LENGTH;\n-       Object o = fieldLength.get(name.toLowerCase());\n-       if (o != null)\n-       l = ((Integer)o).intValue();\n-       return l;\n-       }*/\n-\n-    // --------------------------------------------------------------------------\n-    // a container class for all properties of a bibtex-field\n-    // --------------------------------------------------------------------------\n-    private static class BibtexSingleField\n-    {\n-\n-        private static final int\n-                STANDARD = 0x01, // it is a standard bibtex-field\n-                PRIVATE = 0x02, // internal use, e.g. owner, timestamp\n-                DISPLAYABLE = 0x04, // These fields cannot be shown inside the source editor panel\n-                WRITEABLE = 0x08; // These fields will not be saved to the .bib file.\n-\n-        // the fieldname\n-        private String name;\n-\n-        // contains the standard, privat, displayable, writable infos\n-        // default is: not standard, public, displayable and writable\n-        private int flag = BibtexSingleField.DISPLAYABLE | BibtexSingleField.WRITEABLE;\n-\n-        private int length = GUIGlobals.DEFAULT_FIELD_LENGTH;\n-        private double weight = GUIGlobals.DEFAULT_FIELD_WEIGHT;\n-\n-        private int editorType = GUIGlobals.STANDARD_EDITOR;\n-\n-        // a alternative displayname, e.g. used for\n-        // \"citeseercitationcount\"=\"Popularity\"\n-        private String alternativeDisplayName = null;\n-\n-        // the extras data\n-        // fieldExtras contains mappings to tell the EntryEditor to add a specific\n-        // function to this field, for instance a \"browse\" button for the \"pdf\" field.\n-        private String extras = null;\n-\n-        // This value defines whether contents of this field are expected to be\n-        // numeric values. This can be used to sort e.g. volume numbers correctly:\n-        private boolean numeric = false;\n-\n-\n-        // a comma separated list of alternative bibtex-fieldnames, e.g.\n-        // \"LCCN\" is the same like \"lib-congress\"\n-        // private String otherNames = null ;\n-\n-        // a Hashmap for a lot of additional \"not standard\" properties\n-        // todo: add the handling in a key=value manner\n-        // private HashMap props = new HashMap() ;\n-\n-        // some constructors ;-)\n-        public BibtexSingleField(String fieldName)\n-        {\n-            name = fieldName;\n-        }\n-\n-        public BibtexSingleField(String fieldName, boolean pStandard)\n-        {\n-            name = fieldName;\n-            setFlag(pStandard, BibtexSingleField.STANDARD);\n-        }\n-\n-        public BibtexSingleField(String fieldName, boolean pStandard, double pWeight)\n-        {\n-            name = fieldName;\n-            setFlag(pStandard, BibtexSingleField.STANDARD);\n-            weight = pWeight;\n-        }\n-\n-        public BibtexSingleField(String fieldName, boolean pStandard, int pLength)\n-        {\n-            name = fieldName;\n-            setFlag(pStandard, BibtexSingleField.STANDARD);\n-            length = pLength;\n-        }\n-\n-        public BibtexSingleField(String fieldName, boolean pStandard,\n-                double pWeight, int pLength)\n-        {\n-            name = fieldName;\n-            setFlag(pStandard, BibtexSingleField.STANDARD);\n-            weight = pWeight;\n-            length = pLength;\n-        }\n-\n-        /** the constructor reads all neccessary data from the xml file */\n-        public BibtexSingleField(TXMLReader reader, Element node)\n-        {\n-            // default is: not standard, public, displayable and writable\n-            flag = BibtexSingleField.DISPLAYABLE | BibtexSingleField.WRITEABLE;\n-\n-            name = reader.readStringAttribute(node, \"name\", \"field\");\n-            name = name.toLowerCase();\n-\n-            // read the weight\n-            String wStr = reader.readStringAttribute(node, \"weight\", null);\n-            if (wStr != null)\n-            {\n-                int hCode = wStr.toLowerCase().hashCode();\n-                if (hCode == \"small\".hashCode())\n-                {\n-                    weight = GUIGlobals.SMALL_W;\n-                }\n-                else if (hCode == \"medium\".hashCode())\n-                {\n-                    weight = GUIGlobals.MEDIUM_W;\n-                }\n-                else if (hCode == \"large\".hashCode())\n-                {\n-                    weight = GUIGlobals.LARGE_W;\n-                }\n-                else // try to convert to a double value\n-                {\n-                    try\n-                    {\n-                        weight = Double.parseDouble(wStr);\n-                        if ((weight < 0.0) || (weight > GUIGlobals.MAX_FIELD_WEIGHT))\n-                        {\n-                            weight = GUIGlobals.DEFAULT_FIELD_WEIGHT;\n-                        }\n-                    } catch (Exception e)\n-                    {\n-                        weight = GUIGlobals.DEFAULT_FIELD_WEIGHT;\n-                    }\n-                }\n-            }\n-            length = reader.readIntegerAttribute(node, \"length\", GUIGlobals.DEFAULT_FIELD_LENGTH);\n-\n-            extras = reader.readStringAttribute(node, \"extras\", null);\n-        }\n-\n-        // -----------------------------------------------------------------------\n-        // -----------------------------------------------------------------------\n-\n-        private void setFlag(boolean onOff, int flagID)\n-        {\n-            if (onOff) // set the flag\n-            {\n-                flag = flag | flagID;\n-            }\n-            else // unset the flag,\n-            {\n-                flag = flag & (0xff ^ flagID);\n-            }\n-        }\n-\n-        private boolean isSet(int flagID)\n-        {\n-            return (flag & flagID) == flagID;\n-\n-        }\n-\n-        // -----------------------------------------------------------------------\n-        public boolean isStandard()\n-        {\n-            return isSet(BibtexSingleField.STANDARD);\n-        }\n-\n-        public void setPrivate()\n-        {\n-            flag = flag | BibtexSingleField.PRIVATE;\n-        }\n-\n-        public boolean isPrivate()\n-        {\n-            return isSet(BibtexSingleField.PRIVATE);\n-        }\n-\n-        public void setPublic()\n-        {\n-            setFlag(false, BibtexSingleField.PRIVATE);\n-        }\n-\n-        public boolean isPublic()\n-        {\n-            return !isSet(BibtexSingleField.PRIVATE);\n-        }\n-\n-        public void setDisplayable(boolean value)\n-        {\n-            setFlag(value, BibtexSingleField.DISPLAYABLE);\n-        }\n-\n-        public boolean isDisplayable()\n-        {\n-            return isSet(BibtexSingleField.DISPLAYABLE);\n-        }\n-\n-        public void setWriteable(boolean value)\n-        {\n-            setFlag(value, BibtexSingleField.WRITEABLE);\n-        }\n-\n-        public boolean isWriteable()\n-        {\n-            return isSet(BibtexSingleField.WRITEABLE);\n-        }\n-\n-        // -----------------------------------------------------------------------\n-        public void setAlternativeDisplayName(String aName)\n-        {\n-            alternativeDisplayName = aName;\n-        }\n-\n-        public String getAlternativeDisplayName()\n-        {\n-            return alternativeDisplayName;\n-        }\n-\n-        // -----------------------------------------------------------------------\n-\n-        public void setExtras(String pExtras)\n-        {\n-            extras = pExtras;\n-        }\n-\n-        // fieldExtras contains mappings to tell the EntryEditor to add a specific\n-        // function to this field, for instance a \"browse\" button for the \"pdf\" field.\n-        public String getExtras()\n-        {\n-            return extras;\n-        }\n-\n-        public void setEditorType(int type) {\n-            editorType = type;\n-        }\n-\n-        public int getEditorType() {\n-            return editorType;\n-        }\n-\n-        // -----------------------------------------------------------------------\n-\n-        public void setWeight(double value)\n-        {\n-            this.weight = value;\n-        }\n-\n-        public double getWeight()\n-        {\n-            return this.weight;\n-        }\n-\n-        // -----------------------------------------------------------------------\n-        public int getLength()\n-        {\n-            return this.length;\n-        }\n-\n-        // -----------------------------------------------------------------------\n-\n-        public String getFieldName()\n-        {\n-            return name;\n-        }\n-\n-        /**\n-         * Set this field's numeric propery\n-         * @param numeric true to indicate that this is a numeric field.\n-         * @return this BibtexSingleField instance. Makes it easier to call this\n-         *   method on the fly while initializing without using a local variable.\n-         */\n-        public BibtexSingleField setNumeric(boolean numeric) {\n-            this.numeric = numeric;\n-            return this;\n-        }\n-\n-        public boolean isNumeric() {\n-            return numeric;\n-        }\n-\n-    }\n-}, @@ -1,141 +0,0 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-/**\n- * This class models a BibTex String (\"@String\")\n- */\n-public class BibtexString {\n-\n-    /**\n-     * Type of a \\@String.\n-     *\n-     * Differentiate a \\@String based on its usage:\n-     *\n-     * - {@link #AUTHOR}: prefix \"a\", for author and editor fields.\n-     * - {@link #INSTITUTION}: prefix \"i\", for institution and organization\n-     *                         field\n-     * - {@link #PUBLISHER}: prefix \"p\", for publisher fields\n-     * - {@link #OTHER}: no prefix, for any field\n-     *\n-     * Examples:\n-     *\n-     * \\@String { aKahle    = \"Kahle, Brewster \" } -> author\n-     * \\@String { aStallman = \"Stallman, Richard\" } -> author\n-     * \\@String { iMIT      = \"{Massachusetts Institute of Technology ({MIT})}\" } -> institution\n-     * \\@String { pMIT      = \"{Massachusetts Institute of Technology ({MIT}) press}\" } -> publisher\n-     * \\@String { anct      = \"Anecdote\" } -> other\n-     * \\@String { eg        = \"for example\" } -> other\n-     * \\@String { et        = \" and \" } -> other\n-     * \\@String { lBigMac   = \"Big Mac\" } -> other\n-     *\n-     * Usage:\n-     *\n-     * \\@Misc {\n-     *   title       = \"The GNU Project\"\n-     *   author      = aStallman # et # aKahle\n-     *   institution = iMIT\n-     *   publisher   = pMIT\n-     *   note        = \"Just \" # eg\n-     * }\n-     *\n-     * @author Jan Kubovy <jan@kubovy.eu>\n-     */\n-    public enum Type {\n-        AUTHOR(\"a\"),\n-        INSTITUTION(\"i\"),\n-        PUBLISHER(\"p\"),\n-        OTHER(\"\");\n-\n-        private final String prefix;\n-\n-\n-        Type(String prefix) {\n-            this.prefix = prefix;\n-        }\n-\n-        public static Type get(String name) {\n-            if (name.length() <= 1) {\n-                return OTHER;\n-            }\n-            if (!(name.charAt(1) + \"\").toUpperCase().equals(\n-                    (name.charAt(1) + \"\"))) {\n-                return OTHER;\n-            }\n-            for (Type t : Type.values()) {\n-                if (t.prefix.equals(name.charAt(0) + \"\")) {\n-                    return t;\n-                }\n-            }\n-            return OTHER;\n-        }\n-    }\n-\n-\n-    private String _name;\n-    private String _content;\n-    private String _id;\n-    private Type _type;\n-\n-\n-    public BibtexString(String id, String name, String content) {\n-        _id = id;\n-        _name = name;\n-        _content = content;\n-        _type = Type.get(name);\n-    }\n-\n-    public BibtexString(String id, String name, String content, Type type) {\n-        _id = id;\n-        _name = name;\n-        _content = content;\n-        _type = type;\n-    }\n-\n-    public String getId() {\n-        return _id;\n-    }\n-\n-    public void setId(String id) {\n-        _id = id;\n-    }\n-\n-    public String getName() {\n-        return _name;\n-    }\n-\n-    public void setName(String name) {\n-        _name = name;\n-        _type = Type.get(name);\n-    }\n-\n-    public String getContent() {\n-        return ((_content == null) ? \"\" : _content);\n-    }\n-\n-    public void setContent(String content) {\n-        _content = content;\n-    }\n-\n-    @Override\n-    public Object clone() {\n-        return new BibtexString(_id, _name, _content);\n-    }\n-\n-    public Type getType() {\n-        return _type;\n-    }\n-}, @@ -1,76 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.Comparator;\n-\n-public class BibtexStringComparator implements Comparator<BibtexString> {\n-\n-    private final boolean considerRefs;\n-\n-\n-    /**\n-     * @param considerRefs Indicates whether the strings should be\n-     *                     sorted according to internal references in addition to\n-     *                     alphabetical sorting.\n-     */\n-    public BibtexStringComparator(boolean considerRefs) {\n-        this.considerRefs = considerRefs;\n-    }\n-\n-    @Override\n-    public int compare(BibtexString s1, BibtexString s2) {\n-\n-        int res;\n-\n-        // First check their names:\n-        String name1 = s1.getName().toLowerCase(), name2 = s2.getName().toLowerCase();\n-\n-        res = name1.compareTo(name2);\n-\n-        if (res == 0) {\n-            return res;\n-        }\n-\n-        // Then, if we are supposed to, see if the ordering needs\n-        // to be changed because of one string referring to the other.x\n-        if (considerRefs) {\n-\n-            // First order them:\n-            BibtexString pre, post;\n-            if (res < 0) {\n-                pre = s1;\n-                post = s2;\n-            } else {\n-                pre = s2;\n-                post = s1;\n-            }\n-\n-            // Then see if \"pre\" refers to \"post\", which is the only\n-            // situation when we must change the ordering:\n-            String namePost = post.getName().toLowerCase(), textPre = pre.getContent().toLowerCase();\n-\n-            // If that is the case, reverse the order found:\n-            if (textPre.contains(\"#\" + namePost + \"#\")) {\n-                res = -res;\n-            }\n-\n-        }\n-\n-        return res;\n-    }\n-\n-}, @@ -1,89 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.FileDialogs;\n-\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.io.File;\n-\n-import javax.swing.*;\n-\n-/**\n- * Action used to produce a \"Browse\" button for one of the text fields.\n- */\n-public class BrowseAction extends AbstractAction implements ActionListener {\n-\n-    private static final long serialVersionUID = 3007593430933681310L;\n-\n-    private final JFrame frame;\n-    private final JTextField comp;\n-    private final boolean dir;\n-    private final JComponent focusTarget;\n-\n-    public static BrowseAction buildForDir(JFrame frame, JTextField tc) {\n-        return new BrowseAction(frame, tc, true, null);\n-    }\n-\n-    public static BrowseAction buildForDir(JTextField tc) {\n-        return new BrowseAction(null, tc, true, null);\n-    }\n-\n-    public static BrowseAction buildForFile(JTextField tc) {\n-        return new BrowseAction(null, tc, false, null);\n-    }\n-\n-    public static BrowseAction buildForFile(JTextField tc, JComponent focusTarget) {\n-        return new BrowseAction(null, tc, false, focusTarget);\n-}\n-\n-    public static BrowseAction buildForDir(JTextField tc, JComponent focusTarget) {\n-        return new BrowseAction(null, tc, true, focusTarget);\n-    }\n-\n-    private BrowseAction(JFrame frame, JTextField tc, boolean dir, JComponent focusTarget) {\n-        super(Globals.lang(\"Browse\"));\n-        this.frame = frame;\n-        this.dir = dir;\n-        this.comp = tc;\n-        this.focusTarget = focusTarget;\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-        String chosen = askUser();\n-\n-        if (chosen != null) {\n-            File newFile = new File(chosen);\n-            comp.setText(newFile.getPath());\n-            if (focusTarget != null) {\n-                new FocusRequester(focusTarget);\n-            }\n-        }\n-    }\n-\n-    private String askUser() {\n-        if (dir) {\n-            return FileDialogs.getNewDir(frame, new File(comp.getText()), Globals.NONE,\n-                    JFileChooser.OPEN_DIALOG, false);\n-        } else {\n-            return FileDialogs.getNewFile(frame, new File(comp.getText()), Globals.NONE,\n-                    JFileChooser.OPEN_DIALOG, false);\n-        }\n-    }\n-\n-}, @@ -1,22 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-public interface CallBack {\n-\n-    void update();\n-\n-}, @@ -1,50 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import javax.swing.*;\n-import java.awt.BorderLayout;\n-import java.awt.GridBagConstraints;\n-import java.awt.GridBagLayout;\n-import java.awt.Insets;\n-\n-public class CheckBoxMessage extends JPanel {\n-\n-    BorderLayout borderLayout1 = new BorderLayout();\n-    private final JCheckBox cb;\n-\n-\n-    public CheckBoxMessage(String message, String cbText, boolean defaultValue) {\n-        cb = new JCheckBox(cbText, defaultValue);\n-        GridBagLayout gbl = new GridBagLayout();\n-        setLayout(gbl);\n-        GridBagConstraints con = new GridBagConstraints();\n-        con.gridwidth = GridBagConstraints.REMAINDER;\n-\n-        JLabel lab = new JLabel(message + '\\n');\n-        cb.setHorizontalAlignment(SwingConstants.LEFT);\n-        gbl.setConstraints(lab, con);\n-        add(lab);\n-        con.anchor = GridBagConstraints.WEST;\n-        con.insets = new Insets(10, 0, 0, 0);\n-        gbl.setConstraints(cb, con);\n-        add(cb);\n-    }\n-\n-    public boolean isSelected() {\n-        return cb.isSelected();\n-    }\n-}, @@ -1,88 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-// created by : r.nagel 14.09.2004\n-//\n-// function : handle all clipboard action\n-//\n-// modified :\n-\n-package net.sf.jabref;\n-\n-import java.awt.Toolkit;\n-import java.awt.datatransfer.Clipboard;\n-import java.awt.datatransfer.ClipboardOwner;\n-import java.awt.datatransfer.DataFlavor;\n-import java.awt.datatransfer.StringSelection;\n-import java.awt.datatransfer.Transferable;\n-import java.awt.datatransfer.UnsupportedFlavorException;\n-import java.io.IOException;\n-\n-public class ClipBoardManager implements ClipboardOwner\n-{\n-\n-    public static final ClipBoardManager clipBoard = new ClipBoardManager();\n-\n-\n-    /**\n-     * Empty implementation of the ClipboardOwner interface.\n-     */\n-    @Override\n-    public void lostOwnership(Clipboard aClipboard, Transferable aContents)\n-    {\n-        //do nothing\n-    }\n-\n-    /**\n-     * Place a String on the clipboard, and make this class the\n-     * owner of the Clipboard's contents.\n-     */\n-    public void setClipboardContents(String aString)\n-    {\n-        StringSelection stringSelection = new StringSelection(aString);\n-        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n-        clipboard.setContents(stringSelection, this);\n-    }\n-\n-    /**\n-     * Get the String residing on the clipboard.\n-     *\n-     * @return any text found on the Clipboard; if none found, return an\n-     * empty String.\n-     */\n-    public String getClipboardContents()\n-    {\n-        String result = \"\";\n-        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n-        //odd: the Object param of getContents is not currently used\n-        Transferable contents = clipboard.getContents(null);\n-        if ((contents != null) &&\n-                contents.isDataFlavorSupported(DataFlavor.stringFlavor))\n-        {\n-            try\n-            {\n-                result = (String) contents.getTransferData(DataFlavor.stringFlavor);\n-            } catch (UnsupportedFlavorException ex)\n-            {\n-                //highly unlikely since we are using a standard DataFlavor\n-                System.out.println(ex);\n-            } catch (IOException ex)\n-            {\n-                System.out.println(ex);\n-            }\n-        }\n-        return result;\n-    }\n-}, @@ -1,568 +0,0 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.GridBagConstraints;\n-import java.awt.GridBagLayout;\n-import java.awt.Insets;\n-import java.awt.Window;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.FocusAdapter;\n-import java.awt.event.FocusEvent;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.SortedSet;\n-import java.util.TreeSet;\n-import java.util.Vector;\n-\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.BorderFactory;\n-import javax.swing.DefaultListModel;\n-import javax.swing.JButton;\n-import javax.swing.JDialog;\n-import javax.swing.JList;\n-import javax.swing.JOptionPane;\n-import javax.swing.JPanel;\n-import javax.swing.JScrollPane;\n-import javax.swing.JTextField;\n-import javax.swing.event.ListSelectionEvent;\n-import javax.swing.event.ListSelectionListener;\n-\n-import com.jgoodies.forms.builder.ButtonBarBuilder;\n-\n-class ContentSelectorDialog2 extends JDialog {\n-\n-    private ActionListener wordEditFieldListener = null;\n-    private final GridBagLayout gbl = new GridBagLayout();\n-    private final GridBagConstraints con = new GridBagConstraints();\n-    private final JPanel fieldPan = new JPanel();\n-    private final JPanel wordPan = new JPanel();\n-    private final JPanel buttonPan = new JPanel();\n-    private final JPanel fieldNamePan = new JPanel();\n-    private final JPanel wordEditPan = new JPanel();\n-\n-    final String\n-            WORD_EMPTY_TEXT = Globals.lang(\"<no field>\");\n-    private final String WORD_FIRSTLINE_TEXT = Globals.lang(\"<select word>\");\n-    private final String FIELD_FIRST_LINE = Globals.lang(\"<field name>\");\n-    private final MetaData metaData;\n-    private String currentField = null;\n-    TreeSet<String> fieldSet;\n-    private final JabRefFrame frame;\n-    private final BasePanel panel;\n-    private final JButton help = new JButton(Globals.lang(\"Help\"));\n-    private final JButton newField = new JButton(Globals.lang(\"New\"));\n-    private final JButton removeField = new JButton(Globals.lang(\"Remove\"));\n-    private final JButton newWord = new JButton(Globals.lang(\"New\"));\n-    private final JButton removeWord = new JButton(Globals.lang(\"Remove\"));\n-    private final JButton ok = new JButton(Globals.lang(\"Ok\"));\n-    private final JButton cancel = new JButton();\n-    private final JButton apply = new JButton(Globals.lang(\"Apply\"));\n-    private final DefaultListModel fieldListModel = new DefaultListModel();\n-    private DefaultListModel wordListModel = new DefaultListModel();\n-    private final JList fieldList = new JList(fieldListModel);\n-    private final JList wordList = new JList(wordListModel);\n-    private final JTextField fieldNameField = new JTextField(\"\", 20);\n-    private final JTextField wordEditField = new JTextField(\"\", 20);\n-    private final JScrollPane fPane = new JScrollPane(fieldList);\n-    private final JScrollPane wPane = new JScrollPane(wordList);\n-\n-    private final HashMap<String, DefaultListModel> wordListModels = new HashMap<String, DefaultListModel>();\n-    private final ArrayList<String> removedFields = new ArrayList<String>();\n-\n-\n-    /**\n-     * \n-     * @param owner the parent Window (Dialog or Frame)\n-     * @param frame the JabRef Frame\n-     * @param panel the currently selected BasePanel\n-     * @param modal should this dialog be modal?\n-     * @param metaData The metadata of the current database\n-     * @param fieldName the field this selector is initialized for. May be null.\n-     */\n-    public ContentSelectorDialog2(Window owner, JabRefFrame frame, BasePanel panel, boolean modal, MetaData metaData,\n-            String fieldName) {\n-        super(owner, Globals.lang(\"Setup selectors\"));\n-        this.setModal(modal);\n-        this.metaData = metaData;\n-        this.frame = frame;\n-        this.panel = panel;\n-        this.currentField = fieldName;\n-\n-        //help = new JButton(Globals.lang(\"Help\"));\n-        //help.addActionListener(new HelpAction(frame.helpDiag, GUIGlobals.contentSelectorHelp, \"Help\"));\n-        //help = new HelpAction(frame.helpDiag, GUIGlobals.contentSelectorHelp, \"Help\");\n-        initLayout();\n-        //  wordSelector.addItem(WORD_EMPTY_TEXT);\n-\n-        setupFieldSelector();\n-        setupWordSelector();\n-        setupActions();\n-        Util.bindCloseDialogKeyToCancelAction(this.rootPane, cancel.getAction());\n-        int fieldInd = fieldListModel.indexOf(currentField);\n-        if (fieldInd >= 0) {\n-            fieldList.setSelectedIndex(fieldInd);\n-        }\n-\n-        pack();\n-    }\n-\n-    private void setupActions() {\n-\n-        wordList.addListSelectionListener(new ListSelectionListener() {\n-\n-            @Override\n-            public void valueChanged(ListSelectionEvent e) {\n-                wordEditField.setText((String) wordList.getSelectedValue());\n-                wordEditField.selectAll();\n-                new FocusRequester(wordEditField);\n-            }\n-        });\n-\n-        newWord.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                newWordAction();\n-            }\n-        });\n-\n-        wordEditFieldListener = new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                int index = wordList.getSelectedIndex();\n-                String old = (String) wordList.getSelectedValue(),\n-                newVal = wordEditField.getText();\n-                if (newVal.equals(\"\") || newVal.equals(old)) {\n-                    return; // Empty string or no change.\n-                }\n-                if (wordListModel.contains(newVal)) {\n-                    // ensure that word already in list is visible\n-                    index = wordListModel.indexOf(newVal);\n-                    wordList.ensureIndexIsVisible(index);\n-                    return;\n-                }\n-\n-                int newIndex = findPos(wordListModel, newVal);\n-                if (index >= 0) {\n-                    // initiate replacement of selected word\n-                    wordListModel.remove(index);\n-                    if (newIndex > index) {\n-                        // newIndex has to be adjusted after removal of previous entry\n-                        newIndex--;\n-                    }\n-                }\n-                wordListModel.add(newIndex, newVal);\n-                wordList.ensureIndexIsVisible(newIndex);\n-                wordEditField.selectAll();\n-            }\n-        };\n-        wordEditField.addActionListener(wordEditFieldListener);\n-\n-        removeWord.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                int index = wordList.getSelectedIndex();\n-                if (index == -1) {\n-                    return;\n-                }\n-                wordListModel.remove(index);\n-                wordEditField.setText(\"\");\n-                if (wordListModel.size() > 0) {\n-                    wordList.setSelectedIndex(Math.min(index, wordListModel.size() - 1));\n-                }\n-            }\n-        });\n-\n-        fieldList.addListSelectionListener(new ListSelectionListener() {\n-\n-            @Override\n-            public void valueChanged(ListSelectionEvent e) {\n-                currentField = (String) fieldList.getSelectedValue();\n-                fieldNameField.setText(\"\");\n-                setupWordSelector();\n-            }\n-        });\n-\n-        newField.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                if (!fieldListModel.get(0).equals(FIELD_FIRST_LINE)) {\n-                    // only add <field name> once\n-                    fieldListModel.add(0, FIELD_FIRST_LINE);\n-                }\n-                fieldList.setSelectedIndex(0);\n-                fPane.getVerticalScrollBar().setValue(0);\n-                fieldNameField.setEnabled(true);\n-                fieldNameField.setText(currentField);\n-                fieldNameField.selectAll();\n-\n-                new FocusRequester(fieldNameField);\n-            }\n-        });\n-\n-        fieldNameField.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                fieldNameField.transferFocus();\n-            }\n-        });\n-\n-        fieldNameField.addFocusListener(new FocusAdapter() {\n-\n-            /**\n-             * Adds the text value to the list\n-             */\n-            @Override\n-            public void focusLost(FocusEvent e) {\n-                String s = fieldNameField.getText();\n-                fieldNameField.setText(\"\");\n-                fieldNameField.setEnabled(false);\n-                if (!FIELD_FIRST_LINE.equals(s) && !\"\".equals(s)) {\n-                    // user has typed something\n-\n-                    // remove \"<first name>\" from list\n-                    fieldListModel.remove(0);\n-\n-                    int pos;\n-                    if (fieldListModel.contains(s)) {\n-                        // field already exists, scroll to that field (below)\n-                        pos = fieldListModel.indexOf(s);\n-                    } else {\n-                        // Add new field.\n-                        pos = findPos(fieldListModel, s);\n-                        fieldListModel.add(Math.max(0, pos), s);\n-                    }\n-                    fieldList.setSelectedIndex(pos);\n-                    fieldList.ensureIndexIsVisible(pos);\n-                    currentField = s;\n-                    setupWordSelector();\n-                    newWordAction();\n-                    //new FocusRequester(wordEditField);\n-                }\n-            }\n-        });\n-\n-        removeField.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                int index = fieldList.getSelectedIndex();\n-                if (index == -1) {\n-                    return;\n-                }\n-                String fieldName = (String) fieldListModel.get(index);\n-                removedFields.add(fieldName);\n-                fieldListModel.remove(index);\n-                wordListModels.remove(fieldName);\n-                fieldNameField.setText(\"\");\n-                if (fieldListModel.size() > 0) {\n-                    fieldList.setSelectedIndex(Math.min(index, wordListModel.size() - 1));\n-                }\n-            }\n-        });\n-\n-        help.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                frame.helpDiag.showPage(GUIGlobals.contentSelectorHelp);\n-            }\n-        });\n-\n-        ok.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                try {\n-                    applyChanges();\n-                    dispose();\n-                }\n-                catch (Exception ex) {\n-                    Globals.logger(\"Could not apply changes in \\\"Setup selectors\\\"\");\n-                    JOptionPane.showMessageDialog(frame, Globals.lang(\"Could not apply changes.\"));\n-                }\n-            }\n-        });\n-\n-        apply.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                // Store if an entry is currently being edited:\n-                if (!wordEditField.getText().equals(\"\")) {\n-                    wordEditFieldListener.actionPerformed(null);\n-                }\n-                try {\n-                    applyChanges();\n-                }\n-                catch (Exception ex) {\n-                    Globals.logger(\"Could not apply changes in \\\"Setup selectors\\\"\");\n-                    JOptionPane.showMessageDialog(frame, Globals.lang(\"Could not apply changes.\"));\n-                }\n-            }\n-        });\n-\n-        @SuppressWarnings(\"serial\")\n-        Action cancelAction = new AbstractAction() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                dispose();\n-            }\n-        };\n-        cancelAction.putValue(Action.NAME, Globals.lang(\"Cancel\"));\n-        cancel.setAction(cancelAction);\n-    }\n-\n-    private void newWordAction() {\n-        if ((wordListModel.size() == 0) ||\n-                !wordListModel.get(0).equals(WORD_FIRSTLINE_TEXT)) {\n-            wordListModel.add(0, WORD_FIRSTLINE_TEXT);\n-        }\n-        wordList.setSelectedIndex(0);\n-        wPane.getVerticalScrollBar().setValue(0);\n-    }\n-\n-    private void applyChanges() {\n-        boolean changedFieldSet = false; // Watch if we need to rebuild entry editors\n-\n-        // First remove the mappings for fields that have been deleted.\n-        // If these were re-added, they will be added below, so it doesn't\n-        // cause any harm to remove them here.\n-        for (String fieldName : removedFields) {\n-            metaData.remove(Globals.SELECTOR_META_PREFIX + fieldName);\n-            changedFieldSet = true;\n-        }\n-\n-        // Cycle through all fields that we have created listmodels for:\n-        for (String fieldName : wordListModels.keySet()) {\n-            // For each field name, store the values:\n-            if ((fieldName == null) || FIELD_FIRST_LINE.equals(fieldName)) {\n-                continue;\n-            }\n-            DefaultListModel lm = wordListModels.get(fieldName);\n-            int start = 0;\n-            // Avoid storing the <new word> marker if it is there:\n-            if (lm.size() > 0) {\n-                while ((start < lm.size()) && (lm.get(start)).equals(WORD_FIRSTLINE_TEXT)) {\n-                    start++;\n-                }\n-            }\n-            Vector<String> data = metaData.getData(Globals.SELECTOR_META_PREFIX + fieldName);\n-            boolean newField = false;\n-            if (data == null) {\n-                newField = true;\n-                data = new Vector<String>();\n-                changedFieldSet = true;\n-\n-            } else {\n-                data.clear();\n-            }\n-            for (int wrd = start; wrd < lm.size(); wrd++) {\n-                String word = (String) lm.get(wrd);\n-                data.add(word);\n-            }\n-            if (newField) {\n-                metaData.putData(Globals.SELECTOR_META_PREFIX + fieldName, data);\n-            }\n-        }\n-\n-        // System.out.println(\"TODO: remove metadata for removed selector field.\");\n-        panel.markNonUndoableBaseChanged();\n-\n-        // Update all selectors in the current BasePanel.\n-        if (changedFieldSet) {\n-            panel.rebuildAllEntryEditors();\n-        } else {\n-            panel.updateAllContentSelectors();\n-        }\n-        panel.getAutoCompleters().addContentSelectorValuesToAutoCompleters(panel.metaData);\n-\n-    }\n-\n-    /**\n-     * Set the contents of the field selector list.\n-     *\n-     */\n-    private void setupFieldSelector() {\n-        fieldListModel.clear();\n-        SortedSet<String> contents = new TreeSet<String>();\n-        for (String s : metaData) {\n-            if (s.startsWith(Globals.SELECTOR_META_PREFIX)) {\n-                contents.add(s.substring(Globals.SELECTOR_META_PREFIX.length()));\n-            }\n-        }\n-        if (contents.size() == 0) {\n-            // if nothing was added, put the default fields (as described in the help)\n-            fieldListModel.addElement(\"author\");\n-            fieldListModel.addElement(\"journal\");\n-            fieldListModel.addElement(\"keywords\");\n-            fieldListModel.addElement(\"publisher\");\n-        } else {\n-            for (String s : contents) {\n-                fieldListModel.addElement(s);\n-            }\n-        }\n-\n-        if (currentField == null) {\n-            // if dialog is created for the whole database,\n-            // select the first field to avoid confusions in GUI usage\n-            fieldList.setSelectedIndex(0);\n-        } else {\n-            // a specific field has been chosen at the constructur\n-            // select this field\n-            int i = fieldListModel.indexOf(currentField);\n-            if (i != -1) {\n-                // field has been found in list, select it\n-                fieldList.setSelectedIndex(i);\n-            }\n-        }\n-    }\n-\n-    private void setupWordSelector() {\n-\n-        // Have we already created a listmodel for this field?\n-        wordListModel = wordListModels.get(currentField);\n-        if (wordListModel != null) {\n-            wordList.setModel(wordListModel);\n-        } else {\n-            wordListModel = new DefaultListModel();\n-            wordList.setModel(wordListModel);\n-            wordListModels.put(currentField, wordListModel);\n-            // wordListModel.addElement(WORD_FIRSTLINE_TEXT);\n-            Vector<String> items = metaData.getData(Globals.SELECTOR_META_PREFIX + currentField);\n-            if (items != null) {\n-                TreeSet<String> wordSet = new TreeSet<String>(items);\n-                int index = 0;\n-                for (String s : wordSet) {\n-                    wordListModel.add(index, s);\n-                    index++;\n-                }\n-            }\n-        }\n-    }\n-\n-    private int findPos(DefaultListModel lm, String item) {\n-        for (int i = 0; i < lm.size(); i++) {\n-            String s = (String) lm.get(i);\n-            if (item.compareToIgnoreCase(s) < 0) { // item precedes s\n-                return i;\n-            }\n-        }\n-        return lm.size();\n-    }\n-\n-    private void initLayout() {\n-        fieldNameField.setEnabled(false);\n-        fieldList.setVisibleRowCount(4);\n-        wordList.setVisibleRowCount(10);\n-        final String VAL = \"Uren luren himmelturen, ja Besseggen.\";\n-        fieldList.setPrototypeCellValue(VAL);\n-        wordList.setPrototypeCellValue(VAL);\n-\n-        fieldPan.setBorder(BorderFactory.createTitledBorder\n-                (BorderFactory.createEtchedBorder(),\n-                        Globals.lang(\"Field name\")));\n-        wordPan.setBorder(BorderFactory.createTitledBorder\n-                (BorderFactory.createEtchedBorder(),\n-                        Globals.lang(\"Keyword\")));\n-        fieldPan.setLayout(gbl);\n-        wordPan.setLayout(gbl);\n-        con.insets = new Insets(2, 2, 2, 2);\n-        con.fill = GridBagConstraints.BOTH;\n-        con.gridwidth = 2;\n-        con.weightx = 1;\n-        con.weighty = 1;\n-        con.gridx = 0;\n-        con.gridy = 0;\n-        gbl.setConstraints(fPane, con);\n-        fieldPan.add(fPane);\n-        gbl.setConstraints(wPane, con);\n-        wordPan.add(wPane);\n-        con.gridwidth = 1;\n-        con.gridx = 2;\n-        //con.weightx = 0.7;\n-        con.gridheight = 2;\n-        gbl.setConstraints(fieldNamePan, con);\n-        fieldPan.add(fieldNamePan);\n-        gbl.setConstraints(wordEditPan, con);\n-        wordPan.add(wordEditPan);\n-        con.gridx = 0;\n-        con.gridy = 1;\n-        con.weightx = 0;\n-        con.weighty = 0;\n-        con.gridwidth = 1;\n-        con.gridheight = 1;\n-        con.fill = GridBagConstraints.NONE;\n-        con.anchor = GridBagConstraints.WEST;\n-        gbl.setConstraints(newField, con);\n-        fieldPan.add(newField);\n-        gbl.setConstraints(newWord, con);\n-        wordPan.add(newWord);\n-        con.gridx = 1;\n-        //con.anchor = GridBagConstraints.EAST;\n-        gbl.setConstraints(removeField, con);\n-        fieldPan.add(removeField);\n-        gbl.setConstraints(removeWord, con);\n-        wordPan.add(removeWord);\n-        con.anchor = GridBagConstraints.WEST;\n-        con.gridx = 0;\n-        con.gridy = 0;\n-        gbl.setConstraints(fieldNameField, con);\n-        fieldNamePan.add(fieldNameField);\n-        gbl.setConstraints(wordEditField, con);\n-        wordEditPan.add(wordEditField);\n-\n-        // Add buttons:\n-        ButtonBarBuilder bsb = new ButtonBarBuilder(buttonPan);\n-        bsb.addGlue();\n-        bsb.addButton(ok);\n-        bsb.addButton(apply);\n-        bsb.addButton(cancel);\n-        bsb.addRelatedGap();\n-        bsb.addButton(help);\n-        bsb.addGlue();\n-\n-        // Add panels to dialog:\n-        con.fill = GridBagConstraints.BOTH;\n-        getContentPane().setLayout(gbl);\n-        con.weightx = 1;\n-        con.weighty = 0.5;\n-        con.gridwidth = 1;\n-        con.gridheight = 1;\n-        con.gridx = 0;\n-        con.gridy = 0;\n-        gbl.setConstraints(fieldPan, con);\n-        getContentPane().add(fieldPan);\n-        con.gridy = 1;\n-        gbl.setConstraints(wordPan, con);\n-        getContentPane().add(wordPan);\n-        con.weighty = 0;\n-        con.gridy = 2;\n-        con.insets = new Insets(12, 2, 2, 2);\n-        gbl.setConstraints(buttonPan, con);\n-        getContentPane().add(buttonPan);\n-\n-    }\n-\n-}, @@ -1,52 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.Comparator;\n-\n-/**\n- * Compares Bibtex entries based on their 'crossref' fields. Entries including\n- * this field are deemed smaller than entries without this field. This serves\n- * the purpose of always placing referenced entries after referring entries in\n- * the .bib file. After this criterion comes comparisons of individual fields.\n- */\n-public class CrossRefEntryComparator implements Comparator<BibtexEntry> {\n-\n-    private static final String CROSS_REF_FIELD = \"crossref\";\n-\n-\n-    @Override\n-    public int compare(BibtexEntry e1, BibtexEntry e2)\n-            throws ClassCastException {\n-\n-        Object f1 = e1.getField(CrossRefEntryComparator.CROSS_REF_FIELD), f2 = e2.getField(CrossRefEntryComparator.CROSS_REF_FIELD);\n-\n-        if ((f1 == null) && (f2 == null))\n-         {\n-            return 0; // secComparator.compare(e1, e2);\n-        }\n-        if ((f1 != null) && (f2 != null))\n-         {\n-            return 0; // secComparator.compare(e1, e2);\n-        }\n-        if (f1 != null) {\n-            return -1;\n-        } else {\n-            return 1;\n-        }\n-    }\n-\n-}, @@ -1,272 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.io.IOException;\n-import java.io.Writer;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-\n-/**\n- * This class is used to represent customized entry types.\n- *\n- */\n-public class CustomEntryType extends BibtexEntryType {\n-\n-    private final String name;\n-    private String[] req;\n-    private final String[] opt;\n-    private String[] priOpt;\n-    private String[][] reqSets = null; // Sets of either-or required fields, if any\n-\n-\n-    public CustomEntryType(String name_, String[] req_, String[] opt_, String[] opt2_) {\n-        name = name_;\n-        parseRequiredFields(req_);\n-        ArrayList<String> allOpt = new ArrayList<String>();\n-        Collections.addAll(allOpt, opt_);\n-        Collections.addAll(allOpt, opt2_);\n-        opt = allOpt.toArray(new String[allOpt.size()]);\n-        priOpt = opt_;\n-    }\n-\n-    public CustomEntryType(String name_, String[] req_, String[] opt_) {\n-        this(name_, req_, opt_, new String[0]);\n-    }\n-\n-    private CustomEntryType(String name_, String reqStr, String optStr) {\n-        name = name_;\n-        if (reqStr.isEmpty()) {\n-            req = new String[0];\n-        } else {\n-            parseRequiredFields(reqStr);\n-\n-        }\n-        if (optStr.isEmpty()) {\n-            opt = new String[0];\n-        } else {\n-            opt = optStr.split(\";\");\n-        }\n-    }\n-\n-    private void parseRequiredFields(String reqStr) {\n-        String[] parts = reqStr.split(\";\");\n-        parseRequiredFields(parts);\n-    }\n-\n-    private void parseRequiredFields(String[] parts) {\n-        ArrayList<String> fields = new ArrayList<String>();\n-        ArrayList<String[]> sets = new ArrayList<String[]>();\n-        for (String part : parts) {\n-            String[] subParts = part.split(\"/\");\n-            Collections.addAll(fields, subParts);\n-            // Check if we have either/or fields:\n-            if (subParts.length > 1) {\n-                sets.add(subParts);\n-            }\n-        }\n-        req = fields.toArray(new String[fields.size()]);\n-        if (!sets.isEmpty()) {\n-            reqSets = sets.toArray(new String[sets.size()][]);\n-        }\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return name;\n-    }\n-\n-    @Override\n-    public String[] getOptionalFields() {\n-        return opt;\n-    }\n-\n-    @Override\n-    public String[] getRequiredFields() {\n-        return req;\n-    }\n-\n-    @Override\n-    public String[] getPrimaryOptionalFields() {\n-        return priOpt;\n-    }\n-\n-    @Override\n-    public String[] getRequiredFieldsForCustomization() {\n-        return getRequiredFieldsString().split(\";\");\n-    }\n-\n-    //    public boolean isTemporary\n-\n-    @Override\n-    public String describeRequiredFields() {\n-        StringBuilder sb = new StringBuilder();\n-        for (int i = 0; i < req.length; i++) {\n-            sb.append(req[i]);\n-            sb.append(((i <= (req.length - 1)) && (req.length > 1)) ? \", \" : \"\");\n-        }\n-        return sb.toString();\n-    }\n-\n-    public String describeOptionalFields() {\n-        StringBuilder sb = new StringBuilder();\n-        for (int i = 0; i < opt.length; i++) {\n-            sb.append(opt[i]);\n-            sb.append(((i <= (opt.length - 1)) && (opt.length > 1)) ? \", \" : \"\");\n-        }\n-        return sb.toString();\n-    }\n-\n-    /**\n-     * Check whether this entry's required fields are set, taking crossreferenced entries and\n-     * either-or fields into account:\n-     * @param entry The entry to check.\n-     * @param database The entry's database.\n-     * @return True if required fields are set, false otherwise.\n-     */\n-    @Override\n-    public boolean hasAllRequiredFields(BibtexEntry entry, BibtexDatabase database) {\n-        // First check if the bibtex key is set:\n-        if (entry.getField(BibtexFields.KEY_FIELD) == null) {\n-            return false;\n-        }\n-        // Then check other fields:\n-        boolean[] isSet = new boolean[req.length];\n-        // First check for all fields, whether they are set here or in a crossref'd entry:\n-        for (int i = 0; i < req.length; i++) {\n-            isSet[i] = BibtexDatabase.getResolvedField(req[i], entry, database) != null;\n-        }\n-        // Then go through all fields. If a field is not set, see if it is part of an either-or\n-        // set where another field is set. If not, return false:\n-        for (int i = 0; i < req.length; i++) {\n-            if (!isSet[i]) {\n-                if (!isCoupledFieldSet(req[i], entry, database)) {\n-                    return false;\n-                }\n-            }\n-        }\n-        // Passed all fields, so return true:\n-        return true;\n-    }\n-\n-    private boolean isCoupledFieldSet(String field, BibtexEntry entry, BibtexDatabase database) {\n-        if (reqSets == null) {\n-            return false;\n-        }\n-        for (String[] reqSet : reqSets) {\n-            boolean takesPart = false, oneSet = false;\n-            for (String aReqSet : reqSet) {\n-                // If this is the field we're looking for, note that the field is part of the set:\n-                if (aReqSet.equalsIgnoreCase(field)) {\n-                    takesPart = true;\n-                } else if (BibtexDatabase.getResolvedField(aReqSet, entry, database) != null) {\n-                    oneSet = true;\n-                }\n-            }\n-            // Ths the field is part of the set, and at least one other field is set, return true:\n-            if (takesPart && oneSet) {\n-                return true;\n-            }\n-        }\n-        // No hits, so return false:\n-        return false;\n-    }\n-\n-    /**\n-     * Get a String describing the required field set for this entry type.\n-     * @return Description of required field set for storage in preferences or bib file.\n-     */\n-    public String getRequiredFieldsString() {\n-        StringBuilder sb = new StringBuilder();\n-        int reqSetsPiv = 0;\n-        for (int i = 0; i < req.length; i++) {\n-            if ((reqSets == null) || (reqSetsPiv == reqSets.length)) {\n-                sb.append(req[i]);\n-            }\n-            else if (req[i].equals(reqSets[reqSetsPiv][0])) {\n-                for (int j = 0; j < reqSets[reqSetsPiv].length; j++) {\n-                    sb.append(reqSets[reqSetsPiv][j]);\n-                    if (j < (reqSets[reqSetsPiv].length - 1)) {\n-                        sb.append('/');\n-                    }\n-                }\n-                // Skip next n-1 fields:\n-                i += reqSets[reqSetsPiv].length - 1;\n-                reqSetsPiv++;\n-            } else {\n-                sb.append(req[i]);\n-            }\n-            if (i < (req.length - 1)) {\n-                sb.append(';');\n-            }\n-\n-        }\n-        return sb.toString();\n-    }\n-\n-    public void save(Writer out) throws IOException {\n-        out.write(\"@comment{\");\n-        out.write(GUIGlobals.ENTRYTYPE_FLAG);\n-        out.write(getName());\n-        out.write(\": req[\");\n-        out.write(getRequiredFieldsString());\n-        /*StringBuffer sb = new StringBuffer();\n-        for (int i=0; i<req.length; i++) {\n-            sb.append(req[i]);\n-            if (i<req.length-1)\n-        \tsb.append(\";\");\n-        }\n-        out.write(sb.toString());*/\n-        out.write(\"] opt[\");\n-        StringBuilder sb = new StringBuilder();\n-        for (int i = 0; i < opt.length; i++) {\n-            sb.append(opt[i]);\n-            if (i < (opt.length - 1)) {\n-                sb.append(';');\n-            }\n-        }\n-        out.write(sb.toString());\n-        out.write(\"]}\" + Globals.NEWLINE);\n-    }\n-\n-    public static CustomEntryType parseEntryType(String comment) {\n-        try {\n-            //if ((comment.length() < 9+GUIGlobals.ENTRYTYPE_FLAG.length())\n-            //\t|| comment\n-            //System.out.println(\">\"+comment+\"<\");\n-            String rest;\n-            rest = comment.substring(GUIGlobals.ENTRYTYPE_FLAG.length());\n-            int nPos = rest.indexOf(':');\n-            String name = rest.substring(0, nPos);\n-            rest = rest.substring(nPos + 2);\n-\n-            int rPos = rest.indexOf(']');\n-            if (rPos < 4) {\n-                throw new IndexOutOfBoundsException();\n-            }\n-            String reqFields = rest.substring(4, rPos);\n-            //System.out.println(name+\"\\nr '\"+reqFields+\"'\");\n-            int oPos = rest.indexOf(']', rPos + 1);\n-            String optFields = rest.substring(rPos + 6, oPos);\n-            //System.out.println(\"o '\"+optFields+\"'\");\n-            return new CustomEntryType(name, reqFields, optFields);\n-        } catch (IndexOutOfBoundsException ex) {\n-            Globals.logger(\"Ill-formed entrytype comment in BibTeX file.\");\n-            return null;\n-        }\n-\n-    }\n-}, @@ -1,63 +0,0 @@\n-package net.sf.jabref;\n-\n-import net.sf.jabref.undo.NamedCompound;\n-import net.sf.jabref.undo.UndoableFieldChange;\n-\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n-public class DOIUtil {\n-\n-    // DOI-regexp provided by http://stackoverflow.com/a/10324802/873282\n-    // Some DOI's are not caught by the regexp in the above link, i.e. 10.1002/(SICI)1522-2594(199911)42:5<952::AID-MRM16>3.0.CO;2-S\n-    // Removed <> from non-permitted characters\n-    private static final String REGEXP_PLAINDOI = \"\\\\b(10[.][0-9]{4,}(?:[.][0-9]+)*/(?:(?![\\\"&\\\\'])\\\\S)+)\\\\b\";\n-    private static final Pattern PATTERN_PLAINDOI = Pattern.compile(REGEXP_PLAINDOI);\n-    private static final String REGEXP_DOI_WITH_HTTP_PREFIX = \"http[s]?://[^\\\\s]*?\" + REGEXP_PLAINDOI;\n-\n-    /**\n-     * Check if the String matches a DOI (with http://...)\n-     */\n-    public static boolean checkForDOIwithHTTPprefix(String check) {\n-        return (check != null) && check.matches(\".*\" + REGEXP_DOI_WITH_HTTP_PREFIX + \".*\");\n-    }\n-\n-    /**\n-     *\n-     * @param check - string to check\n-     * @return true if \"check\" contains a DOI\n-     */\n-    public static boolean checkForPlainDOI(String check) {\n-        return (check != null) && check.matches(\".*\" + REGEXP_PLAINDOI + \".*\");\n-    }\n-\n-    /**\n-     * Remove the http://... from DOI\n-     *\n-     * @param doi - may not be null\n-     * @return first DOI in the given String (without http://... prefix). If no DOI exists, the complete string is returned\n-     */\n-    public static String getDOI(String doi) {\n-        Matcher matcher = PATTERN_PLAINDOI.matcher(doi);\n-        if (matcher.find()) {\n-            return matcher.group();\n-        } else {\n-            return doi;\n-        }\n-    }\n-\n-    public static void removeDOIfromBibtexEntryField(BibtexEntry bes, String fieldName, NamedCompound ce) {\n-        String origValue = bes.getField(fieldName);\n-        String value = origValue;\n-        value = value.replaceAll(REGEXP_DOI_WITH_HTTP_PREFIX, \"\");\n-        value = value.replaceAll(REGEXP_PLAINDOI, \"\");\n-        value = value.trim();\n-        if (value.isEmpty()) {\n-            value = null;\n-        }\n-        if (!origValue.equals(value)) {\n-            ce.addEdit(new UndoableFieldChange(bes, fieldName, origValue, value));\n-            bes.setField(fieldName, value);\n-        }\n-    }\n-}, @@ -1,48 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-public class DatabaseChangeEvent {\n-\n-    public enum ChangeType {\n-        ADDED_ENTRY, REMOVED_ENTRY, CHANGED_ENTRY, CHANGING_ENTRY\n-    }\n-\n-\n-    private final BibtexEntry entry;\n-    private final ChangeType type;\n-    private final BibtexDatabase source;\n-\n-\n-    public DatabaseChangeEvent(BibtexDatabase source, ChangeType type,\n-            BibtexEntry entry) {\n-        this.source = source;\n-        this.type = type;\n-        this.entry = entry;\n-    }\n-\n-    public BibtexDatabase getSource() {\n-        return source;\n-    }\n-\n-    public BibtexEntry getEntry() {\n-        return entry;\n-    }\n-\n-    public ChangeType getType() {\n-        return type;\n-    }\n-}, @@ -1,22 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-public interface DatabaseChangeListener {\n-\n-    void databaseChanged(DatabaseChangeEvent e);\n-\n-}, @@ -1,337 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.HashMap;\n-import java.util.HashSet;\n-\n-/**\n- * This class contains utility method for duplicate checking of entries.\n- */\n-public class DuplicateCheck {\n-\n-    public static double duplicateThreshold = 0.75; // The overall threshold to signal a duplicate pair\n-    // Non-required fields are investigated only if the required fields give a value within\n-    // the doubt range of the threshold:\n-    private static final double doubtRange = 0.05;\n-\n-    private final static double reqWeight = 3; // Weighting of all required fields\n-\n-    // Extra weighting of those fields that are most likely to provide correct duplicate detection:\n-    private static final HashMap<String, Double> fieldWeights = new HashMap<String, Double>();\n-\n-    static {\n-        DuplicateCheck.fieldWeights.put(\"author\", 2.5);\n-        DuplicateCheck.fieldWeights.put(\"editor\", 2.5);\n-        DuplicateCheck.fieldWeights.put(\"title\", 3.);\n-        DuplicateCheck.fieldWeights.put(\"journal\", 2.);\n-    }\n-\n-\n-    /**\n-     * Checks if the two entries represent the same publication.\n-     *\n-     * @param one BibtexEntry\n-     * @param two BibtexEntry\n-     * @return boolean\n-     */\n-    public static boolean isDuplicate(BibtexEntry one, BibtexEntry two) {\n-\n-        // First check if they are of the same type - a necessary condition:\n-        if (one.getType() != two.getType()) {\n-            return false;\n-        }\n-\n-        // The check if they have the same required fields:\n-        String[] fields = one.getType().getRequiredFields();\n-        double[] req;\n-        if (fields == null) {\n-            req = new double[] {0., 0.};\n-        } else {\n-            req = DuplicateCheck.compareFieldSet(fields, one, two);\n-        }\n-\n-        if (Math.abs(req[0] - DuplicateCheck.duplicateThreshold) > DuplicateCheck.doubtRange) {\n-            // Far from the threshold value, so we base our decision on the req. fields only\n-            return req[0] >= DuplicateCheck.duplicateThreshold;\n-        }\n-        else {\n-            // Close to the threshold value, so we take a look at the optional fields, if any:\n-            fields = one.getType().getOptionalFields();\n-            if (fields != null) {\n-                double[] opt = DuplicateCheck.compareFieldSet(fields, one, two);\n-                double totValue = ((DuplicateCheck.reqWeight * req[0] * req[1]) + (opt[0] * opt[1])) / ((req[1] * DuplicateCheck.reqWeight) + opt[1]);\n-                return totValue >= DuplicateCheck.duplicateThreshold;\n-            } else {\n-                return (req[0] >= DuplicateCheck.duplicateThreshold);\n-            }\n-        }\n-    }\n-\n-    private static double[] compareFieldSet(String[] fields, BibtexEntry one, BibtexEntry two) {\n-        double res = 0;\n-        double totWeights = 0.;\n-        for (String field : fields) {\n-            // Util.pr(\":\"+compareSingleField(fields[i], one, two));\n-            double weight;\n-            if (DuplicateCheck.fieldWeights.containsKey(field)) {\n-                weight = DuplicateCheck.fieldWeights.get(field);\n-            } else {\n-                weight = 1.0;\n-            }\n-            totWeights += weight;\n-            int result = DuplicateCheck.compareSingleField(field, one, two);\n-            //System.out.println(\"Field: \"+fields[i]+\": \"+result);\n-            if (result == Util.EQUAL) {\n-                res += weight;\n-            } else if (result == Util.EMPTY_IN_BOTH) {\n-                totWeights -= weight;\n-            }\n-        }\n-        if (totWeights > 0) {\n-            return new double[] {res / totWeights, totWeights};\n-        } else {\n-            // no fields present. This points to a possible duplicate?\n-            return new double[] {0.5, 0.0};\n-        }\n-    }\n-\n-    private static int compareSingleField(String field, BibtexEntry one, BibtexEntry two) {\n-        String s1 = one.getField(field), s2 = two.getField(field);\n-        if (s1 == null) {\n-            if (s2 == null) {\n-                return Util.EMPTY_IN_BOTH;\n-            } else {\n-                return Util.EMPTY_IN_ONE;\n-            }\n-        } else if (s2 == null) {\n-            return Util.EMPTY_IN_TWO;\n-        }\n-\n-        // Util.pr(field+\": '\"+s1+\"' vs '\"+s2+\"'\");\n-        if (field.equals(\"author\") || field.equals(\"editor\")) {\n-            // Specific for name fields.\n-            // Harmonise case:\n-            String auth1 = AuthorList.fixAuthor_lastNameOnlyCommas(s1, false).replaceAll(\" and \", \" \").toLowerCase(), auth2 = AuthorList.fixAuthor_lastNameOnlyCommas(s2, false).replaceAll(\" and \", \" \").toLowerCase();\n-            //System.out.println(auth1);\n-            //System.out.println(auth2);\n-            //System.out.println(correlateByWords(auth1, auth2));\n-            double similarity = DuplicateCheck.correlateByWords(auth1, auth2, false);\n-            if (similarity > 0.8) {\n-                return Util.EQUAL;\n-            } else {\n-                return Util.NOT_EQUAL;\n-            }\n-\n-        } else if (field.equals(\"pages\")) {\n-            // Pages can be given with a variety of delimiters, \"-\", \"--\", \" - \", \" -- \".\n-            // We do a replace to harmonize these to a simple \"-\":\n-            // After this, a simple test for equality should be enough:\n-            s1 = s1.replaceAll(\"[- ]+\", \"-\");\n-            s2 = s2.replaceAll(\"[- ]+\", \"-\");\n-            if (s1.equals(s2)) {\n-                return Util.EQUAL;\n-            } else {\n-                return Util.NOT_EQUAL;\n-            }\n-\n-        } else if (field.equals(\"journal\")) {\n-            // We do not attempt to harmonize abbreviation state of the journal names,\n-            // but we remove periods from the names in case they are abbreviated with\n-            // and without dots:\n-            s1 = s1.replaceAll(\"\\\\.\", \"\").toLowerCase();\n-            s2 = s2.replaceAll(\"\\\\.\", \"\").toLowerCase();\n-            //System.out.println(s1+\" :: \"+s2);\n-            double similarity = DuplicateCheck.correlateByWords(s1, s2, true);\n-            if (similarity > 0.8) {\n-                return Util.EQUAL;\n-            } else {\n-                return Util.NOT_EQUAL;\n-            }\n-        } else {\n-            s1 = s1.toLowerCase();\n-            s2 = s2.toLowerCase();\n-            double similarity = DuplicateCheck.correlateByWords(s1, s2, false);\n-            if (similarity > 0.8) {\n-                return Util.EQUAL;\n-            } else {\n-                return Util.NOT_EQUAL;\n-            /*if (s1.trim().equals(s2.trim()))\n-                return Util.EQUAL;\n-            else\n-                return Util.NOT_EQUAL;*/\n-            }\n-        }\n-\n-    }\n-\n-    public static double compareEntriesStrictly(BibtexEntry one, BibtexEntry two) {\n-        HashSet<String> allFields = new HashSet<String>();// one.getAllFields());\n-        allFields.addAll(one.getAllFields());\n-        allFields.addAll(two.getAllFields());\n-\n-        int score = 0;\n-        for (String field : allFields) {\n-            Object en = one.getField(field), to = two.getField(field);\n-            if ((en != null) && (to != null) && (en.equals(to)) || (en == null) && (to == null)) {\n-                score++;\n-            }\n-        }\n-        if (score == allFields.size()) {\n-            return 1.01; // Just to make sure we can\n-        // use score>1 without\n-        // trouble.\n-        } else {\n-            return ((double) score) / allFields.size();\n-        }\n-    }\n-\n-    /**\n-     * Goes through all entries in the given database, and if at least one of\n-     * them is a duplicate of the given entry, as per\n-     * Util.isDuplicate(BibtexEntry, BibtexEntry), the duplicate is returned.\n-     * The search is terminated when the first duplicate is found.\n-     *\n-     * @param database The database to search.\n-     * @param entry    The entry of which we are looking for duplicates.\n-     * @return The first duplicate entry found. null if no duplicates are found.\n-     */\n-    public static BibtexEntry containsDuplicate(BibtexDatabase database, BibtexEntry entry) {\n-        for (BibtexEntry other : database.getEntries()) {\n-            if (DuplicateCheck.isDuplicate(entry, other))\n-             {\n-                return other; // Duplicate found.\n-            }\n-        }\n-        return null; // No duplicate found.\n-    }\n-\n-    /**\n-     * Compare two strings on the basis of word-by-word correlation analysis.\n-     * @param s1 The first string\n-     * @param s2 The second string\n-     * @param truncate if true, always truncate the longer of two words to be compared to\n-     *   harmonize their length. If false, use interpolation to harmonize the strings.\n-     * @return a value in the interval [0, 1] indicating the degree of match.\n-     */\n-    private static double correlateByWords(String s1, String s2, boolean truncate) {\n-        String[] w1 = s1.split(\"\\\\s\"), w2 = s2.split(\"\\\\s\");\n-        int n = Math.min(w1.length, w2.length);\n-        int misses = 0;\n-        for (int i = 0; i < n; i++) {\n-            /*if (!w1[i].equalsIgnoreCase(w2[i]))\n-                misses++;*/\n-            double corr = DuplicateCheck.correlateStrings(w1[i], w2[i], truncate);\n-            if (corr < 0.75) {\n-                misses++;\n-            }\n-        }\n-        double missRate = ((double) misses) / ((double) n);\n-        return 1 - missRate;\n-    }\n-\n-    private static double correlateStrings(String s1, String s2, boolean truncate) {\n-        int minLength = Math.min(s1.length(), s2.length());\n-        if (truncate && (minLength == 1)) {\n-            return s1.charAt(0) == s2.charAt(0) ? 1.0 : 0.0;\n-        }\n-        else if ((s1.length() == 1) && (s2.length() == 1)) {\n-            return s1.equals(s2) ? 1.0 : 0.0;\n-        }\n-        else if (minLength == 0) {\n-            return (s1.isEmpty()) && (s2.isEmpty()) ? 1.0 : 0;\n-        }\n-\n-        // Convert strings to numbers and harmonize length in a method dependent on truncate:\n-        if (truncate) {\n-            // Harmonize length by truncation:\n-            if (s1.length() > minLength) {\n-                s1 = s1.substring(0, minLength);\n-            }\n-            if (s2.length() > minLength) {\n-                s2 = s2.substring(0, minLength);\n-            }\n-        }\n-        double[] n1 = DuplicateCheck.numberizeString(s1), n2 = DuplicateCheck.numberizeString(s2);\n-        // If truncation is disabled, harmonize length by interpolation:\n-        if (!truncate) {\n-            if (n1.length < n2.length) {\n-                n1 = DuplicateCheck.stretchArray(n1, n2.length);\n-            } else if (n2.length < n1.length) {\n-                n2 = DuplicateCheck.stretchArray(n2, n1.length);\n-            }\n-        }\n-        return DuplicateCheck.corrCoef(n1, n2);\n-    }\n-\n-    private static double corrCoef(double[] n1, double[] n2) {\n-        // Calculate mean values:\n-        double mean1 = 0, mean2 = 0;\n-        for (int i = 0; i < n1.length; i++) {\n-            mean1 += n1[i];\n-            mean2 += n2[i];\n-        }\n-        mean1 /= n1.length;\n-        mean2 /= n2.length;\n-        double sigma1 = 0, sigma2 = 0;\n-        // Calculate correlation coefficient:\n-        double corr = 0;\n-        for (int i = 0; i < n1.length; i++) {\n-            sigma1 += (n1[i] - mean1) * (n1[i] - mean1);\n-            sigma2 += (n2[i] - mean2) * (n2[i] - mean2);\n-            corr += (n1[i] - mean1) * (n2[i] - mean2);\n-        }\n-        sigma1 = Math.sqrt(sigma1);\n-        sigma2 = Math.sqrt(sigma2);\n-        if ((sigma1 > 0) && (sigma2 > 0)) {\n-            return corr / (sigma1 * sigma2);\n-        } else {\n-            return 0;\n-        }\n-    }\n-\n-    private static double[] numberizeString(String s) {\n-        double[] res = new double[s.length()];\n-        for (int i = 0; i < s.length(); i++) {\n-            res[i] = s.charAt(i);\n-        }\n-        return res;\n-    }\n-\n-    private static double[] stretchArray(double[] array, int length) {\n-        if ((length <= array.length) || (array.length == 0)) {\n-            return array;\n-        }\n-        double multip = ((double) array.length) / ((double) length);\n-        double[] newArray = new double[length];\n-        for (int i = 0; i < newArray.length; i++) {\n-            double index = (i) * multip;\n-            int baseInd = (int) Math.floor(index);\n-            double dist = index - Math.floor(index);\n-            newArray[i] = (dist * array[Math.min(array.length - 1, baseInd + 1)])\n-                    + ((1.0 - dist) * array[baseInd]);\n-        }\n-        return newArray;\n-    }\n-\n-    public static void main(String[] args) {\n-        String d1 = \"Characterization of Calanus finmarchicus habitat in the North Sea\", d2 = \"Characterization of Calunus finmarchicus habitat in the North Sea\", d3 = \"Characterization of Calanus glacialissss habitat in the South Sea\";\n-        System.out.println(DuplicateCheck.correlateByWords(d1, d2, false));\n-        System.out.println(DuplicateCheck.correlateByWords(d1, d3, false));\n-        System.out.println(DuplicateCheck.correlateByWords(d2, d3, false));\n-\n-    }\n-}, @@ -1,286 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-\n-import javax.swing.*;\n-\n-import net.sf.jabref.export.LatexFieldFormatter;\n-\n-// created by : ?\n-//\n-// modified : r.nagel 2.09.2004\n-//            - insert close button\n-\n-public class DuplicateResolverDialog extends JDialog {\n-\n-    private static final int\n-            NOT_CHOSEN = -1;\n-    public static final int KEEP_BOTH = 0;\n-    public static final int KEEP_UPPER = 1;\n-    public static final int KEEP_LOWER = 2;\n-    public static final int AUTOREMOVE_EXACT = 3;\n-    public static final int BREAK = 5; // close\n-            public static final int IMPORT_AND_DELETE_OLD = 1;\n-    public static final int IMPORT_AND_KEEP_OLD = 0;\n-    public static final int DO_NOT_IMPORT = 2;\n-    public static final int DUPLICATE_SEARCH = 1;\n-    public static final int IMPORT_CHECK = 2;\n-    public static final int INSPECTION = 3;\n-    public static final int DUPLICATE_SEARCH_WITH_EXACT = 4;\n-\n-    private final Dimension DIM = new Dimension(650, 600);\n-\n-    private PreviewPanel p1;\n-    private PreviewPanel p2;\n-    private JTextArea ta1;\n-    private JTextArea ta2;\n-    private final JTabbedPane tabbed = new JTabbedPane();\n-    private final GridBagLayout gbl = new GridBagLayout();\n-    private final GridBagConstraints con = new GridBagConstraints();\n-    private final JButton cancel = new JButton(Globals.lang(\"Cancel\"));\n-    private JButton removeExact = null;\n-    private final JPanel options = new JPanel();\n-    private final JPanel main = new JPanel();\n-    private final JPanel source = new JPanel();\n-    private int status = DuplicateResolverDialog.NOT_CHOSEN;\n-    private boolean block = true;\n-\n-\n-    public DuplicateResolverDialog(JFrame frame, BibtexEntry one, BibtexEntry two, int type) {\n-        super(frame, Globals.lang(\"Possible duplicate entries\"), true);\n-        init(one, two, type);\n-        Util.placeDialog(this, frame);\n-    }\n-\n-    public DuplicateResolverDialog(JDialog frame, BibtexEntry one, BibtexEntry two, int type) {\n-        super(frame, Globals.lang(\"Possible duplicate entries\"), true);\n-        init(one, two, type);\n-        Util.placeDialog(this, frame);\n-    }\n-\n-    private void init(BibtexEntry one, BibtexEntry two, int type) {\n-        JButton both;\n-        JButton second;\n-        JButton first;\n-        switch (type) {\n-        case DUPLICATE_SEARCH:\n-            first = new JButton(Globals.lang(\"Keep upper\"));\n-            second = new JButton(Globals.lang(\"Keep lower\"));\n-            both = new JButton(Globals.lang(\"Keep both\"));\n-            break;\n-        case INSPECTION:\n-            first = new JButton(Globals.lang(\"Remove old entry\"));\n-            second = new JButton(Globals.lang(\"Remove entry from import\"));\n-            both = new JButton(Globals.lang(\"Keep both\"));\n-            break;\n-        case DUPLICATE_SEARCH_WITH_EXACT:\n-            first = new JButton(Globals.lang(\"Keep upper\"));\n-            second = new JButton(Globals.lang(\"Keep lower\"));\n-            both = new JButton(Globals.lang(\"Keep both\"));\n-            removeExact = new JButton(Globals.lang(\"Automatically remove exact duplicates\"));\n-            break;\n-        default:\n-            first = new JButton(Globals.lang(\"Import and remove old entry\"));\n-            second = new JButton(Globals.lang(\"Do not import entry\"));\n-            both = new JButton(Globals.lang(\"Import and keep old entry\"));\n-        }\n-\n-        String layout = Globals.prefs.get(\"preview0\");\n-        p1 = new PreviewPanel(null, one, null, new MetaData(), layout);\n-        p2 = new PreviewPanel(null, two, null, new MetaData(), layout);\n-        ta1 = new JTextArea();\n-        ta2 = new JTextArea();\n-        ta1.setEditable(false);\n-        ta2.setEditable(false);\n-\n-        //ta1.setPreferredSize(dim);\n-        //ta2.setPreferredSize(dim);\n-\n-        setSourceView(one, two);\n-\n-        //getContentPane().setLayout();\n-        main.setLayout(gbl);\n-        source.setLayout(gbl);\n-        con.insets = new Insets(10, 10, 0, 10);\n-        con.fill = GridBagConstraints.BOTH;\n-        con.gridwidth = GridBagConstraints.REMAINDER;\n-        con.weightx = 1;\n-        con.weighty = 0;\n-        TitleLabel lab = new TitleLabel((type == DuplicateResolverDialog.DUPLICATE_SEARCH) ? \"\" :\n-                Globals.lang(\"Entry in current database\"));\n-        gbl.setConstraints(lab, con);\n-        main.add(lab);\n-        con.weighty = 1;\n-        con.insets = new Insets(5, 10, 10, 10);\n-        JScrollPane sp = new JScrollPane(p1);\n-        gbl.setConstraints(sp, con);\n-        main.add(sp);\n-        con.weighty = 0;\n-        con.insets = new Insets(10, 10, 0, 10);\n-        lab = new TitleLabel((type == DuplicateResolverDialog.DUPLICATE_SEARCH) ? \"\" :\n-                Globals.lang(\"Entry in import\"));\n-        gbl.setConstraints(lab, con);\n-        main.add(lab);\n-        con.weighty = 1;\n-        con.insets = new Insets(5, 10, 10, 10);\n-        sp = new JScrollPane(ta1);\n-        gbl.setConstraints(sp, con);\n-        source.add(sp);\n-        sp = new JScrollPane(p2);\n-        gbl.setConstraints(sp, con);\n-        main.add(sp);\n-        sp = new JScrollPane(ta2);\n-        gbl.setConstraints(sp, con);\n-        source.add(sp);\n-        tabbed.add(Globals.lang(\"Short form\"), main);\n-        tabbed.add(Globals.lang(\"Complete record\"), source);\n-        if (removeExact != null) {\n-            options.add(removeExact);\n-        }\n-        options.add(first);\n-        options.add(second);\n-        options.add(both);\n-        if (type != DuplicateResolverDialog.IMPORT_CHECK) {\n-            options.add(Box.createHorizontalStrut(5));\n-            options.add(cancel);\n-        }\n-\n-        first.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                status = DuplicateResolverDialog.KEEP_UPPER;\n-                block = false;\n-                dispose();\n-            }\n-        });\n-\n-        second.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                status = DuplicateResolverDialog.KEEP_LOWER;\n-                block = false;\n-                dispose();\n-            }\n-        });\n-\n-        both.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                status = DuplicateResolverDialog.KEEP_BOTH;\n-                block = false;\n-                dispose();\n-            }\n-        });\n-\n-        if (removeExact != null) {\n-            removeExact.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    status = DuplicateResolverDialog.AUTOREMOVE_EXACT;\n-                    block = false;\n-                    dispose();\n-                }\n-            });\n-        }\n-\n-        cancel.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                status = DuplicateResolverDialog.BREAK;\n-                block = false;\n-                dispose();\n-            }\n-        });\n-\n-        getContentPane().add(tabbed, BorderLayout.CENTER);\n-        getContentPane().add(options, BorderLayout.SOUTH);\n-        pack();\n-\n-        if (getHeight() > DIM.height) {\n-            setSize(new Dimension(getWidth(), DIM.height));\n-        }\n-        if (getWidth() > DIM.width) {\n-            setSize(new Dimension(DIM.width, getHeight()));\n-        }\n-\n-        both.requestFocus();\n-\n-    }\n-\n-    private void setSourceView(BibtexEntry one, BibtexEntry two) {\n-        try {\n-            StringWriter sw = new StringWriter();\n-            one.write(sw, new LatexFieldFormatter(), false);\n-            ta1.setText(sw.getBuffer().toString());\n-            sw = new StringWriter();\n-            two.write(sw, new LatexFieldFormatter(), false);\n-            ta2.setText(sw.getBuffer().toString());\n-        } catch (IOException ignored) {\n-        }\n-    }\n-\n-    public void setEntries(BibtexEntry newOne, BibtexEntry newTwo) {\n-        setSourceView(newOne, newTwo);\n-        p1.setEntry(newOne);\n-        p2.setEntry(newTwo);\n-        status = DuplicateResolverDialog.NOT_CHOSEN;\n-        p1.revalidate();\n-        p1.repaint();\n-        block = true;\n-    }\n-\n-    public boolean isBlocking() {\n-        return block;\n-    }\n-\n-    public int getSelected() {\n-        return status;\n-    }\n-\n-    public static int resolveDuplicate(JFrame frame, BibtexEntry one, BibtexEntry two) {\n-        DuplicateResolverDialog drd = new DuplicateResolverDialog(frame, one, two,\n-                DuplicateResolverDialog.DUPLICATE_SEARCH);\n-        drd.setVisible(true); // drd.show(); -> deprecated since 1.5\n-        return drd.getSelected();\n-    }\n-\n-    public static int resolveDuplicate(JDialog frame, BibtexEntry one, BibtexEntry two) {\n-        DuplicateResolverDialog drd = new DuplicateResolverDialog(frame, one, two,\n-                DuplicateResolverDialog.DUPLICATE_SEARCH);\n-        drd.setVisible(true); // drd.show(); -> deprecated since 1.5\n-        return drd.getSelected();\n-    }\n-\n-    public static int resolveDuplicateInImport(JabRefFrame frame, BibtexEntry existing,\n-            BibtexEntry imported) {\n-        DuplicateResolverDialog drd = new DuplicateResolverDialog(frame, existing, imported,\n-                DuplicateResolverDialog.IMPORT_CHECK);\n-        drd.setVisible(true); // drd.show(); -> deprecated since 1.5\n-        return drd.getSelected();\n-    }\n-\n-}, @@ -1,219 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-// created by : ?\n-//\n-// modified : r.nagel 2.09.2004\n-//            - new SearcherRunnable.setFinish() method\n-//            - replace thread.sleep in run() by wait() and notify() mechanism\n-\n-package net.sf.jabref;\n-\n-import java.util.ArrayList;\n-import java.util.Vector;\n-\n-import javax.swing.SwingUtilities;\n-\n-import net.sf.jabref.undo.NamedCompound;\n-import net.sf.jabref.undo.UndoableRemoveEntry;\n-import spin.Spin;\n-\n-public class DuplicateSearch implements Runnable {\n-\n-    private final BasePanel panel;\n-    private BibtexEntry[] bes;\n-    private final Vector<BibtexEntry[]> duplicates = new Vector<BibtexEntry[]>();\n-\n-\n-    public DuplicateSearch(BasePanel bp) {\n-        panel = bp;\n-    }\n-\n-    @Override\n-    public void run() {\n-        final NamedCompound ce = new NamedCompound(Globals.lang(\"duplicate removal\"));\n-        int duplicateCounter = 0;\n-\n-        boolean autoRemoveExactDuplicates = false;\n-        panel.output(Globals.lang(\"Searching for duplicates...\"));\n-        Object[] keys = panel.database.getKeySet().toArray();\n-        if ((keys.length < 2)) {\n-            return;\n-        }\n-        bes = new BibtexEntry[keys.length];\n-        for (int i = 0; i < keys.length; i++) {\n-            bes[i] = panel.database.getEntryById((String) keys[i]);\n-        }\n-\n-        SearcherRunnable st = new SearcherRunnable();\n-        JabRefExecutorService.INSTANCE.executeWithLowPriorityInOwnThread(st, \"Searcher\");\n-        int current = 0;\n-\n-        final ArrayList<BibtexEntry> toRemove = new ArrayList<BibtexEntry>();\n-        while (!st.finished() || (current < duplicates.size()))\n-        {\n-\n-            if (current >= duplicates.size())\n-            {\n-                // wait until the search thread puts something into duplicates vector\n-                // or finish its work\n-                synchronized (duplicates)\n-                {\n-                    try\n-                    {\n-                        duplicates.wait();\n-                    } catch (Exception ignored) {\n-                    }\n-                }\n-            } else // duplicates found\n-            {\n-\n-                BibtexEntry[] be = duplicates.get(current);\n-                current++;\n-                if (!toRemove.contains(be[0]) && !toRemove.contains(be[1])) {\n-                    // Check if they are exact duplicates:\n-                    boolean askAboutExact = false;\n-                    if (DuplicateCheck.compareEntriesStrictly(be[0], be[1]) > 1) {\n-                        if (autoRemoveExactDuplicates) {\n-                            toRemove.add(be[1]);\n-                            duplicateCounter++;\n-                            continue;\n-                        } else {\n-                            askAboutExact = true;\n-                        }\n-                    }\n-\n-                    DuplicateCallBack cb = new DuplicateCallBack(panel.frame, be[0], be[1],\n-                            askAboutExact ? DuplicateResolverDialog.DUPLICATE_SEARCH_WITH_EXACT :\n-                                    DuplicateResolverDialog.DUPLICATE_SEARCH);\n-                    ((CallBack) (Spin.over(cb))).update();\n-\n-                    duplicateCounter++;\n-                    int answer = cb.getSelected();\n-                    if ((answer == DuplicateResolverDialog.KEEP_UPPER)\n-                            || (answer == DuplicateResolverDialog.AUTOREMOVE_EXACT)) {\n-                        toRemove.add(be[1]);\n-                        if (answer == DuplicateResolverDialog.AUTOREMOVE_EXACT)\n-                         {\n-                            autoRemoveExactDuplicates = true; // Remember choice\n-                        }\n-                    } else if (answer == DuplicateResolverDialog.KEEP_LOWER) {\n-                        toRemove.add(be[0]);\n-                    } else if (answer == DuplicateResolverDialog.BREAK) {\n-                        st.setFinished(); // thread killing\n-                        current = Integer.MAX_VALUE;\n-                        duplicateCounter--; // correct counter\n-                    }\n-                }\n-            }\n-        }\n-\n-        final int dupliC = duplicateCounter;\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                // Now, do the actual removal:\n-                if (!toRemove.isEmpty()) {\n-                    for (BibtexEntry entry : toRemove) {\n-                        panel.database.removeEntry(entry.getId());\n-                        ce.addEdit(new UndoableRemoveEntry(panel.database, entry, panel));\n-                    }\n-                    panel.markBaseChanged();\n-                }\n-                panel.output(Globals.lang(\"Duplicate pairs found\") + \": \" + duplicates.size()\n-                        + ' ' + Globals.lang(\"pairs processed\") + \": \" + dupliC);\n-\n-                ce.end();\n-                panel.undoManager.addEdit(ce);\n-\n-            }\n-\n-        });\n-\n-    }\n-\n-\n-    class SearcherRunnable implements Runnable {\n-\n-        private volatile boolean finished = false;\n-\n-        @Override\n-        public void run() {\n-            for (int i = 0; (i < (bes.length - 1)) && !finished; i++) {\n-                for (int j = i + 1; (j < bes.length) && !finished; j++) {\n-                    boolean eq = DuplicateCheck.isDuplicate(bes[i], bes[j]);\n-\n-                    // If (suspected) duplicates, add them to the duplicates vector.\n-                    if (eq) {\n-                        synchronized (duplicates) {\n-                            duplicates.add(new BibtexEntry[] {bes[i], bes[j]});\n-                            duplicates.notifyAll(); // send wake up all\n-                        }\n-                    }\n-                }\n-            }\n-            finished = true;\n-            // if no duplicates found, the graphical thread will never wake up\n-            synchronized (duplicates) {\n-                duplicates.notifyAll();\n-            }\n-        }\n-\n-        public boolean finished() {\n-            return finished;\n-        }\n-\n-        // Thread cancel option\n-        // no synchronized used because no \"realy\" critical situations expected\n-        public void setFinished()\n-        {\n-            finished = true;\n-        }\n-    }\n-\n-    static class DuplicateCallBack implements CallBack {\n-\n-        private int reply = -1;\n-        DuplicateResolverDialog diag;\n-        private final JabRefFrame frame;\n-        private final BibtexEntry one;\n-        private final BibtexEntry two;\n-        private final int dialogType;\n-\n-\n-        public DuplicateCallBack(JabRefFrame frame, BibtexEntry one, BibtexEntry two,\n-                int dialogType) {\n-\n-            this.frame = frame;\n-            this.one = one;\n-            this.two = two;\n-            this.dialogType = dialogType;\n-        }\n-\n-        public int getSelected() {\n-            return reply;\n-        }\n-\n-        @Override\n-        public void update() {\n-            diag = new DuplicateResolverDialog(frame, one, two, dialogType);\n-            diag.setVisible(true);\n-            diag.dispose();\n-            reply = diag.getSelected();\n-        }\n-    }\n-\n-}, @@ -1,39 +0,0 @@\n-package net.sf.jabref;\n-\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-\n-public class EasyDateFormat {\n-\n-    /**\n-     * A static Object for date formatting. Please do not create the object\n-     * here, because there are some references from the Globals class.....\n-     */\n-    private static SimpleDateFormat dateFormatter = null;\n-\n-    /**\n-     * Creates a String containing the current date (and possibly time),\n-     * formatted according to the format set in preferences under the key\n-     * \"timeStampFormat\".\n-     *\n-     * @return The date string.\n-     */\n-    public static String easyDateFormat() {\n-        return easyDateFormat(new Date());\n-    }\n-\n-    /**\n-     * Creates a readable Date string from the parameter date. The format is set\n-     * in preferences under the key \"timeStampFormat\".\n-     *\n-     * @return The formatted date string.\n-     */\n-    public static String easyDateFormat(Date date) {\n-        // first use, create an instance\n-        if (dateFormatter == null) {\n-            String format = Globals.prefs.get(\"timeStampFormat\");\n-            dateFormatter = new SimpleDateFormat(format);\n-        }\n-        return dateFormatter.format(date);\n-    }\n-}, @@ -1,149 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.Comparator;\n-\n-/**\n- * This implementation of Comparator takes care of most of the details of sorting BibTeX entries in JabRef.\n- * It is structured as a node in a linked list of comparators, where each node can contain a link to a\n- * new comparator that decides the ordering (by recursion) if this one can't find a difference. The next\n- * node, if any, is given at construction time, and an arbitrary number of nodes can be included.\n- * If the entries are equal by this comparator, and there is no next entry, the entries' unique IDs will\n- * decide the ordering. Consequently, this comparator can never return 0 unless the entries are the same\n- * object.\n- */\n-public class EntryComparator implements Comparator<BibtexEntry> {\n-\n-    private final String sortField;\n-    private final boolean descending;\n-    private boolean binary = false;\n-    private final boolean numeric;\n-    private final Comparator<BibtexEntry> next;\n-\n-\n-    public EntryComparator(boolean binary, boolean desc, String field, Comparator<BibtexEntry> next) {\n-        this.binary = binary;\n-        this.sortField = field;\n-        this.descending = desc;\n-        this.next = next;\n-        this.numeric = BibtexFields.isNumeric(sortField);\n-    }\n-\n-    public EntryComparator(boolean binary, boolean desc, String field) {\n-        this.binary = binary;\n-        this.sortField = field;\n-        this.descending = desc;\n-        this.next = null;\n-        this.numeric = BibtexFields.isNumeric(sortField);\n-    }\n-\n-    @Override\n-    public int compare(BibtexEntry e1, BibtexEntry e2) throws ClassCastException {\n-\n-        if (e1 == e2) {\n-            return 0;\n-        }\n-\n-        //Util.pr(\"EntryComparator: \"+e1+\" : \"+e2);\n-        Object f1 = e1.getField(sortField), f2 = e2.getField(sortField);\n-\n-        if (binary) {\n-            // We just separate on set and unset fields:\n-            if (f1 != null) {\n-                return (f2 == null) ? -1 :\n-                        (next != null ? next.compare(e1, e2) : idCompare(e1, e2));\n-            } else {\n-                return (f2 == null) ? (next != null ? next.compare(e1, e2) : idCompare(e1, e2))\n-                        : 1;\n-            }\n-        }\n-\n-        // If the field is author or editor, we rearrange names so they are\n-        // sorted according to last name.\n-        if (sortField.equals(\"author\") || sortField.equals(\"editor\")) {\n-            if (f1 != null) {\n-                f1 = AuthorList.fixAuthorForAlphabetization((String) f1).toLowerCase();\n-            }\n-            //ImportFormatReader.fixAuthor_lastNameFirst((String)f1);\n-            if (f2 != null)\n-             {\n-                f2 = AuthorList.fixAuthorForAlphabetization((String) f2).toLowerCase();\n-            //ImportFormatReader.fixAuthor_lastNameFirst((String)f2);\n-            }\n-\n-        } else if (sortField.equals(GUIGlobals.TYPE_HEADER)) {\n-            // Sort by type.\n-            f1 = e1.getType().getName();\n-            f2 = e2.getType().getName();\n-        }\n-        else if (numeric) {\n-            try {\n-                Integer i1 = Integer.parseInt((String) f1);\n-                Integer i2 = Integer.parseInt((String) f2);\n-                // Ok, parsing was successful. Update f1 and f2:\n-                f1 = i1;\n-                f2 = i2;\n-            } catch (NumberFormatException ex) {\n-                // Parsing failed. Give up treating these as numbers.\n-                // TODO: should we check which of them failed, and sort based on that?\n-            }\n-        }\n-\n-        if ((f1 == null) && (f2 == null)) {\n-            return (next != null ? next.compare(e1, e2) : idCompare(e1, e2));\n-        }\n-        if ((f1 != null) && (f2 == null)) {\n-            return -1;\n-        }\n-        if ((f1 == null) && (f2 != null)) {\n-            return 1;\n-        }\n-\n-        int result;\n-\n-        //String ours = ((String)e1.getField(sortField)).toLowerCase(),\n-        //    theirs = ((String)e2.getField(sortField)).toLowerCase();\n-        if ((f1 instanceof Integer) && (f2 instanceof Integer)) {\n-            result = -(((Integer) f1).compareTo((Integer) f2));\n-        } else if (f2 instanceof Integer) {\n-            Integer f1AsInteger = new Integer(f1.toString());\n-            result = -((f1AsInteger).compareTo((Integer) f2));\n-        } else if (f1 instanceof Integer) {\n-            Integer f2AsInteger = new Integer(f2.toString());\n-            result = -(((Integer) f1).compareTo(f2AsInteger));\n-        } else {\n-            String ours = ((String) f1).toLowerCase(), theirs = ((String) f2).toLowerCase();\n-            int comp = ours.compareTo(theirs);\n-            result = -comp;\n-        }\n-        if (result != 0)\n-         {\n-            return (descending ? result : -result); // Primary sort.\n-        }\n-        if (next != null) {\n-            return next.compare(e1, e2); // Secondary sort if existent.\n-        } else {\n-\n-            return idCompare(e1, e2); // If still equal, we use the unique IDs.\n-        }\n-    }\n-\n-    private int idCompare(BibtexEntry b1, BibtexEntry b2) {\n-        return ((b1.getId())).compareTo((b2.getId()));\n-    }\n-\n-}, @@ -1,25 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-\n-package net.sf.jabref;\n-\n-/**\n- * Entry containers work on a single entry, which can be asked for \n- */\n-public interface EntryContainer {\n-\n-    BibtexEntry getEntry();\n-}, @@ -1,1728 +0,0 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.AWTKeyStroke;\n-import java.awt.BorderLayout;\n-import java.awt.Component;\n-import java.awt.Font;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.Insets;\n-import java.awt.KeyboardFocusManager;\n-import java.awt.RenderingHints;\n-import java.awt.Toolkit;\n-import java.awt.datatransfer.StringSelection;\n-import java.awt.dnd.DnDConstants;\n-import java.awt.dnd.DropTarget;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.FocusAdapter;\n-import java.awt.event.FocusEvent;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-import java.beans.PropertyChangeEvent;\n-import java.beans.VetoableChangeListener;\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.util.ArrayList;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-\n-import javax.swing.*;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n-import javax.swing.text.JTextComponent;\n-\n-import net.sf.jabref.autocompleter.AutoCompleter;\n-import net.sf.jabref.export.LatexFieldFormatter;\n-import net.sf.jabref.external.ExternalFilePanel;\n-import net.sf.jabref.external.WriteXMPEntryEditorAction;\n-import net.sf.jabref.gui.*;\n-import net.sf.jabref.gui.date.DatePickerButton;\n-import net.sf.jabref.help.HelpAction;\n-import net.sf.jabref.imports.BibtexParser;\n-import net.sf.jabref.imports.ParserResult;\n-import net.sf.jabref.journals.JournalAbbreviations;\n-import net.sf.jabref.labelPattern.LabelPatternUtil;\n-import net.sf.jabref.specialfields.SpecialFieldUpdateListener;\n-import net.sf.jabref.undo.NamedCompound;\n-import net.sf.jabref.undo.UndoableChangeType;\n-import net.sf.jabref.undo.UndoableFieldChange;\n-import net.sf.jabref.undo.UndoableKeyChange;\n-import net.sf.jabref.undo.UndoableRemoveEntry;\n-\n-/**\n- * GUI component that allows editing of the fields of a BibtexEntry (i.e. the\n- * one that shows up, when you double click on an entry in the table)\n- * \n- * It hosts the tabs (required, general, optional) and the buttons to the left.\n- * \n- * EntryEditor also registers itself as a VetoableChangeListener, receiving\n- * events whenever a field of the entry changes, enabling the text fields to\n- * update themselves if the change is made from somewhere else.\n- */\n-public class EntryEditor extends JPanel implements VetoableChangeListener, EntryContainer {\n-\n-    // A reference to the entry this object works on.\n-    private BibtexEntry entry;\n-\n-    private final BibtexEntryType type;\n-\n-    // The action concerned with closing the window.\n-    private final CloseAction closeAction;\n-\n-    // The action that deletes the current entry, and closes the editor.\n-    private final DeleteAction deleteAction = new DeleteAction();\n-\n-    // The action concerned with copying the BibTeX key to the clipboard.\n-    final AbstractAction nextEntryAction = new NextEntryAction();\n-\n-    // Actions for switching to next/previous entry.\n-    final AbstractAction prevEntryAction = new PrevEntryAction();\n-\n-    // The action concerned with storing a field value.\n-    public final StoreFieldAction storeFieldAction;\n-\n-    // The actions concerned with switching the panels.\n-    final SwitchLeftAction switchLeftAction = new SwitchLeftAction();\n-\n-    final SwitchRightAction switchRightAction = new SwitchRightAction();\n-\n-    // The action which generates a bibtexkey for this entry.\n-    public final GenerateKeyAction generateKeyAction;\n-\n-    // UGLY HACK to have a pointer to the fileListEditor to call autoSetLinks()\n-    private FileListEditor fileListEditor = null;\n-    private final AutoLinkAction autoLinkAction = new AutoLinkAction();\n-\n-    private final AbstractAction writeXmp;\n-\n-    final SaveDatabaseAction saveDatabaseAction = new SaveDatabaseAction();\n-\n-    JPanel mainPanel = new JPanel();\n-\n-    private final JPanel srcPanel = new JPanel();\n-\n-    EntryEditorTab genPan;\n-    EntryEditorTab absPan;\n-\n-    JTextField bibtexKey;\n-\n-    FieldTextField tf;\n-\n-    private JTextArea source;\n-\n-    private final JTabbedPane tabbed = new JTabbedPane(); // JTabbedPane.RIGHT);\n-\n-    JLabel lab;\n-\n-    final JabRefFrame frame;\n-\n-    final BasePanel panel;\n-\n-    private final EntryEditor ths = this;\n-\n-    private final HashSet<FieldContentSelector> contentSelectors = new HashSet<FieldContentSelector>();\n-\n-    private final Logger logger = Logger.getLogger(EntryEditor.class.getName());\n-\n-    private boolean updateSource = true; // This can be set to false to stop the source\n-    private boolean movingToDifferentEntry = false; // Indicates that we are about to go to the next or previous entry\n-\n-    private final List<Object> tabs = new ArrayList<Object>();\n-\n-    // text area from gettin updated. This is used in cases where the source\n-    // couldn't be parsed, and the user is given the option to edit it.\n-    private boolean lastSourceAccepted = true; // This indicates whether the last\n-\n-    // attempt\n-    // at parsing the source was successful. It is used to determine whether the\n-    // dialog should close; it should stay open if the user received an error\n-    // message about the source, whatever he or she chose to do about it.\n-    private String lastSourceStringAccepted = null; // This is used to prevent double\n-\n-    // fields.\n-    // These values can be used to calculate the preferred height for the form.\n-    // reqW starts at 1 because it needs room for the bibtex key field.\n-    private int sourceIndex = -1; // The index the source panel has in tabbed.\n-\n-    private final JabRefPreferences prefs;\n-\n-    final HelpAction helpAction;\n-\n-    private final UndoAction undoAction = new UndoAction();\n-\n-    private final RedoAction redoAction = new RedoAction();\n-\n-    private final TabListener tabListener = new TabListener();\n-\n-\n-    public EntryEditor(JabRefFrame frame_, BasePanel panel_, BibtexEntry entry_) {\n-\n-        frame = frame_;\n-        panel = panel_;\n-        entry = entry_;\n-        prefs = Globals.prefs;\n-        type = entry.getType();\n-\n-        entry.addPropertyChangeListener(this);\n-        entry.addPropertyChangeListener(SpecialFieldUpdateListener.getInstance());\n-\n-        helpAction = new HelpAction(frame.helpDiag, GUIGlobals.entryEditorHelp, \"Help\");\n-        closeAction = new CloseAction();\n-        CopyKeyAction copyKeyAction = new CopyKeyAction();\n-        generateKeyAction = new GenerateKeyAction(frame);\n-        storeFieldAction = new StoreFieldAction();\n-        writeXmp = new WriteXMPEntryEditorAction(panel_, this);\n-\n-        BorderLayout bl = new BorderLayout();\n-        setLayout(bl);\n-        setupToolBar();\n-        setupFieldPanels();\n-        setupSourcePanel();\n-        add(tabbed, BorderLayout.CENTER);\n-        tabbed.addChangeListener(tabListener);\n-        if (prefs.getBoolean(\"showSource\") && prefs.getBoolean(\"defaultShowSource\")) {\n-            tabbed.setSelectedIndex(sourceIndex);\n-        }\n-\n-        updateAllFields();\n-    }\n-\n-    private void setupFieldPanels() {\n-        tabbed.removeAll();\n-        tabs.clear();\n-        String[] fields = entry.getRequiredFields();\n-\n-        List<String> fieldList = null;\n-        if (fields != null) {\n-            fieldList = java.util.Arrays.asList(fields);\n-        }\n-        EntryEditorTab reqPan = new EntryEditorTab(frame, panel, fieldList, this, true, false, Globals.lang(\"Required fields\"));\n-        if (reqPan.fileListEditor != null) {\n-            fileListEditor = reqPan.fileListEditor;\n-        }\n-        tabbed.addTab(Globals.lang(\"Required fields\"), GUIGlobals.getImage(\"required\"), reqPan\n-                .getPane(), Globals.lang(\"Show required fields\"));\n-        tabs.add(reqPan);\n-\n-        if ((entry.getOptionalFields() != null) && (entry.getOptionalFields().length >= 1)) {\n-            EntryEditorTab optPan;\n-            if (!prefs.getBoolean(\"biblatexMode\")) {\n-                optPan = new EntryEditorTab(frame, panel, java.util.Arrays.asList(entry.getOptionalFields()), this,\n-                        false, false, Globals.lang(\"Optional fields\"));\n-                if (optPan.fileListEditor != null) {\n-                    fileListEditor = optPan.fileListEditor;\n-                }\n-                tabbed.addTab(Globals.lang(\"Optional fields\"), GUIGlobals.getImage(\"optional\"), optPan\n-                        .getPane(), Globals.lang(\"Show optional fields\"));\n-                tabs.add(optPan);\n-            }\n-            else {\n-                optPan = new EntryEditorTab(frame, panel,\n-                        java.util.Arrays.asList(entry.getType().getPrimaryOptionalFields()), this,\n-                        false, true, Globals.lang(\"Optional fields\"));\n-                if (optPan.fileListEditor != null) {\n-                    fileListEditor = optPan.fileListEditor;\n-                }\n-                tabbed.addTab(Globals.lang(\"Optional fields\"), GUIGlobals.getImage(\"optional\"), optPan\n-                        .getPane(), Globals.lang(\"Show optional fields\"));\n-                tabs.add(optPan);\n-\n-                Set<String> deprecatedFields = new HashSet<String>(BibtexEntry.FieldAliasesOldToNew.keySet());\n-                deprecatedFields.add(\"year\");\n-                deprecatedFields.add(\"month\");\n-                String[] optionalFieldsNotPrimaryOrDeprecated = Util.getRemainder(entry.getOptionalFields(),\n-                        entry.getType().getPrimaryOptionalFields());\n-                optionalFieldsNotPrimaryOrDeprecated = Util.getRemainder(optionalFieldsNotPrimaryOrDeprecated,\n-                        deprecatedFields.toArray(new String[deprecatedFields.size()]));\n-\n-                // Get list of all optional fields of this entry and their aliases\n-                Set<String> optionalFieldsAndAliases = new HashSet<String>();\n-                for (String field : entry.getOptionalFields())\n-                {\n-                    optionalFieldsAndAliases.add(field);\n-                    if (BibtexEntry.FieldAliasesNewToOld.containsKey(field)) {\n-                        optionalFieldsAndAliases.add(BibtexEntry.FieldAliasesNewToOld.get(field));\n-                    }\n-                }\n-\n-                // Get all optional fields which are deprecated\n-                Set<String> usedOptionalFieldsDeprecated = new HashSet<String>(deprecatedFields);\n-                usedOptionalFieldsDeprecated.retainAll(optionalFieldsAndAliases);\n-\n-                // Add tabs\n-                optPan = new EntryEditorTab(frame, panel,\n-                        java.util.Arrays.asList(optionalFieldsNotPrimaryOrDeprecated), this,\n-                        false, true, Globals.lang(\"Optional fields 2\"));\n-                if (optPan.fileListEditor != null) {\n-                    fileListEditor = optPan.fileListEditor;\n-                }\n-                tabbed.addTab(Globals.lang(\"Optional fields 2\"), GUIGlobals.getImage(\"optional\"), optPan\n-                        .getPane(), Globals.lang(\"Show optional fields\"));\n-                tabs.add(optPan);\n-\n-                if (!usedOptionalFieldsDeprecated.isEmpty())\n-                {\n-                    optPan = new EntryEditorTab(frame, panel,\n-                            java.util.Arrays.asList(usedOptionalFieldsDeprecated.toArray(new String[usedOptionalFieldsDeprecated.size()])), this,\n-                            false, true, Globals.lang(\"Deprecated fields\"));\n-                    if (optPan.fileListEditor != null) {\n-                        fileListEditor = optPan.fileListEditor;\n-                    }\n-                    tabbed.addTab(Globals.lang(\"Deprecated fields\"), GUIGlobals.getImage(\"optional\"), optPan\n-                            .getPane(), Globals.lang(\"Show deprecated bibtex fields\"));\n-                    tabs.add(optPan);\n-                }\n-            }\n-        }\n-\n-        EntryEditorTabList tabList = Globals.prefs.getEntryEditorTabList();\n-        for (int i = 0; i < tabList.getTabCount(); i++) {\n-            EntryEditorTab newTab = new EntryEditorTab(frame, panel, tabList.getTabFields(i), this, false,\n-                    false, tabList.getTabName(i));\n-            if (newTab.fileListEditor != null) {\n-                fileListEditor = newTab.fileListEditor;\n-            }\n-            tabbed.addTab(tabList.getTabName(i), GUIGlobals.getImage(\"general\"), newTab.getPane());\n-            tabs.add(newTab);\n-        }\n-\n-        srcPanel.setName(Globals.lang(\"BibTeX source\"));\n-        if (Globals.prefs.getBoolean(\"showSource\")) {\n-            tabbed.addTab(Globals.lang(\"BibTeX source\"), GUIGlobals.getImage(\"source\"), srcPanel,\n-                    Globals.lang(\"Show/edit BibTeX source\"));\n-            tabs.add(srcPanel);\n-        }\n-        sourceIndex = tabs.size() - 1; // Set the sourceIndex variable.\n-        srcPanel.setFocusCycleRoot(true);\n-    }\n-\n-    public BibtexEntryType getType() {\n-        return type;\n-    }\n-\n-    /**\n-     * @return reference to the currently edited entry\n-     */\n-    @Override\n-    public BibtexEntry getEntry() {\n-        return entry;\n-    }\n-\n-    public BibtexDatabase getDatabase() {\n-        return panel.getDatabase();\n-    }\n-\n-    private void setupToolBar() {\n-        JPanel leftPan = new JPanel();\n-        leftPan.setLayout(new BorderLayout());\n-        JToolBar tlb = new JToolBar(SwingConstants.VERTICAL);\n-        //tlb.putClientProperty(Options.HEADER_STYLE_KEY, HeaderStyle.BOTH);\n-        tlb.setBorder(null);\n-        tlb.setRollover(true);\n-\n-        tlb.setMargin(new Insets(0, 0, 0, 2));\n-\n-        // The toolbar carries all the key bindings that are valid for the whole\n-        // window.\n-        ActionMap am = tlb.getActionMap();\n-        InputMap im = tlb.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-\n-        im.put(prefs.getKey(\"Close entry editor\"), \"close\");\n-        am.put(\"close\", closeAction);\n-        im.put(prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", storeFieldAction);\n-        im.put(prefs.getKey(\"Autogenerate BibTeX keys\"), \"generateKey\");\n-        am.put(\"generateKey\", generateKeyAction);\n-        im.put(prefs.getKey(\"Automatically link files\"), \"autoLink\");\n-        am.put(\"autoLink\", autoLinkAction);\n-        im.put(prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n-        am.put(\"prev\", prevEntryAction);\n-        im.put(prefs.getKey(\"Entry editor, next entry\"), \"next\");\n-        am.put(\"next\", nextEntryAction);\n-        im.put(prefs.getKey(\"Undo\"), \"undo\");\n-        am.put(\"undo\", undoAction);\n-        im.put(prefs.getKey(\"Redo\"), \"redo\");\n-        am.put(\"redo\", redoAction);\n-        im.put(prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", helpAction);\n-\n-        tlb.setFloatable(false);\n-\n-        // Add actions (and thus buttons)\n-        JButton closeBut = new JButton(closeAction);\n-        closeBut.setText(null);\n-        closeBut.setBorder(null);\n-        closeBut.setMargin(new Insets(8, 0, 8, 0));\n-        leftPan.add(closeBut, BorderLayout.NORTH);\n-\n-        // Create type-label\n-        leftPan.add(new TypeLabel(entry.getType().getName()), BorderLayout.CENTER);\n-        TypeButton typeButton = new TypeButton(entry.getType().getName());\n-\n-        tlb.add(typeButton);\n-        tlb.add(generateKeyAction);\n-        tlb.add(autoLinkAction);\n-\n-        tlb.add(writeXmp);\n-\n-        tlb.addSeparator();\n-\n-        tlb.add(deleteAction);\n-        tlb.add(prevEntryAction);\n-        tlb.add(nextEntryAction);\n-\n-        tlb.addSeparator();\n-\n-        tlb.add(helpAction);\n-\n-        Component[] comps = tlb.getComponents();\n-\n-        for (Component comp : comps) {\n-            ((JComponent) comp).setOpaque(false);\n-        }\n-\n-        leftPan.add(tlb, BorderLayout.SOUTH);\n-        add(leftPan, BorderLayout.WEST);\n-    }\n-\n-    /**\n-     * Rebuild the field tabs. This is called e.g. when a new content selector\n-     * has been added.\n-     */\n-    public void rebuildPanels() {\n-        // Remove change listener, because the rebuilding causes meaningless\n-        // events and trouble:\n-        tabbed.removeChangeListener(tabListener);\n-\n-        setupFieldPanels();\n-        // Add the change listener again:\n-        tabbed.addChangeListener(tabListener);\n-        revalidate();\n-        repaint();\n-    }\n-\n-    /**\n-     * getExtra checks the field name against BibtexFields.getFieldExtras(name).\n-     * If the name has an entry, the proper component to be shown is created and\n-     * returned. Otherwise, null is returned. In addition, e.g. listeners can be\n-     * added to the field editor, even if no component is returned.\n-     * \n-     * @param string\n-     *            Field name\n-     * @return Component to show, or null if none.\n-     */\n-    public JComponent getExtra(String string, final FieldEditor ed) {\n-\n-        // fieldName and parameter string identically ????\n-        final String fieldName = ed.getFieldName();\n-\n-        String s = BibtexFields.getFieldExtras(string);\n-\n-        // timestamp or a other field with datepicker command\n-        if ((fieldName.equals(Globals.prefs.get(\"timeStampField\")))\n-                || ((s != null) && s.equals(\"datepicker\"))) {\n-            // double click AND datefield => insert the current date (today)\n-            ((JTextArea) ed).addMouseListener(new MouseAdapter() {\n-\n-                @Override\n-                public void mouseClicked(MouseEvent e) {\n-                    if (e.getClickCount() == 2) // double click\n-                    {\n-                        String date = EasyDateFormat.easyDateFormat();\n-                        ed.setText(date);\n-                    }\n-                }\n-            });\n-\n-            // insert a datepicker, if the extras field contains this command\n-            if ((s != null) && s.equals(\"datepicker\")) {\n-                DatePickerButton datePicker = new DatePickerButton(ed);\n-                return datePicker.getDatePicker();\n-            }\n-        }\n-\n-        if ((s != null) && s.equals(\"external\")) {\n-\n-            // Add external viewer listener for \"pdf\" and \"url\" fields.\n-            ((JComponent) ed).addMouseListener(new ExternalViewerListener());\n-\n-            return null;\n-        } else if ((s != null) && s.equals(\"journalNames\")) {\n-            // Add controls for switching between abbreviated and full journal\n-            // names.\n-            // If this field also has a FieldContentSelector, we need to combine\n-            // these.\n-            JPanel controls = new JPanel();\n-            controls.setLayout(new BorderLayout());\n-            if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + ed.getFieldName()) != null) {\n-                FieldContentSelector ws = new FieldContentSelector(frame, panel, frame, ed,\n-                        panel.metaData, storeFieldAction, false, \", \");\n-                contentSelectors.add(ws);\n-                controls.add(ws, BorderLayout.NORTH);\n-            }\n-            controls.add(JournalAbbreviations.getNameSwitcher(this, ed, panel.undoManager),\n-                    BorderLayout.SOUTH);\n-            return controls;\n-        } else if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + ed.getFieldName()) != null) {\n-            FieldContentSelector ws = new FieldContentSelector(frame, panel, frame, ed,\n-                    panel.metaData, storeFieldAction, false,\n-                    ((ed.getFieldName().equals(\"author\") || ed.getFieldName().equals(\"editor\")) ? \" and \" : \", \"));\n-            contentSelectors.add(ws);\n-\n-            return ws;\n-        } else if ((s != null) && s.equals(\"browse\")) {\n-            JButton but = new JButton(Globals.lang(\"Browse\"));\n-            ((JComponent) ed).addMouseListener(new ExternalViewerListener());\n-\n-            // but.setBackground(GUIGlobals.lightGray);\n-            but.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    String dir = ed.getText();\n-\n-                    if (dir.isEmpty()) {\n-                        dir = prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT, \"\");\n-                    }\n-\n-                    String chosenFile = FileDialogs.getNewFile(frame, new File(dir), '.' + fieldName,\n-                            JFileChooser.OPEN_DIALOG, false);\n-\n-                    if (chosenFile != null) {\n-                        File newFile = new File(chosenFile); // chooser.getSelectedFile();\n-                        ed.setText(newFile.getPath());\n-                        prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT, newFile.getPath());\n-                        updateField(ed);\n-                    }\n-                }\n-            });\n-\n-            return but;\n-            // } else if ((s != null) && s.equals(\"browsePdf\")) {\n-        } else if ((s != null) && (s.equals(\"browseDoc\") || s.equals(\"browseDocZip\"))) {\n-\n-            final String ext = '.' + fieldName.toLowerCase();\n-            final OpenFileFilter off;\n-            if (s.equals(\"browseDocZip\")) {\n-                off = new OpenFileFilter(new String[] {ext, ext + \".gz\", ext + \".bz2\"});\n-            } else {\n-                off = new OpenFileFilter(new String[] {ext});\n-            }\n-\n-            return new ExternalFilePanel(frame, panel.metaData(), this, fieldName,\n-                    off, ed);\n-        }\n-        /*\n-         * else if ((s != null) && s.equals(\"browsePs\")) { ExternalFilePanel pan =\n-         * new ExternalFilePanel(frame, this, \"ps\", off, ed); return pan; }\n-         */\n-        else if ((s != null) && s.equals(\"url\")) {\n-            ((JComponent) ed).setDropTarget(new DropTarget((Component) ed,\n-                    DnDConstants.ACTION_NONE, new SimpleUrlDragDrop(ed, storeFieldAction)));\n-\n-            return null;\n-        }\n-\n-        else if ((s != null) && (s.equals(\"setOwner\"))) {\n-            JButton button = new JButton(Globals.lang(\"Auto\"));\n-            button.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent actionEvent) {\n-                    ed.setText(Globals.prefs.get(\"defaultOwner\"));\n-                    storeFieldAction.actionPerformed(new ActionEvent(ed, 0, \"\"));\n-                }\n-            });\n-            return button;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    private void setupSourcePanel() {\n-        source = new JTextAreaWithHighlighting();\n-        frame.getSearchManager().addSearchListener((SearchTextListener) source);\n-\n-        /* {\n-            private boolean antialias = Globals.prefs.getBoolean(\"antialias\");\n-\n-            public void paint(Graphics g) {\n-                Graphics2D g2 = (Graphics2D) g;\n-                if (antialias)\n-                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n-                        RenderingHints.VALUE_ANTIALIAS_ON);\n-                super.paint(g2);\n-            }\n-        };*/\n-\n-        //DefaultFormBuilder builder = new DefaultFormBuilder\n-        //        (srcPanel, new FormLayout( \"fill:pref:grow\", \"fill:pref:grow\"));\n-        source.setEditable(true);\n-        source.setLineWrap(true);\n-        source.setTabSize(GUIGlobals.INDENT);\n-        source.addFocusListener(new FieldEditorFocusListener());\n-        // Add the global focus listener, so a menu item can see if this field\n-        // was focused when\n-        // an action was called.\n-        source.addFocusListener(Globals.focusListener);\n-        source.setFont(new Font(\"Monospaced\", Font.PLAIN, Globals.prefs.getInt(\"fontSize\")));\n-        setupJTextComponent(source);\n-        updateSource();\n-\n-        JScrollPane sp = new JScrollPane(source, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,\n-                ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n-        //builder.append(sp);\n-\n-        srcPanel.setLayout(new BorderLayout());\n-        srcPanel.add(sp, BorderLayout.CENTER);\n-\n-    }\n-\n-    public void updateSource() {\n-        if (updateSource) {\n-            StringWriter sw = new StringWriter(200);\n-\n-            try {\n-                LatexFieldFormatter formatter = LatexFieldFormatter.buildIgnoreHashes();\n-                entry.write(sw, formatter, false);\n-\n-                String srcString = sw.getBuffer().toString();\n-                source.setText(srcString);\n-                lastSourceStringAccepted = srcString;\n-\n-                //////////////////////////////////////////////////////////\n-                // Set the current Entry to be selected.\n-                // Fixes the bug of losing selection after, e.g.\n-                // an autogeneration of a BibTeX key.\n-                // - ILC (16/02/2010) -\n-                //////////////////////////////////////////////////////////\n-                SwingUtilities.invokeLater(new Runnable() {\n-\n-                    @Override\n-                    public void run() {\n-                        final int row = panel.mainTable.findEntry(entry);\n-                        if (row >= 0) {\n-                            if (panel.mainTable.getSelectedRowCount() == 0) {\n-                                panel.mainTable.setRowSelectionInterval(row, row);\n-                            }\n-                            //scrollTo(row);\n-                            panel.mainTable.ensureVisible(row);\n-                        }\n-                    }\n-                });\n-                //////////////////////////////////////////////////////////\n-\n-            } catch (IOException ex) {\n-                source.setText(ex.getMessage() + \"\\n\\n\" +\n-                        Globals.lang(\"Correct the entry, and \"\n-                                + \"reopen editor to display/edit source.\"));\n-                source.setEditable(false);\n-            }\n-\n-        }\n-    }\n-\n-    /**\n-     * NOTE: This method is only used for the source panel, not for the\n-     * other tabs. Look at EntryEditorTab for the setup of text components\n-     * in the other tabs.\n-     */\n-    private void setupJTextComponent(JTextComponent ta) {\n-\n-        // Set up key bindings and focus listener for the FieldEditor.\n-        InputMap im = ta.getInputMap(JComponent.WHEN_FOCUSED);\n-        ActionMap am = ta.getActionMap();\n-\n-        // im.put(KeyStroke.getKeyStroke(GUIGlobals.closeKey), \"close\");\n-        // am.put(\"close\", closeAction);\n-        im.put(prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", storeFieldAction);\n-\n-        im.put(prefs.getKey(\"Entry editor, next panel\"), \"right\");\n-        im.put(prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n-        am.put(\"right\", switchRightAction);\n-\n-        im.put(prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n-        im.put(prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n-        am.put(\"left\", switchLeftAction);\n-\n-        im.put(prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", helpAction);\n-        im.put(prefs.getKey(\"Save database\"), \"save\");\n-        am.put(\"save\", saveDatabaseAction);\n-\n-        im.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n-        am.put(\"nexttab\", frame.nextTab);\n-        im.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n-        am.put(\"prevtab\", frame.prevTab);\n-        try {\n-            HashSet<AWTKeyStroke> keys = new HashSet<AWTKeyStroke>(ta\n-                    .getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(AWTKeyStroke.getAWTKeyStroke(\"pressed TAB\"));\n-            ta.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);\n-            keys = new HashSet<AWTKeyStroke>(ta\n-                    .getFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(KeyStroke.getKeyStroke(\"shift pressed TAB\"));\n-            ta.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, keys);\n-        } catch (Throwable t) {\n-            System.err.println(t);\n-        }\n-\n-        ta.addFocusListener(new FieldListener());\n-    }\n-\n-    @Override\n-    public void requestFocus() {\n-        activateVisible();\n-    }\n-\n-    private void activateVisible() {\n-        Object activeTab = tabs.get(tabbed.getSelectedIndex());\n-\n-        if (activeTab instanceof EntryEditorTab) {\n-            ((EntryEditorTab) activeTab).activate();\n-        }\n-        else {\n-            new FocusRequester(source);\n-        // ((JComponent)activeTab).requestFocus();\n-        }\n-    }\n-\n-    /**\n-     * Reports the enabled status of the editor, as set by setEnabled()\n-     */\n-    @Override\n-    public boolean isEnabled() {\n-        return source.isEnabled();\n-    }\n-\n-    /**\n-     * Sets the enabled status of all text fields of the entry editor.\n-     */\n-    @Override\n-    public void setEnabled(boolean enabled) {\n-        for (Object o : tabs) {\n-            if (o instanceof EntryEditorTab) {\n-                ((EntryEditorTab) o).setEnabled(enabled);\n-            }\n-        }\n-        source.setEnabled(enabled);\n-\n-    }\n-\n-    /**\n-     * Centers the given row, and highlights it.\n-     * \n-     * @param row\n-     *            an <code>int</code> value\n-     */\n-    private void scrollTo(int row) {\n-        movingToDifferentEntry = true;\n-        panel.mainTable.setRowSelectionInterval(row, row);\n-        panel.mainTable.ensureVisible(row);\n-    }\n-\n-    /**\n-     * Makes sure the current edit is stored.\n-     */\n-    public void storeCurrentEdit() {\n-        Component comp = Globals.focusListener.getFocused();\n-        if ((comp == source) || ((comp instanceof FieldEditor) && this.isAncestorOf(comp))) {\n-            if (comp instanceof FieldEditor) {\n-                ((FieldEditor) comp).clearAutoCompleteSuggestion();\n-            }\n-            storeFieldAction.actionPerformed(new ActionEvent(comp, 0, \"\"));\n-        }\n-    }\n-\n-    /**\n-     * Returns the index of the active (visible) panel.\n-     * \n-     * @return an <code>int</code> value\n-     */\n-    public int getVisiblePanel() {\n-        return tabbed.getSelectedIndex();\n-    }\n-\n-    /** Returns the name of the currently selected component. */\n-    public String getVisiblePanelName() {\n-        return tabbed.getSelectedComponent().getName();\n-    }\n-\n-    /**\n-     * Sets the panel with the given index visible.\n-     * \n-     * @param i\n-     *            an <code>int</code> value\n-     */\n-    public void setVisiblePanel(int i) {\n-        tabbed.setSelectedIndex(Math.min(i, tabbed.getTabCount() - 1));\n-    }\n-\n-    public void setVisiblePanel(String name) {\n-        for (int i = 0; i < tabbed.getTabCount(); ++i) {\n-            if (name.equals(tabbed.getComponent(i).getName())) {\n-                tabbed.setSelectedIndex(i);\n-                return;\n-            }\n-        }\n-        if (tabbed.getTabCount() > 0) {\n-            tabbed.setSelectedIndex(0);\n-        }\n-    }\n-\n-    /**\n-     * Updates this editor to show the given entry, regardless of type\n-     * correspondence.\n-     * \n-     * @param be\n-     *            a <code>BibtexEntry</code> value\n-     */\n-    public synchronized void switchTo(BibtexEntry be) {\n-        if (entry == be) {\n-            /**\n-             * Even if the editor is already showing the same entry, update\n-             * the source panel. I'm not sure if this is the correct place to\n-             * do this, but in some cases the source panel will otherwise not\n-             * be up-to-date when an entry is changed while the entry editor\n-             * is existing, set to the same entry, but not visible.\n-             */\n-            updateSource();\n-            return;\n-        }\n-        storeCurrentEdit();\n-\n-        // Remove this instance as property listener for the entry:\n-        entry.removePropertyChangeListener(this);\n-\n-        // Register as property listener for the new entry:\n-        be.addPropertyChangeListener(this);\n-\n-        entry = be;\n-\n-        updateAllFields();\n-        validateAllFields();\n-        updateSource();\n-        panel.newEntryShowing(be);\n-\n-    }\n-\n-    /**\n-     * Returns false if the contents of the source panel has not been validated,\n-     * true otherwise.\n-     */\n-    public boolean lastSourceAccepted() {\n-        if (tabbed.getSelectedComponent() == srcPanel) {\n-            storeSource(false);\n-        }\n-\n-        return lastSourceAccepted;\n-    }\n-\n-    /*\n-     * public boolean storeSourceIfNeeded() { if (tabbed.getSelectedIndex() ==\n-     * sourceIndex) return storeSource(); else return true; }\n-     */\n-    private boolean storeSource(boolean showError) {\n-        // Store edited bibtex code.\n-        BibtexParser bp = new BibtexParser(new java.io.StringReader(source.getText()));\n-\n-        try {\n-            ParserResult parserResult = bp.parse();\n-            BibtexDatabase db = parserResult.getDatabase();\n-\n-            if (db.getEntryCount() > 1) {\n-                throw new Exception(\"More than one entry found.\");\n-            }\n-\n-            if (db.getEntryCount() < 1) {\n-                if (parserResult.hasWarnings()) {\n-                    // put the warning into as exception text -> it will be displayed to the user\n-                    throw new Exception(parserResult.warnings()[0]);\n-                } else {\n-                    throw new Exception(\"No entries found.\");\n-                }\n-            }\n-\n-            NamedCompound compound = new NamedCompound(Globals.lang(\"source edit\"));\n-            BibtexEntry nu = db.getEntryById(db.getKeySet().iterator().next());\n-            String id = entry.getId();\n-            String\n-            // oldKey = entry.getCiteKey(),\n-            newKey = nu.getCiteKey();\n-            boolean anyChanged = false;\n-            boolean changedType = false;\n-            boolean duplicateWarning = false;\n-            boolean emptyWarning = (newKey == null) || newKey.isEmpty();\n-\n-            if (panel.database.setCiteKeyForEntry(id, newKey)) {\n-                duplicateWarning = true;\n-\n-                // First, remove fields that the user have removed.\n-            }\n-\n-            for (String field : entry.getAllFields()) {\n-                if (BibtexFields.isDisplayableField(field)) {\n-                    if (nu.getField(field) == null) {\n-                        compound.addEdit(new UndoableFieldChange(entry, field, entry\n-                                .getField(field), null));\n-                        entry.clearField(field);\n-                        anyChanged = true;\n-                    }\n-                }\n-            }\n-\n-            // Then set all fields that have been set by the user.\n-            for (String field : nu.getAllFields()) {\n-                String oldValue = entry.getField(field);\n-                String newValue = nu.getField(field);\n-                if ((oldValue == null) || !oldValue.equals(newValue)) {\n-                    // Test if the field is legally set.\n-                    (new LatexFieldFormatter()).format(newValue, field);\n-\n-                    compound.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n-                    entry.setField(field, newValue);\n-                    anyChanged = true;\n-                }\n-            }\n-\n-            // See if the user has changed the entry type:\n-            if (nu.getType() != entry.getType()) {\n-                compound.addEdit(new UndoableChangeType(entry,\n-                        entry.getType(), nu.getType()));\n-                entry.setType(nu.getType());\n-                anyChanged = true;\n-                changedType = true;\n-            }\n-            compound.end();\n-\n-            if (!anyChanged) {\n-                return true;\n-            }\n-\n-            panel.undoManager.addEdit(compound);\n-\n-            /*\n-             * if (((oldKey == null) && (newKey != null)) || ((oldKey != null) &&\n-             * (newKey == null)) || ((oldKey != null) && (newKey != null) &&\n-             * !oldKey.equals(newKey))) { }\n-             */\n-            if (duplicateWarning) {\n-                warnDuplicateBibtexkey();\n-            } else if (emptyWarning && showError) {\n-                warnEmptyBibtexkey();\n-            } else {\n-                panel.output(Globals.lang(\"Stored entry\") + '.');\n-            }\n-\n-            lastSourceStringAccepted = source.getText();\n-            if (!changedType) {\n-                updateAllFields();\n-                lastSourceAccepted = true;\n-                updateSource = true;\n-            }\n-            else {\n-                panel.updateEntryEditorIfShowing();\n-            }\n-            // TODO: does updating work properly after source stored?\n-            // panel.tableModel.remap();\n-            // panel.entryTable.repaint();\n-            // panel.refreshTable();\n-            panel.markBaseChanged();\n-            ///////////////////////////////////////////////////////\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                @Override\n-                public void run() {\n-                    final int row = panel.mainTable.findEntry(entry);\n-                    if (row >= 0) {\n-                        //if (panel.mainTable.getSelectedRowCount() == 0)\n-                        //    panel.mainTable.setRowSelectionInterval(row, row);\n-                        //scrollTo(row);\n-                        panel.mainTable.ensureVisible(row);\n-                    }\n-                }\n-            });\n-\n-            return true;\n-        } catch (Throwable ex) {\n-            // ex.printStackTrace();\n-            // The source couldn't be parsed, so the user is given an\n-            // error message, and the choice to keep or revert the contents\n-            // of the source text field.\n-            updateSource = false;\n-            lastSourceAccepted = false;\n-            tabbed.setSelectedComponent(srcPanel);\n-\n-            if (showError) {\n-                Object[] options = {Globals.lang(\"Edit\"),\n-                        Globals.lang(\"Revert to original source\")};\n-\n-                int answer = JOptionPane.showOptionDialog(frame, Globals.lang(\"Error\") + \": \" + ex.getMessage(),\n-                        Globals.lang(\"Problem with parsing entry\"), JOptionPane.YES_NO_OPTION,\n-                        JOptionPane.ERROR_MESSAGE, null, options, options[0]);\n-\n-                if (answer != 0) {\n-                    updateSource = true;\n-                    updateSource();\n-                }\n-            }\n-\n-            return false;\n-        }\n-    }\n-\n-    private void setField(String fieldName, String newFieldData) {\n-\n-        for (Object o : tabs) {\n-            if (o instanceof EntryEditorTab) {\n-                ((EntryEditorTab) o).updateField(fieldName, newFieldData);\n-            }\n-        }\n-\n-    }\n-\n-    /**\n-     * Sets all the text areas according to the shown entry.\n-     */\n-    public void updateAllFields() {\n-        for (Object o : tabs) {\n-            if (o instanceof EntryEditorTab) {\n-                ((EntryEditorTab) o).setEntry(entry);\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Removes the \"invalid field\" color from all text areas.\n-     */\n-    public void validateAllFields() {\n-        for (Object o : tabs) {\n-            if (o instanceof EntryEditorTab) {\n-                ((EntryEditorTab) o).validateAllFields();\n-            }\n-        }\n-    }\n-\n-    public void updateAllContentSelectors() {\n-        if (!contentSelectors.isEmpty()) {\n-            for (FieldContentSelector contentSelector : contentSelectors) {\n-                contentSelector.rebuildComboBox();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Update the JTextArea when a field has changed.\n-     * \n-     * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)\n-     */\n-    @Override\n-    public void vetoableChange(PropertyChangeEvent e) {\n-        String newValue = ((e.getNewValue() != null) ? e.getNewValue().toString() : \"\");\n-        setField(e.getPropertyName(), newValue);\n-    }\n-\n-    public void updateField(final Object source) {\n-        storeFieldAction.actionPerformed(new ActionEvent(source, 0, \"\"));\n-    }\n-\n-    public void setMovingToDifferentEntry() {\n-        movingToDifferentEntry = true;\n-    }\n-\n-\n-    private class TypeButton extends JButton {\n-\n-        public TypeButton(String type) {\n-            super(GUIGlobals.getImage(\"edit\"));\n-            setToolTipText(Globals.lang(\"Change entry type\"));\n-            addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    JPopupMenu typeMenu = new JPopupMenu();\n-                    for (String s : BibtexEntryType.ALL_TYPES.keySet()) {\n-                        typeMenu.add(new ChangeTypeAction(BibtexEntryType.getType(s), panel));\n-                    }\n-\n-                    typeMenu.show(ths, 0, 0);\n-                }\n-            });\n-        }\n-\n-    }\n-\n-    private class TypeLabel extends JLabel {\n-\n-        public TypeLabel(String type) {\n-            super(type);\n-            setUI(new VerticalLabelUI(false));\n-            setForeground(GUIGlobals.entryEditorLabelColor);\n-            setHorizontalAlignment(SwingConstants.RIGHT);\n-            setFont(GUIGlobals.typeNameFont);\n-\n-            // Add a mouse listener so the user can right-click the type label to change the entry type:\n-            addMouseListener(new MouseAdapter() {\n-\n-                @Override\n-                public void mouseReleased(MouseEvent e) {\n-                    if (e.isPopupTrigger() || (e.getButton() == MouseEvent.BUTTON3)) {\n-                        handleTypeChange();\n-                    }\n-                }\n-\n-                @Override\n-                public void mouseClicked(MouseEvent e) {\n-                    if (e.isPopupTrigger() || (e.getButton() == MouseEvent.BUTTON3)) {\n-                        handleTypeChange();\n-                    }\n-                }\n-\n-                private void handleTypeChange() {\n-                    JPopupMenu typeMenu = new JPopupMenu();\n-                    for (String s : BibtexEntryType.ALL_TYPES.keySet()) {\n-                        typeMenu.add(new ChangeTypeAction(BibtexEntryType.getType(s), panel));\n-                    }\n-                    typeMenu.show(ths, 0, 0);\n-                }\n-            });\n-        }\n-\n-        @Override\n-        public void paintComponent(Graphics g) {\n-            Graphics2D g2 = (Graphics2D) g;\n-            //g2.setColor(GUIGlobals.entryEditorLabelColor);\n-            //g2.setFont(GUIGlobals.typeNameFont);\n-            //FontMetrics fm = g2.getFontMetrics();\n-            //int width = fm.stringWidth(label);\n-            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n-            super.paintComponent(g2);\n-            //g2.rotate(-Math.PI / 2, 0, 0);\n-            //g2.drawString(label, -width - 7, 28);\n-        }\n-    }\n-\n-    private class FieldListener extends FocusAdapter {\n-\n-        /*\n-         * Focus listener that fires the storeFieldAction when a FieldTextArea\n-         * loses focus.\n-         */\n-        @Override\n-        public void focusGained(FocusEvent e) {\n-        }\n-\n-        @Override\n-        public void focusLost(FocusEvent e) {\n-            // Util.pr(\"Lost focus \"+e.getSource().toString().substring(0,30));\n-            if (!e.isTemporary()) {\n-                updateField(e.getSource());\n-            }\n-        }\n-    }\n-\n-    private class TabListener implements ChangeListener {\n-\n-        @Override\n-        public void stateChanged(ChangeEvent e) {\n-\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                @Override\n-                public void run() {\n-                    activateVisible();\n-                }\n-            });\n-\n-            // After the initial event train has finished, we tell the editor\n-            // tab to update all\n-            // its fields. This makes sure they are updated even if the tab we\n-            // just left contained one\n-            // or more of the same fields as this one:\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                @Override\n-                public void run() {\n-                    Object activeTab = tabs.get(tabbed.getSelectedIndex());\n-                    if (activeTab instanceof EntryEditorTab) {\n-                        ((EntryEditorTab) activeTab).updateAll();\n-                    }\n-                }\n-            });\n-\n-        }\n-    }\n-\n-    class DeleteAction extends AbstractAction {\n-\n-        public DeleteAction() {\n-            super(Globals.lang(\"Delete\"), GUIGlobals.getImage(\"delete\"));\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Delete entry\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            // Show confirmation dialog if not disabled:\n-            boolean goOn = panel.showDeleteConfirmationDialog(1);\n-\n-            if (!goOn) {\n-                return;\n-            }\n-\n-            panel.entryEditorClosing(EntryEditor.this);\n-            panel.database.removeEntry(entry.getId());\n-            panel.markBaseChanged();\n-            panel.undoManager.addEdit(new UndoableRemoveEntry(panel.database, entry, panel));\n-            panel.output(Globals.lang(\"Deleted\") + ' ' + Globals.lang(\"entry\"));\n-        }\n-    }\n-\n-    class CloseAction extends AbstractAction {\n-\n-        public CloseAction() {\n-            super(Globals.lang(\"Close window\"), GUIGlobals.getImage(\"close\"));\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Close window\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            if (tabbed.getSelectedComponent() == srcPanel) {\n-                updateField(source);\n-                if (lastSourceAccepted) {\n-                    panel.entryEditorClosing(EntryEditor.this);\n-                }\n-            } else {\n-                panel.entryEditorClosing(EntryEditor.this);\n-            }\n-        }\n-    }\n-\n-    class CopyKeyAction extends AbstractAction {\n-\n-        public CopyKeyAction() {\n-            super(\"Copy BibTeX key to clipboard\");\n-            putValue(Action.SHORT_DESCRIPTION, \"Copy BibTeX key to clipboard (Ctrl-K)\");\n-            // putValue(MNEMONIC_KEY, GUIGlobals.copyKeyCode);\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            String s = (entry.getField(BibtexFields.KEY_FIELD));\n-            StringSelection ss = new StringSelection(s);\n-\n-            if (s != null) {\n-                Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, ss);\n-            }\n-        }\n-    }\n-\n-    public class StoreFieldAction extends AbstractAction {\n-\n-        public StoreFieldAction() {\n-            super(\"Store field value\");\n-            putValue(Action.SHORT_DESCRIPTION, \"Store field value\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            boolean movingAway = movingToDifferentEntry;\n-            movingToDifferentEntry = false;\n-\n-            if (e.getSource() instanceof FieldTextField) {\n-                // Storage from bibtex key field.\n-                FieldTextField fe = (FieldTextField) e.getSource();\n-                String oldValue = entry.getCiteKey();\n-                String newValue = fe.getText();\n-\n-                if (newValue.isEmpty()) {\n-                    newValue = null;\n-                }\n-\n-                if (((oldValue == null) && (newValue == null))\n-                        || ((oldValue != null) && (newValue != null) && oldValue.equals(newValue)))\n-                 {\n-                    return; // No change.\n-                }\n-\n-                // Make sure the key is legal:\n-                String cleaned = Util.checkLegalKey(newValue);\n-                if ((cleaned != null) && !cleaned.equals(newValue)) {\n-                    JOptionPane.showMessageDialog(frame, Globals.lang(\"Invalid BibTeX key\"),\n-                            Globals.lang(\"Error setting field\"), JOptionPane.ERROR_MESSAGE);\n-                    fe.setInvalidBackgroundColor();\n-                    return;\n-                } else {\n-                    fe.setValidBackgroundColor();\n-                }\n-\n-                boolean isDuplicate = panel.database.setCiteKeyForEntry(entry.getId(), newValue);\n-\n-                if (newValue != null) {\n-                    if (isDuplicate) {\n-                        warnDuplicateBibtexkey();\n-                    } else {\n-                        panel.output(Globals.lang(\"BibTeX key is unique.\"));\n-                    }\n-                } else { // key is null/empty\n-                    warnEmptyBibtexkey();\n-                }\n-\n-                // Add an UndoableKeyChange to the baseframe's undoManager.\n-                UndoableKeyChange undoableKeyChange = new UndoableKeyChange(panel.database, entry.getId(), oldValue, newValue);\n-                if (Util.updateTimeStampIsSet()) {\n-                    NamedCompound ce = Util.doUpdateTimeStamp(entry, undoableKeyChange);\n-                    panel.undoManager.addEdit(ce);\n-                } else {\n-                    panel.undoManager.addEdit(undoableKeyChange);\n-                }\n-\n-                fe.setValidBackgroundColor();\n-\n-                if (fe.getTextComponent().hasFocus()) {\n-                    fe.setActiveBackgroundColor();\n-                }\n-                updateSource();\n-                panel.markBaseChanged();\n-            }\n-            else if (e.getSource() instanceof FieldEditor) {\n-                String toSet = null;\n-                FieldEditor fe = (FieldEditor) e.getSource();\n-                boolean set;\n-                // Trim the whitespace off this value\n-                String currentText = fe.getText();\n-                String trim = currentText.trim();\n-                if (!trim.isEmpty()) {\n-                    toSet = trim;\n-                }\n-\n-                // We check if the field has changed, since we don't want to\n-                // mark the base as changed unless we have a real change.\n-                if (toSet == null) {\n-                    set = entry.getField(fe.getFieldName()) != null;\n-                } else {\n-                    set = !((entry.getField(fe.getFieldName()) != null)\n-                            && toSet.equals(entry.getField(fe.getFieldName())));\n-                }\n-\n-                if (set) {\n-                    try {\n-                        // The following statement attempts to write the\n-                        // new contents into a StringWriter, and this will\n-                        // cause an IOException if the field is not\n-                        // properly formatted. If that happens, the field\n-                        // is not stored and the textarea turns red.\n-                        if (toSet != null) {\n-                            (new LatexFieldFormatter()).format(toSet, fe.getFieldName());\n-                        }\n-\n-                        String oldValue = entry.getField(fe.getFieldName());\n-\n-                        if (toSet != null) {\n-                            entry.setField(fe.getFieldName(), toSet);\n-                        } else {\n-                            entry.clearField(fe.getFieldName());\n-                        }\n-\n-                        fe.setValidBackgroundColor();\n-\n-                        // See if we need to update an AutoCompleter instance:\n-                        AutoCompleter aComp = panel.getAutoCompleters().get(fe.getFieldName());\n-                        if (aComp != null) {\n-                            aComp.addBibtexEntry(entry);\n-                        }\n-\n-                        // Add an UndoableFieldChange to the baseframe's undoManager.\n-                        UndoableFieldChange undoableFieldChange = new UndoableFieldChange(entry, fe.getFieldName(), oldValue, toSet);\n-                        if (Util.updateTimeStampIsSet()) {\n-                            NamedCompound ce = Util.doUpdateTimeStamp(entry, undoableFieldChange);\n-                            panel.undoManager.addEdit(ce);\n-                        } else {\n-                            panel.undoManager.addEdit(undoableFieldChange);\n-                        }\n-                        updateSource();\n-                        panel.markBaseChanged();\n-                    } catch (IllegalArgumentException ex) {\n-                        JOptionPane.showMessageDialog(frame, Globals.lang(\"Error\") + \": \" + ex.getMessage(),\n-                                Globals.lang(\"Error setting field\"), JOptionPane.ERROR_MESSAGE);\n-                        fe.setInvalidBackgroundColor();\n-                    }\n-                } else {\n-                    // set == false\n-                    // We set the field and label color.\n-                    fe.setValidBackgroundColor();\n-                }\n-                if (fe.getTextComponent().hasFocus()) {\n-                    fe.setBackground(GUIGlobals.activeEditor);\n-                }\n-            } else if ((source.isEditable())\n-                    && (!source.getText().equals(lastSourceStringAccepted))) {\n-                boolean accepted = storeSource(true);\n-\n-                if (accepted) {\n-                }\n-            }\n-            ////////////////////////////////////\n-            // Make sure we scroll to the entry if it moved in the table.\n-            // Should only be done if this editor is currently showing:\n-            //System.out.println(getType().getName()+\": movingAway=\"+movingAway+\", isShowing=\"+isShowing());\n-            if (!movingAway && isShowing()) {\n-                SwingUtilities.invokeLater(new Runnable() {\n-\n-                    @Override\n-                    public void run() {\n-                        final int row = panel.mainTable.findEntry(entry);\n-                        if (row >= 0) {\n-                            //if (panel.mainTable.getSelectedRowCount() == 0)\n-                            //    panel.mainTable.setRowSelectionInterval(row, row);\n-                            //scrollTo(row);\n-                            panel.mainTable.ensureVisible(row);\n-                        }\n-                    }\n-                });\n-            }\n-        }\n-    }\n-\n-    class SwitchLeftAction extends AbstractAction {\n-\n-        public SwitchLeftAction() {\n-            super(\"Switch to the panel to the left\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            // System.out.println(\"switch left\");\n-            int i = tabbed.getSelectedIndex();\n-            tabbed.setSelectedIndex(((i > 0) ? (i - 1) : (tabbed.getTabCount() - 1)));\n-\n-            activateVisible();\n-        }\n-    }\n-\n-    class SwitchRightAction extends AbstractAction {\n-\n-        public SwitchRightAction() {\n-            super(\"Switch to the panel to the right\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            // System.out.println(\"switch right\");\n-            int i = tabbed.getSelectedIndex();\n-            tabbed.setSelectedIndex((i < (tabbed.getTabCount() - 1)) ? (i + 1) : 0);\n-            activateVisible();\n-\n-        }\n-    }\n-\n-    class NextEntryAction extends AbstractAction {\n-\n-        public NextEntryAction() {\n-            super(Globals.lang(\"Next entry\"), GUIGlobals.getImage(\"down\"));\n-\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Next entry\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-\n-            int thisRow = panel.mainTable.findEntry(entry);\n-            int newRow;\n-\n-            if ((thisRow + 1) < panel.database.getEntryCount()) {\n-                newRow = thisRow + 1;\n-            } else if (thisRow > 0) {\n-                newRow = 0;\n-            }\n-            else {\n-                return; // newRow is still -1, so we can assume the database has\n-                        // only one entry.\n-            }\n-\n-            scrollTo(newRow);\n-            panel.mainTable.setRowSelectionInterval(newRow, newRow);\n-\n-        }\n-    }\n-\n-    class PrevEntryAction extends AbstractAction {\n-\n-        public PrevEntryAction() {\n-            super(Globals.lang(\"Previous entry\"), GUIGlobals.getImage(\"up\"));\n-\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Previous entry\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            int thisRow = panel.mainTable.findEntry(entry);\n-            int newRow;\n-\n-            if ((thisRow - 1) >= 0) {\n-                newRow = thisRow - 1;\n-            } else if (thisRow != (panel.database.getEntryCount() - 1)) {\n-                newRow = panel.database.getEntryCount() - 1;\n-            }\n-            else {\n-                return; // newRow is still -1, so we can assume the database has\n-                        // only one entry.\n-            // id = panel.tableModel.getIdForRow(newRow);\n-            // switchTo(id);\n-            }\n-\n-            scrollTo(newRow);\n-            panel.mainTable.setRowSelectionInterval(newRow, newRow);\n-\n-        }\n-    }\n-\n-    class GenerateKeyAction extends AbstractAction {\n-\n-        final JabRefFrame parent;\n-\n-        BibtexEntry selectedEntry;\n-\n-\n-        public GenerateKeyAction(JabRefFrame parentFrame) {\n-            super(Globals.lang(\"Generate BibTeX key\"), GUIGlobals.getImage(\"makeKey\"));\n-            parent = parentFrame;\n-\n-            // selectedEntry = newEntry ;\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Generate BibTeX key\"));\n-\n-            // putValue(MNEMONIC_KEY, GUIGlobals.showGenKeyCode);\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            // 1. get Bitexentry for selected index (already have)\n-            // 2. update label\n-            try {\n-                // Store the current edit in case this action is called during the\n-                // editing of a field:\n-                storeCurrentEdit();\n-\n-                // this updates the table automatically, on close, but not\n-                // within the tab\n-                Object oldValue = entry.getField(BibtexFields.KEY_FIELD);\n-\n-                if (oldValue != null) {\n-                    if (Globals.prefs.getBoolean(\"avoidOverwritingKey\")) {\n-                        panel.output(Globals.lang(\"Not overwriting existing key. To change this setting, open Options -> Prefererences -> BibTeX key generator\"));\n-                        return;\n-                    }\n-                    else if (Globals.prefs.getBoolean(\"warnBeforeOverwritingKey\")) {\n-                        CheckBoxMessage cbm = new CheckBoxMessage(Globals.lang(\"The current BibTeX key will be overwritten. Continue?\"),\n-                                Globals.lang(\"Disable this confirmation dialog\"), false);\n-                        int answer = JOptionPane.showConfirmDialog(frame, cbm, Globals.lang(\"Overwrite key\"),\n-                                JOptionPane.YES_NO_OPTION);\n-                        if (cbm.isSelected()) {\n-                            Globals.prefs.putBoolean(\"warnBeforeOverwritingKey\", false);\n-                        }\n-                        if (answer == JOptionPane.NO_OPTION) {\n-                            // Ok, break off the operation.\n-                            return;\n-                        }\n-                    }\n-                }\n-\n-                // entry = frame.labelMaker.applyRule(entry, panel.database) ;\n-                LabelPatternUtil.makeLabel(panel.metaData, panel.database, entry);\n-\n-                // Store undo information:\n-                panel.undoManager.addEdit(new UndoableKeyChange(panel.database, entry.getId(),\n-                        (String) oldValue, entry.getField(BibtexFields.KEY_FIELD)));\n-\n-                // here we update the field\n-                String bibtexKeyData = entry.getField(BibtexFields.KEY_FIELD);\n-\n-                // set the field named for \"bibtexkey\"\n-                setField(BibtexFields.KEY_FIELD, bibtexKeyData);\n-                updateSource();\n-                panel.markBaseChanged();\n-            } catch (Throwable t) {\n-                System.err.println(\"error setting key: \" + t);\n-            }\n-        }\n-    }\n-\n-    class UndoAction extends AbstractAction {\n-\n-        public UndoAction() {\n-            super(\"Undo\", GUIGlobals.getImage(\"undo\"));\n-            putValue(Action.SHORT_DESCRIPTION, \"Undo\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            try {\n-                panel.runCommand(\"undo\");\n-            } catch (Throwable ignored) {\n-            }\n-        }\n-    }\n-\n-    class RedoAction extends AbstractAction {\n-\n-        public RedoAction() {\n-            super(\"Undo\", GUIGlobals.getImage(\"redo\"));\n-            putValue(Action.SHORT_DESCRIPTION, \"Redo\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            try {\n-                panel.runCommand(\"redo\");\n-            } catch (Throwable ignored) {\n-            }\n-        }\n-    }\n-\n-    class SaveDatabaseAction extends AbstractAction {\n-\n-        public SaveDatabaseAction() {\n-            super(\"Save database\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            Object activeTab = tabs.get(tabbed.getSelectedIndex());\n-            if (activeTab instanceof EntryEditorTab) {\n-                // Normal panel.\n-                EntryEditorTab fp = (EntryEditorTab) activeTab;\n-                FieldEditor fe = fp.getActive();\n-                fe.clearAutoCompleteSuggestion();\n-                updateField(fe);\n-            } else {\n-                // Source panel.\n-                updateField(activeTab);\n-            }\n-\n-            try {\n-                panel.runCommand(\"save\");\n-            } catch (Throwable ignored) {\n-            }\n-        }\n-    }\n-\n-    private class ExternalViewerListener extends MouseAdapter {\n-\n-        @Override\n-        public void mouseClicked(MouseEvent evt) {\n-            if (evt.getClickCount() == 2) {\n-                FieldTextArea tf = (FieldTextArea) evt.getSource();\n-\n-                if (tf.getText().isEmpty()) {\n-                    return;\n-                }\n-\n-                tf.selectAll();\n-\n-                String link = tf.getText(); // get selected ? String\n-\n-                // getSelectedText()\n-                try {\n-                    Util.openExternalViewer(panel.metaData(), link, tf.getFieldName());\n-                } catch (IOException ex) {\n-                    System.err.println(\"Error opening file.\");\n-                }\n-            }\n-        }\n-    }\n-\n-    class ChangeTypeAction extends AbstractAction {\n-\n-        final BibtexEntryType type;\n-\n-        final BasePanel panel;\n-\n-\n-        public ChangeTypeAction(BibtexEntryType type, BasePanel bp) {\n-            super(type.getName());\n-            this.type = type;\n-            panel = bp;\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent evt) {\n-            panel.changeType(entry, type);\n-        }\n-    }\n-\n-\n-    private void warnDuplicateBibtexkey() {\n-        panel.output(Globals.lang(\"Duplicate BibTeX key. Grouping may not work for this entry.\"));\n-\n-        /*if (prefs.getBoolean(\"dialogWarningForDuplicateKey\")) {\n-            // JZTODO lyrics\n-            CheckBoxMessage jcb = new CheckBoxMessage(Globals.lang(\"Warning\") + \": \"\n-                + Globals.lang(\"Duplicate BibTeX key. Grouping may not work for this entry.\"),\n-                Globals.lang(\"Disable this warning dialog\"), false);\n-            JOptionPane.showMessageDialog(frame, jcb, Globals.lang(\"Warning\"),\n-                JOptionPane.WARNING_MESSAGE);\n-\n-            if (jcb.isSelected())\n-                prefs.putBoolean(\"dialogWarningForDuplicateKey\", false);\n-        }*/\n-    }\n-\n-    private void warnEmptyBibtexkey() {\n-        // JZTODO lyrics\n-        panel.output(Globals.lang(\"Empty BibTeX key. Grouping may not work for this entry.\"));\n-\n-        /*if (prefs.getBoolean(\"dialogWarningForEmptyKey\")) {\n-            // JZTODO lyrics\n-            CheckBoxMessage jcb = new CheckBoxMessage(Globals.lang(\"Warning\") + \": \"\n-                + Globals.lang(\"Empty BibTeX key. Grouping may not work for this entry.\"), Globals\n-                .lang(\"Disable this warning dialog\"), false);\n-            JOptionPane.showMessageDialog(frame, jcb, Globals.lang(\"Warning\"),\n-                JOptionPane.WARNING_MESSAGE);\n-\n-            if (jcb.isSelected())\n-                prefs.putBoolean(\"dialogWarningForEmptyKey\", false);\n-        }*/\n-    }\n-\n-\n-    private class AutoLinkAction extends AbstractAction {\n-\n-        public AutoLinkAction() {\n-            putValue(Action.SMALL_ICON, GUIGlobals.getImage(\"autoGroup\"));\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"Automatically set file links for this entry\") + \" (Alt-F)\");\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent event) {\n-            FileListEditor fileListEditor = EntryEditor.this.fileListEditor;\n-            if (fileListEditor == null) {\n-                logger.log(Level.WARNING, \"No file list editor found.\");\n-            } else {\n-                fileListEditor.autoSetLinks();\n-            }\n-        }\n-    }\n-\n-}, @@ -1,302 +0,0 @@\n-/*  Copyright (C) 2003-2013 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.BorderLayout;\n-import java.awt.Insets;\n-\n-import javax.swing.*;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n-\n-import net.sf.jabref.autocompleter.AutoCompleterFactory;\n-import org.xnap.commons.gui.shortcut.EmacsKeyBindings;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.CellConstraints;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n-public class EntryEditorPrefsTab extends JPanel implements PrefsTab {\n-\n-    private final JCheckBox autoOpenForm;\n-    private final JCheckBox showSource;\n-    private final JCheckBox defSource;\n-    private final JCheckBox emacsMode;\n-    private final JCheckBox emacsRebindCtrlA;\n-    private final JCheckBox disableOnMultiple;\n-    private final JCheckBox autoComplete;\n-    private final JRadioButton autoCompBoth;\n-    private final JRadioButton autoCompFF;\n-    private final JRadioButton autoCompLF;\n-    private final JRadioButton autoCompFirstNameMode_Full;\n-    private final JRadioButton autoCompFirstNameMode_Abbr;\n-    private final JRadioButton autoCompFirstNameMode_Both;\n-    private boolean oldAutoCompFF;\n-    private boolean oldAutoCompLF;\n-    private boolean oldAutoCompFModeAbbr;\n-    private boolean oldAutoCompFModeFull;\n-    private final JSpinner shortestToComplete;\n-\n-    private final JTextField autoCompFields;\n-    private final JabRefPreferences _prefs;\n-    private final JabRefFrame _frame;\n-\n-\n-    private void setAutoCompleteElementsEnabled(boolean enabled) {\n-        autoCompFields.setEnabled(enabled);\n-        autoCompLF.setEnabled(enabled);\n-        autoCompFF.setEnabled(enabled);\n-        autoCompBoth.setEnabled(enabled);\n-        autoCompFirstNameMode_Abbr.setEnabled(enabled);\n-        autoCompFirstNameMode_Full.setEnabled(enabled);\n-        autoCompFirstNameMode_Both.setEnabled(enabled);\n-        shortestToComplete.setEnabled(enabled);\n-    }\n-\n-    public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n-        _prefs = prefs;\n-        _frame = frame;\n-        setLayout(new BorderLayout());\n-\n-        autoOpenForm = new JCheckBox(Globals.lang(\"Open editor when a new entry is created\"));\n-        defSource = new JCheckBox(Globals.lang(\"Show BibTeX source by default\"));\n-        showSource = new JCheckBox(Globals.lang(\"Show BibTeX source panel\"));\n-        emacsMode = new JCheckBox(Globals.lang(\"Use Emacs key bindings\"));\n-        emacsRebindCtrlA = new JCheckBox(Globals.lang(\"Rebind C-a, too\"));\n-        disableOnMultiple = new JCheckBox(Globals.lang(\"Disable entry editor when multiple entries are selected\"));\n-        autoComplete = new JCheckBox(Globals.lang(\"Enable word/name autocompletion\"));\n-\n-        shortestToComplete = new JSpinner(new SpinnerNumberModel(prefs.getInt(JabRefPreferences.SHORTEST_TO_COMPLETE), 1, 5, 1));\n-\n-        // allowed name formats\n-        autoCompFF = new JRadioButton(Globals.lang(\"Autocomplete names in 'Firstname Lastname' format only\"));\n-        autoCompLF = new JRadioButton(Globals.lang(\"Autocomplete names in 'Lastname, Firstname' format only\"));\n-        autoCompBoth = new JRadioButton(Globals.lang(\"Autocomplete names in both formats\"));\n-        ButtonGroup bg = new ButtonGroup();\n-        bg.add(autoCompLF);\n-        bg.add(autoCompFF);\n-        bg.add(autoCompBoth);\n-\n-        // treatment of first name\n-        autoCompFirstNameMode_Full = new JRadioButton(Globals.lang(\"Use full firstname whenever possible\"));\n-        autoCompFirstNameMode_Abbr = new JRadioButton(Globals.lang(\"Use abbreviated firstname whenever possible\"));\n-        autoCompFirstNameMode_Both = new JRadioButton(Globals.lang(\"Use abbreviated and full firstname\"));\n-        ButtonGroup bg_firstNameMode = new ButtonGroup();\n-        bg_firstNameMode.add(autoCompFirstNameMode_Full);\n-        bg_firstNameMode.add(autoCompFirstNameMode_Abbr);\n-        bg_firstNameMode.add(autoCompFirstNameMode_Both);\n-\n-        Insets marg = new Insets(0, 20, 3, 0);\n-        defSource.setMargin(marg);\n-        // We need a listener on showSource to enable and disable the source panel-related choices:\n-        showSource.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                defSource.setEnabled(showSource.isSelected());\n-            }\n-        }\n-                );\n-\n-        emacsRebindCtrlA.setMargin(marg);\n-        // We need a listener on showSource to enable and disable the source panel-related choices:\n-        emacsMode.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n-            }\n-        }\n-                );\n-\n-        autoCompFields = new JTextField(40);\n-        // We need a listener on autoComplete to enable and disable the\n-        // autoCompFields text field:\n-        autoComplete.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                setAutoCompleteElementsEnabled(autoComplete.isSelected());\n-            }\n-        }\n-                );\n-\n-        FormLayout layout = new FormLayout\n-                (// columns\n-                \"8dlu, left:pref, 8dlu, fill:150dlu, 4dlu, fill:pref\", // 4dlu, left:pref, 4dlu\",\n-                // rows  1 to 10\n-                        \"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, \" +\n-                                // rows 11 to 20\n-                                \"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, \" +\n-                                // rows 21 to 29\n-                                \"pref, pref, pref, pref, 6dlu, pref, pref, pref, pref\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-        CellConstraints cc = new CellConstraints();\n-        builder.addSeparator(Globals.lang(\"Editor options\"), cc.xyw(1, 1, 5));\n-        builder.add(autoOpenForm, cc.xy(2, 3));\n-        builder.add(disableOnMultiple, cc.xy(2, 5));\n-        builder.add(showSource, cc.xy(2, 7));\n-        builder.add(defSource, cc.xy(2, 9));\n-        builder.add(emacsMode, cc.xy(2, 11));\n-        builder.add(emacsRebindCtrlA, cc.xy(2, 13));\n-\n-        builder.addSeparator(Globals.lang(\"Autocompletion options\"), cc.xyw(1, 15, 5));\n-        builder.add(autoComplete, cc.xy(2, 17));\n-\n-        DefaultFormBuilder builder3 = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, fill:150dlu\", \"\"));\n-        JLabel label = new JLabel(Globals.lang(\"Use autocompletion for the following fields\") + \":\");\n-        builder3.append(label);\n-        builder3.append(autoCompFields);\n-        JLabel label2 = new JLabel(Globals.lang(\"Autocomplete after following number of characters\") + \":\");\n-        builder3.append(label2);\n-        builder3.append(shortestToComplete);\n-        builder.add(builder3.getPanel(), cc.xyw(2, 19, 3));\n-\n-        builder.addSeparator(Globals.lang(\"Name format used for autocompletion\"), cc.xyw(2, 21, 4));\n-        builder.add(autoCompFF, cc.xy(2, 22));\n-        builder.add(autoCompLF, cc.xy(2, 23));\n-        builder.add(autoCompBoth, cc.xy(2, 24));\n-\n-        builder.addSeparator(Globals.lang(\"Treatment of first names\"), cc.xyw(2, 26, 4));\n-        builder.add(autoCompFirstNameMode_Abbr, cc.xy(2, 27));\n-        builder.add(autoCompFirstNameMode_Full, cc.xy(2, 28));\n-        builder.add(autoCompFirstNameMode_Both, cc.xy(2, 29));\n-\n-        JPanel pan = builder.getPanel();\n-        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        add(pan, BorderLayout.CENTER);\n-    }\n-\n-    @Override\n-    public void setValues() {\n-        autoOpenForm.setSelected(_prefs.getBoolean(\"autoOpenForm\"));\n-        defSource.setSelected(_prefs.getBoolean(\"defaultShowSource\"));\n-        showSource.setSelected(_prefs.getBoolean(\"showSource\"));\n-        emacsMode.setSelected(_prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS));\n-        emacsRebindCtrlA.setSelected(_prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA));\n-        disableOnMultiple.setSelected(_prefs.getBoolean(\"disableOnMultipleSelection\"));\n-        autoComplete.setSelected(_prefs.getBoolean(\"autoComplete\"));\n-        autoCompFields.setText(_prefs.get(\"autoCompleteFields\"));\n-        shortestToComplete.setValue(_prefs.getInt(JabRefPreferences.SHORTEST_TO_COMPLETE));\n-\n-        if (_prefs.getBoolean(\"autoCompFF\")) {\n-            autoCompFF.setSelected(true);\n-        } else if (_prefs.getBoolean(\"autoCompLF\")) {\n-            autoCompLF.setSelected(true);\n-        } else {\n-            autoCompBoth.setSelected(true);\n-        }\n-        oldAutoCompFF = autoCompFF.isSelected();\n-        oldAutoCompLF = autoCompLF.isSelected();\n-\n-        if (_prefs.get(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE).equals(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR)) {\n-            autoCompFirstNameMode_Abbr.setSelected(true);\n-        } else if (_prefs.get(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE).equals(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL)) {\n-            autoCompFirstNameMode_Full.setSelected(true);\n-        } else {\n-            autoCompFirstNameMode_Both.setSelected(true);\n-        }\n-        // one field less than the option is enough. If one filed changes, another one also changes.\n-        oldAutoCompFModeAbbr = autoCompFirstNameMode_Abbr.isSelected();\n-        oldAutoCompFModeFull = autoCompFirstNameMode_Full.isSelected();\n-\n-        // This choice only makes sense when the source panel is visible:\n-        defSource.setEnabled(showSource.isSelected());\n-        // similar for emacs CTRL-a and emacs mode\n-        emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n-        // Autocomplete fields is only enabled when autocompletion is selected\n-        setAutoCompleteElementsEnabled(autoComplete.isSelected());\n-    }\n-\n-    @Override\n-    public void storeSettings() {\n-        _prefs.putBoolean(\"autoOpenForm\", autoOpenForm.isSelected());\n-        _prefs.putBoolean(\"defaultShowSource\", defSource.isSelected());\n-        boolean emacsModeChanged = (_prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS) != emacsMode.isSelected());\n-        boolean emacsRebindCtrlAChanged = (_prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA) != emacsRebindCtrlA.isSelected());\n-        if (emacsModeChanged || emacsRebindCtrlAChanged) {\n-            _prefs.putBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS, emacsMode.isSelected());\n-            _prefs.putBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA, emacsRebindCtrlA.isSelected());\n-            // immediately apply the change\n-            if (emacsModeChanged) {\n-                if (emacsMode.isSelected()) {\n-                    EmacsKeyBindings.load();\n-                } else {\n-                    EmacsKeyBindings.unload();\n-                }\n-            } else {\n-                // only rebinding of CTRL+a changed\n-                assert (emacsMode.isSelected());\n-                // we simply reload the emacs mode to activate the CTRL+a change\n-                EmacsKeyBindings.unload();\n-                EmacsKeyBindings.load();\n-            }\n-        }\n-        _prefs.putBoolean(\"disableOnMultipleSelection\", disableOnMultiple.isSelected());\n-        // We want to know if the following settings have been modified:\n-        boolean oldAutoComplete = _prefs.getBoolean(\"autoComplete\");\n-        boolean oldShowSource = _prefs.getBoolean(\"showSource\");\n-        String oldAutoCompFields = _prefs.get(\"autoCompleteFields\");\n-        _prefs.putInt(JabRefPreferences.SHORTEST_TO_COMPLETE, (Integer) shortestToComplete.getValue());\n-        _prefs.putBoolean(\"autoComplete\", autoComplete.isSelected());\n-        _prefs.put(\"autoCompleteFields\", autoCompFields.getText());\n-        _prefs.putBoolean(\"showSource\", showSource.isSelected());\n-        if (autoCompBoth.isSelected()) {\n-            _prefs.putBoolean(\"autoCompFF\", false);\n-            _prefs.putBoolean(\"autoCompLF\", false);\n-        }\n-        else if (autoCompFF.isSelected()) {\n-            _prefs.putBoolean(\"autoCompFF\", true);\n-            _prefs.putBoolean(\"autoCompLF\", false);\n-        }\n-        else {\n-            _prefs.putBoolean(\"autoCompFF\", false);\n-            _prefs.putBoolean(\"autoCompLF\", true);\n-        }\n-        if (autoCompFirstNameMode_Abbr.isSelected()) {\n-            _prefs.put(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE, JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR);\n-        } else if (autoCompFirstNameMode_Full.isSelected()) {\n-            _prefs.put(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE, JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL);\n-        } else {\n-            _prefs.put(JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE, JabRefPreferences.AUTOCOMPLETE_FIRSTNAME_MODE_BOTH);\n-        }\n-\n-        // We need to remove all entry editors from cache if the source panel setting\n-        // or the autocompletion settings have been changed:\n-        if ((oldShowSource != showSource.isSelected()) || (oldAutoComplete != autoComplete.isSelected())\n-                || (!oldAutoCompFields.equals(autoCompFields.getText())) ||\n-                (oldAutoCompFF != autoCompFF.isSelected()) || (oldAutoCompLF != autoCompLF.isSelected()) ||\n-                (oldAutoCompFModeAbbr != autoCompFirstNameMode_Abbr.isSelected()) ||\n-                (oldAutoCompFModeFull != autoCompFirstNameMode_Full.isSelected())) {\n-            for (int j = 0; j < _frame.getTabbedPane().getTabCount(); j++) {\n-                BasePanel bp = (BasePanel) _frame.getTabbedPane().getComponentAt(j);\n-                bp.entryEditors.clear();\n-            }\n-        }\n-        // the autocompleter has to be updated to the new min length to complete \n-        AutoCompleterFactory.SHORTEST_TO_COMPLETE = (Integer) shortestToComplete.getValue();\n-    }\n-\n-    @Override\n-    public boolean readyToClose() {\n-        return true;\n-    }\n-\n-    @Override\n-    public String getTabName() {\n-        return Globals.lang(\"Entry editor\");\n-    }\n-}, @@ -1,395 +0,0 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.AWTKeyStroke;\n-import java.awt.BorderLayout;\n-import java.awt.Component;\n-import java.awt.Dimension;\n-import java.awt.KeyboardFocusManager;\n-import java.awt.event.FocusListener;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-\n-import javax.swing.*;\n-\n-import net.sf.jabref.autocompleter.AutoCompleter;\n-import net.sf.jabref.gui.AutoCompleteListener;\n-import net.sf.jabref.gui.FileListEditor;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n-/**\n- * A single tab displayed in the EntryEditor holding several FieldEditors.\n- */\n-class EntryEditorTab {\n-\n-    private final JPanel panel = new JPanel();\n-\n-    private final JScrollPane scrollPane = new JScrollPane(panel,\n-            ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n-\n-    private final String[] fields;\n-\n-    private final EntryEditor parent;\n-\n-    private final HashMap<String, FieldEditor> editors = new HashMap<String, FieldEditor>();\n-\n-    private FieldEditor activeField = null;\n-\n-    // UGLY HACK to have a pointer to the fileListEditor to call autoSetLinks()\n-    public FileListEditor fileListEditor = null;\n-\n-\n-    public EntryEditorTab(JabRefFrame frame, BasePanel panel, List<String> fields, EntryEditor parent,\n-            boolean addKeyField, boolean compressed, String name) {\n-        if (fields != null) {\n-            this.fields = fields.toArray(new String[fields.size()]);\n-        } else {\n-            this.fields = new String[] {};\n-        }\n-\n-        this.parent = parent;\n-\n-        setupPanel(frame, panel, addKeyField, compressed, name);\n-\n-        /*\n-         * The following line makes sure focus cycles inside tab instead of\n-         * being lost to other parts of the frame:\n-         */\n-        scrollPane.setFocusCycleRoot(true);\n-    }\n-\n-    private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField,\n-                            boolean compressed, String title) {\n-\n-        InputMap im = panel.getInputMap(JComponent.WHEN_FOCUSED);\n-        ActionMap am = panel.getActionMap();\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n-        am.put(\"prev\", parent.prevEntryAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n-        am.put(\"next\", parent.nextEntryAction);\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", parent.storeFieldAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n-        am.put(\"left\", parent.switchLeftAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n-        am.put(\"right\", parent.switchRightAction);\n-        im.put(Globals.prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", parent.helpAction);\n-        im.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n-        am.put(\"save\", parent.saveDatabaseAction);\n-        im.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n-        am.put(\"nexttab\", parent.frame.nextTab);\n-        im.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n-        am.put(\"prevtab\", parent.frame.prevTab);\n-\n-        panel.setName(title);\n-\n-        int fieldsPerRow = compressed ? 2 : 1;\n-        //String rowSpec = \"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\";\n-        String colSpec = compressed ? \"fill:pref, 1dlu, fill:10dlu:grow, 1dlu, fill:pref, \"\n-                + \"8dlu, fill:pref, 1dlu, fill:10dlu:grow, 1dlu, fill:pref\"\n-                : \"fill:pref, 1dlu, fill:pref:grow, 1dlu, fill:pref\";\n-        StringBuilder sb = new StringBuilder();\n-        int rows = (int) Math.ceil((double) fields.length / fieldsPerRow);\n-        for (int i = 0; i < rows; i++) {\n-            sb.append(\"fill:pref:grow, \");\n-        }\n-        if (addKeyField) {\n-            sb.append(\"4dlu, fill:pref\");\n-        } else if (sb.length() >= 2) {\n-            sb.delete(sb.length() - 2, sb.length());\n-        }\n-        String rowSpec = sb.toString();\n-\n-        DefaultFormBuilder builder = new DefaultFormBuilder\n-                (new FormLayout(colSpec, rowSpec), panel);\n-\n-        for (int i = 0; i < fields.length; i++) {\n-            // Create the text area:\n-            int editorType = BibtexFields.getEditorType(fields[i]);\n-\n-            final FieldEditor ta;\n-            int defaultHeight;\n-            int wHeight = (int) (50.0 * BibtexFields.getFieldWeight(fields[i]));\n-            if (editorType == GUIGlobals.FILE_LIST_EDITOR) {\n-                ta = new FileListEditor(frame, bPanel.metaData(), fields[i], null, parent);\n-                fileListEditor = (FileListEditor) ta;\n-                defaultHeight = 0;\n-            }\n-            else {\n-                ta = new FieldTextArea(fields[i], null);\n-                frame.getSearchManager().addSearchListener((FieldTextArea) ta);\n-                defaultHeight = ta.getPane().getPreferredSize().height;\n-            }\n-            //ta.addUndoableEditListener(bPanel.undoListener);\n-\n-            JComponent ex = parent.getExtra(fields[i], ta);\n-\n-            // Add autocompleter listener, if required for this field:\n-            AutoCompleter autoComp = bPanel.getAutoCompleters().get(fields[i]);\n-            AutoCompleteListener acl = null;\n-            if (autoComp != null) {\n-                acl = new AutoCompleteListener(autoComp);\n-            }\n-            setupJTextComponent(ta.getTextComponent(), acl);\n-            ta.setAutoCompleteListener(acl);\n-\n-            // Store the editor for later reference:\n-            editors.put(fields[i], ta);\n-            if (i == 0) {\n-                activeField = ta;\n-            }\n-            //System.out.println(fields[i]+\": \"+BibtexFields.getFieldWeight(fields[i]));\n-            if (!compressed) {\n-                ta.getPane().setPreferredSize(new Dimension(100, Math.max(defaultHeight, wHeight)));\n-            }\n-            builder.append(ta.getLabel());\n-            if (ex == null) {\n-                builder.append(ta.getPane(), 3);\n-            } else {\n-                builder.append(ta.getPane());\n-                JPanel pan = new JPanel();\n-                pan.setLayout(new BorderLayout());\n-                pan.add(ex, BorderLayout.NORTH);\n-                builder.append(pan);\n-            }\n-            if (((i + 1) % fieldsPerRow) == 0) {\n-                builder.nextLine();\n-            }\n-        }\n-\n-        // Add the edit field for Bibtex-key.\n-        if (addKeyField) {\n-            final FieldTextField tf = new FieldTextField(BibtexFields.KEY_FIELD, parent\n-                    .getEntry().getField(BibtexFields.KEY_FIELD), true);\n-            //tf.addUndoableEditListener(bPanel.undoListener);\n-            setupJTextComponent(tf, null);\n-\n-            editors.put(\"bibtexkey\", tf);\n-            /*\n-             * If the key field is the only field, we should have only one\n-             * editor, and this one should be set as active initially:\n-             */\n-            if (editors.size() == 1) {\n-                activeField = tf;\n-            }\n-            builder.nextLine();\n-            builder.append(tf.getLabel());\n-            builder.append(tf, 3);\n-        }\n-    }\n-\n-\n-    private BibtexEntry entry;\n-\n-\n-    private BibtexEntry getEntry() {\n-        return entry;\n-    }\n-\n-    private boolean isFieldModified(FieldEditor f) {\n-        String text = f.getText().trim();\n-\n-        if (text.isEmpty()) {\n-            return getEntry().getField(f.getFieldName()) != null;\n-        } else {\n-            Object entryValue = getEntry().getField(f.getFieldName());\n-            return (entryValue == null) || !entryValue.toString().equals(text);\n-        }\n-    }\n-\n-    public void markIfModified(FieldEditor f) {\n-        // Only mark as changed if not already is and the field was indeed\n-        // modified\n-        if (!updating && !parent.panel.isBaseChanged() && isFieldModified(f)) {\n-            markBaseChanged();\n-        }\n-    }\n-\n-    private void markBaseChanged() {\n-        parent.panel.markBaseChanged();\n-    }\n-\n-    /**\n-     * Only sets the activeField variable but does not focus it.\n-     * \n-     * Call activate afterwards.\n-     * \n-     * @param c\n-     */\n-    public void setActive(FieldEditor c) {\n-        activeField = c;\n-    }\n-\n-    public FieldEditor getActive() {\n-        return activeField;\n-    }\n-\n-    public List<String> getFields() {\n-        return java.util.Arrays.asList(fields);\n-    }\n-\n-    public void activate() {\n-        if (activeField != null) {\n-            /**\n-             * Corrected to fix [ 1594169 ] Entry editor: navigation between panels\n-             */\n-            new FocusRequester(activeField.getTextComponent());\n-        }\n-    }\n-\n-    /**\n-     * Reset all fields from the data in the BibtexEntry.\n-     * \n-     */\n-    public void updateAll() {\n-        setEntry(getEntry());\n-    }\n-\n-\n-    private boolean updating = false;\n-\n-\n-    public void setEntry(BibtexEntry entry) {\n-        try {\n-            updating = true;\n-            for (FieldEditor editor : editors.values()) {\n-                Object content = entry.getField(editor.getFieldName());\n-                String toSet = (content == null) ? \"\" : content.toString();\n-                if (!toSet.equals(editor.getText())) {\n-                    editor.setText(toSet);\n-                }\n-            }\n-            this.entry = entry;\n-        } finally {\n-            updating = false;\n-        }\n-    }\n-\n-    public boolean updateField(String field, String content) {\n-        if (!editors.containsKey(field)) {\n-            return false;\n-        }\n-        FieldEditor ed = editors.get(field);\n-        ed.setText(content);\n-        return true;\n-    }\n-\n-    public void validateAllFields() {\n-        for (Map.Entry<String, FieldEditor> stringFieldEditorEntry : editors.entrySet()) {\n-            FieldEditor ed = stringFieldEditorEntry.getValue();\n-            ed.updateFontColor();\n-            ed.setEnabled(true);\n-            if (((Component) ed).hasFocus()) {\n-                ed.setActiveBackgroundColor();\n-            } else {\n-                ed.setValidBackgroundColor();\n-            }\n-        }\n-    }\n-\n-    public void setEnabled(boolean enabled) {\n-        for (FieldEditor editor : editors.values()) {\n-            editor.setEnabled(enabled);\n-        }\n-    }\n-\n-    public Component getPane() {\n-        return scrollPane;\n-    }\n-\n-    public EntryEditor getParent() {\n-        return parent;\n-    }\n-\n-    /**\n-     * Set up key bindings and focus listener for the FieldEditor.\n-     * \n-     * @param component\n-     */\n-    private void setupJTextComponent(final JComponent component, final AutoCompleteListener acl) {\n-\n-        // Here we add focus listeners to the component. The funny code is because we need\n-        // to guarantee that the AutoCompleteListener - if used - is called before fieldListener\n-        // on a focus lost event. The AutoCompleteListener is responsible for removing any\n-        // current suggestion when focus is lost, and this must be done before fieldListener\n-        // stores the current edit. Swing doesn't guarantee the order of execution of event\n-        // listeners, so we handle this by only adding the AutoCompleteListener and telling\n-        // it to call fieldListener afterwards. If no AutoCompleteListener is used, we\n-        // add the fieldListener normally.\n-        if (acl != null) {\n-            component.addKeyListener(acl);\n-            component.addFocusListener(acl);\n-            acl.setNextFocusListener(fieldListener);\n-        } else {\n-            component.addFocusListener(fieldListener);\n-        }\n-\n-        InputMap im = component.getInputMap(JComponent.WHEN_FOCUSED);\n-        ActionMap am = component.getActionMap();\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous entry\"), \"prev\");\n-        am.put(\"prev\", parent.prevEntryAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next entry\"), \"next\");\n-        am.put(\"next\", parent.nextEntryAction);\n-\n-        im.put(Globals.prefs.getKey(\"Entry editor, store field\"), \"store\");\n-        am.put(\"store\", parent.storeFieldAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel\"), \"right\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, next panel 2\"), \"right\");\n-        am.put(\"left\", parent.switchLeftAction);\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n-        im.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n-        am.put(\"right\", parent.switchRightAction);\n-        im.put(Globals.prefs.getKey(\"Help\"), \"help\");\n-        am.put(\"help\", parent.helpAction);\n-        im.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n-        am.put(\"save\", parent.saveDatabaseAction);\n-        im.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n-        am.put(\"nexttab\", parent.frame.nextTab);\n-        im.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n-        am.put(\"prevtab\", parent.frame.prevTab);\n-\n-        try {\n-            HashSet<AWTKeyStroke> keys = new HashSet<AWTKeyStroke>(component\n-                    .getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(AWTKeyStroke.getAWTKeyStroke(\"pressed TAB\"));\n-            component.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);\n-            keys = new HashSet<AWTKeyStroke>(component\n-                    .getFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS));\n-            keys.clear();\n-            keys.add(KeyStroke.getKeyStroke(\"shift pressed TAB\"));\n-            component.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, keys);\n-        } catch (Throwable t) {\n-            System.err.println(t);\n-        }\n-\n-    }\n-\n-\n-    private final FocusListener fieldListener = new EntryEditorTabFocusListener(this);\n-\n-}, @@ -1,118 +0,0 @@\n-/*  Copyright (C) 2003-2014 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import javax.swing.*;\n-import javax.swing.event.DocumentEvent;\n-import javax.swing.event.DocumentListener;\n-import javax.swing.text.JTextComponent;\n-import java.awt.*;\n-import java.awt.event.FocusEvent;\n-import java.awt.event.FocusListener;\n-\n-/*\n- * Focus listener that fires the storeFieldAction when a FieldTextArea loses\n- * focus.\n- */\n-class EntryEditorTabFocusListener implements FocusListener {\n-\n-    private JTextComponent c;\n-\n-    private DocumentListener d;\n-    private final EntryEditorTab entryEditorTab;\n-\n-\n-    public EntryEditorTabFocusListener(final EntryEditorTab entryEditorTab) {\n-        this.entryEditorTab = entryEditorTab;\n-    }\n-\n-    @Override\n-    public void focusGained(FocusEvent e) {\n-\n-        synchronized (this) {\n-            if (c != null) {\n-                c.getDocument().removeDocumentListener(d);\n-                c = null;\n-                d = null;\n-            }\n-\n-            if (e.getSource() instanceof JTextComponent) {\n-\n-                c = (JTextComponent) e.getSource();\n-                /**\n-                 * [ 1553552 ] Not properly detecting changes to flag as\n-                 * changed\n-                 */\n-                d = new DocumentListener() {\n-\n-                    void fire() {\n-                        if (c.isFocusOwner()) {\n-                            entryEditorTab.markIfModified((FieldEditor) c);\n-                        }\n-                    }\n-\n-                    @Override\n-                    public void changedUpdate(DocumentEvent e) {\n-                        fire();\n-                    }\n-\n-                    @Override\n-                    public void insertUpdate(DocumentEvent e) {\n-                        fire();\n-                    }\n-\n-                    @Override\n-                    public void removeUpdate(DocumentEvent e) {\n-                        fire();\n-                    }\n-                };\n-                c.getDocument().addDocumentListener(d);\n-\n-                /**\n-                 * Makes the vertical scroll panel view follow the focus\n-                 */\n-                Component cScrollPane = c.getParent().getParent();\n-                if (cScrollPane instanceof JScrollPane) {\n-                    JScrollPane componentPane = (JScrollPane) cScrollPane;\n-                    Component cPane = componentPane.getParent();\n-                    if (cPane instanceof JPanel) {\n-                        JPanel panel = (JPanel) cPane;\n-                        Rectangle bounds = componentPane.getBounds();\n-                        panel.scrollRectToVisible(bounds);\n-                    }\n-                }\n-\n-            }\n-        }\n-\n-        entryEditorTab.setActive((FieldEditor) e.getSource());\n-\n-    }\n-\n-    @Override\n-    public void focusLost(FocusEvent e) {\n-        synchronized (this) {\n-            if (c != null) {\n-                c.getDocument().removeDocumentListener(d);\n-                c = null;\n-                d = null;\n-            }\n-        }\n-        if (!e.isTemporary()) {\n-            entryEditorTab.getParent().updateField(e.getSource());\n-        }\n-    }\n-}, @@ -1,75 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n-/**\n- * Class for holding the information about customizable entry editor tabs.\n- */\n-public final class EntryEditorTabList {\n-\n-    private List<List<String>> list = null;\n-    private List<String> names = null;\n-\n-\n-    public EntryEditorTabList() {\n-        init();\n-    }\n-\n-    private void init() {\n-        list = new ArrayList<List<String>>();\n-        names = new ArrayList<String>();\n-        int i = 0;\n-        String name;\n-        String[] fields;\n-        if (Globals.prefs.hasKey(JabRefPreferences.CUSTOM_TAB_NAME + 0)) {\n-            // The user has modified from the default values:\n-            while (Globals.prefs.hasKey(JabRefPreferences.CUSTOM_TAB_NAME + i)) {\n-                name = Globals.prefs.get(JabRefPreferences.CUSTOM_TAB_NAME + i);\n-                fields = Globals.prefs.get(JabRefPreferences.CUSTOM_TAB_FIELDS + i).split(\";\");\n-                List<String> entry = Arrays.asList(fields);\n-                names.add(name);\n-                list.add(entry);\n-                i++;\n-            }\n-        } else {\n-            // Nothing set, so we use the default values:\n-            while (Globals.prefs.get(JabRefPreferences.CUSTOM_TAB_NAME + \"_def\" + i) != null) {\n-                name = Globals.prefs.get(JabRefPreferences.CUSTOM_TAB_NAME + \"_def\" + i);\n-                fields = Globals.prefs.get(JabRefPreferences.CUSTOM_TAB_FIELDS + \"_def\" + i).split(\";\");\n-                List<String> entry = Arrays.asList(fields);\n-                names.add(name);\n-                list.add(entry);\n-                i++;\n-            }\n-        }\n-    }\n-\n-    public int getTabCount() {\n-        return list.size();\n-    }\n-\n-    public String getTabName(int tab) {\n-        return names.get(tab);\n-    }\n-\n-    public List<String> getTabFields(int tab) {\n-        return list.get(tab);\n-    }\n-}, @@ -1,197 +0,0 @@\n-package net.sf.jabref;\n-\n-import net.sf.jabref.undo.NamedCompound;\n-import net.sf.jabref.undo.UndoableFieldChange;\n-\n-import java.util.TreeSet;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n-public class EntryMarker {\n-\n-    public static final int MARK_COLOR_LEVELS = 6;\n-    public static final int MAX_MARKING_LEVEL = MARK_COLOR_LEVELS - 1;\n-    public static final int IMPORT_MARK_LEVEL = MARK_COLOR_LEVELS;\n-\n-    private static final Pattern MARK_NUMBER_PATTERN = Pattern.compile(JabRefPreferences.getInstance().MARKING_WITH_NUMBER_PATTERN);\n-\n-    /**\n-     * @param increment whether the given increment should be added to the current one. Currently never used in JabRef\n-     */\n-    public static void markEntry(BibtexEntry be, int markIncrement, boolean increment, NamedCompound ce) {\n-        Object o = be.getField(BibtexFields.MARKED);\n-        int prevMarkLevel;\n-        String newValue = null;\n-        if (o != null) {\n-            String s = o.toString();\n-            int index = s.indexOf(Globals.prefs.WRAPPED_USERNAME);\n-            if (index >= 0) {\n-                // Already marked 1 for this user.\n-                prevMarkLevel = 1;\n-                newValue = s.substring(0, index)\n-                        + s.substring(index + Globals.prefs.WRAPPED_USERNAME.length())\n-                        + Globals.prefs.WRAPPED_USERNAME.substring(0,\n-                                Globals.prefs.WRAPPED_USERNAME.length() - 1) + \":\" +\n-                        (increment ? Math.min(MAX_MARKING_LEVEL, prevMarkLevel + markIncrement)\n-                                : markIncrement) + \"]\";\n-            }\n-            else {\n-                Matcher m = MARK_NUMBER_PATTERN.matcher(s);\n-                if (m.find()) {\n-                    try {\n-                        prevMarkLevel = Integer.parseInt(m.group(1));\n-                        newValue = s.substring(0, m.start(1)) +\n-                                (increment ? Math.min(MAX_MARKING_LEVEL, prevMarkLevel + markIncrement)\n-                                        : markIncrement) +\n-                                s.substring(m.end(1));\n-                    } catch (NumberFormatException ex) {\n-                        // Do nothing.\n-                    }\n-                }\n-            }\n-        }\n-        if (newValue == null) {\n-            newValue = Globals.prefs.WRAPPED_USERNAME.substring(0,\n-                    Globals.prefs.WRAPPED_USERNAME.length() - 1) + \":\" + markIncrement + \"]\";\n-        }\n-\n-        ce.addEdit(new UndoableFieldChange(be, BibtexFields.MARKED, be\n-                .getField(BibtexFields.MARKED), newValue));\n-        be.setField(BibtexFields.MARKED, newValue);\n-    }\n-\n-    /**\n-     * SIDE EFFECT: Unselectes given entry\n-     */\n-    public static void unmarkEntry(BibtexEntry be, boolean onlyMaxLevel,\n-            BibtexDatabase database, NamedCompound ce) {\n-        Object o = be.getField(BibtexFields.MARKED);\n-        if (o != null) {\n-            String s = o.toString();\n-            if (s.equals(\"0\")) {\n-                if (!onlyMaxLevel) {\n-                    unmarkOldStyle(be, database, ce);\n-                }\n-                return;\n-            }\n-            String newValue = null;\n-            int index = s.indexOf(Globals.prefs.WRAPPED_USERNAME);\n-            if (index >= 0) {\n-                // Marked 1 for this user.\n-                if (!onlyMaxLevel) {\n-                    newValue = s.substring(0, index)\n-                            + s.substring(index + Globals.prefs.WRAPPED_USERNAME.length());\n-                } else {\n-                    return;\n-                }\n-            }\n-            else {\n-                Matcher m = MARK_NUMBER_PATTERN.matcher(s);\n-                if (m.find()) {\n-                    try {\n-                        int prevMarkLevel = Integer.parseInt(m.group(1));\n-                        if (!onlyMaxLevel || (prevMarkLevel == MARK_COLOR_LEVELS)) {\n-                            if (prevMarkLevel > 1) {\n-                                newValue = s.substring(0, m.start(1)) +\n-                                        s.substring(m.end(1));\n-                            } else {\n-                                String toRemove = Globals.prefs.WRAPPED_USERNAME.substring(0,\n-                                        Globals.prefs.WRAPPED_USERNAME.length() - 1) + \":1]\";\n-                                index = s.indexOf(toRemove);\n-                                if (index >= 0) {\n-                                    newValue = s.substring(0, index)\n-                                            + s.substring(index + toRemove.length());\n-                                }\n-                            }\n-                        } else {\n-                            return;\n-                        }\n-                    } catch (NumberFormatException ex) {\n-                        // Do nothing.\n-                    }\n-                }\n-            }\n-\n-            /*int piv = 0, hit;\n-            StringBuffer sb = new StringBuffer();\n-            while ((hit = s.indexOf(G047749118118\n-            1110lobals.prefs.WRAPPED_USERNAME, piv)) >= 0) {\n-            \tif (hit > 0)\n-            \t\tsb.append(s.substring(piv, hit));\n-            \tpiv = hit + Globals.prefs.WRAPPED_USERNAME.length();\n-            }\n-            if (piv < s.length() - 1) {\n-            \tsb.append(s.substring(piv));\n-            }\n-            String newVal = sb.length() > 0 ? sb.toString() : null;*/\n-            ce.addEdit(new UndoableFieldChange(be, BibtexFields.MARKED, be\n-                    .getField(BibtexFields.MARKED), newValue));\n-            be.setField(BibtexFields.MARKED, newValue);\n-        }\n-    }\n-\n-    /**\n-     * An entry is marked with a \"0\", not in the new style with user names. We\n-     * want to unmark it as transparently as possible. Since this shouldn't\n-     * happen too often, we do it by scanning the \"owner\" fields of the entire\n-     * database, collecting all user names. We then mark the entry for all users\n-     * except the current one. Thus only the user who unmarks will see that it\n-     * is unmarked, and we get rid of the old-style marking.\n-     *\n-     * @param be\n-     * @param ce\n-     */\n-    private static void unmarkOldStyle(BibtexEntry be, BibtexDatabase database, NamedCompound ce) {\n-        TreeSet<Object> owners = new TreeSet<Object>();\n-        for (BibtexEntry entry : database.getEntries()) {\n-            Object o = entry.getField(BibtexFields.OWNER);\n-            if (o != null)\n-             {\n-                owners.add(o);\n-            // System.out.println(\"Owner: \"+entry.getField(Globals.OWNER));\n-            }\n-        }\n-        owners.remove(Globals.prefs.get(\"defaultOwner\"));\n-        StringBuilder sb = new StringBuilder();\n-        for (Object owner : owners) {\n-            sb.append('[');\n-            sb.append(owner.toString());\n-            sb.append(']');\n-        }\n-        String newVal = sb.toString();\n-        if (newVal.length() == 0) {\n-            newVal = null;\n-        }\n-        ce.addEdit(new UndoableFieldChange(be, BibtexFields.MARKED, be\n-                .getField(BibtexFields.MARKED), newVal));\n-        be.setField(BibtexFields.MARKED, newVal);\n-\n-    }\n-\n-    public static int isMarked(BibtexEntry be) {\n-        Object fieldVal = be.getField(BibtexFields.MARKED);\n-        if (fieldVal == null) {\n-            return 0;\n-        }\n-        String s = (String) fieldVal;\n-        if (s.equals(\"0\")) {\n-            return 1;\n-        }\n-        int index = s.indexOf(Globals.prefs.WRAPPED_USERNAME);\n-        if (index >= 0) {\n-            return 1;\n-        }\n-\n-        Matcher m = MARK_NUMBER_PATTERN.matcher(s);\n-        if (m.find()) {\n-            try {\n-                return Integer.parseInt(m.group(1));\n-            } catch (NumberFormatException ex) {\n-                return 1;\n-            }\n-        } else {\n-            return 0;\n-        }\n-\n-    }\n-}, @@ -1,140 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.*;\n-\n-public class EntrySorter implements DatabaseChangeListener {\n-\n-    //TreeSet set;\n-    private final ArrayList<BibtexEntry> set;\n-    private final Comparator<BibtexEntry> comp;\n-    private String[] idArray;\n-    private BibtexEntry[] entryArray;\n-    private boolean changed = false;\n-\n-\n-    public EntrySorter(Map<String, BibtexEntry> entries, Comparator<BibtexEntry> comp) {\n-        //set = new TreeSet(comp);\n-        set = new ArrayList<BibtexEntry>();\n-        this.comp = comp;\n-        Set<String> keySet = entries.keySet();\n-        for (Map.Entry<String, BibtexEntry> stringBibtexEntryEntry : entries.entrySet()) {\n-            set.add(stringBibtexEntryEntry.getValue());\n-        }\n-        //Collections.sort(set, comp);\n-        changed = true;\n-        index();\n-    }\n-\n-    private void index() {\n-\n-        /*  Old version, from when set was a TreeSet.\n-\n-        // The boolean \"changing\" is true in the situation that an entry is about to change,\n-        // and has temporarily been removed from the entry set in this sorter. So, if we index\n-        // now, we will cause exceptions other places because one entry has been left out of\n-        // the indexed array. Simply waiting foth this to change can lead to deadlocks,\n-        // so we have no other choice than to return without indexing.\n-        if (changing)\n-            return;\n-        */\n-\n-        synchronized (set) {\n-\n-            // Resort if necessary:\n-            if (changed) {\n-                Collections.sort(set, comp);\n-                changed = false;\n-            }\n-\n-            // Create an array of IDs for quick access, since getIdAt() is called by\n-            // getValueAt() in EntryTableModel, which *has* to be efficient.\n-\n-            int count = set.size();\n-            idArray = new String[count];\n-            entryArray = new BibtexEntry[count];\n-            int piv = 0;\n-            for (BibtexEntry entry : set) {\n-                //        for (int i=0; i<idArray.length; i++) {\n-                idArray[piv] = entry.getId();\n-                entryArray[piv] = entry;\n-                piv++;\n-            }\n-        }\n-    }\n-\n-    public boolean isOutdated() {\n-        return false;\n-    }\n-\n-    public String getIdAt(int pos) {\n-        synchronized (set) {\n-            return idArray[pos];\n-        }\n-        //return ((BibtexEntry)(entryArray[pos])).getId();\n-    }\n-\n-    public BibtexEntry getEntryAt(int pos) {\n-        synchronized (set) {\n-            return entryArray[pos];\n-        }\n-    }\n-\n-    public int getEntryCount() {\n-        synchronized (set) {\n-            if (entryArray != null) {\n-                return entryArray.length;\n-            } else {\n-                return 0;\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void databaseChanged(DatabaseChangeEvent e) {\n-        synchronized (set) {\n-            int pos;\n-            switch (e.getType()) {\n-            case ADDED_ENTRY:\n-                pos = -Collections.binarySearch(set, e.getEntry(), comp) - 1;\n-                set.add(pos, e.getEntry());\n-                //addEntry(e.getEntry());\n-                //set.add(e.getEntry());\n-                //changed = true;\n-                //Collections.sort(set, comp);\n-                break;\n-            case REMOVED_ENTRY:\n-                set.remove(e.getEntry());\n-                changed = true;\n-                break;\n-            case CHANGED_ENTRY:\n-                // Entry changed. Resort list:\n-                //Collections.sort(set, comp);\n-                pos = Collections.binarySearch(set, e.getEntry(), comp);\n-                int posOld = set.indexOf(e.getEntry());\n-                if (pos < 0) {\n-                    set.remove(posOld);\n-                    set.add(-pos - 1, e.getEntry());\n-                }\n-                //changed = true;\n-                break;\n-            }\n-\n-        }\n-\n-    }\n-}, @@ -1,157 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.BorderLayout;\n-import java.awt.GridBagConstraints;\n-import java.awt.GridBagLayout;\n-import java.awt.Insets;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.WindowAdapter;\n-import java.awt.event.WindowEvent;\n-\n-import javax.swing.*;\n-\n-import com.jgoodies.forms.builder.ButtonBarBuilder;\n-\n-public class EntryTypeDialog extends JDialog implements ActionListener {\n-\n-    /*\n-     * Dialog that prompts the user to choose a type for an entry.\n-     * Returns null if cancelled.\n-     */\n-\n-    private BibtexEntryType type = null;\n-    private final CancelAction cancelAction = new CancelAction();\n-    private static final int COLNUM = 3;\n-\n-\n-    static class TypeButton extends JButton implements Comparable<TypeButton> {\n-\n-        final BibtexEntryType type;\n-\n-\n-        public TypeButton(String label, BibtexEntryType type_) {\n-            super(label);\n-            type = type_;\n-        }\n-\n-        @Override\n-        public int compareTo(TypeButton o) {\n-            return type.getName().compareTo(o.type.getName());\n-        }\n-    }\n-\n-\n-    public EntryTypeDialog(JabRefFrame baseFrame_) {\n-        super(baseFrame_, true); // Set modal on.\n-\n-        setTitle(Globals.lang(\"Select entry type\"));\n-\n-        addWindowListener(new WindowAdapter() {\n-\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                cancelAction.actionPerformed(null);\n-            }\n-        });\n-\n-        getContentPane().setLayout(new BorderLayout());\n-        JPanel pan = new JPanel();\n-        getContentPane().add(pan, BorderLayout.CENTER);\n-        JPanel buttons = new JPanel();\n-        JButton // ok = new JButton(\"Ok\"),\n-        cancel = new JButton(Globals.lang(\"Cancel\"));\n-        //ok.addActionListener(this);\n-        cancel.addActionListener(this);\n-\n-        // Make ESC close dialog, equivalent to clicking Cancel.\n-        cancel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)\n-                .put(baseFrame_.prefs.getKey(\"Close dialog\"), \"close\");\n-        cancel.getActionMap().put(\"close\", cancelAction);\n-\n-        //buttons.add(ok);\n-        ButtonBarBuilder bb = new ButtonBarBuilder(buttons);\n-        //buttons.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));\n-        bb.addGlue();\n-        bb.addButton(cancel);\n-        bb.addGlue();\n-\n-        getContentPane().add(buttons, BorderLayout.SOUTH);\n-        GridBagLayout gbl = new GridBagLayout();\n-        pan.setLayout(gbl);\n-        GridBagConstraints con = new GridBagConstraints();\n-        con.anchor = GridBagConstraints.WEST;\n-        con.fill = GridBagConstraints.HORIZONTAL;\n-        con.insets = new Insets(4, 4, 4, 4);\n-        int col = 0;\n-\n-        for (BibtexEntryType tp : BibtexEntryType.ALL_TYPES.values()) {\n-            if (tp.isVisibleAtNewEntryDialog()) {\n-                TypeButton b = new TypeButton(StringUtil.nCase(tp.getName()), tp);\n-                b.addActionListener(this);\n-                // Check if we should finish the row.\n-                col++;\n-                if (col == EntryTypeDialog.COLNUM) {\n-                    col = 0;\n-                    con.gridwidth = GridBagConstraints.REMAINDER;\n-                } else {\n-                    con.gridwidth = 1;\n-                }\n-                gbl.setConstraints(b, con);\n-                pan.add(b);\n-            }\n-        }\n-        pan.setBorder(BorderFactory.createTitledBorder\n-                (BorderFactory.createEtchedBorder(),\n-                        Globals.lang(\"Entry types\")));\n-        //pan.setBackground(Color.white);\n-        //buttons.setBackground(Color.white);\n-        pack();\n-        setResizable(false);\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-        if (e.getSource() instanceof TypeButton) {\n-            type = ((TypeButton) e.getSource()).type;\n-        }\n-        dispose();\n-    }\n-\n-    public BibtexEntryType getChoice() {\n-        //return type;\n-        return type;\n-    }\n-\n-\n-    class CancelAction extends AbstractAction {\n-\n-        public CancelAction() {\n-            super(\"Cancel\");\n-            //  new ImageIcon(GUIGlobals.imagepath+GUIGlobals.closeIconFile));\n-            //putValue(SHORT_DESCRIPTION, \"Cancel\");\n-            //putValue(MNEMONIC_KEY, GUIGlobals.closeKeyCode);\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            dispose();\n-        }\n-    }\n-\n-}, @@ -1,287 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.*;\n-import java.awt.event.ItemEvent;\n-import java.awt.event.ItemListener;\n-import java.awt.event.ActionListener;\n-import java.awt.event.ActionEvent;\n-\n-import javax.swing.*;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n-\n-import net.sf.jabref.external.*;\n-import net.sf.jabref.help.HelpAction;\n-import net.sf.jabref.help.HelpDialog;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n-public class ExternalTab extends JPanel implements PrefsTab {\n-\n-    private final JabRefPreferences _prefs;\n-\n-    private final JabRefFrame _frame;\n-\n-    private final JTextField pdfDir;\n-    private final JTextField regExpTextField;\n-    private final JTextField fileDir;\n-    private final JTextField psDir;\n-    private final JTextField emailSubject;\n-\n-    private final JCheckBox bibLocationAsFileDir;\n-    private final JCheckBox bibLocAsPrimaryDir;\n-    private final JCheckBox runAutoFileSearch;\n-    private final JCheckBox allowFileAutoOpenBrowse;\n-    private final JCheckBox openFoldersOfAttachedFiles;\n-\n-    private final JRadioButton useRegExpComboBox;\n-    private final JRadioButton matchExactKeyOnly = new JRadioButton(Globals.lang(\"Autolink only files that match the BibTeX key\"));\n-    private final JRadioButton matchStartsWithKey = new JRadioButton(Globals.lang(\"Autolink files with names starting with the BibTeX key\"));\n-\n-\n-    public ExternalTab(JabRefFrame frame, PrefsDialog3 prefsDiag, JabRefPreferences prefs,\n-            HelpDialog helpDialog) {\n-        _prefs = prefs;\n-        _frame = frame;\n-        setLayout(new BorderLayout());\n-\n-        psDir = new JTextField(25);\n-        pdfDir = new JTextField(25);\n-        fileDir = new JTextField(25);\n-        bibLocationAsFileDir = new JCheckBox(Globals.lang(\"Allow file links relative to each bib file's location\"));\n-        bibLocAsPrimaryDir = new JCheckBox(Globals.lang(\"Use the bib file location as primary file directory\"));\n-        bibLocAsPrimaryDir.setToolTipText(Globals.lang(\"When downloading files, or moving linked files to the \"\n-                + \"file directory, prefer the bib file location rather than the file directory set above\"));\n-        bibLocationAsFileDir.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent changeEvent) {\n-                bibLocAsPrimaryDir.setEnabled(bibLocationAsFileDir.isSelected());\n-            }\n-        });\n-        JButton editFileTypes = new JButton(Globals.lang(\"Manage external file types\"));\n-        runAutoFileSearch = new JCheckBox(Globals.lang(\"When opening file link, search for matching file if no link is defined\"));\n-        allowFileAutoOpenBrowse = new JCheckBox(Globals.lang(\"Automatically open browse dialog when creating new file link\"));\n-        regExpTextField = new JTextField(25);\n-        useRegExpComboBox = new JRadioButton(Globals.lang(\"Use Regular Expression Search\"));\n-        ItemListener regExpListener = new ItemListener() {\n-\n-            @Override\n-            public void itemStateChanged(ItemEvent e) {\n-                regExpTextField.setEditable(useRegExpComboBox.isSelected());\n-            }\n-        };\n-        useRegExpComboBox.addItemListener(regExpListener);\n-\n-        editFileTypes.addActionListener(ExternalFileTypeEditor.getAction(prefsDiag));\n-\n-        ButtonGroup bg = new ButtonGroup();\n-        bg.add(matchExactKeyOnly);\n-        bg.add(matchStartsWithKey);\n-        bg.add(useRegExpComboBox);\n-\n-        BrowseAction browse;\n-\n-        FormLayout layout = new FormLayout(\n-                \"1dlu, 8dlu, left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref\", \"\");\n-\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-\n-        builder.appendSeparator(Globals.lang(\"External file links\"));\n-        JPanel pan = new JPanel();\n-        builder.append(pan);\n-        /**\n-         * Fix for [ 1749613 ] About translation\n-         * \n-         * https://sourceforge.net/tracker/index.php?func=detail&aid=1749613&group_id=92314&atid=600306\n-         * \n-         * Cannot really use %0 to refer to the file type, since this ruins translation.\n-         */\n-        JLabel lab = new JLabel(Globals.lang(\"Main file directory\") + ':');\n-        builder.append(lab);\n-        builder.append(fileDir);\n-        browse = BrowseAction.buildForDir(_frame, fileDir);\n-        builder.append(new JButton(browse));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(bibLocationAsFileDir, 3);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(bibLocAsPrimaryDir, 3);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(matchStartsWithKey, 3);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(matchExactKeyOnly, 3);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(useRegExpComboBox);\n-        builder.append(regExpTextField);\n-\n-        HelpAction helpAction = new HelpAction(helpDialog, GUIGlobals.regularExpressionSearchHelp,\n-                Globals.lang(\"Help on Regular Expression Search\"), GUIGlobals.getIconUrl(\"helpSmall\"));\n-        builder.append(helpAction.getIconButton());\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(runAutoFileSearch, 3);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(allowFileAutoOpenBrowse);\n-        builder.nextLine();\n-\n-        builder.appendSeparator(Globals.lang(\"Sending of emails\"));\n-        builder.append(new JPanel());\n-        lab = new JLabel(Globals.lang(\"Subject for sending an email with references\").concat(\":\"));\n-        builder.append(lab);\n-        emailSubject = new JTextField(25);\n-        builder.append(emailSubject);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        openFoldersOfAttachedFiles = new JCheckBox(Globals.lang(\"Automatically open folders of attached files\"));\n-        builder.append(openFoldersOfAttachedFiles);\n-        builder.nextLine();\n-\n-        builder.appendSeparator(Globals.lang(\"Legacy file fields\"));\n-        pan = new JPanel();\n-        builder.append(pan);\n-        builder.append(new JLabel(\"<html>\" + Globals.lang(\"Note that these settings are used for the legacy \"\n-                + \"<b>pdf</b> and <b>ps</b> fields only.<br>For most users, setting the <b>Main file directory</b> \"\n-                + \"above should be sufficient.\") + \"</html>\"), 5);\n-        builder.nextLine();\n-        pan = new JPanel();\n-        builder.append(pan);\n-        lab = new JLabel(Globals.lang(\"Main PDF directory\") + ':');\n-        builder.append(lab);\n-        builder.append(pdfDir);\n-        browse = BrowseAction.buildForDir(_frame, pdfDir);\n-        builder.append(new JButton(browse));\n-        builder.nextLine();\n-\n-        pan = new JPanel();\n-        builder.append(pan);\n-        lab = new JLabel(Globals.lang(\"Main PS directory\") + ':');\n-        builder.append(lab);\n-        builder.append(psDir);\n-        browse = BrowseAction.buildForDir(_frame, psDir);\n-        builder.append(new JButton(browse));\n-        builder.nextLine();\n-        builder.appendSeparator(Globals.lang(\"External programs\"));\n-\n-        builder.nextLine();\n-\n-        JPanel butpan = new JPanel();\n-        butpan.setLayout(new GridLayout(2, 3));\n-        addSettingsButton(new PushToLyx(), butpan);\n-        addSettingsButton(new PushToEmacs(), butpan);\n-        addSettingsButton(new PushToWinEdt(), butpan);\n-        addSettingsButton(new PushToVim(), butpan);\n-        addSettingsButton(new PushToLatexEditor(), butpan);\n-        addSettingsButton(new PushToTeXstudio(), butpan);\n-        builder.append(new JPanel());\n-        builder.append(butpan, 3);\n-\n-        builder.nextLine();\n-        builder.append(pan);\n-        builder.append(editFileTypes);\n-\n-        pan = builder.getPanel();\n-        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        add(pan, BorderLayout.CENTER);\n-\n-    }\n-\n-    private void addSettingsButton(final PushToApplication pt, JPanel p) {\n-        //if (b.getColumn() < 2)\n-        //    b.append(new JPanel());\n-        //JPanel pan = new JPanel();\n-        //pan.setLayout(new BorderLayout());\n-        //pan.add(new JLabel(Globals.lang(\"Settings for %0\", pt.getApplicationName())), BorderLayout.CENTER);\n-        JButton button = new JButton(Globals.lang(\"Settings for %0\", pt.getApplicationName()),\n-                pt.getIcon());\n-        button.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent event) {\n-                PushToApplicationButton.showSettingsDialog(_frame, pt, pt.getSettingsPanel());\n-            }\n-        });\n-        p.add(button);//, BorderLayout.CENTER);\n-        //b.append(button);\n-        //b.nextLine();\n-        //b.append(pan);\n-        //if (b.getColumn() >= 6)\n-        //    b.nextLine();\n-    }\n-\n-    @Override\n-    public void setValues() {\n-        pdfDir.setText(_prefs.get(\"pdfDirectory\"));\n-        psDir.setText(_prefs.get(\"psDirectory\"));\n-        fileDir.setText(_prefs.get(GUIGlobals.FILE_FIELD + \"Directory\"));\n-        bibLocationAsFileDir.setSelected(_prefs.getBoolean(\"bibLocationAsFileDir\"));\n-        bibLocAsPrimaryDir.setSelected(_prefs.getBoolean(\"bibLocAsPrimaryDir\"));\n-        bibLocAsPrimaryDir.setEnabled(bibLocationAsFileDir.isSelected());\n-        runAutoFileSearch.setSelected(_prefs.getBoolean(\"runAutomaticFileSearch\"));\n-        regExpTextField.setText(_prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY));\n-        allowFileAutoOpenBrowse.setSelected(_prefs.getBoolean(\"allowFileAutoOpenBrowse\"));\n-\n-        emailSubject.setText(_prefs.get(JabRefPreferences.EMAIL_SUBJECT));\n-        openFoldersOfAttachedFiles.setSelected(_prefs.getBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES));\n-\n-        if (_prefs.getBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY)) {\n-            useRegExpComboBox.setSelected(true);\n-        } else if (_prefs.getBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY)) {\n-            matchExactKeyOnly.setSelected(true);\n-        } else {\n-            matchStartsWithKey.setSelected(true);\n-        }\n-    }\n-\n-    @Override\n-    public void storeSettings() {\n-\n-        _prefs.putBoolean(JabRefPreferences.USE_REG_EXP_SEARCH_KEY, useRegExpComboBox.isSelected());\n-        if (useRegExpComboBox.isSelected()) {\n-            _prefs.put(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY, regExpTextField.getText());\n-        }\n-\n-        // We should maybe do some checking on the validity of the contents?\n-        _prefs.put(\"pdfDirectory\", pdfDir.getText());\n-        _prefs.put(\"psDirectory\", psDir.getText());\n-        _prefs.put(GUIGlobals.FILE_FIELD + \"Directory\", fileDir.getText());\n-        _prefs.putBoolean(\"bibLocationAsFileDir\", bibLocationAsFileDir.isSelected());\n-        _prefs.putBoolean(\"bibLocAsPrimaryDir\", bibLocAsPrimaryDir.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY, matchExactKeyOnly.isSelected());\n-        _prefs.putBoolean(\"runAutomaticFileSearch\", runAutoFileSearch.isSelected());\n-        _prefs.putBoolean(\"allowFileAutoOpenBrowse\", allowFileAutoOpenBrowse.isSelected());\n-        _prefs.put(JabRefPreferences.EMAIL_SUBJECT, emailSubject.getText());\n-        _prefs.putBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES, openFoldersOfAttachedFiles.isSelected());\n-    }\n-\n-    @Override\n-    public boolean readyToClose() {\n-        return true;\n-    }\n-\n-    @Override\n-    public String getTabName() {\n-        return Globals.lang(\"External programs\");\n-    }\n-}, @@ -1,208 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.MainTableFormat;\n-\n-import java.text.Collator;\n-import java.text.ParseException;\n-import java.text.RuleBasedCollator;\n-import java.util.Comparator;\n-\n-/**\n- * \n- * A comparator for BibtexEntry fields\n- * \n- * Initial Version:\n- * \n- * @author alver\n- * @version Date: Oct 13, 2005 Time: 10:10:04 PM To\n- * \n- * Current Version:\n- * \n- * @author $Author$\n- * @version $Revision$ ($Date$)\n- * \n- * TODO: Testcases\n- * \n- */\n-public class FieldComparator implements Comparator<BibtexEntry> {\n-\n-    private static Collator collator;\n-\n-    static {\n-        try {\n-            FieldComparator.collator = new RuleBasedCollator(\n-                    ((RuleBasedCollator) Collator.getInstance()).getRules()\n-                            .replaceAll(\"<'\\u005f'\", \"<' '<'\\u005f'\"));\n-        } catch (ParseException e) {\n-            FieldComparator.collator = Collator.getInstance();\n-        }\n-    }\n-\n-    private final String[] field;\n-    private final String fieldName;\n-\n-    private final boolean isNameField;\n-    private final boolean isTypeHeader;\n-    private final boolean isYearField;\n-    private final boolean isMonthField;\n-    private final boolean isNumeric;\n-\n-    private final int multiplier;\n-\n-\n-    public FieldComparator(String field) {\n-        this(field, false);\n-    }\n-\n-    public FieldComparator(String field, boolean reversed) {\n-        this.fieldName = field;\n-        this.field = field.split(MainTableFormat.COL_DEFINITION_FIELD_SEPARATOR);\n-        multiplier = reversed ? -1 : 1;\n-        isTypeHeader = this.field[0].equals(GUIGlobals.TYPE_HEADER);\n-        isNameField = (this.field[0].equals(\"author\")\n-                || this.field[0].equals(\"editor\"));\n-        isYearField = this.field[0].equals(\"year\");\n-        isMonthField = this.field[0].equals(\"month\");\n-        isNumeric = BibtexFields.isNumeric(this.field[0]);\n-    }\n-\n-    @Override\n-    public int compare(BibtexEntry e1, BibtexEntry e2) {\n-        Object f1, f2;\n-\n-        if (isTypeHeader) {\n-            // Sort by type.\n-            f1 = e1.getType().getName();\n-            f2 = e2.getType().getName();\n-        } else {\n-\n-            // If the field is author or editor, we rearrange names so they are\n-            // sorted according to last name.\n-            f1 = getField(e1);\n-            f2 = getField(e2);\n-        }\n-\n-        /*\n-         * [ 1598777 ] Month sorting\n-         * \n-         * http://sourceforge.net/tracker/index.php?func=detail&aid=1598777&group_id=92314&atid=600306\n-         */\n-        int localMultiplier = multiplier;\n-        if (isMonthField) {\n-            localMultiplier = -localMultiplier;\n-        }\n-\n-        // Catch all cases involving null:\n-        if (f1 == null) {\n-            return f2 == null ? 0 : localMultiplier;\n-        }\n-\n-        if (f2 == null) {\n-            return -localMultiplier;\n-        }\n-\n-        // Now we now that both f1 and f2 are != null\n-        if (isNameField) {\n-            f1 = AuthorList.fixAuthorForAlphabetization((String) f1);\n-            f2 = AuthorList.fixAuthorForAlphabetization((String) f2);\n-        } else if (isYearField) {\n-            /*\n-             * [ 1285977 ] Impossible to properly sort a numeric field\n-             * \n-             * http://sourceforge.net/tracker/index.php?func=detail&aid=1285977&group_id=92314&atid=600307\n-             */\n-            f1 = YearUtil.toFourDigitYear((String) f1);\n-            f2 = YearUtil.toFourDigitYear((String) f2);\n-        } else if (isMonthField) {\n-            /*\n-             * [ 1535044 ] Month sorting\n-             * \n-             * http://sourceforge.net/tracker/index.php?func=detail&aid=1535044&group_id=92314&atid=600306\n-             */\n-            f1 = MonthUtil.getMonth((String) f1).number;\n-            f2 = MonthUtil.getMonth((String) f2).number;\n-        }\n-\n-        if (isNumeric) {\n-            Integer i1 = null, i2 = null;\n-            try {\n-                i1 = Util.intValueOf((String) f1);\n-            } catch (NumberFormatException ex) {\n-                // Parsing failed.\n-            }\n-\n-            try {\n-                i2 = Util.intValueOf((String) f2);\n-            } catch (NumberFormatException ex) {\n-                // Parsing failed.\n-            }\n-\n-            if ((i2 != null) && (i1 != null)) {\n-                // Ok, parsing was successful. Update f1 and f2:\n-                f1 = i1;\n-                f2 = i2;\n-            } else if (i1 != null) {\n-                // The first one was parseable, but not the second one.\n-                // This means we consider one < two\n-                f1 = i1;\n-                f2 = i1 + 1;\n-            } else if (i2 != null) {\n-                // The second one was parseable, but not the first one.\n-                // This means we consider one > two\n-                f2 = i2;\n-                f1 = i2 + 1;\n-            }\n-            // Else none of them were parseable, and we can fall back on comparing strings.    \n-        }\n-\n-        int result;\n-        if ((f1 instanceof Integer) && (f2 instanceof Integer)) {\n-            result = (((Integer) f1).compareTo((Integer) f2));\n-        } else if (f2 instanceof Integer) {\n-            Integer f1AsInteger = new Integer(f1.toString());\n-            result = -((f1AsInteger).compareTo((Integer) f2));\n-        } else if (f1 instanceof Integer) {\n-            Integer f2AsInteger = new Integer(f2.toString());\n-            result = -(((Integer) f1).compareTo(f2AsInteger));\n-        } else {\n-            String ours = ((String) f1).toLowerCase(), theirs = ((String) f2).toLowerCase();\n-            result = FieldComparator.collator.compare(ours, theirs);//ours.compareTo(theirs);\n-        }\n-\n-        return result * localMultiplier;\n-    }\n-\n-    private Object getField(BibtexEntry entry) {\n-        for (String aField : field) {\n-            Object o = entry.getFieldOrAlias(aField);\n-            if (o != null) {\n-                return o;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * Returns the field this Comparator compares by.\n-     * \n-     * @return The field name.\n-     */\n-    public String getFieldName() {\n-        return fieldName;\n-    }\n-}, @@ -1,45 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.util.Comparator;\n-import java.util.List;\n-\n-/**\n- * This class represents a list of comparators. The first Comparator takes precedence,\n- * and each time a Comparator returns 0, the next one is attempted. If all comparators\n- * return 0 the final result will be 0.\n- */\n-public class FieldComparatorStack<T> implements Comparator<T> {\n-\n-    private final List<? extends Comparator<? super T>> comparators;\n-\n-\n-    public FieldComparatorStack(List<? extends Comparator<? super T>> comparators) {\n-        this.comparators = comparators;\n-    }\n-\n-    @Override\n-    public int compare(T o1, T o2) {\n-        for (Comparator<? super T> comp : comparators) {\n-            int res = comp.compare(o1, o2);\n-            if (res != 0) {\n-                return res;\n-            }\n-        }\n-        return 0;\n-    }\n-}, @@ -1,264 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.Dimension;\n-import java.awt.GridBagConstraints;\n-import java.awt.GridBagLayout;\n-import java.awt.Window;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.util.Vector;\n-\n-import javax.swing.AbstractAction;\n-import javax.swing.Box;\n-import javax.swing.JButton;\n-import javax.swing.JComboBox;\n-import javax.swing.JComponent;\n-import javax.swing.KeyStroke;\n-\n-import com.jgoodies.forms.layout.Sizes;\n-import com.jgoodies.looks.Options;\n-\n-/**\n- * A combo-box and a manage button that will add selected strings to an\n- * associated entry editor.\n- * \n- * Used to manage keywords and authors for instance.\n- * \n- * @author $Author$\n- * @version $Revision$ ($Date$)\n- * \n- */\n-public class FieldContentSelector extends JComponent {\n-\n-    private final JComboBox comboBox;\n-\n-    private final FieldEditor editor;\n-\n-    private final MetaData metaData;\n-\n-    private final JabRefFrame frame;\n-\n-    private final Window owner;\n-\n-    private final AbstractAction action;\n-    private final String delimiter;\n-\n-\n-    /**\n-     * \n-     * Create a new FieldContentSelector.\n-     * \n-     * @param frame\n-     *            The one JabRef-Frame.\n-     * @param panel\n-     *            The basepanel the entry-editor is on.\n-     * @param owner\n-     *            The window/frame/dialog which should be the owner of the\n-     *            content selector dialog.\n-     * @param editor\n-     *            The entry editor which will be appended by the text selected\n-     *            by the user from the combobox.\n-     * @param metaData\n-     *            The metadata that contains the list of items to display in the\n-     *            combobox under the key Globals.SELECTOR_META_PREFIX +\n-     *            editor.getFieldName().\n-     * @param action\n-     *            The action that will be performed to after an item from the\n-     *            combobox has been appended to the text in the entryeditor.\n-     * @param horizontalLayout\n-     *            Whether to put a 2 pixel horizontal strut between combobox and\n-     *            button.\n-     */\n-    public FieldContentSelector(JabRefFrame frame, final BasePanel panel,\n-            Window owner, final FieldEditor editor, final MetaData metaData,\n-            final AbstractAction action, boolean horizontalLayout, String delimiter) {\n-\n-        this.frame = frame;\n-        this.editor = editor;\n-        this.metaData = metaData;\n-        this.owner = owner;\n-        this.action = action;\n-        this.delimiter = delimiter;\n-\n-        comboBox = new JComboBox() {\n-\n-            @Override\n-            public Dimension getPreferredSize() {\n-                Dimension parents = super.getPreferredSize();\n-                if (parents.width > GUIGlobals.MAX_CONTENT_SELECTOR_WIDTH) {\n-                    parents.width = GUIGlobals.MAX_CONTENT_SELECTOR_WIDTH;\n-                }\n-                return parents;\n-            }\n-        };\n-\n-        GridBagLayout gbl = new GridBagLayout();\n-        GridBagConstraints con = new GridBagConstraints();\n-\n-        setLayout(gbl);\n-\n-        // comboBox.setEditable(true);\n-\n-        comboBox.setMaximumRowCount(35);\n-\n-        // Set the width of the popup independent of the size of th box itself:\n-        comboBox.putClientProperty(Options.COMBO_POPUP_PROTOTYPE_DISPLAY_VALUE_KEY,\n-                \"The longest text in the combo popup menu. And even longer.\");\n-\n-        rebuildComboBox();\n-\n-        con.gridwidth = horizontalLayout ? 3 : GridBagConstraints.REMAINDER;\n-        con.fill = GridBagConstraints.HORIZONTAL;\n-        con.weightx = 1;\n-        gbl.setConstraints(comboBox, con);\n-\n-        comboBox.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                /*\n-                 * These conditions signify arrow key navigation in the dropdown\n-                 * list, so we should not react to it. I'm not sure if this is\n-                 * well defined enough to be guaranteed to work everywhere.\n-                 */\n-                if (e.getActionCommand().equals(\"comboBoxChanged\") && (e.getModifiers() == 0)) {\n-                    return;\n-                }\n-\n-                selectionMade();\n-            }\n-        });\n-        // Add an action for the Enter key that signals a selection:\n-        comboBox.getInputMap().put(KeyStroke.getKeyStroke(\"ENTER\"), \"enter\");\n-        comboBox.getActionMap().put(\"enter\", new AbstractAction() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent actionEvent) {\n-                selectionMade();\n-                comboBox.setPopupVisible(false);\n-            }\n-        });\n-\n-        add(comboBox);\n-\n-        if (horizontalLayout) {\n-            add(Box.createHorizontalStrut(Sizes.dialogUnitXAsPixel(2, this)));\n-        }\n-\n-        JButton manage = new JButton(Globals.lang(\"Manage\"));\n-        gbl.setConstraints(manage, con);\n-        add(manage);\n-\n-        manage.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                ContentSelectorDialog2 csd = new ContentSelectorDialog2(FieldContentSelector.this.owner, FieldContentSelector.this.frame, panel, true, metaData, editor.getFieldName());\n-                Util.placeDialog(csd, FieldContentSelector.this.frame);\n-\n-                // Calling setVisible(true) will open the modal dialog and block\n-                // for the dialog to close.\n-                csd.setVisible(true);\n-\n-                // So we need to rebuild the ComboBox afterwards\n-                rebuildComboBox();\n-            }\n-        });\n-    }\n-\n-    private void selectionMade() {\n-        // The first element is only for show.\n-        // CO: Why?\n-        if (comboBox.getSelectedIndex() == 0) {\n-            return;\n-        }\n-\n-        String chosen = (String) comboBox.getSelectedItem();\n-        if ((chosen == null) || chosen.equals(\"\")) {\n-            return;\n-        }\n-\n-        // The following is not possible at the moment since the\n-        // combobox cannot be edited!\n-\n-        // User edited in a new word. Add it.\n-        // if (comboBox.getSelectedIndex() == -1)\n-        // addWord(chosen);\n-\n-        // TODO: could improve checking as not do add the same item twice\n-        if (!editor.getText().equals(\"\")) {\n-            editor.append(FieldContentSelector.this.delimiter);\n-        }\n-\n-        editor.append(chosen);\n-\n-        comboBox.setSelectedIndex(0);\n-\n-        // Fire event that we changed the editor\n-        if (action != null) {\n-            action.actionPerformed(new ActionEvent(editor, 0, \"\"));\n-        }\n-\n-        // Transfer focus to the editor.\n-        editor.requestFocus();\n-    }\n-\n-    void rebuildComboBox() {\n-        comboBox.removeAllItems();\n-\n-        // TODO: CO - What for?\n-        comboBox.addItem(\"\");\n-        Vector<String> items = metaData.getData(Globals.SELECTOR_META_PREFIX + editor.getFieldName());\n-        if (items != null) {\n-            for (String item : items) {\n-                comboBox.addItem(item);\n-            }\n-        }\n-    }\n-\n-    // Not used since the comboBox is not editable\n-\n-    //\t/**\n-    //\t * Adds a word to the selector (to the JList and to the MetaData), unless it\n-    //\t * is already there\n-    //\t * \n-    //\t * @param newWord\n-    //\t *            String Word to add\n-    //\t */\n-    //\tpublic void addWord(String newWord) {\n-    //\n-    //\t\tVector items = metaData.getData(Globals.SELECTOR_META_PREFIX + editor.getFieldName());\n-    //\t\tboolean exists = false;\n-    //\t\tint pos = -1;\n-    //\t\tfor (int i = 0; i < items.size(); i++) {\n-    //\t\t\tString s = (String) items.elementAt(i);\n-    //\t\t\tif (s.equals(newWord)) {\n-    //\t\t\t\texists = true;\n-    //\t\t\t\tbreak;\n-    //\t\t\t}\n-    //\t\t\tif (s.toLowerCase().compareTo(newWord.toLowerCase()) < 0)\n-    //\t\t\t\tpos = i + 1;\n-    //\t\t}\n-    //\t\tif (!exists) {\n-    //\t\t\titems.add(Math.max(0, pos), newWord);\n-    //\t\t\t// TODO CO: Why is this non-undoable?\n-    //\t\t\tpanel.markNonUndoableBaseChanged();\n-    //\t\t\tpanel.updateAllContentSelectors();\n-    //\t\t}\n-    //\t}\n-}, @@ -1,105 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.AutoCompleteListener;\n-\n-import java.awt.Color;\n-import java.awt.Container;\n-\n-import javax.swing.JComponent;\n-import javax.swing.JLabel;\n-import javax.swing.event.UndoableEditListener;\n-\n-/**\n- * FieldEditors is a common interface between the FieldTextField and FieldTextArea.\n- */\n-public interface FieldEditor {\n-\n-    String getFieldName();\n-\n-    /*\n-     * Returns the component to be added to a container. Might be a JScrollPane\n-     * or the component itself.\n-     */\n-    JComponent getPane();\n-\n-    /*\n-     * Returns the text component itself.\n-     */\n-    JComponent getTextComponent();\n-\n-    JLabel getLabel();\n-\n-    void setActiveBackgroundColor();\n-\n-    void setValidBackgroundColor();\n-\n-    void setInvalidBackgroundColor();\n-\n-    void setLabelColor(Color c);\n-\n-    void setBackground(Color c);\n-\n-    void updateFontColor();\n-\n-    String getText();\n-\n-    /**\n-     * Sets the given text on the current field editor and marks this text\n-     * editor as modified.\n-     * \n-     * @param newText\n-     */\n-    void setText(String newText);\n-\n-    void append(String text);\n-\n-    Container getParent();\n-\n-    void requestFocus();\n-\n-    void setEnabled(boolean enabled);\n-\n-    void updateFont();\n-\n-    /**\n-     * paste text into component, it should also take some selected text into\n-     * account\n-     */\n-    void paste(String textToInsert);\n-\n-    /**\n-     * normally implemented in JTextArea and JTextField\n-     * \n-     * @return\n-     */\n-    String getSelectedText();\n-\n-    boolean hasUndoInformation();\n-\n-    void undo();\n-\n-    boolean hasRedoInformation();\n-\n-    void redo();\n-\n-    void addUndoableEditListener(UndoableEditListener listener);\n-\n-    void setAutoCompleteListener(AutoCompleteListener listener);\n-\n-    void clearAutoCompleteSuggestion();\n-}, @@ -1,53 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import javax.swing.*;\n-import java.awt.event.FocusEvent;\n-import java.awt.event.FocusListener;\n-\n-/**\n- * Focus listener that changes the color of the text area when it has focus.\n- * Created by IntelliJ IDEA.\n- * User: alver\n- * Date: 18.mar.2005\n- * Time: 18:20:14\n- * To change this template use File | Settings | File Templates.\n- */\n-class FieldEditorFocusListener implements FocusListener {\n-\n-    public FieldEditorFocusListener() {\n-    }\n-\n-    @Override\n-    public void focusGained(FocusEvent event) {\n-        if (event.getSource() instanceof FieldEditor) {\n-            ((FieldEditor) event.getSource()).setActiveBackgroundColor();\n-        } else {\n-            ((JComponent) event.getSource()).setBackground(GUIGlobals.activeBackground);\n-        }\n-    }\n-\n-    @Override\n-    public void focusLost(FocusEvent event) {\n-        if (event.getSource() instanceof FieldEditor) {\n-            ((FieldEditor) event.getSource()).setValidBackgroundColor();\n-        } else {\n-            ((JComponent) event.getSource()).setBackground(GUIGlobals.validFieldBackgroundColor);\n-        }\n-    }\n-\n-}, @@ -1,48 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.RenderingHints;\n-\n-import javax.swing.BorderFactory;\n-import javax.swing.JLabel;\n-import javax.swing.SwingConstants;\n-\n-public class FieldNameLabel extends JLabel {\n-\n-    public FieldNameLabel(String name) {\n-        super(name, SwingConstants.LEFT);\n-        setVerticalAlignment(SwingConstants.TOP);\n-        //setFont(GUIGlobals.fieldNameFont);\n-        setForeground(GUIGlobals.entryEditorLabelColor);\n-        //  setBorder(BorderFactory.createMatteBorder(1,0,0,0, Color.GRAY));\n-        //setBorder(BorderFactory.createEtchedBorder());\n-        setBorder(BorderFactory.createEmptyBorder());\n-    }\n-\n-    @Override\n-    public void paintComponent(Graphics g) {\n-        Graphics2D g2 = (Graphics2D) g;\n-        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n-                RenderingHints.VALUE_ANTIALIAS_ON);\n-        g2.setRenderingHint(RenderingHints.KEY_RENDERING,\n-                RenderingHints.VALUE_RENDER_QUALITY);\n-        super.paintComponent(g2);\n-    }\n-\n-}, @@ -1,209 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.AutoCompleteListener;\n-\n-import java.awt.*;\n-import java.util.regex.Pattern;\n-\n-import javax.swing.*;\n-import javax.swing.event.UndoableEditListener;\n-\n-/**\n- * An implementation of the FieldEditor backed by a JTextArea. Used for\n- * multi-line input.\n- * \n- * @author $Author$\n- * @version $Revision$ ($Date$)\n- * \n- */\n-public class FieldTextArea extends JTextAreaWithHighlighting implements FieldEditor {\n-\n-    Dimension PREFERRED_SIZE;\n-\n-    private final JScrollPane sp;\n-\n-    private final FieldNameLabel label;\n-\n-    private String fieldName;\n-\n-    final static Pattern bull = Pattern.compile(\"\\\\s*[-\\\\*]+.*\");\n-\n-    final static Pattern indent = Pattern.compile(\"\\\\s+.*\");\n-\n-    private AutoCompleteListener autoCompleteListener = null;\n-\n-\n-    // protected UndoManager undo = new UndoManager();\n-\n-    public FieldTextArea(String fieldName_, String content) {\n-        super(content);\n-\n-        // Listen for undo and redo events\n-        /*\n-         * getDocument().addUndoableEditListener(new UndoableEditListener() {\n-         * public void undoableEditHappened(UndoableEditEvent evt) {\n-         * undo.addEdit(evt.getEdit()); } });\n-         */\n-\n-        updateFont();\n-\n-        // Add the global focus listener, so a menu item can see if this field\n-        // was focused when an action was called.\n-        addFocusListener(Globals.focusListener);\n-        addFocusListener(new FieldEditorFocusListener());\n-        sp = new JScrollPane(this, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,\n-                ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n-        sp.setMinimumSize(new Dimension(200, 1));\n-\n-        setLineWrap(true);\n-        setWrapStyleWord(true);\n-        fieldName = fieldName_;\n-\n-        label = new FieldNameLabel(' ' + StringUtil.nCase(fieldName) + ' ');\n-        setBackground(GUIGlobals.validFieldBackgroundColor);\n-        setForeground(GUIGlobals.editorTextColor);\n-\n-        // setFont(new Font(\"Times\", Font.PLAIN, 10));\n-\n-        FieldTextMenu popMenu = new FieldTextMenu(this);\n-        this.addMouseListener(popMenu);\n-        label.addMouseListener(popMenu);\n-\n-    }\n-\n-    @Override\n-    public Dimension getPreferredScrollableViewportSize() {\n-        return getPreferredSize();\n-    }\n-\n-    /*\n-     * public void paint(Graphics g) { Graphics2D g2 = (Graphics2D) g; if\n-     * (antialias) g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n-     * RenderingHints.VALUE_ANTIALIAS_ON); super.paint(g2); }\n-     */\n-\n-    @Override\n-    public String getFieldName() {\n-        return fieldName;\n-    }\n-\n-    public void setFieldName(String newName) {\n-        fieldName = newName;\n-    }\n-\n-    @Override\n-    public JLabel getLabel() {\n-        return label;\n-    }\n-\n-    @Override\n-    public void setLabelColor(Color c) {\n-        label.setForeground(c);\n-    }\n-\n-    @Override\n-    public JComponent getPane() {\n-        return sp;\n-    }\n-\n-    @Override\n-    public JComponent getTextComponent() {\n-        return this;\n-    }\n-\n-    @Override\n-    public void setActiveBackgroundColor() {\n-        setBackground(GUIGlobals.activeBackground);\n-    }\n-\n-    @Override\n-    public void setValidBackgroundColor() {\n-        setBackground(GUIGlobals.validFieldBackgroundColor);\n-    }\n-\n-    @Override\n-    public void setInvalidBackgroundColor() {\n-        setBackground(GUIGlobals.invalidFieldBackgroundColor);\n-    }\n-\n-    @Override\n-    public void updateFontColor() {\n-        setForeground(GUIGlobals.editorTextColor);\n-    }\n-\n-    @Override\n-    public void updateFont() {\n-        setFont(GUIGlobals.CURRENTFONT);\n-    }\n-\n-    @Override\n-    public void paste(String textToInsert) {\n-        int sel = getSelectionEnd() - getSelectionStart();\n-        if (sel > 0) {\n-            replaceSelection(textToInsert);\n-        } else {\n-            int cPos = this.getCaretPosition();\n-            this.insert(textToInsert, cPos);\n-        }\n-    }\n-\n-    @Override\n-    public boolean hasUndoInformation() {\n-        return false;// undo.canUndo();\n-    }\n-\n-    @Override\n-    public void undo() {\n-        /*\n-         * try { if (undo.canUndo()) { undo.undo(); } } catch\n-         * (CannotUndoException e) { }\n-         */\n-\n-    }\n-\n-    @Override\n-    public boolean hasRedoInformation() {\n-        return false;// undo.canRedo();\n-    }\n-\n-    @Override\n-    public void redo() {\n-        /*\n-         * try { if (undo.canRedo()) { undo.redo(); } } catch\n-         * (CannotUndoException e) { }\n-         */\n-\n-    }\n-\n-    @Override\n-    public void addUndoableEditListener(UndoableEditListener listener) {\n-        getDocument().addUndoableEditListener(listener);\n-    }\n-\n-    @Override\n-    public void setAutoCompleteListener(AutoCompleteListener listener) {\n-        autoCompleteListener = listener;\n-    }\n-\n-    @Override\n-    public void clearAutoCompleteSuggestion() {\n-        if (autoCompleteListener != null) {\n-            autoCompleteListener.clearCurrentSuggestion(this);\n-        }\n-    }\n-}, @@ -1,258 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import net.sf.jabref.gui.AutoCompleteListener;\n-\n-import java.awt.Color;\n-import java.awt.event.ActionEvent;\n-\n-import javax.swing.*;\n-import javax.swing.event.UndoableEditEvent;\n-import javax.swing.event.UndoableEditListener;\n-import javax.swing.text.Document;\n-import javax.swing.undo.CannotRedoException;\n-import javax.swing.undo.CannotUndoException;\n-import javax.swing.undo.UndoManager;\n-\n-public class FieldTextField extends JTextField implements FieldEditor {\n-\n-    private final String fieldName;\n-    private final JLabel label;\n-    private UndoManager undo;\n-    private AutoCompleteListener autoCompleteListener = null;\n-\n-\n-    //protected UndoManager undo = new UndoManager();\n-\n-    public FieldTextField(String fieldName_, String content, boolean changeColorOnFocus) {\n-        super(content);\n-\n-        // Listen for undo and redo events\n-        /*getDocument().addUndoableEditListener(new UndoableEditListener() {\n-            public void undoableEditHappened(UndoableEditEvent evt) {\n-                undo.addEdit(evt.getEdit());\n-            }\n-        });*/\n-        setupUndoRedo();\n-\n-        updateFont();\n-\n-        // Add the global focus listener, so a menu item can see if this field\n-        // was focused when\n-        // an action was called.\n-        addFocusListener(Globals.focusListener);\n-        if (changeColorOnFocus) {\n-            addFocusListener(new FieldEditorFocusListener());\n-        }\n-        fieldName = fieldName_;\n-        label = new FieldNameLabel(' ' + StringUtil.nCase(fieldName) + ' ');\n-        // label = new JLabel(\" \"+Util.nCase(fieldName)+\" \", JLabel.CENTER);\n-        // label.setBorder(BorderFactory.createEtchedBorder());\n-        setBackground(GUIGlobals.validFieldBackgroundColor);\n-        setForeground(GUIGlobals.editorTextColor);\n-\n-        // label.setOpaque(true);\n-        // if ((content != null) && (content.length() > 0))\n-        // label.setForeground(GUIGlobals.entryEditorLabelColor);\n-        // At construction time, the field can never have an invalid value.\n-        // else label.setForeground(GUIGlobals.nullFieldColor);\n-\n-        FieldTextMenu popMenu = new FieldTextMenu(this);\n-        this.addMouseListener(popMenu);\n-        label.addMouseListener(popMenu);\n-    }\n-\n-    private void setupUndoRedo() {\n-        undo = new UndoManager();\n-        Document doc = getDocument();\n-\n-        // Listen for undo and redo events\n-        doc.addUndoableEditListener(new UndoableEditListener() {\n-\n-            @Override\n-            public void undoableEditHappened(UndoableEditEvent evt) {\n-                undo.addEdit(evt.getEdit());\n-            }\n-        });\n-\n-        // Create an undo action and add it to the text component\n-        getActionMap().put(\"Undo\",\n-                new AbstractAction(\"Undo\") {\n-\n-                    @Override\n-                    public void actionPerformed(ActionEvent evt) {\n-                        try {\n-                            if (undo.canUndo()) {\n-                                undo.undo();\n-                            }\n-                        } catch (CannotUndoException ignored) {\n-                        }\n-                    }\n-                });\n-\n-        // Bind the undo action to ctl-Z\n-        getInputMap().put(Globals.prefs.getKey(\"Undo\"), \"Undo\");\n-\n-        // Create a redo action and add it to the text component\n-        getActionMap().put(\"Redo\",\n-                new AbstractAction(\"Redo\") {\n-\n-                    @Override\n-                    public void actionPerformed(ActionEvent evt) {\n-                        try {\n-                            if (undo.canRedo()) {\n-                                undo.redo();\n-                            }\n-                        } catch (CannotRedoException ignored) {\n-                        }\n-                    }\n-                });\n-\n-        // Bind the redo action to ctl-Y\n-        getInputMap().put(Globals.prefs.getKey(\"Redo\"), \"Redo\");\n-    }\n-\n-    @Override\n-    public void setText(String t) {\n-        super.setText(t);\n-        if (undo != null) {\n-            undo.discardAllEdits();\n-        }\n-    }\n-\n-    @Override\n-    public void append(String text) {\n-        setText(getText() + text);\n-    }\n-\n-    @Override\n-    public String getFieldName() {\n-        return fieldName;\n-    }\n-\n-    @Override\n-    public JLabel getLabel() {\n-        return label;\n-    }\n-\n-    @Override\n-    public void setLabelColor(Color c) {\n-        label.setForeground(c);\n-        throw new NullPointerException(\"ok\");\n-    }\n-\n-    @Override\n-    public JComponent getPane() {\n-        return this;\n-    }\n-\n-    @Override\n-    public JComponent getTextComponent() {\n-        return this;\n-\n-    }\n-\n-    @Override\n-    public void setActiveBackgroundColor() {\n-        setBackground(GUIGlobals.activeBackground);\n-    }\n-\n-    @Override\n-    public void setValidBackgroundColor() {\n-        setBackground(GUIGlobals.validFieldBackgroundColor);\n-    }\n-\n-    @Override\n-    public void setInvalidBackgroundColor() {\n-        setBackground(GUIGlobals.invalidFieldBackgroundColor);\n-    }\n-\n-    @Override\n-    public void updateFontColor() {\n-        setForeground(GUIGlobals.editorTextColor);\n-    }\n-\n-    @Override\n-    public void updateFont() {\n-        setFont(GUIGlobals.CURRENTFONT);\n-    }\n-\n-    /*public void paint(Graphics g) {\n-    \tGraphics2D g2 = (Graphics2D) g;\n-    \tif (antialias)\n-    \t\tg2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n-    \tsuper.paint(g2);\n-    }*/\n-\n-    @Override\n-    public void paste(String textToInsert) {\n-        int sel = getSelectionEnd() - getSelectionStart();\n-        if (sel < 1) {\n-            int cPos = getCaretPosition();\n-            select(cPos, cPos);\n-        }\n-        replaceSelection(textToInsert);\n-    }\n-\n-    @Override\n-    public boolean hasUndoInformation() {\n-        return false;//undo.canUndo();\n-    }\n-\n-    @Override\n-    public void undo() {\n-        /*try {\n-            if (undo.canUndo()) {\n-                undo.undo();\n-            }\n-        } catch (CannotUndoException e) {\n-        }*/\n-    }\n-\n-    @Override\n-    public boolean hasRedoInformation() {\n-        return false;//undo.canRedo();\n-    }\n-\n-    @Override\n-    public void redo() {\n-        /*try {\n-            if (undo.canRedo()) {\n-                undo.redo();\n-            }\n-        } catch (CannotUndoException e) {\n-        }*/\n-\n-    }\n-\n-    @Override\n-    public void addUndoableEditListener(UndoableEditListener listener) {\n-        getDocument().addUndoableEditListener(listener);\n-    }\n-\n-    @Override\n-    public void setAutoCompleteListener(AutoCompleteListener listener) {\n-        autoCompleteListener = listener;\n-    }\n-\n-    @Override\n-    public void clearAutoCompleteSuggestion() {\n-        if (autoCompleteListener != null) {\n-            autoCompleteListener.clearCurrentSuggestion(this);\n-        }\n-    }\n-}, @@ -1,268 +0,0 @@\n-/*\n- Copyright (C) 2004 R. Nagel\n-\n- All programs in this directory and\n- subdirectories are published under the GNU General Public License as\n- described below.\n-\n- This program is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2 of the License, or (at\n- your option) any later version.\n-\n- This program is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License\n- along with this program; if not, write to the Free Software\n- Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307\n- USA\n-\n- Further information about the GNU GPL is available at:\n- http://www.gnu.org/copyleft/gpl.ja.html\n-\n- */\n-\n-// created by : r.nagel 19.10.2004\n-//\n-// function : a popupmenu for bibtex fieldtext editors\n-//\n-//\n-// modified :\n-\n-package net.sf.jabref;\n-\n-import java.awt.event.ActionEvent;\n-import java.awt.event.MouseEvent;\n-import java.awt.event.MouseListener;\n-import java.net.URL;\n-\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import javax.swing.JPopupMenu;\n-import javax.swing.KeyStroke;\n-import javax.swing.text.JTextComponent;\n-\n-import net.sf.jabref.util.CaseChangeMenu;\n-import net.sf.jabref.util.NameListNormalizer;\n-import net.sf.jabref.util.GoogleUrlCleaner;\n-\n-public class FieldTextMenu implements MouseListener\n-{\n-\n-    private final FieldEditor myFieldName;\n-    private final JPopupMenu inputMenu = new JPopupMenu();\n-    private final CopyAction copyAct = new CopyAction();\n-\n-\n-    public FieldTextMenu(FieldEditor fieldComponent)\n-    {\n-        myFieldName = fieldComponent;\n-\n-        // copy/paste Menu\n-        PasteAction pasteAct = new PasteAction();\n-        inputMenu.add(pasteAct);\n-        inputMenu.add(copyAct);\n-        inputMenu.addSeparator();\n-        inputMenu.add(new ReplaceAction());\n-        inputMenu.add(new UrlAction());\n-\n-        if (myFieldName.getTextComponent() instanceof JTextComponent) {\n-            inputMenu.add(new CaseChangeMenu((JTextComponent) myFieldName.getTextComponent()));\n-        }\n-    }\n-\n-    @Override\n-    public void mouseClicked(MouseEvent e)\n-    {\n-    }\n-\n-    @Override\n-    public void mouseEntered(MouseEvent e)\n-    {\n-    }\n-\n-    @Override\n-    public void mouseExited(MouseEvent e)\n-    {\n-    }\n-\n-    @Override\n-    public void mousePressed(MouseEvent e)\n-    {\n-        maybeShowPopup(e);\n-    }\n-\n-    @Override\n-    public void mouseReleased(MouseEvent e)\n-    {\n-        maybeShowPopup(e);\n-    }\n-\n-    private void maybeShowPopup(MouseEvent e)\n-    {\n-        if (e.isPopupTrigger())\n-        {\n-            if (myFieldName != null)\n-            {\n-                myFieldName.requestFocus();\n-\n-                // enable/disable copy to clipboard if selected text available\n-                String txt = myFieldName.getSelectedText();\n-                boolean cStat = false;\n-                if (txt != null) {\n-                    if (!txt.isEmpty()) {\n-                        cStat = true;\n-                    }\n-                }\n-\n-                copyAct.setEnabled(cStat);\n-                inputMenu.show(e.getComponent(), e.getX(), e.getY());\n-            }\n-        }\n-    }\n-\n-\n-    // ---------------------------------------------------------------------------\n-    abstract static class BasicAction extends AbstractAction\n-    {\n-\n-        public BasicAction(String text, String description, URL icon)\n-        {\n-            super(Globals.lang(text), new ImageIcon(icon));\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(description));\n-        }\n-\n-        public BasicAction(String text, String description, URL icon, KeyStroke key)\n-        {\n-            super(Globals.lang(text), new ImageIcon(icon));\n-            putValue(Action.ACCELERATOR_KEY, key);\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(description));\n-        }\n-\n-        public BasicAction(String text)\n-        {\n-            super(Globals.lang(text));\n-        }\n-\n-        public BasicAction(String text, KeyStroke key)\n-        {\n-            super(Globals.lang(text));\n-            putValue(Action.ACCELERATOR_KEY, key);\n-        }\n-\n-        @Override\n-        public abstract void actionPerformed(ActionEvent e);\n-    }\n-\n-    //---------------------------------------------------------------\n-    /*class MenuHeaderAction extends BasicAction\n-    {\n-      public MenuHeaderAction(String comment)\n-      {\n-        super(\"Edit -\" +comment);\n-        this.setEnabled(false);\n-      }\n-\n-      public void actionPerformed(ActionEvent e) { }\n-    }\n-      */\n-\n-    // ---------------------------------------------------------------------------\n-    class PasteAction extends BasicAction\n-    {\n-\n-        public PasteAction()\n-        {\n-            super(\"Paste from clipboard\", \"Paste from clipboard\",\n-                    GUIGlobals.getIconUrl(\"paste\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e)\n-        {\n-            try\n-            {\n-                String data = ClipBoardManager.clipBoard.getClipboardContents();\n-                if (data != null) {\n-                    if (!data.isEmpty()) {\n-                        if (myFieldName != null) {\n-                            myFieldName.paste(data);\n-                        }\n-                    }\n-                }\n-            } catch (Exception ignored) {\n-            }\n-        }\n-    }\n-\n-    // ---------------------------------------------------------------------------\n-    class CopyAction extends BasicAction\n-    {\n-\n-        public CopyAction()\n-        {\n-            super(\"Copy to clipboard\", \"Copy to clipboard\", GUIGlobals.getIconUrl(\"copy\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e)\n-        {\n-            try\n-            {\n-                //        String data = ( String ) systemClip.getContents( null ).getTransferData(\n-                //            DataFlavor.stringFlavor ) ;\n-                if (myFieldName != null)\n-                {\n-                    String data = myFieldName.getSelectedText();\n-                    if (data != null) {\n-                        if (!data.isEmpty()) {\n-                            ClipBoardManager.clipBoard.setClipboardContents(data);\n-                        }\n-                    }\n-                }\n-            } catch (Exception ignored) {\n-            }\n-        }\n-    }\n-\n-    class ReplaceAction extends BasicAction {\n-\n-        public ReplaceAction() {\n-            super(\"Normalize to BibTeX name format\");\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"If possible, normalize this list of names to conform to standard BibTeX name formatting\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent evt) {\n-            if (myFieldName.getText().isEmpty()) {\n-                return;\n-            }\n-            //myFieldName.selectAll();\n-            String input = myFieldName.getText();\n-            //myFieldName.setText(input.replaceAll(\",\",\" and\"));\n-            myFieldName.setText(NameListNormalizer.normalizeAuthorList(input));\n-        }\n-    }\n-\n-    class UrlAction extends BasicAction {\n-\n-        public UrlAction() {\n-            super(\"Clean Google URL\");\n-            putValue(Action.SHORT_DESCRIPTION, Globals.lang(\"If possible, clean URL that Google search returned\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent evt) {\n-            if (myFieldName.getText().isEmpty()) {\n-                return;\n-            }\n-            String input = myFieldName.getText();\n-            myFieldName.setText(GoogleUrlCleaner.cleanUrl(input));\n-        }\n-    }\n-\n-}, @@ -1,66 +0,0 @@\n-package net.sf.jabref;\n-\n-import net.sf.jabref.export.SaveSession;\n-\n-import java.io.File;\n-\n-public class FileBasedLock {\n-\n-    /**\n-     * This method checks whether there is a lock file for the given file. If\n-     * there is, it waits for 500 ms. This is repeated until the lock is gone\n-     * or we have waited the maximum number of times.\n-     *\n-     * @param file The file to check the lock for.\n-     * @param maxWaitCount The maximum number of times to wait.\n-     * @return true if the lock file is gone, false if it is still there.\n-     */\n-    public static boolean waitForFileLock(File file, int maxWaitCount) {\n-        // Check if the file is locked by another JabRef user:\n-        int lockCheckCount = 0;\n-        while (hasLockFile(file)) {\n-\n-            if (lockCheckCount++ == maxWaitCount) {\n-                return false;\n-            }\n-            try {\n-                Thread.sleep(500);\n-            } catch (InterruptedException ignored) {\n-            }\n-        }\n-        return true;\n-    }\n-\n-    /**\n-     * Check whether a lock file exists for this file.\n-     * @param file The file to check.\n-     * @return true if a lock file exists, false otherwise.\n-     */\n-    public static boolean hasLockFile(File file) {\n-        File lock = new File(file.getPath() + SaveSession.LOCKFILE_SUFFIX);\n-        return lock.exists();\n-    }\n-\n-    /**\n-     * Find the lock file's last modified time, if it has a lock file.\n-     * @param file The file to check.\n-     * @return the last modified time if lock file exists, -1 otherwise.\n-     */\n-    public static long getLockFileTimeStamp(File file) {\n-        File lock = new File(file.getPath() + SaveSession.LOCKFILE_SUFFIX);\n-        return lock.exists() ? lock.lastModified() : -1;\n-    }\n-\n-    /**\n-     * Check if a lock file exists, and delete it if it does.\n-     * @return true if the lock file existed, false otherwise.\n-     */\n-    public static boolean deleteLockFile(File file) {\n-        File lock = new File(file.getPath() + SaveSession.LOCKFILE_SUFFIX);\n-        if (!lock.exists()) {\n-            return false;\n-        }\n-        lock.delete();\n-        return true;\n-    }\n-}, @@ -1,150 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref;\n-\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.io.File;\n-import java.util.Iterator;\n-import java.util.LinkedList;\n-\n-import javax.swing.JMenu;\n-import javax.swing.JMenuItem;\n-import javax.swing.JOptionPane;\n-\n-public class FileHistory extends JMenu implements ActionListener {\n-\n-    private final JabRefPreferences prefs;\n-    private final LinkedList<String> history = new LinkedList<String>();\n-    private final JabRefFrame frame;\n-\n-\n-    public FileHistory(JabRefPreferences prefs, JabRefFrame frame) {\n-        String name = Globals.menuTitle(\"Recent files\");\n-        int i = name.indexOf('&');\n-        if (i >= 0) {\n-            setText(name.substring(0, i) + name.substring(i + 1));\n-            char mnemonic = Character.toUpperCase(name.charAt(i + 1));\n-            setMnemonic((int) mnemonic);\n-        } else {\n-            setText(name);\n-        }\n-\n-        this.prefs = prefs;\n-        this.frame = frame;\n-        String[] old = prefs.getStringArray(\"recentFiles\");\n-        if ((old != null) && (old.length > 0)) {\n-            for (i = 0; i < old.length; i++) {\n-                history.addFirst(old[i]);\n-            }\n-            setItems();\n-        } else {\n-            setEnabled(false);\n-        }\n-    }\n-\n-    /**\n-     * Adds the file name to the top of the menu. If it already is in\n-     * the menu, it is merely moved to the top.\n-     *\n-     * @param filename a <code>String</code> value\n-     */\n-    public void newFile(String filename) {\n-        int i = 0;\n-        while (i < history.size()) {\n-            if (history.get(i).equals(filename)) {\n-                history.remove(i);\n-                i--;\n-            }\n-            i++;\n-        }\n-        history.addFirst(filename);\n-        while (history.size() > prefs.getInt(\"historySize\")) {\n-            history.removeLast();\n-        }\n-        setItems();\n-        if (!isEnabled()) {\n-            setEnabled(true);\n-        }\n-    }\n-\n-    private void setItems() {\n-        removeAll();\n-        Iterator<String> i = history.iterator();\n-        int count = 1;\n-        while (i.hasNext()) {\n-            addItem(i.next(), count);\n-            count++;\n-        }\n-    }\n-\n-    private void addItem(String filename, int num) {\n-        String number = num + \"\";\n-        JMenuItem item = new JMenuItem(number + \". \" + filename);\n-        char mnemonic = Character.toUpperCase(number.charAt(0));\n-        item.setMnemonic((int) mnemonic);\n-        item.addActionListener(this);\n-        add(item);\n-        //history.addFirst(item);\n-    }\n-\n-    private void removeItem(String filename) {\n-        int i = 0;\n-        while (i < history.size()) {\n-            if (history.get(i).equals(filename)) {\n-                history.remove(i);\n-                setItems();\n-                return;\n-            }\n-            i++;\n-        }\n-    }\n-\n-    public void storeHistory() {\n-        if (!history.isEmpty()) {\n-            String[] names = new String[history.size()];\n-            for (int i = 0; i < names.length; i++) {\n-                names[i] = history.get(i);\n-            }\n-            prefs.putStringArray(\"recentFiles\", names);\n-        }\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-        String name = ((JMenuItem) e.getSource()).getText();\n-        int pos = name.indexOf(\" \");\n-        name = name.substring(pos + 1);\n-        //Util.pr(\"'\"+name+\"'\");\n-        final File fileToOpen = new File(name);\n-\n-        if (!fileToOpen.exists()) {\n-            JOptionPane.showMessageDialog(frame, Globals.lang(\"File not found\") + \": \" + fileToOpen.getName(),\n-                    \"Error\", JOptionPane.ERROR_MESSAGE);\n-            removeItem(name);\n-            return;\n-        }\n-        JabRefExecutorService.INSTANCE.execute(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                frame.open.openIt(fileToOpen, true);\n-            }\n-        });\n-\n-    }\n-\n-}, @@ -1,415 +0,0 @@\n-/*  Copyright (C) 2013 JabRef contributors.\n- This program is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2 of the License, or\n- (at your option) any later version.\n-\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License along\n- with this program; if not, write to the Free Software Foundation, Inc.,\n- 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n- */\n-package net.sf.jabref;\n-\n-import java.awt.BorderLayout;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-\n-import javax.swing.BorderFactory;\n-import javax.swing.ButtonGroup;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComboBox;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n-import javax.swing.JRadioButton;\n-import javax.swing.JTextField;\n-\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n-/**\n- * Preference tab for file sorting options.\n- */\n-@SuppressWarnings(\"serial\")\n-public class FileSortTab extends JPanel implements PrefsTab {\n-\n-    private final JabRefPreferences _prefs;\n-    private final JRadioButton saveInOriginalOrder;\n-    private final JRadioButton saveInTableOrder;\n-    private final JRadioButton saveInSpecifiedOrder;\n-    private JCheckBox savePriDesc, saveSecDesc, saveTerDesc;\n-    private JTextField savePriField, saveSecField, saveTerField;\n-    private JComboBox savePriSort, saveSecSort, saveTerSort;\n-\n-    private final JRadioButton exportInOriginalOrder;\n-    private final JRadioButton exportInTableOrder;\n-    private final JRadioButton exportInSpecifiedOrder;\n-    private JCheckBox exportPriDesc, exportSecDesc, exportTerDesc;\n-    private JTextField exportPriField, exportSecField, exportTerField;\n-    private JComboBox exportPriSort, exportSecSort, exportTerSort;\n-\n-\n-    public FileSortTab(JabRefFrame frame, JabRefPreferences prefs) {\n-        this._prefs = prefs;\n-        FormLayout layout = new FormLayout(\"4dlu, left:pref, 4dlu, fill:pref\", \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n-        builder.leadingColumnOffset(1);\n-\n-        { // SAVE SORT ORDER\n-          // create Components\n-            saveInOriginalOrder = new JRadioButton(Globals.lang(\"Save entries in their original order\"));\n-            saveInTableOrder = new JRadioButton(Globals.lang(\"Save in current table sort order\"));\n-            saveInSpecifiedOrder = new JRadioButton(Globals.lang(\"Save entries ordered as specified\"));\n-\n-            ButtonGroup bg = new ButtonGroup();\n-            bg.add(saveInOriginalOrder);\n-            bg.add(saveInTableOrder);\n-            bg.add(saveInSpecifiedOrder);\n-\n-            ActionListener listener = new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    boolean selected = e.getSource() == saveInSpecifiedOrder;\n-                    savePriSort.setEnabled(selected);\n-                    savePriField.setEnabled(selected);\n-                    savePriDesc.setEnabled(selected);\n-                    saveSecSort.setEnabled(selected);\n-                    saveSecField.setEnabled(selected);\n-                    saveSecDesc.setEnabled(selected);\n-                    saveTerSort.setEnabled(selected);\n-                    saveTerField.setEnabled(selected);\n-                    saveTerDesc.setEnabled(selected);\n-                }\n-            };\n-            saveInOriginalOrder.addActionListener(listener);\n-            saveInTableOrder.addActionListener(listener);\n-            saveInSpecifiedOrder.addActionListener(listener);\n-\n-            ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n-            v.add(BibtexFields.KEY_FIELD);\n-            Collections.sort(v);\n-            String[] allPlusKey = v.toArray(new String[v.size()]);\n-            savePriSort = new JComboBox(allPlusKey);\n-            saveSecSort = new JComboBox(allPlusKey);\n-            saveTerSort = new JComboBox(allPlusKey);\n-\n-            savePriField = new JTextField(10);\n-            saveSecField = new JTextField(10);\n-            saveTerField = new JTextField(10);\n-\n-            savePriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            saveSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            saveTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-\n-            savePriSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (savePriSort.getSelectedIndex() > 0) {\n-                        savePriField.setText(savePriSort.getSelectedItem().toString());\n-                        savePriSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-            saveSecSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (saveSecSort.getSelectedIndex() > 0) {\n-                        saveSecField.setText(saveSecSort.getSelectedItem().toString());\n-                        saveSecSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-            saveTerSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (saveTerSort.getSelectedIndex() > 0) {\n-                        saveTerField.setText(saveTerSort.getSelectedItem().toString());\n-                        saveTerSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-\n-            savePriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            saveSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            saveTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-\n-            // create GUI\n-            JLabel lab;\n-\n-            builder.appendSeparator(Globals.lang(\"Save sort order\"));\n-            builder.append(saveInOriginalOrder, 1);\n-            builder.nextLine();\n-            builder.append(saveInTableOrder, 1);\n-            builder.nextLine();\n-            builder.append(saveInSpecifiedOrder, 1);\n-            builder.nextLine();\n-\n-            // Create a new panel with its own FormLayout for these items:\n-            FormLayout layout2 = new FormLayout(\n-                    \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n-            DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n-            lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(savePriSort);\n-            builder2.append(savePriField);\n-            builder2.append(savePriDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(saveSecSort);\n-            builder2.append(saveSecField);\n-            builder2.append(saveSecDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(saveTerSort);\n-            builder2.append(saveTerField);\n-            builder2.append(saveTerDesc);\n-\n-            JPanel saveSpecPanel = builder2.getPanel();\n-            builder.append(saveSpecPanel);\n-            builder.nextLine();\n-        }\n-\n-        { // EXPORT SORT ORDER\n-          // create Components\n-            exportInOriginalOrder = new JRadioButton(Globals.lang(\"Export entries in their original order\"));\n-            exportInTableOrder = new JRadioButton(Globals.lang(\"Export in current table sort order\"));\n-            exportInSpecifiedOrder = new JRadioButton(Globals.lang(\"Export entries ordered as specified\"));\n-\n-            ButtonGroup bg = new ButtonGroup();\n-            bg.add(exportInOriginalOrder);\n-            bg.add(exportInTableOrder);\n-            bg.add(exportInSpecifiedOrder);\n-\n-            ActionListener listener = new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    boolean selected = e.getSource() == exportInSpecifiedOrder;\n-                    exportPriSort.setEnabled(selected);\n-                    exportPriField.setEnabled(selected);\n-                    exportPriDesc.setEnabled(selected);\n-                    exportSecSort.setEnabled(selected);\n-                    exportSecField.setEnabled(selected);\n-                    exportSecDesc.setEnabled(selected);\n-                    exportTerSort.setEnabled(selected);\n-                    exportTerField.setEnabled(selected);\n-                    exportTerDesc.setEnabled(selected);\n-                }\n-            };\n-            exportInOriginalOrder.addActionListener(listener);\n-            exportInTableOrder.addActionListener(listener);\n-            exportInSpecifiedOrder.addActionListener(listener);\n-\n-            ArrayList<String> v = new ArrayList<String>(Arrays.asList(BibtexFields.getAllFieldNames()));\n-            v.add(BibtexFields.KEY_FIELD);\n-            Collections.sort(v);\n-            String[] allPlusKey = v.toArray(new String[v.size()]);\n-            exportPriSort = new JComboBox(allPlusKey);\n-            exportSecSort = new JComboBox(allPlusKey);\n-            exportTerSort = new JComboBox(allPlusKey);\n-\n-            exportPriField = new JTextField(10);\n-            exportSecField = new JTextField(10);\n-            exportTerField = new JTextField(10);\n-\n-            exportPriSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            exportSecSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-            exportTerSort.insertItemAt(Globals.lang(\"<select>\"), 0);\n-\n-            exportPriSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportPriSort.getSelectedIndex() > 0) {\n-                        exportPriField.setText(exportPriSort.getSelectedItem().toString());\n-                        exportPriSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-            exportSecSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportSecSort.getSelectedIndex() > 0) {\n-                        exportSecField.setText(exportSecSort.getSelectedItem().toString());\n-                        exportSecSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-            exportTerSort.addActionListener(new ActionListener() {\n-\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    if (exportTerSort.getSelectedIndex() > 0) {\n-                        exportTerField.setText(exportTerSort.getSelectedItem().toString());\n-                        exportTerSort.setSelectedIndex(0);\n-                    }\n-                }\n-            });\n-\n-            exportPriDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            exportSecDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-            exportTerDesc = new JCheckBox(Globals.lang(\"Descending\"));\n-\n-            // create GUI\n-            JLabel lab;\n-\n-            builder.appendSeparator(Globals.lang(\"Export sort order\"));\n-            builder.append(exportInOriginalOrder, 1);\n-            builder.nextLine();\n-            builder.append(exportInTableOrder, 1);\n-            builder.nextLine();\n-            builder.append(exportInSpecifiedOrder, 1);\n-            builder.nextLine();\n-\n-            // Create a new panel with its own FormLayout for these items:\n-            FormLayout layout2 = new FormLayout(\n-                    \"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n-            DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n-            lab = new JLabel(Globals.lang(\"Primary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportPriSort);\n-            builder2.append(exportPriField);\n-            builder2.append(exportPriDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Secondary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportSecSort);\n-            builder2.append(exportSecField);\n-            builder2.append(exportSecDesc);\n-            builder2.nextLine();\n-            lab = new JLabel(Globals.lang(\"Tertiary sort criterion\"));\n-            builder2.append(lab);\n-            builder2.append(exportTerSort);\n-            builder2.append(exportTerField);\n-            builder2.append(exportTerDesc);\n-\n-            builder.append(builder2.getPanel());\n-            builder.nextLine();\n-        }\n-\n-        // COMBINE EVERYTHING\n-        JPanel pan = builder.getPanel();\n-        pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        setLayout(new BorderLayout());\n-        add(pan, BorderLayout.CENTER);\n-    }\n-\n-    @Override\n-    public void setValues() {\n-        if (_prefs.getBoolean(JabRefPreferences.SAVE_IN_ORIGINAL_ORDER)) {\n-            saveInOriginalOrder.setSelected(true);\n-        } else if (_prefs.getBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER)) {\n-            saveInSpecifiedOrder.setSelected(true);\n-        } else {\n-            saveInTableOrder.setSelected(true);\n-        }\n-\n-        {\n-            boolean selected = _prefs.getBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER);\n-            savePriSort.setEnabled(selected);\n-            savePriField.setEnabled(selected);\n-            savePriDesc.setEnabled(selected);\n-            saveSecSort.setEnabled(selected);\n-            saveSecField.setEnabled(selected);\n-            saveSecDesc.setEnabled(selected);\n-            saveTerSort.setEnabled(selected);\n-            saveTerField.setEnabled(selected);\n-            saveTerDesc.setEnabled(selected);\n-        }\n-\n-        savePriField.setText(_prefs.get(JabRefPreferences.SAVE_PRIMARY_SORT_FIELD));\n-        saveSecField.setText(_prefs.get(JabRefPreferences.SAVE_SECONDARY_SORT_FIELD));\n-        saveTerField.setText(_prefs.get(JabRefPreferences.SAVE_TERTIARY_SORT_FIELD));\n-\n-        savePriSort.setSelectedIndex(0);\n-        saveSecSort.setSelectedIndex(0);\n-        saveTerSort.setSelectedIndex(0);\n-\n-        savePriDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_PRIMARY_SORT_DESCENDING));\n-        saveSecDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_SECONDARY_SORT_DESCENDING));\n-        saveTerDesc.setSelected(_prefs.getBoolean(JabRefPreferences.SAVE_TERTIARY_SORT_DESCENDING));\n-\n-        if (_prefs.getBoolean(JabRefPreferences.EXPORT_IN_ORIGINAL_ORDER)) {\n-            exportInOriginalOrder.setSelected(true);\n-        } else if (_prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER)) {\n-            exportInSpecifiedOrder.setSelected(true);\n-        } else {\n-            exportInTableOrder.setSelected(true);\n-        }\n-\n-        {\n-            boolean selected = _prefs.getBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER);\n-            exportPriSort.setEnabled(selected);\n-            exportPriField.setEnabled(selected);\n-            exportPriDesc.setEnabled(selected);\n-            exportSecSort.setEnabled(selected);\n-            exportSecField.setEnabled(selected);\n-            exportSecDesc.setEnabled(selected);\n-            exportTerSort.setEnabled(selected);\n-            exportTerField.setEnabled(selected);\n-            exportTerDesc.setEnabled(selected);\n-        }\n-\n-        exportPriField.setText(_prefs.get(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD));\n-        exportSecField.setText(_prefs.get(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD));\n-        exportTerField.setText(_prefs.get(JabRefPreferences.EXPORT_TERTIARY_SORT_FIELD));\n-\n-        exportPriSort.setSelectedIndex(0);\n-        exportSecSort.setSelectedIndex(0);\n-        exportTerSort.setSelectedIndex(0);\n-\n-        exportPriDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_PRIMARY_SORT_DESCENDING));\n-        exportSecDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_SECONDARY_SORT_DESCENDING));\n-        exportTerDesc.setSelected(_prefs.getBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING));\n-    }\n-\n-    @Override\n-    public void storeSettings() {\n-        _prefs.putBoolean(JabRefPreferences.SAVE_IN_ORIGINAL_ORDER, saveInOriginalOrder.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.SAVE_IN_SPECIFIED_ORDER, saveInSpecifiedOrder.isSelected());\n-\n-        _prefs.putBoolean(JabRefPreferences.SAVE_PRIMARY_SORT_DESCENDING, savePriDesc.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.SAVE_SECONDARY_SORT_DESCENDING, saveSecDesc.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.SAVE_TERTIARY_SORT_DESCENDING, saveTerDesc.isSelected());\n-\n-        _prefs.put(JabRefPreferences.SAVE_PRIMARY_SORT_FIELD, savePriField.getText().toLowerCase().trim());\n-        _prefs.put(JabRefPreferences.SAVE_SECONDARY_SORT_FIELD, saveSecField.getText().toLowerCase().trim());\n-        _prefs.put(JabRefPreferences.SAVE_TERTIARY_SORT_FIELD, saveTerField.getText().toLowerCase().trim());\n-\n-        _prefs.putBoolean(JabRefPreferences.EXPORT_IN_ORIGINAL_ORDER, exportInOriginalOrder.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.EXPORT_IN_SPECIFIED_ORDER, exportInSpecifiedOrder.isSelected());\n-\n-        _prefs.putBoolean(JabRefPreferences.EXPORT_PRIMARY_SORT_DESCENDING, exportPriDesc.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.EXPORT_SECONDARY_SORT_DESCENDING, exportSecDesc.isSelected());\n-        _prefs.putBoolean(JabRefPreferences.EXPORT_TERTIARY_SORT_DESCENDING, exportTerDesc.isSelected());\n-\n-        _prefs.put(JabRefPreferences.EXPORT_PRIMARY_SORT_FIELD, exportPriField.getText().toLowerCase().trim());\n-        _prefs.put(JabRefPreferences.EXPORT_SECONDARY_SORT_FIELD, exportSecField.getText().toLowerCase().trim());\n-        _prefs.put(JabRefPreferences.EXPORT_TERTIARY_SORT_FIELD, exportTerField.getText().toLowerCase().trim());\n-\n-    }\n-\n-    @Override\n-    public boolean readyToClose() {\n-        return true;\n-    }\n-\n-    @Override\n-    public String getTabName() {\n-        return Globals.lang(\"File Sorting\");\n-    }\n-}, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ", 3195, 51778, "\"modified, modified, added, modified, added, modified, removed, modified, removed, renamed, modified, removed, removed, modified, removed, removed, removed, removed, added, renamed, renamed, renamed, renamed, renamed, added, renamed, added, modified, removed, added, removed, removed, modified, modified, modified, renamed, added, removed, removed, removed, added, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, added, added, renamed, renamed, renamed, removed, removed, removed, added, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, modified, removed, removed, removed, removed, removed, removed, modified, modified, modified, removed, removed, modified, modified, removed, removed, removed, removed, modified, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, modified, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, removed, \"", 54973], ["Simon Harrer", "Add CHANGELOG", "10/06/15, 03:29:28 PM", "Simon Harrer", "6425d452b673fe9191588464b2ea32dd7ed29aac", ["CHANGELOG"], "@@ -14,6 +14,7 @@\n     - BREAKING: Remove plugin functionality.\n     - Fixes Bug#1297: No console message on closing.\n     - Fix bug #1285: Editing position is not lost on saving\n+    - Fix bug #194: JabRef starts again on Win XP and Win Vista\n     - Remove support for custom icon themes. The user has to use the default one.\n     - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n     - Solved feature request #767: New subdatabase based on AUX file (biblatex), ", 1, 0, "\"modified, \"", 1], ["Igor Steinmacher", "Updated CHANGELOG with fixed sent via PR #198", "10/07/15, 11:32:13 PM", "Igor Steinmacher", "a518686a17e30e1cbc96e587d4cd29e052989588", ["CHANGELOG"], "@@ -1,4 +1,5 @@\n [master]\n+    - Fixed bug 1282 (SourceForge) related to backslashes duplication.\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\", ", 1, 0, "\"modified, \"", 1], ["Oscar Gustafsson", "Fixed copyright statements and ChangeLog", "10/04/15, 10:20:09 PM", "Oscar Gustafsson", "bdbc6890b0dc5b1cccef155dd8054b77372a4b39", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/fieldeditors/contextmenu/ConversionMenu.java", "src/main/java/net/sf/jabref/importer/fetcher/DOItoBibTeXFetcher.java", "src/main/java/net/sf/jabref/logic/util/strings/Converters.java"], "@@ -2,7 +2,6 @@\n     - Fixed a bug in the IEEEXploreFetcher\n     - Added more characters to HTML/Unicode converter\n     - Feature: Push citations to Texmaker (SF: #318, #582)\n-\t- Feature: Added converters from HTML and Unicode to LaTeX on right click in text fields (#191)\n     - Feature: Added converters from HTML and Unicode to LaTeX on right click in text fields (#191)\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType, @@ -1,4 +1,6 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2015 JabRef contributors.\n+    Copyright (C) 2015 Oscar Gustafsson.\n+\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -24,8 +26,14 @@\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n \n+/**\n+ * @author Oscar Gustafsson\n+ *\n+ * Menu to show up on right-click in a text field for converting text formats\n+ */\n public class ConversionMenu extends JMenu {\n \n+    private static final long serialVersionUID = 8553688191031156265L;\n     private final JTextComponent parent;\n \n , @@ -18,11 +18,9 @@\n \n import java.io.FileNotFoundException;\n import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n-import java.net.URLEncoder;\n \n import javax.swing.JOptionPane;\n import javax.swing.JPanel;, @@ -1,4 +1,6 @@\n-/*  Copyright (C) 2003-2015 JabRef contributors.\n+/*  Copyright (C) 2015 JabRef contributors.\n+    Copyright (C) 2015 Oscar Gustafsson.\n+\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or, ", 12, 5, "\"modified, modified, modified, modified, \"", 17], ["Oscar Gustafsson", "Added support for pushing citations to Texmaker", "10/02/15, 09:21:54 PM", "Oscar Gustafsson", "fab96434cc2fd1e0a5ff950eb5e90bc6732d2342", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/external/PushToApplicationButton.java", "src/main/java/net/sf/jabref/external/PushToTexmaker.java", "src/main/java/net/sf/jabref/gui/preftabs/ExternalTab.java", "src/main/resources/images/crystal_16/Icons.properties", "src/main/resources/images/crystal_16/texmaker.png"], "@@ -1,5 +1,6 @@\n [master]\n     - Added more characters to HTML/Unicode converter\n+    - Feature: Push citations to Texmaker (SF: #318, #582)\n     - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n     - Breaking API change: String[] is replaced by List<String> in BibtexEntryType\n     - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\", @@ -77,6 +77,7 @@\n     public static final String WIN_LOOK_AND_FEEL = \"lookAndFeel\";\n     public static final String LATEX_EDITOR_PATH = \"latexEditorPath\";\n     public static final String WIN_EDT_PATH = \"winEdtPath\";\n+    public static final String TEXMAKER_PATH = \"texmakerPath\";\n     public static final String SHOW_SHORT = \"showShort\";\n     public static final String LANGUAGE = \"language\";\n     public static final String NAMES_LAST_ONLY = \"namesLastOnly\";\n@@ -291,6 +292,7 @@\n     public static final String CITE_COMMAND_LED = \"citeCommandLed\";\n     public static final String CITE_COMMAND_WIN_EDT = \"citeCommandWinEdt\";\n     public static final String CITE_COMMAND_EMACS = \"citeCommandEmacs\";\n+    public static final String CITE_COMMAND_TEXMAKER = \"citeCommandTexmaker\";\n     public static final String CITE_COMMAND_VIM = \"citeCommandVim\";\n     public static final String CITE_COMMAND = \"citeCommand\";\n     public static final String EXTERNAL_JOURNAL_LISTS = \"externalJournalLists\";\n@@ -438,6 +440,7 @@ private JabRefPreferences() {\n             defaults.put(WIN_LOOK_AND_FEEL, \"com.jgoodies.looks.windows.WindowsLookAndFeel\");\n             defaults.put(WIN_EDT_PATH, \"C:\\\\Program Files\\\\WinEdt Team\\\\WinEdt\\\\WinEdt.exe\");\n             defaults.put(LATEX_EDITOR_PATH, \"C:\\\\Program Files\\\\LEd\\\\LEd.exe\");\n+            defaults.put(TEXMAKER_PATH, \"C:\\\\Program Files\\\\Texmaker\\\\texmaker.exe\");\n             defaults.put(EMACS_PATH, \"emacsclient.exe\");\n             defaults.put(EMACS_23, true);\n             defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-n -e\");\n@@ -454,6 +457,8 @@ private JabRefPreferences() {\n             defaults.put(EMACS_PATH, \"gnuclient\");\n             defaults.put(EMACS_23, false);\n             defaults.put(EMACS_ADDITIONAL_PARAMETERS, \"-batch -eval\");\n+            defaults.put(TEXMAKER_PATH, \"texmaker\");\n+            \n         }\n         defaults.put(USE_PROXY, Boolean.FALSE);\n         defaults.put(PROXY_HOSTNAME, \"my proxy host\");\n@@ -738,6 +743,7 @@ private JabRefPreferences() {\n         defaults.put(CITE_COMMAND_EMACS, \"\\\\cite\");\n         defaults.put(CITE_COMMAND_WIN_EDT, \"\\\\cite\");\n         defaults.put(CITE_COMMAND_LED, \"\\\\cite\");\n+        defaults.put(CITE_COMMAND_TEXMAKER, \"\\\\cite\");\n         defaults.put(FLOAT_MARKED_ENTRIES, Boolean.TRUE);\n \n         defaults.put(USE_NATIVE_FILE_DIALOG_ON_MAC, Boolean.FALSE);, @@ -75,6 +75,7 @@\n         PushToApplicationButton.applications.add(new PushToVim());\n         PushToApplicationButton.applications.add(OpenOfficePanel.getInstance());\n         PushToApplicationButton.applications.add(new PushToTeXstudio());\n+        PushToApplicationButton.applications.add(new PushToTexmaker());\n \n         // Finally, sort the entries:\n         //Collections.sort(applications, new PushToApplicationComparator());, @@ -0,0 +1,138 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n+package net.sf.jabref.external;\n+\n+import java.io.IOException;\n+\n+import javax.swing.*;\n+\n+import net.sf.jabref.*;\n+import com.jgoodies.forms.builder.FormBuilder;\n+import com.jgoodies.forms.layout.FormLayout;\n+import net.sf.jabref.gui.BasePanel;\n+import net.sf.jabref.gui.IconTheme;\n+import net.sf.jabref.gui.actions.BrowseAction;\n+import net.sf.jabref.logic.l10n.Localization;\n+import net.sf.jabref.model.database.BibtexDatabase;\n+import net.sf.jabref.model.entry.BibtexEntry;\n+\n+/**\n+ * Class for pushing entries into TexMaker.\n+ */\n+public class PushToTexmaker implements PushToApplication {\n+\n+    private boolean couldNotCall;\n+    private boolean notDefined;\n+    private JPanel settings;\n+    private final JTextField texmakerPath = new JTextField(30);\n+    private final JTextField citeCommand = new JTextField(30);\n+\n+\n+    @Override\n+    public String getName() {\n+        return Localization.menuTitle(\"Insert selected citations into Texmaker\");\n+    }\n+\n+    @Override\n+    public String getApplicationName() {\n+        return \"Texmaker\";\n+    }\n+\n+    @Override\n+    public String getTooltip() {\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n+    }\n+\n+    @Override\n+    public Icon getIcon() {\n+        return IconTheme.getImage(\"texmaker\");\n+    }\n+\n+    @Override\n+    public String getKeyStrokeName() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String keyString, MetaData metaData) {\n+\n+        couldNotCall = false;\n+        notDefined = false;\n+\n+        String texMaker = Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH);\n+\n+        if ((texMaker == null) || texMaker.trim().isEmpty()) {\n+            notDefined = true;\n+            return;\n+        }\n+\n+        try {\n+            Runtime.getRuntime().exec(texMaker + \" \" + \"-insert \" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXMAKER) + \"{\" + keyString + \"}\");\n+\n+        }\n+\n+        catch (IOException excep) {\n+            couldNotCall = true;\n+            excep.printStackTrace();\n+        }\n+    }\n+\n+    @Override\n+    public void operationCompleted(BasePanel panel) {\n+        if (notDefined) {\n+            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n+        } else if (couldNotCall) {\n+            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH) + \"'.\");\n+        } else {\n+            Localization.lang(\"Pushed citations to %0\", getApplicationName());\n+        }\n+    }\n+\n+    @Override\n+    public boolean requiresBibtexKeys() {\n+        return true;\n+    }\n+\n+    @Override\n+    public JPanel getSettingsPanel() {\n+        if (settings == null) {\n+            initSettingsPanel();\n+        }\n+        texmakerPath.setText(Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH));\n+        citeCommand.setText(Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXMAKER));\n+        return settings;\n+    }\n+\n+    private void initSettingsPanel() {\n+        FormBuilder builder = FormBuilder.create();\n+        builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n+        builder.add(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n+        builder.add(texmakerPath).xy(3, 1);\n+        BrowseAction action = BrowseAction.buildForFile(texmakerPath);\n+        JButton browse = new JButton(Localization.lang(\"Browse\"));\n+        browse.addActionListener(action);\n+        builder.add(browse).xy(5, 1);\n+        builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n+        builder.add(citeCommand).xy(3, 3);\n+        settings = builder.build();\n+    }\n+\n+    @Override\n+    public void storeSettings() {\n+        Globals.prefs.put(JabRefPreferences.TEXMAKER_PATH, texmakerPath.getText());\n+        Globals.prefs.put(JabRefPreferences.CITE_COMMAND_TEXMAKER, citeCommand.getText());\n+    }\n+}, @@ -193,13 +193,14 @@ public void itemStateChanged(ItemEvent e) {\n         builder.nextLine();\n \n         JPanel butpan = new JPanel();\n-        butpan.setLayout(new GridLayout(2, 3));\n+        butpan.setLayout(new GridLayout(3, 3));\n         addSettingsButton(new PushToLyx(), butpan);\n         addSettingsButton(new PushToEmacs(), butpan);\n         addSettingsButton(new PushToWinEdt(), butpan);\n         addSettingsButton(new PushToVim(), butpan);\n         addSettingsButton(new PushToLatexEditor(), butpan);\n         addSettingsButton(new PushToTeXstudio(), butpan);\n+        addSettingsButton(new PushToTexmaker(), butpan);\n         builder.append(new JPanel());\n         builder.append(butpan, 3);\n , @@ -94,6 +94,7 @@ search=search.png\n secondary_sorted_reverse=secondary_sorted_reverse.png\n setRelevant=relevance.png\n source=viewsource.gif\n+texmaker=texmaker.png\n texstudio=texstudio.png\n toggleGroups=queue.png\n togglePreview=text_bottom.png, None, ", 149, 1, "\"modified, modified, modified, added, modified, modified, added, \"", 150], ["Oscar Gustafsson", "Edits based on review comments", "10/05/15, 07:37:11 PM", "Oscar Gustafsson", "6433826b5ff48415f716d775a337b39ce012ef44", ["src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEntryEditor.java", "src/main/java/net/sf/jabref/external/PushToEmacs.java", "src/main/java/net/sf/jabref/external/PushToLatexEditor.java", "src/main/java/net/sf/jabref/external/PushToLyx.java", "src/main/java/net/sf/jabref/external/PushToTeXstudio.java", "src/main/java/net/sf/jabref/external/PushToTexmaker.java", "src/main/java/net/sf/jabref/external/PushToVim.java", "src/main/java/net/sf/jabref/external/PushToWinEdt.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -42,6 +42,7 @@\n  */\n public class ExternalFileTypeEditor extends JDialog {\n \n+    private static final long serialVersionUID = 2818719761022588069L;\n     private JFrame frame;\n     private JDialog dialog;\n     private ArrayList<ExternalFileType> fileTypes;\n@@ -101,6 +102,8 @@ public void actionPerformed(ActionEvent e) {\n         });\n         AbstractAction cancelAction = new AbstractAction() {\n \n+            private static final long serialVersionUID = -4147450749465768880L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 dispose();\n@@ -281,6 +284,8 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole\n \n     private class FileTypeTableModel extends AbstractTableModel {\n \n+        private static final long serialVersionUID = 687769574139355925L;\n+\n         @Override\n         public int getColumnCount() {\n             return 5;\n@@ -364,6 +369,7 @@ public void mouseReleased(MouseEvent e) {\n \n     public static class EditExternalFileTypesAction extends MnemonicAwareAction {\n \n+        private static final long serialVersionUID = 6828273495822942935L;\n         private JabRefFrame frame;\n         private JDialog dialog;\n         ExternalFileTypeEditor editor;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -55,6 +55,8 @@\n     private final JRadioButton useDefault = new JRadioButton(Localization.lang(\"Default\"));\n     private final JRadioButton other = new JRadioButton(\"\");\n     final String emptyMessage = \"<\" + Localization.lang(\"Use default viewer\") + \">\";\n+    private final String editFileTitle = Localization.lang(\"Edit file type\");\n+    private final String newFileTitle = Localization.lang(\"Add new file type\");\n     boolean applicationFieldEmpty;\n \n     private ExternalFileType entry;\n@@ -181,16 +183,16 @@ public void changedUpdate(DocumentEvent documentEvent) {\n             });\n         }\n \n-        String title = \"Edit file type\";\n+        String title = editFileTitle;\n         \n-        if(entry.getName().isEmpty()) {\n-            title = \"Add new file type\";\n+        if (entry.getName().isEmpty()) {\n+            title = newFileTitle;\n         }\n         \n         if (dParent != null) {\n-            diag = new JDialog(dParent, Localization.lang(title), true);\n+            diag = new JDialog(dParent, title, true);\n         } else {\n-            diag = new JDialog(fParent, Localization.lang(title), true);\n+            diag = new JDialog(fParent, title, true);\n         }\n         diag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n         diag.getContentPane().add(bb.getPanel(), BorderLayout.SOUTH);\n@@ -213,9 +215,9 @@ public void changedUpdate(DocumentEvent documentEvent) {\n     public void setEntry(ExternalFileType entry) {\n         this.entry = entry;\n         if(entry.getName().isEmpty()) {\n-            diag.setTitle(Localization.lang(\"Add new file type\"));\n+            diag.setTitle(newFileTitle);\n         } else {\n-            diag.setTitle(Localization.lang(\"Edit file type\"));\n+            diag.setTitle(editFileTitle);\n         }\n         setValues(entry);\n     }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -93,12 +93,16 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (notDefined) {\n+            // @formatter:off\n             panel.output(Localization.lang(\"Error\") + \": \" +\n                     Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n-        }\n-        else if (couldNotCall) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\"\n+            // @formatter:on\n+        } else if (couldNotCall) {\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"Could not call executable\") + \" '\"\n                     + Globals.prefs.get(JabRefPreferences.LATEX_EDITOR_PATH) + \"'.\");\n+            // @formatter:on\n         } else {\n             Localization.lang(\"Pushed citations to %0\", \"LatexEditor\");\n         }\n@@ -122,7 +126,7 @@ public JPanel getSettingsPanel() {\n     private void initSettingsPanel() {\n         FormBuilder builder = FormBuilder.create();\n         builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n-        builder.add(Localization.lang(\"Path to LatexEditor (LEd.exe)\") + \":\").xy(1, 1);\n+        builder.add(Localization.lang(\"Path to LatexEditor (LEd.exe)\") + \":\").xy(1, 1); // Note the LEd.exe part\n         builder.add(ledPath).xy(3,1);\n         BrowseAction action = BrowseAction.buildForFile(ledPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -109,16 +109,17 @@ public String getKeyStrokeName() {\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (couldNotFindPipe) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"verify that LyX is running and that the lyxpipe is valid\")\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"verify that LyX is running and that the lyxpipe is valid\")\n                     + \". [\" + Globals.prefs.get(JabRefPreferences.LYXPIPE) + \"]\");\n         } else if (couldNotWrite) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"unable to write to\") + \" \" + Globals.prefs.get(JabRefPreferences.LYXPIPE) +\n+            panel.output(Localization.lang(\"Error\") + \": \" + \n+                    Localization.lang(\"unable to write to\") + \" \" + Globals.prefs.get(JabRefPreferences.LYXPIPE) +\n                     \".in\");\n+            // @formatter:on\n         } else {\n-\n-            String message = \"\";\n-            panel.output(Localization.lang(\"Pushed the citations for the following rows to\") + \" Lyx: \" +\n-                    message);\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n \n     }, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.external;\n \n import java.io.IOException;\n@@ -17,11 +32,8 @@\n import net.sf.jabref.model.entry.BibtexEntry;\n \n /**\n- * Created by IntelliJ IDEA.\n- * User: alver\n- * Date: Jan 14, 2006\n- * Time: 4:55:23 PM\n- * To change this template use File | Settings | File Templates.\n+ * Created by IntelliJ IDEA. User: alver Date: Jan 14, 2006 Time: 4:55:23 PM To change this template use File | Settings\n+ * | File Templates.\n  */\n public class PushToTeXstudio implements PushToApplication {\n \n@@ -35,7 +47,8 @@\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());    }\n+        return Localization.lang(\"Insert selected citations into %0\", getApplicationName());\n+    }\n \n     @Override\n     public String getApplicationName() {\n@@ -44,7 +57,7 @@ public String getApplicationName() {\n \n     @Override\n     public String getTooltip() {\n-        return Localization.lang(\"Push to %0\",getApplicationName());\n+        return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n     @Override\n@@ -76,7 +89,7 @@ public JPanel getSettingsPanel() {\n         }\n         String citeCom = Globals.prefs.get(JabRefPreferences.CITE_COMMAND_TEXSTUDIO);\n         citeCommand.setText(citeCom);\n-        \n+\n         String programPath = Globals.prefs.get(JabRefPreferences.TEXSTUDIO_PATH);\n         if (programPath == null) {\n             programPath = defaultProgramPath();\n@@ -92,11 +105,11 @@ public void storeSettings() {\n     }\n \n     private void initSettingsPanel() {\n-        \n+\n         FormBuilder builder = FormBuilder.create();\n         builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n-                \n-        builder.addLabel(Localization.lang(\"Path to %0\",getApplicationName()) + \":\").xy(1, 1);\n+\n+        builder.addLabel(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n         builder.add(progPath).xy(3, 1);\n         BrowseAction action = BrowseAction.buildForFile(progPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n@@ -119,9 +132,8 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n         }\n         try {\n             String[] com = OS.WINDOWS ?\n-                    // No additional escaping is needed for TeXstudio:\n-                    new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"}\n-                    : new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"};\n+            // No additional escaping is needed for TeXstudio:\n+            new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"} : new String[] {programPath, \"--insert-cite\", citeCom + \"{\" + keys + \"}\"};\n \n             /*for (int i = 0; i < com.length; i++) {\n                 String s = com[i];\n@@ -162,22 +174,23 @@ public void run() {\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (couldNotConnect) {\n-            JOptionPane.showMessageDialog(\n-                    panel.frame(),\n-                    \"TeXstudio: could not connect\",\n-                    Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n-        }\n-        else if (couldNotRunClient) {\n+            // @formatter:off\n+            JOptionPane.showMessageDialog(panel.frame(), \n+                    \"TeXstudio: could not connect\", \n+                    Localization.lang(\"Error\"), \n+                    JOptionPane.ERROR_MESSAGE);\n+            // @formatter:on\n+        } else if (couldNotRunClient) {\n             String programPath = Globals.prefs.get(JabRefPreferences.TEXSTUDIO_PATH);\n             if (programPath == null) {\n                 programPath = defaultProgramPath();\n             }\n-            JOptionPane.showMessageDialog(\n-                    panel.frame(),\n+            JOptionPane.showMessageDialog(panel.frame(),\n+                    // @formatter:off\n                     \"TeXstudio: \" + Localization.lang(\"Program '%0' not found\", programPath),\n                     Localization.lang(\"Error\"), JOptionPane.ERROR_MESSAGE);\n-        }\n-        else {\n+                    // @formatter:on\n+        } else {\n             panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n     }, @@ -93,11 +93,15 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (notDefined) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \" \n+                    + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n         } else if (couldNotCall) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH) + \"'.\");\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.TEXMAKER_PATH) + \"'.\");\n+            // @formatter:on\n         } else {\n-            Localization.lang(\"Pushed citations to %0\", getApplicationName());\n+            panel.output(Localization.lang(\"Pushed citations to %0\", getApplicationName()));\n         }\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -113,9 +113,13 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n         couldNotConnect = false;\n         couldNotRunClient = false;\n         try {\n-            String[] com = new String[] {Globals.prefs.get(JabRefPreferences.VIM), \"--servername\", Globals.prefs.get(JabRefPreferences.VIM_SERVER), \"--remote-send\",\n+            // @formatter:off\n+            String[] com = new String[] {Globals.prefs.get(JabRefPreferences.VIM), \"--servername\", \n+                    Globals.prefs.get(JabRefPreferences.VIM_SERVER), \"--remote-send\",\n                     \"<C-\\\\><C-N>a\" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_VIM) +\n                             \"{\" + keys + \"}\"};\n+            // @formatter:on\n+\n \n             final Process p = Runtime.getRuntime().exec(com);\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -40,7 +40,7 @@\n \n     @Override\n     public String getName() {\n-        return Localization.lang(\"Insert selected citations into %0\" ,getApplicationName());\n+        return Localization.lang(\"Insert selected citations into %0\", getApplicationName());\n     }\n \n     @Override\n@@ -77,7 +77,6 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n \n         try {\n             Runtime.getRuntime().exec(new String[] {winEdt, \"\\\"[InsText('\" + Globals.prefs.get(JabRefPreferences.CITE_COMMAND_WIN_EDT) + \"{\" + keyString.replaceAll(\"'\", \"''\") + \"}');]\\\"\"});\n-\n         }\n \n         catch (IOException excep) {\n@@ -90,12 +89,15 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n     @Override\n     public void operationCompleted(BasePanel panel) {\n         if (notDefined) {\n-            panel.output(Localization.lang(\"Error\") + \": \" +\n-                    Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n-        }\n-        else if (couldNotCall) {\n-            panel.output(Localization.lang(\"Error\") + \": \" + Localization.lang(\"Could not call executable\") + \" '\"\n-                    + Globals.prefs.get(JabRefPreferences.WIN_EDT_PATH) + \"'.\");\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Path to %0 not defined\", getApplicationName()) + \".\");\n+            // @formatter:on\n+        } else if (couldNotCall) {\n+            // @formatter:off\n+            panel.output(Localization.lang(\"Error\") + \": \"\n+                    + Localization.lang(\"Could not call executable\") + \" '\" + Globals.prefs.get(JabRefPreferences.WIN_EDT_PATH) + \"'.\");\n+            // @formatter:on\n         } else {\n             Localization.lang(\"Pushed citations to %0\", getApplicationName());\n         }\n@@ -120,13 +122,13 @@ private void initSettingsPanel() {\n         FormBuilder builder = FormBuilder.create();\n         builder.layout(new FormLayout(\"left:pref, 4dlu, fill:pref:grow, 4dlu, fill:pref\", \"p, 2dlu, p\"));\n         builder.add(Localization.lang(\"Path to %0\", getApplicationName()) + \":\").xy(1, 1);\n-        builder.add(winEdtPath).xy(3,1);\n+        builder.add(winEdtPath).xy(3, 1);\n         BrowseAction action = BrowseAction.buildForFile(winEdtPath);\n         JButton browse = new JButton(Localization.lang(\"Browse\"));\n         browse.addActionListener(action);\n-        builder.add(browse).xy(5,1);\n+        builder.add(browse).xy(5, 1);\n         builder.add(Localization.lang(\"Cite command\") + \":\").xy(1, 3);\n-        builder.add(citeCommand).xy(3,3);\n+        builder.add(citeCommand).xy(3, 3);\n         settings = builder.build();\n     }\n , ", 99, 63, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 162], ["Oscar Gustafsson", "Updated copyright years", "10/09/15, 08:47:47 PM", "Oscar Gustafsson", "40eb9c527189a681263737f3c06915f8e68746d0", ["src/main/java/net/sf/jabref/gui/mergeentries/MergeEntries.java", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntriesDialog.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2015 JabRef contributors.\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2105 JabRef contributors.\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or, ", 2, 2, "\"modified, modified, \"", 4], ["Joerg Lenhard", "Replace StringBuffer with StringBuilder", "10/05/15, 03:17:51 PM", "Joerg Lenhard", "1e8f534ed04ec487e73d49086761db3bec260276", ["src/main/java/net/sf/jabref/exporter/LatexFieldFormatter.java"], "@@ -41,7 +41,7 @@ public static LatexFieldFormatter buildIgnoreHashes() {\n     }\n \n \n-    private StringBuffer stringBuffer;\n+    private StringBuilder stringBuilder;\n \n     private final boolean neverFailOnHashes;\n \n@@ -127,7 +127,7 @@ public String format(String text, String fieldName)\n                 throw new IllegalArgumentException(\"Curly braces { and } must be balanced.\");\n             }\n \n-            stringBuffer = new StringBuffer(\n+            stringBuilder = new StringBuilder(\n                     valueDelimiterStartOfValue + \"\");\n             // No formatting at all for these fields, to allow custom formatting?\n             //            if (Globals.prefs.getBoolean(\"preserveFieldFormatting\"))\n@@ -140,17 +140,17 @@ public String format(String text, String fieldName)\n             boolean strangePrefSettings = writefieldWrapfield && !Globals.prefs.isNonWrappableField(fieldName);\n \n             if (strangePrefSettings && doWrap) {\n-                stringBuffer.append(StringUtil.wrap(text, GUIGlobals.LINE_LENGTH));\n+                stringBuilder.append(StringUtil.wrap(text, GUIGlobals.LINE_LENGTH));\n             } else {\n-                stringBuffer.append(text);\n+                stringBuilder.append(text);\n             }\n \n-            stringBuffer.append(valueDelimiterEndOfValue);\n+            stringBuilder.append(valueDelimiterEndOfValue);\n \n-            return stringBuffer.toString();\n+            return stringBuilder.toString();\n         }\n \n-        stringBuffer = new StringBuffer();\n+        stringBuilder = new StringBuilder();\n         int pivot = 0;\n         int pos1;\n         int pos2;\n@@ -213,10 +213,10 @@ public String format(String text, String fieldName)\n         // currently, we do not add newlines and new formatting\n         if (writefieldWrapfield && !Globals.prefs.isNonWrappableField(fieldName)) {\n             //             introduce a line break to be read at the parser\n-            return StringUtil.wrap(stringBuffer.toString(), GUIGlobals.LINE_LENGTH);//, but that lead to ugly .tex\n+            return StringUtil.wrap(stringBuilder.toString(), GUIGlobals.LINE_LENGTH);//, but that lead to ugly .tex\n \n         } else {\n-            return stringBuffer.toString();\n+            return stringBuilder.toString();\n         }\n \n     }\n@@ -226,7 +226,7 @@ private void writeText(String text, int start_pos,\n         /*sb.append(\"{\");\n         sb.append(text.substring(start_pos, end_pos));\n         sb.append(\"}\");*/\n-        stringBuffer.append(valueDelimiterStartOfValue);\n+        stringBuilder.append(valueDelimiterStartOfValue);\n         boolean escape = false;\n         boolean inCommandName = false;\n         boolean inCommand = false;\n@@ -288,13 +288,13 @@ else if (inCommandOption && c == ']') {\n if (c == '&' && !escape &&\n                     !(inCommand && commandName.toString().equals(\"url\")) &&\n         nestedEnvironments == 0) {\n-                stringBuffer.append(\"\\\\&\");\n+                stringBuilder.append(\"\\\\&\");\n             } else {\n-    stringBuffer.append(c);\n+    stringBuilder.append(c);\n }\n             escape = c == '\\\\';\n         }\n-        stringBuffer.append(valueDelimiterEndOfValue);\n+        stringBuilder.append(valueDelimiterEndOfValue);\n     }\n \n     private void writeStringLabel(String text, int start_pos, int end_pos,\n@@ -306,7 +306,7 @@ private void writeStringLabel(String text, int start_pos, int end_pos,\n     }\n \n     private void putIn(String s) {\n-        stringBuffer.append(StringUtil.wrap(s, GUIGlobals.LINE_LENGTH));\n+        stringBuilder.append(StringUtil.wrap(s, GUIGlobals.LINE_LENGTH));\n     }\n \n     private void checkBraces(String text) throws IllegalArgumentException {, ", 14, 14, "\"modified, \"", 28], ["Simon Harrer", "Case changers now leave protected areas enclosed with curly brakets alone", "10/08/15, 10:43:57 AM", "Simon Harrer", "edf5f6602563734376f23335b87640a5cf12abcb", ["CHANGELOG", "src/main/java/net/sf/jabref/logic/util/strings/CaseChangers.java", "src/test/java/net/sf/jabref/logic/util/CaseChangersTest.java"], "@@ -30,6 +30,7 @@\n     - Feature: \"Normalize to BibTeX name format\" also removes newlines\n     - Tweak of preference defaults: Autolink requires that the filename starts with the given BibTeX key and the default filename patterns is key followed by title\n     - Remove support to the move-to-SysTray action\n+    - Feature: case changers now leave protected areas (enclosed with curly brakets) alone\n [dev_2.11]\n     - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly\n 2.11 beta 4, @@ -22,13 +22,17 @@\n \n /**\n  * Class with static methods for changing the case of strings and arrays of strings.\n+ * <p>\n+ * This class must detect the words in the title and whether letters are protected for case changes via enclosing them with '{' and '}' brakets.\n+ * Hence, for each letter to be changed, it needs to be known wether it is protected or not.\n+ * This can be done by starting at the letter position and moving forward and backword to see if there is a '{' and '}, respectively.\n  */\n public class CaseChangers {\n \n     /**\n      * Represents a word in a title of a bibtex entry.\n-     *\n-     * A word can be mutable vs constant ({word}) and small (a, an, the, ...) vs large.\n+     * <p>\n+     * A word can have protected chars (enclosed in '{' '}') and may be a small (a, an, the, ...) word.\n      */\n     private static final class Word {\n \n@@ -48,34 +52,62 @@\n             SMALLER_WORDS = Collections.unmodifiableSet(smallerWords);\n         }\n \n-        private String word;\n+        private char[] chars;\n+        private boolean[] protectedChars;\n \n-        public Word(String word) {\n-            this.word = Objects.requireNonNull(word);\n-        }\n-\n-        public boolean isConstant() {\n-            return word.startsWith(\"{\") && word.endsWith(\"}\");\n-        }\n+        public Word(char[] chars, boolean[] protectedChars) {\n+            this.chars = Objects.requireNonNull(chars);\n+            this.protectedChars = Objects.requireNonNull(protectedChars);\n \n-        public boolean isMutable() {\n-            return !isConstant();\n+            if (this.chars.length != this.protectedChars.length) {\n+                throw new IllegalArgumentException(\"the chars and the protectedChars array must be of same length\");\n+            }\n         }\n \n+        /**\n+         * Only change letters of the word that are unprotected to upper case.\n+         */\n         public void toUpperCase() {\n-            this.word = this.word.toUpperCase();\n+            for (int i = 0; i < chars.length; i++) {\n+                if (protectedChars[i]) {\n+                    continue;\n+                }\n+\n+                chars[i] = Character.toUpperCase(chars[i]);\n+            }\n         }\n \n+        /**\n+         * Only change letters of the word that are unprotected to lower case.\n+         */\n         public void toLowerCase() {\n-            this.word = this.word.toLowerCase();\n+            for (int i = 0; i < chars.length; i++) {\n+                if (protectedChars[i]) {\n+                    continue;\n+                }\n+\n+                chars[i] = Character.toLowerCase(chars[i]);\n+            }\n         }\n \n+\n         public void toUpperFirst() {\n-            this.word = StringUtil.capitalizeFirst(this.word);\n+            for (int i = 0; i < chars.length; i++) {\n+                if (protectedChars[i]) {\n+                    continue;\n+                }\n+\n+                if (i == 0) {\n+                    chars[i] = Character.toUpperCase(chars[i]);\n+                } else {\n+                    chars[i] = Character.toLowerCase(chars[i]);\n+                }\n+            }\n         }\n \n         public boolean isSmallerWord() {\n-            return SMALLER_WORDS.contains(this.word.toLowerCase());\n+            // \"word:\" is still a small \"word\"\n+            return SMALLER_WORDS.contains(this.toString().replaceAll(\"[:]\", \"\").toLowerCase());\n         }\n \n         public boolean isLargerWord() {\n@@ -84,10 +116,88 @@ public boolean isLargerWord() {\n \n         @Override\n         public String toString() {\n-            return word;\n+            return new String(chars);\n+        }\n+\n+        public boolean endsWithColon() {\n+            return this.toString().endsWith(\":\");\n         }\n     }\n \n+    /**\n+     * Parses a title to a list of words.\n+     */\n+    private static final class TitleParser {\n+\n+        private StringBuffer buffer;\n+        private int wordStart;\n+\n+        public List<Word> parse(String title) {\n+            List<Word> words = new LinkedList<>();\n+\n+            boolean[] isProtected = determineProtectedChars(title);\n+\n+            reset();\n+\n+            int index = 0;\n+            for (char c : title.toCharArray()) {\n+                if (!Character.isWhitespace(c)) {\n+                    if (wordStart == -1) {\n+                        wordStart = index;\n+                    }\n+\n+                    buffer.append(c);\n+                } else {\n+                    createWord(isProtected).ifPresent(words::add);\n+                }\n+\n+                index++;\n+            }\n+            createWord(isProtected).ifPresent(words::add);\n+\n+            return words;\n+        }\n+\n+        private Optional<Word> createWord(boolean[] isProtected) {\n+            if (buffer.length() <= 0) {\n+                return Optional.empty();\n+            }\n+\n+            char[] chars = buffer.toString().toCharArray();\n+            boolean[] protectedChars = new boolean[chars.length];\n+\n+            System.arraycopy(isProtected, wordStart, protectedChars, 0, chars.length);\n+\n+            reset();\n+\n+            return Optional.of(new Word(chars, protectedChars));\n+        }\n+\n+        private void reset() {\n+            wordStart = -1;\n+            buffer = new StringBuffer();\n+        }\n+\n+        private static boolean[] determineProtectedChars(String title) {\n+            boolean[] isProtected = new boolean[title.length()];\n+            char[] chars = title.toCharArray();\n+\n+            int brakets = 0;\n+            for (int i = 0; i < title.length(); i++) {\n+                if (chars[i] == '{') {\n+                    brakets++;\n+                } else if (chars[i] == '}') {\n+                    brakets--;\n+                } else {\n+                    isProtected[i] = brakets > 0;\n+                }\n+            }\n+\n+            return isProtected;\n+        }\n+\n+    }\n+\n     /**\n      * Represents a title of a bibtex entry.\n      */\n@@ -96,9 +206,7 @@ public String toString() {\n         private final List<Word> words = new LinkedList<>();\n \n         public Title(String title) {\n-            for (String word : Objects.requireNonNull(title).split(\"\\\\s+\")) {\n-                words.add(new Word(word));\n-            }\n+            this.words.addAll(new TitleParser().parse(title));\n         }\n \n         public List<Word> getWords() {\n@@ -146,7 +254,7 @@ public String getName() {\n         public String changeCase(String input) {\n             Title title = new Title(input);\n \n-            title.getWords().stream().filter(Word::isMutable).forEach(Word::toLowerCase);\n+            title.getWords().stream().forEach(Word::toLowerCase);\n \n             return title.toString();\n         }\n@@ -166,7 +274,7 @@ public String getName() {\n         public String changeCase(String input) {\n             Title title = new Title(input);\n \n-            title.getWords().stream().filter(Word::isMutable).forEach(Word::toUpperCase);\n+            title.getWords().stream().forEach(Word::toUpperCase);\n \n             return title.toString();\n         }\n@@ -186,7 +294,7 @@ public String getName() {\n         public String changeCase(String input) {\n             Title title = new Title(LOWER.changeCase(input));\n \n-            title.getWords().stream().findFirst().filter(Word::isMutable).ifPresent(Word::toUpperFirst);\n+            title.getWords().stream().findFirst().ifPresent(Word::toUpperFirst);\n \n             return title.toString();\n         }\n@@ -206,16 +314,14 @@ public String getName() {\n         public String changeCase(String input) {\n             Title title = new Title(input);\n \n-            title.getWords().stream().filter(Word::isMutable).forEach(Word::toUpperFirst);\n+            title.getWords().stream().forEach(Word::toUpperFirst);\n \n             return title.toString();\n         }\n     }\n \n     public static class TitleCaseChanger implements CaseChanger {\n \n-\n-\n         @Override\n         public String getName() {\n             return \"Title\";\n@@ -230,11 +336,17 @@ public String getName() {\n         public String changeCase(String input) {\n             Title title = new Title(input);\n \n-            title.getWords().stream().filter(Word::isMutable).filter(Word::isSmallerWord).forEach(Word::toLowerCase);\n-            title.getWords().stream().filter(Word::isMutable).filter(Word::isLargerWord).forEach(Word::toUpperFirst);\n+            title.getWords().stream().filter(Word::isSmallerWord).forEach(Word::toLowerCase);\n+            title.getWords().stream().filter(Word::isLargerWord).forEach(Word::toUpperFirst);\n+\n+            title.getFirstWord().ifPresent(Word::toUpperFirst);\n+            title.getLastWord().ifPresent(Word::toUpperFirst);\n \n-            title.getFirstWord().filter(Word::isMutable).ifPresent(Word::toUpperFirst);\n-            title.getLastWord().filter(Word::isMutable).ifPresent(Word::toUpperFirst);\n+            for (int i = 0; i < title.getWords().size() - 2; i++) {\n+                if (title.getWords().get(i).endsWithColon()) {\n+                    title.getWords().get(i + 1).toUpperFirst();\n+                }\n+            }\n \n             return title.toString();\n         }, @@ -20,6 +20,7 @@ public void testChangeCaseLower() {\n         Assert.assertEquals(\"\", CaseChangers.LOWER.changeCase(\"\"));\n         Assert.assertEquals(\"lower\", CaseChangers.LOWER.changeCase(\"LOWER\"));\n         Assert.assertEquals(\"lower {UPPER}\", CaseChangers.LOWER.changeCase(\"LOWER {UPPER}\"));\n+        Assert.assertEquals(\"lower {U}pper\", CaseChangers.LOWER.changeCase(\"LOWER {U}PPER\"));\n     }\n \n     @Test\n@@ -29,22 +30,24 @@ public void testChangeCaseUpper() {\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"upper\"));\n         Assert.assertEquals(\"UPPER\", CaseChangers.UPPER.changeCase(\"UPPER\"));\n         Assert.assertEquals(\"UPPER {lower}\", CaseChangers.UPPER.changeCase(\"upper {lower}\"));\n-        }\n+        Assert.assertEquals(\"UPPER {l}OWER\", CaseChangers.UPPER.changeCase(\"upper {l}ower\"));\n+    }\n \n     @Test\n     public void testChangeCaseUpperFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"upper First\"));\n         Assert.assertEquals(\"Upper first\", CaseChangers.UPPER_FIRST.changeCase(\"uPPER FIRST\"));\n         Assert.assertEquals(\"Upper {NOT} first\", CaseChangers.UPPER_FIRST.changeCase(\"upper {NOT} FIRST\"));\n-\n+        Assert.assertEquals(\"Upper {N}ot first\", CaseChangers.UPPER_FIRST.changeCase(\"upper {N}OT FIRST\"));\n     }\n \n     @Test\n     public void testChangeCaseUpperEachFirst() {\n         Assert.assertEquals(\"\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"\"));\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each First\"));\n         Assert.assertEquals(\"Upper Each First {NOT} {this}\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each first {NOT} {this}\"));\n+        Assert.assertEquals(\"Upper Each First {N}ot {t}his\", CaseChangers.UPPER_EACH_FIRST.changeCase(\"upper each first {N}OT {t}his\"));\n     }\n \n     @Test\n@@ -53,6 +56,8 @@ public void testChangeCaseTitle() {\n         Assert.assertEquals(\"Upper Each First\", CaseChangers.TITLE.changeCase(\"upper each first\"));\n         Assert.assertEquals(\"An Upper Each First And\", CaseChangers.TITLE.changeCase(\"an upper each first and\"));\n         Assert.assertEquals(\"An Upper Each of the and First And\", CaseChangers.TITLE.changeCase(\"an upper each of the and first and\"));\n+        Assert.assertEquals(\"An Upper Each of: The and First And\", CaseChangers.TITLE.changeCase(\"an upper each of: the and first and\"));\n         Assert.assertEquals(\"An Upper First with and without {CURLY} {brackets}\", CaseChangers.TITLE.changeCase(\"AN UPPER FIRST WITH AND WITHOUT {CURLY} {brackets}\"));\n+        Assert.assertEquals(\"An Upper First with {A}nd without {C}urly {b}rackets\", CaseChangers.TITLE.changeCase(\"AN UPPER FIRST WITH {A}ND WITHOUT {C}URLY {b}rackets\"));\n     }\n }, ", 150, 32, "\"modified, modified, modified, \"", 182], ["Simon Harrer", "Remove the option move-to-systray", "10/07/15, 08:10:49 AM", "Simon Harrer", "5e7042e982ae5bfcba2fd5f840c3b919d58a1dde", ["src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/SysTray.java", "src/main/java/net/sf/jabref/gui/keyboard/KeyBinds.java", "src/main/java/net/sf/jabref/gui/remote/JabRefMessageHandler.java"], "@@ -179,8 +179,6 @@ void addAction(Action a) {\n \n     private final FileHistory fileHistory = new FileHistory(prefs, this);\n \n-    private SysTray sysTray;\n-\n     // The help window.\n     public final HelpDialog helpDiag = new HelpDialog(this);\n \n@@ -850,11 +848,6 @@ private void tearDownJabRef(Vector<String> filenames) {\n \n         prefs.flush();\n \n-        // hide systray because the JVM can only shut down when no systray icon is shown\n-        if (sysTray != null) {\n-            sysTray.hide();\n-        }\n-\n         // dispose all windows, even if they are not displayed anymore\n         for (Window window : Window.getWindows()) {\n             window.dispose();\n@@ -1229,7 +1222,6 @@ private void fillMenu() {\n \n         file.addSeparator();\n         file.add(close);\n-        file.add(new MinimizeToSysTrayAction());\n         file.add(quit);\n         mb.add(file);\n         //edit.add(test);\n@@ -1875,10 +1867,6 @@ public void run() {\n                             openInNew);\n                     diag.addEntries(entries);\n                     diag.entryListComplete();\n-                    // On the one hand, the following statement could help at issues when JabRef is minimized to the systray\n-                    // On the other hand, users might dislake modality and this is not required to let the GUI work.\n-                    // Therefore, it is disabled.\n-                    // diag.setModal(true);\n                     Util.placeDialog(diag, JabRefFrame.this);\n                     diag.setVisible(true);\n                     diag.toFront();\n@@ -2478,44 +2466,6 @@ public void actionPerformed(ActionEvent event) {\n         }\n     }\n \n-    class MinimizeToSysTrayAction extends MnemonicAwareAction {\n-\n-        public MinimizeToSysTrayAction() {\n-            putValue(Action.NAME, Localization.menuTitle(\"Minimize to system tray\"));\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Minimize to system tray\"));\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent event) {\n-            if (sysTray == null) {\n-                sysTray = new SysTray(JabRefFrame.this);\n-            }\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                @Override\n-                public void run() {\n-                    sysTray.show();\n-                    JabRefFrame.this.setVisible(false);\n-                }\n-            });\n-        }\n-    }\n-\n-\n-    public void showIfMinimizedToSysTray() {\n-        // TODO: does not work correctly when a dialog is shown\n-        // Workaround: put into invokeLater queue before a dialog is added to that queue\n-        if (!this.isVisible()) {\n-            // isVisible() is false if minimized to systray\n-            if (sysTray != null) {\n-                sysTray.hide();\n-            }\n-            setVisible(true);\n-            this.isActive();\n-            toFront();\n-        }\n-    }\n-\n     private static class MyGlassPane extends JPanel {\n \n         //ForegroundLabel infoLabel = new ForegroundLabel(\"Showing search\");, @@ -1,97 +0,0 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n-    This program is free software; you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation; either version 2 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License along\n-    with this program; if not, write to the Free Software Foundation, Inc.,\n-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n-package net.sf.jabref.gui;\n-\n-import net.sf.jabref.logic.l10n.Localization;\n-\n-import javax.swing.*;\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-\n-public class SysTray {\n-\n-    private final JabRefFrame frame;\n-    private final TrayIcon icon;\n-    private SystemTray tray;\n-\n-\n-    public SysTray(JabRefFrame frame) {\n-        this.frame = frame;\n-\n-        final ActionListener showJabref = new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent actionEvent) {\n-                SwingUtilities.invokeLater(new Runnable() {\n-\n-                    @Override\n-                    public void run() {\n-                        SysTray.this.frame.showIfMinimizedToSysTray();\n-                    }\n-                });\n-\n-            }\n-        };\n-        MenuItem showWindow = new MenuItem(Localization.lang(\"Show\"));\n-        showWindow.addActionListener(showJabref);\n-        PopupMenu popup = new PopupMenu();\n-        popup.add(showWindow);\n-        ImageIcon imic = new ImageIcon(GUIGlobals.class.getResource(\"/images/icons/JabRef-icon-48.png\"));\n-        icon = new TrayIcon(imic.getImage(), \"JabRef\", popup);\n-        icon.setImageAutoSize(true);\n-        icon.addMouseListener(new MouseAdapter() {\n-\n-            @Override\n-            public void mouseClicked(MouseEvent mouseEvent) {\n-                showJabref.actionPerformed(new ActionEvent(mouseEvent.getSource(), 0, \"\"));\n-            }\n-\n-            @Override\n-            public void mousePressed(MouseEvent mouseEvent) {\n-                super.mousePressed(mouseEvent); //To change body of overridden methods use File | Settings | File Templates.\n-            }\n-\n-            @Override\n-            public void mouseReleased(MouseEvent mouseEvent) {\n-                super.mouseReleased(mouseEvent); //To change body of overridden methods use File | Settings | File Templates.\n-            }\n-        });\n-        if (SystemTray.isSupported()) {\n-            tray = SystemTray.getSystemTray();\n-        }\n-    }\n-\n-    public void show() {\n-        if (tray == null) {\n-            return;\n-        }\n-        try {\n-            tray.add(icon);\n-        } catch (AWTException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    public void hide() {\n-        if (tray == null) {\n-            return;\n-        }\n-        tray.remove(icon);\n-    }\n-}, @@ -53,7 +53,6 @@\n     public static final String INCREMENTAL_SEARCH = \"Incremental search\";\n     public static final String LOAD_SESSION = \"Load session\";\n     public static final String MARK_ENTRIES = \"Mark entries\";\n-    public static final String MINIMIZE_TO_SYSTEM_TRAY = \"Minimize to system tray\";\n     public static final String NEW_ARTICLE = \"New article\";\n     public static final String NEW_BOOK = \"New book\";\n     public static final String NEW_ENTRY = \"New entry\";\n@@ -212,7 +211,6 @@ public KeyBinds() {\n         keyBindMap.put(REFRESH_OO, \"ctrl alt O\");\n         keyBindMap.put(FILE_LIST_EDITOR_MOVE_ENTRY_UP, \"ctrl UP\");\n         keyBindMap.put(FILE_LIST_EDITOR_MOVE_ENTRY_DOWN, \"ctrl DOWN\");\n-        keyBindMap.put(MINIMIZE_TO_SYSTEM_TRAY, \"ctrl alt W\");\n         keyBindMap.put(HIDE_SHOW_TOOLBAR, \"ctrl alt T\");\n     }\n , @@ -22,18 +22,6 @@ public void handleMessage(String message) {\n             throw new IllegalStateException(\"Could not start JabRef with arguments \" + message);\n         }\n \n-        // put \"bringToFront\" in the queue\n-        // it has to happen before the call to import as the import might open a dialog\n-        // --> Globals.prefs.getBoolean(JabRefPreferences.USE_IMPORT_INSPECTION_DIALOG)\n-        // this dialog has to be shown AFTER JabRef has been brought to front\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                JabRef.jrf.showIfMinimizedToSysTray();\n-            }\n-        });\n-\n         for (int i = 0; i < loaded.size(); i++) {\n             ParserResult pr = loaded.elementAt(i);\n             JabRef.jrf.addParserResult(pr, i == 0);, ", 0, 161, "\"modified, removed, modified, modified, \"", 161], ["Oscar Gustafsson", "Removed unused comparator", "10/09/15, 08:51:15 PM", "Oscar Gustafsson", "b93625d26d06082e3004e83594714ab895424dbc", ["src/main/java/net/sf/jabref/external/push/PushToApplications.java"], "@@ -17,7 +17,6 @@\n package net.sf.jabref.external.push;\n \n import java.util.ArrayList;\n-import java.util.Comparator;\n import java.util.List;\n \n import net.sf.jabref.openoffice.OpenOfficePanel;\n@@ -29,7 +28,6 @@\n      * Set up the current available choices:\n      */\n     static {\n-        //TODO plugins create collection class\n         applications = new ArrayList<PushToApplication>();\n \n         PushToApplications.applications.add(new PushToLyx());\n@@ -40,19 +38,5 @@\n         PushToApplications.applications.add(OpenOfficePanel.getInstance());\n         PushToApplications.applications.add(new PushToTeXstudio());\n         PushToApplications.applications.add(new PushToTexmaker());\n-\n-        // Finally, sort the entries:\n-        //Collections.sort(applications, new PushToApplicationComparator());\n-    }\n-\n-    /**\n-     * Comparator for sorting the selection according to name.\n-     */\n-    private static class PushToApplicationComparator implements Comparator<PushToApplication> {\n-\n-        @Override\n-        public int compare(PushToApplication one, PushToApplication two) {\n-            return one.getName().compareTo(two.getName());\n-        }\n     }\n }, ", 0, 16, "\"modified, \"", 16], ["Simon Harrer", "Add comment how overwriting abbreviations work", "10/09/15, 08:17:48 AM", "Simon Harrer", "823ba0a4a0c320bc0730e3b45d501bf932b23960", ["src/main/java/net/sf/jabref/logic/journals/Abbreviations.java"], "@@ -20,6 +20,10 @@\n     public static void initializeJournalNames(JabRefPreferences jabRefPreferences) {\n         journalAbbrev = new JournalAbbreviationRepository();\n \n+        // the order of reading the journal lists is important\n+        // method: last added abbreviation wins\n+        // for instance, in the personal list one can overwrite abbreviations in the built in list\n+\n         // Read builtin list\n         journalAbbrev.readJournalListFromResource(JOURNALS_FILE_BUILTIN);\n , ", 4, 0, "\"modified, \"", 4], ["Stefan Kolb", "Only show automated list of contributors", "10/09/15, 02:17:55 PM", "Stefan Kolb", "55506f0bd245d5220bd7f470733f9070abcb4e79", ["src/main/resources/help/About.html", "src/main/resources/help/da/About.html", "src/main/resources/help/de/About.html", "src/main/resources/help/fr/About.html", "src/main/resources/help/in/About.html", "src/main/resources/help/ja/About.html"], "@@ -21,32 +21,6 @@ <h1>JabRef version ${version}</h1>\n         and feature requests to\n         <a href=\"https://sourceforge.net/p/jabref/feature-requests/\">https://sourceforge.net/p/jabref/feature-requests/</a>.</p>\n \n-        <h2>Current developers:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Former developers:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n-\n         <h2>Contributions from:</h2>\n \n         <p>${authors}</p>, @@ -14,32 +14,6 @@ <h1>JabRef version ${version}</h1>\n         GNU <a href=\"License.html\">General Public License</a>,\n         version 2.</p>\n \n-        <h2>Current developers:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Former developers:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n-\n         <h2>Bidrag fra:</h2>\n \n         <p>${authors}</p>, @@ -13,32 +13,6 @@ <h1>JabRef Version ${version}</h1>\n         <p>JabRef ist frei verf&uuml;gbar unter den Bedingungen der\n         GNU <a href=\"License.html\">General Public License</a>.</p>\n \n-        <h2>Akuelle Entwickler:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Ehemalige Entwickler:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n-\n         <h2>Beitr&auml;ge von:</h2>\n \n         <p>${authors}</p>, @@ -21,32 +21,6 @@ <h1>JabRef version ${version}</h1>\n         tels que publi&eacute;s par la Free Software Foundation, \n         soit en version 2 de cette License, soit (&agrave; votre choix)\n         dans n'importe quelle version ult&eacute;rieure.</p>\n-        \n-        <h2>Current developers:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Former developers:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n \n         <h2>Contributions de&nbsp;:</h2>\n , @@ -14,32 +14,6 @@ <h1>JabRef versi ${version}</h1>\n         GNU <a href=\"License.html\">General Public License</a>,\n         versi 2.</p>\n \n-        <h2>Current developers:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Former developers:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n-\n         <h2>Pendukung lain:</h2>\n \n         <p>${authors}</p>, @@ -13,32 +13,6 @@ <h1>JabRef \u7b2c ${version} \u7248</h1>\n \n         <p>JabRef\u306f\u30d5\u30ea\u30fc\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3059\u3002JabRef\u306f\u3001Free Software Foundation\u304c\u516c\u958b\u3057\u3066\u3044\u308bGNU <a href=\"License.html\">General Public License</a>\u306eversion 2\u304b\u3001(\u304a\u671b\u307f\u3067\u3042\u308c\u3070)\u305d\u308c\u3088\u308a\u3082\u65b0\u3057\u3044\u7248\u306e\u4e0b\u3067\u81ea\u7531\u306b\u914d\u5e03\u3057\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p>\n \n-        <h2>Current developers:</h2>\n-        <p>Simon Harrer,\n-        Oliver Kopp,\n-        Igor Steinmacher</p>\n-\n-        <h2>Former developers:</h2>\n-        <p>Morten O. Alver,\n-        Nizar N. Batada,\n-        Michel Baylac,\n-        Kolja Brix,\n-        Guillaume Gardey,\n-        Oscar Gustafsson,\n-        Cyrille d'Haese,\n-        S M Mahbub Murshed,\n-        Raik Nagel,\n-        Christopher Oezbek,\n-        Ellen Reitmayr,\n-        Gert Renckens,\n-        Andreas Rudert,\n-        Michael Spiegel,\n-        Ulrik Stervbo,\n-        Joerg K. Wegner,\n-        Michael Wrighton,\n-        Egon Willighagen,\n-        J&ouml;rg Zieren</p>\n-\n         <h2>\u8ca2\u732e\u8005:</h2>\n \n         <p>${authors}</p>, ", 0, 156, "\"modified, modified, modified, modified, modified, modified, \"", 156], ["Oscar Gustafsson", "Replaced DefaultFormBuilder with FormBuilder in AutoSetExternalFileForEntries, BasePanel, ColorSetupPanel, DBConnectDialog, FromAuxDialog, ManageKeywordsAction, MassSetFieldAction, and SynchronizeFileField. Clean up in Util.java.", "10/08/15, 07:50:31 PM", "Oscar Gustafsson", "3ff67d5e953b6e8c2cdbf61ea540c0a5f8238edf", ["src/main/java/net/sf/jabref/external/AutoSetExternalFileForEntries.java", "src/main/java/net/sf/jabref/external/SynchronizeFileField.java", "src/main/java/net/sf/jabref/gui/BasePanel.java", "src/main/java/net/sf/jabref/gui/ColorSetupPanel.java", "src/main/java/net/sf/jabref/sql/DBConnectDialog.java", "src/main/java/net/sf/jabref/util/ManageKeywordsAction.java", "src/main/java/net/sf/jabref/util/MassSetFieldAction.java", "src/main/java/net/sf/jabref/util/Util.java", "src/main/java/net/sf/jabref/wizard/auximport/gui/FromAuxDialog.java"], "@@ -39,7 +39,7 @@\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n \n import net.sf.jabref.logic.util.io.FileUtil;\n@@ -58,10 +58,13 @@\n \n     private static final Log log = LogFactory.getLog(AutoSetExternalFileForEntries.class);\n \n-    private final Object[] brokenLinkOptions =\n-    {Localization.lang(\"Ignore\"), Localization.lang(\"Assign new file\"), Localization.lang(\"Clear field\"),\n+    private final Object[] brokenLinkOptions = {\n+            // @formatter:off\n+            Localization.lang(\"Ignore\"),\n+            Localization.lang(\"Assign new file\"),\n+            Localization.lang(\"Clear field\"),\n             Localization.lang(\"Quit synchronization\")};\n-\n+            // @formatter:on\n     private boolean goOn = true;\n     private boolean autoSet = true;\n     private boolean overWriteAllowed = true;\n@@ -131,7 +134,7 @@ public void run() {\n \n                 final String old = aSel.getField(fieldName);\n                 // Check if a extension is already set, and if so, if we are allowed to overwrite it:\n-                if (old != null && !old.equals(\"\") && !overWriteAllowed) {\n+                if ((old != null) && !old.equals(\"\") && !overWriteAllowed) {\n                     continue;\n                 }\n                 extPan.setEntry(aSel, panel.getDatabase());\n@@ -154,11 +157,11 @@ public void run() {\n                 panel.frame().setProgressBarValue(progress++);\n                 final String old = aSel.getField(fieldName);\n                 // Check if a extension is set:\n-                if (old != null && !old.equals(\"\")) {\n+                if ((old != null) && !old.equals(\"\")) {\n                     // Get an absolute path representation:\n                     File file = FileUtil.expandFilename(old, dirs);\n \n-                    if (file == null || !file.exists()) {\n+                    if ((file == null) || !file.exists()) {\n \n                         int answer =\n                                 JOptionPane.showOptionDialog(panel.frame(),\n@@ -200,7 +203,7 @@ public void run() {\n \n         //log brokenLinks if some were found\n         if (brokenLinks > 0) {\n-            log.warn(Localization.lang(\"Found %0 broken links\", brokenLinks + \"\"));\n+            AutoSetExternalFileForEntries.log.warn(Localization.lang(\"Found %0 broken links\", brokenLinks + \"\"));\n         }\n \n         if (entriesChanged > 0) {\n@@ -278,33 +281,27 @@ public void actionPerformed(ActionEvent e) {\n             bg.add(autoSetUnset);\n             bg.add(autoSetNone);\n             bg.add(autoSetAll);\n-            FormLayout layout = new FormLayout(\"fill:pref\", \"\");\n-            DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n+            FormLayout layout = new FormLayout(\"fill:pref\", \"pref, 2dlu, pref, 2dlu, pref, pref, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\");\n+            FormBuilder builder = FormBuilder.create().layout(layout);\n             description = new JLabel(\"<HTML>\" +\n                     Localization.lang(//\"This function helps you keep your external %0 links up-to-date.\" +\n                             \"Attempt to autoset %0 links for your entries. Autoset works if \"\n                                     + \"a %0 file in your %0 directory or a subdirectory<BR>is named identically to an entry's BibTeX key, plus extension.\", fn)\n                     + \"</HTML>\");\n-            //            name.setVerticalAlignment(JLabel.TOP);\n-            builder.appendSeparator(Localization.lang(\"Autoset\"));\n-            builder.append(description);\n-            builder.nextLine();\n-            builder.append(autoSetUnset);\n-            builder.nextLine();\n-            builder.append(autoSetAll);\n-            builder.nextLine();\n-            builder.append(autoSetNone);\n-            builder.nextLine();\n-            builder.appendSeparator(Localization.lang(\"Check links\"));\n+\n+            builder.addSeparator(Localization.lang(\"Autoset\")).xy(1, 1);\n+            builder.add(description).xy(1, 3);\n+            builder.add(autoSetUnset).xy(1, 5);\n+            builder.add(autoSetAll).xy(1, 6);\n+            builder.add(autoSetNone).xy(1, 7);\n+            builder.addSeparator(Localization.lang(\"Check links\")).xy(1, 9);\n \n             description = new JLabel(\"<HTML>\" +\n                     Localization.lang(\"This makes JabRef look up each %0 link and check if the file exists. If not, you will be given options<BR>to resolve the problem.\", fn)\n                     + \"</HTML>\");\n-            builder.append(description);\n-            builder.nextLine();\n-            builder.append(checkLinks);\n-            builder.nextLine();\n-            builder.appendSeparator();\n+            builder.add(description).xy(1, 11);\n+            builder.add(checkLinks).xy(1, 13);\n+            builder.addSeparator(\"\").xy(1, 15);\n \n             JPanel main = builder.getPanel();\n             main.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -16,7 +16,7 @@\n package net.sf.jabref.external;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n@@ -48,10 +48,14 @@\n     private BibtexEntry[] sel;\n     private SynchronizeFileField.OptionsDialog optDiag;\n \n-    private final Object[] brokenLinkOptions =\n-    {Localization.lang(\"Ignore\"), Localization.lang(\"Assign new file\"), Localization.lang(\"Remove link\"),\n+    private final Object[] brokenLinkOptions = {\n+            // @formatter:off\n+            Localization.lang(\"Ignore\"),\n+            Localization.lang(\"Assign new file\"),\n+            Localization.lang(\"Remove link\"),\n             Localization.lang(\"Remove all broken links\"),\n             Localization.lang(\"Quit synchronization\")};\n+            // @formatter:on\n \n     private boolean goOn = true;\n     private boolean autoSet = true;\n@@ -147,7 +151,7 @@ public void run() {\n                 panel.frame().setProgressBarValue(progress++);\n                 final String old = aSel.getField(fieldName);\n                 // Check if a extension is set:\n-                if (old != null && !old.equals(\"\")) {\n+                if ((old != null) && !old.equals(\"\")) {\n                     FileListTableModel tableModel = new FileListTableModel();\n                     tableModel.setContentDontGuessTypes(old);\n \n@@ -173,7 +177,7 @@ public void run() {\n \n                         // Get an absolute path representation:\n                         File file = FileUtil.expandFilename(flEntry.getLink(), dirsS);\n-                        if (file == null || !file.exists()) {\n+                        if ((file == null) || !file.exists()) {\n                             int answer;\n                             if (!removeAllBroken) {\n                                 answer = JOptionPane.showOptionDialog(panel.frame(),\n@@ -214,7 +218,7 @@ public void run() {\n                         }\n \n                         // Unless we deleted this link, see if its file type is recognized:\n-                        if (!deleted && flEntry.getType() instanceof UnknownExternalFileType) {\n+                        if (!deleted && (flEntry.getType() instanceof UnknownExternalFileType)) {\n                             String[] options = new String[]\n                             {Localization.lang(\"Define '%0'\", flEntry.getType().getName()),\n                                     Localization.lang(\"Change file type\"), Localization.lang(\"Cancel\")};\n@@ -294,6 +298,7 @@ public void update() {\n \n     static class OptionsDialog extends JDialog {\n \n+        private static final long serialVersionUID = 1909919286125256934L;\n         final JRadioButton autoSetUnset;\n         final JRadioButton autoSetAll;\n         final JRadioButton autoSetNone;\n@@ -320,6 +325,8 @@ public void actionPerformed(ActionEvent e) {\n \n             Action closeAction = new AbstractAction() {\n \n+                private static final long serialVersionUID = -8834440705768095070L;\n+\n                 @Override\n                 public void actionPerformed(ActionEvent e) {\n                     dispose();\n@@ -341,33 +348,28 @@ public void actionPerformed(ActionEvent e) {\n             bg.add(autoSetUnset);\n             bg.add(autoSetNone);\n             bg.add(autoSetAll);\n-            FormLayout layout = new FormLayout(\"fill:pref\", \"\");\n-            DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n+            \n+            FormLayout layout = new FormLayout(\"fill:pref\", \"pref, 2dlu, pref, 2dlu, pref, pref, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\");\n+            FormBuilder builder = FormBuilder.create().layout(layout);\n             description = new JLabel(\"<HTML>\" +\n                     Localization.lang(//\"This function helps you keep your external %0 links up-to-date.\" +\n                             \"Attempt to autoset %0 links for your entries. Autoset works if \"\n                                     + \"a %0 file in your %0 directory or a subdirectory<BR>is named identically to an entry's BibTeX key, plus extension.\", fn)\n                     + \"</HTML>\");\n-            //            name.setVerticalAlignment(JLabel.TOP);\n-            builder.appendSeparator(Localization.lang(\"Autoset\"));\n-            builder.append(description);\n-            builder.nextLine();\n-            builder.append(autoSetUnset);\n-            builder.nextLine();\n-            builder.append(autoSetAll);\n-            builder.nextLine();\n-            builder.append(autoSetNone);\n-            builder.nextLine();\n-            builder.appendSeparator(Localization.lang(\"Check links\"));\n+\n+            builder.addSeparator(Localization.lang(\"Autoset\")).xy(1, 1);\n+            builder.add(description).xy(1, 3);\n+            builder.add(autoSetUnset).xy(1, 5);\n+            builder.add(autoSetAll).xy(1, 6);\n+            builder.add(autoSetNone).xy(1, 7);\n+            builder.addSeparator(Localization.lang(\"Check links\")).xy(1, 9);\n \n             description = new JLabel(\"<HTML>\" +\n-                    Localization.lang(\"This makes JabRef look up each %0 extension and check if the file exists. If not, you will be given options<BR>to resolve the problem.\", fn)\n+                    Localization.lang(\"This makes JabRef look up each %0 link and check if the file exists. If not, you will be given options<BR>to resolve the problem.\", fn)\n                     + \"</HTML>\");\n-            builder.append(description);\n-            builder.nextLine();\n-            builder.append(checkLinks);\n-            builder.nextLine();\n-            builder.appendSeparator();\n+            builder.add(description).xy(1, 11);\n+            builder.add(checkLinks).xy(1, 13);\n+            builder.addSeparator(\"\").xy(1, 15);\n \n             JPanel main = builder.getPanel();\n             main.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));, @@ -86,7 +86,7 @@\n import ca.odell.glazedlists.event.ListEvent;\n import ca.odell.glazedlists.event.ListEventListener;\n import ca.odell.glazedlists.matchers.Matcher;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -1423,9 +1423,11 @@ private boolean saveDatabase(File file, boolean selectedOnly, String encoding, F\n             }\n \n         } catch (UnsupportedCharsetException ex2) {\n+            // @formatter:off\n             JOptionPane.showMessageDialog(frame, Localization.lang(\"Could not save file. \"\n                             + \"Character encoding '%0' is not supported.\", encoding),\n                     Localization.lang(\"Save database\"), JOptionPane.ERROR_MESSAGE);\n+            // @formatter:on\n             throw new SaveException(\"rt\");\n         } catch (SaveException ex) {\n             if (ex.specificEntry()) {\n@@ -1453,13 +1455,13 @@ private boolean saveDatabase(File file, boolean selectedOnly, String encoding, F\n \n         boolean commit = true;\n         if (!session.getWriter().couldEncodeAll()) {\n-            DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, fill:pref\", \"\"));\n+            FormBuilder builder = FormBuilder.create().layout(new FormLayout(\"left:pref, 4dlu, fill:pref\", \"pref, 4dlu, pref\"));\n             JTextArea ta = new JTextArea(session.getWriter().getProblemCharacters());\n             ta.setEditable(false);\n-            builder.append(Localization.lang(\"The chosen encoding '%0' could not encode the following characters: \",\n-                    session.getEncoding()));\n-            builder.append(ta);\n-            builder.append(Localization.lang(\"What do you want to do?\"));\n+            builder.add(Localization.lang(\"The chosen encoding '%0' could not encode the following characters: \",\n+                    session.getEncoding())).xy(1, 1);\n+            builder.add(ta).xy(3, 1);\n+            builder.add(Localization.lang(\"What do you want to do?\")).xy(1, 3);\n             String tryDiff = Localization.lang(\"Try different encoding\");\n             int answer = JOptionPane.showOptionDialog(frame, builder.getPanel(), Localization.lang(\"Save database\"),\n                     JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, null,, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -16,7 +16,7 @@\n package net.sf.jabref.gui;\n \n import com.jgoodies.forms.layout.FormLayout;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n \n import javax.swing.*;\n import java.awt.*;\n@@ -36,6 +36,7 @@\n  */\n public class ColorSetupPanel extends JPanel {\n \n+    private static final long serialVersionUID = -4634367444666144966L;\n     private static final int ICON_WIDTH = 30;\n     private static final int ICON_HEIGHT = 20;\n     private final ArrayList<ColorButton> buttons = new ArrayList<ColorButton>();\n@@ -44,8 +45,9 @@\n     public ColorSetupPanel() {\n \n         FormLayout layout = new FormLayout\n-                (\"30dlu, 4dlu, fill:pref, 4dlu, fill:pref, 8dlu, 30dlu, 4dlu, fill:pref, 4dlu, fill:pref\", \"\");\n-        DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n+                (\"30dlu, 4dlu, fill:pref, 4dlu, fill:pref, 8dlu, 30dlu, 4dlu, fill:pref, 4dlu, fill:pref\", \n+                        \"pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\");\n+        FormBuilder builder = FormBuilder.create().layout(layout);\n \n         buttons.add(new ColorButton(\"tableText\", Localization.lang(\"Table text color\")));\n         buttons.add(new ColorButton(\"markedEntryBackground0\", Localization.lang(\"Marking color %0\", \"1\")));\n@@ -65,12 +67,17 @@ public ColorSetupPanel() {\n         buttons.add(new ColorButton(\"activeFieldEditorBackgroundColor\", Localization.lang(\"Entry editor active background color\")));\n         buttons.add(new ColorButton(\"invalidFieldBackgroundColor\", Localization.lang(\"Entry editor invalid field color\")));\n \n+        int rowcnt = 0;\n+        int col = 0;\n+        int row;\n         for (ColorButton but : buttons) {\n-            builder.append(but);\n-            builder.append(but.getDefaultButton());\n-            builder.append(but.getName());\n+            row = (2*(rowcnt/2)) + 1; // == 2*floor(rowcnt/2) + 1\n+            builder.add((JButton)but).xy((6*col)+1, row);\n+            builder.add(but.getDefaultButton()).xy((6*col)+3, row);\n+            builder.add(but.getName()).xy((6*col)+5, row);\n             but.addActionListener(new ColorButtonListener(but));\n-\n+            col = 1-col;  // Change 0 -> 1 -> 0 ...\n+            rowcnt++;\n         }\n \n         setLayout(new BorderLayout());\n@@ -118,6 +125,7 @@ public void actionPerformed(ActionEvent e) {\n      */\n     class ColorButton extends JButton implements Icon {\n \n+        private static final long serialVersionUID = -1974112633706382299L;\n         private Color color = Color.white;\n         private final String key;\n         private final String name;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -26,7 +26,7 @@\n import net.sf.jabref.Globals;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -37,8 +37,9 @@\n  */\n public class DBConnectDialog extends JDialog {\n \n+    private static final long serialVersionUID = 7395276764910821176L;\n     // input fields\n-    private final JComboBox cmbServerType = new JComboBox();\n+    private final JComboBox<String> cmbServerType = new JComboBox<String>();\n     private final JTextField txtServerHostname = new JTextField(40);\n     private final JTextField txtDatabase = new JTextField(40);\n     private final JTextField txtUsername = new JTextField(40);\n@@ -111,27 +112,22 @@ public DBConnectDialog(JFrame parent, DBStrings dbs) {\n         pwdPassword.setText(dbStrings.getPassword());\n \n         // construct dialog\n-        DefaultFormBuilder builder = new DefaultFormBuilder(new\n-                FormLayout(\"right:pref, 4dlu, fill:pref\", \"\"));\n+        FormBuilder builder = FormBuilder.create().layout(new\n+                FormLayout(\"right:pref, 4dlu, fill:pref\", \"pref, 4dlu, pref, 4dlu, pref, 4dlu, pref, 4dlu, pref\"));\n \n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n \n         // add labels and input fields\n-        builder.append(lblServerType);\n-        builder.append(cmbServerType);\n-        builder.nextLine();\n-        builder.append(lblServerHostname);\n-        builder.append(txtServerHostname);\n-        builder.nextLine();\n-        builder.append(lblDatabase);\n-        builder.append(txtDatabase);\n-        builder.nextLine();\n-        builder.append(lblUsername);\n-        builder.append(txtUsername);\n-        builder.nextLine();\n-        builder.append(lblPassword);\n-        builder.append(pwdPassword);\n-        builder.nextLine();\n+        builder.add(lblServerType).xy(1, 1);\n+        builder.add(cmbServerType).xy(3, 1);\n+        builder.add(lblServerHostname).xy(1, 3);\n+        builder.add(txtServerHostname).xy(3, 3);\n+        builder.add(lblDatabase).xy(1, 5);\n+        builder.add(txtDatabase).xy(3, 5);\n+        builder.add(lblUsername).xy(1, 7);\n+        builder.add(txtUsername).xy(3, 7);\n+        builder.add(lblPassword).xy(1, 9);\n+        builder.add(pwdPassword).xy(3, 9);\n \n         // add the panel to the CENTER of your dialog:\n         getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n@@ -174,6 +170,8 @@ public void actionPerformed(ActionEvent e) {\n \n         AbstractAction cancelAction = new AbstractAction() {\n \n+            private static final long serialVersionUID = 812282483921018251L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 setVisible(false);, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n@@ -59,7 +59,7 @@\n import net.sf.jabref.gui.undo.NamedCompound;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n \n /**\n@@ -72,15 +72,17 @@\n  */\n public class ManageKeywordsAction extends MnemonicAwareAction {\n \n+    private static final long serialVersionUID = -5234432936032780873L;\n+\n     private final JabRefFrame frame;\n \n     private JDialog diag;\n \n     // keyword to add\n     private JTextField keyword;\n \n-    private DefaultListModel keywordListModel;\n-    private JList keywordList;\n+    private DefaultListModel<String> keywordListModel;\n+    private JList<String> keywordList;\n \n     private JRadioButton intersectKeywords;\n     private JRadioButton mergeKeywords;\n@@ -98,8 +100,8 @@ public ManageKeywordsAction(JabRefFrame frame) {\n     private void createDialog() {\n         keyword = new JTextField();\n \n-        keywordListModel = new DefaultListModel();\n-        keywordList = new JList(keywordListModel);\n+        keywordListModel = new DefaultListModel<String>();\n+        keywordList = new JList<String>(keywordListModel);\n         keywordList.setVisibleRowCount(8);\n         JScrollPane kPane = new JScrollPane(keywordList);\n \n@@ -128,19 +130,16 @@ public void actionPerformed(ActionEvent arg0) {\n         mergeKeywords.addActionListener(stateChanged);\n         intersectKeywords.setSelected(true);\n \n-        DefaultFormBuilder builder = new DefaultFormBuilder(\n-                new FormLayout(\"fill:200dlu, 4dlu, left:pref, 4dlu, left:pref\", \"\"));\n-        builder.appendSeparator(Localization.lang(\"Keywords of selected entries\"));\n-        builder.append(intersectKeywords, 5);\n-        builder.nextLine();\n-        builder.append(mergeKeywords, 5);\n-        builder.nextLine();\n-        builder.append(kPane, 3);\n-        builder.add(remove);\n-        builder.nextLine();\n-        builder.append(keyword, 3);\n-        builder.append(add);\n-        builder.nextLine();\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout(\"fill:200dlu:grow, 4dlu, fill:pref\",\n+                \"pref, 2dlu, pref, 1dlu, pref, 2dlu, fill:100dlu:grow, 4dlu, pref, 4dlu, pref, \"));\n+\n+        builder.addSeparator(Localization.lang(\"Keywords of selected entries\")).xyw(1, 1, 3);\n+        builder.add(intersectKeywords).xyw(1, 3, 3);\n+        builder.add(mergeKeywords).xyw(1, 5, 3);\n+        builder.add(kPane).xywh(1, 7, 1, 3);\n+        builder.add(remove).xy(3, 9);\n+        builder.add(keyword).xy(1, 11);\n+        builder.add(add).xy(3, 11);\n \n         ButtonBarBuilder bb = new ButtonBarBuilder();\n         bb.addGlue();\n@@ -161,6 +160,8 @@ public void actionPerformed(ActionEvent e) {\n \n         AbstractAction cancelAction = new AbstractAction() {\n \n+            private static final long serialVersionUID = -4623988526737916508L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 cancelled = true;\n@@ -182,9 +183,9 @@ public void actionPerformed(ActionEvent arg0) {\n                     keywordListModel.addElement(text);\n                 } else {\n                     int idx = 0;\n-                    String element = (String) keywordListModel.getElementAt(idx);\n-                    while (idx < keywordListModel.size() &&\n-                            element.compareTo(text) < 0) {\n+                    String element = keywordListModel.getElementAt(idx);\n+                    while ((idx < keywordListModel.size()) &&\n+                            (element.compareTo(text) < 0)) {\n                         idx++;\n                     }\n                     if (idx == keywordListModel.size()) {\n@@ -207,7 +208,7 @@ public void actionPerformed(ActionEvent arg0) {\n             @Override\n             public void actionPerformed(ActionEvent arg0) {\n                 // keywordList.getSelectedIndices(); does not work, therefore we operate on the values\n-                String[] values = (String[]) keywordList.getSelectedValues();\n+                String[] values = (String[]) keywordList.getSelectedValuesList().toArray();\n \n                 for (String val : values) {\n                     keywordListModel.removeElement(val);\n@@ -263,7 +264,6 @@ public void keyPressed(KeyEvent e) {\n \n         diag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n         diag.getContentPane().add(bb.getPanel(), BorderLayout.SOUTH);\n-        //diag.pack();\n     }\n \n     @Override\n@@ -273,7 +273,7 @@ public void actionPerformed(ActionEvent e) {\n             return;\n         }\n         if (bp.getSelectedEntries().length == 0) {\n-            // no entries selected, silently ignore action\n+            bp.output(Localization.lang(\"Select at least one entry to manage keywords.\"));\n             return;\n         }\n \n@@ -296,8 +296,8 @@ public void actionPerformed(ActionEvent e) {\n         HashSet<String> keywordsToAdd = new HashSet<String>();\n         HashSet<String> userSelectedKeywords = new HashSet<String>();\n         // build keywordsToAdd and userSelectedKeywords in parallel\n-        for (Enumeration keywords = keywordListModel.elements(); keywords.hasMoreElements();) {\n-            String keyword = (String) keywords.nextElement();\n+        for (Enumeration<String> keywords = keywordListModel.elements(); keywords.hasMoreElements();) {\n+            String keyword = keywords.nextElement();\n             userSelectedKeywords.add(keyword);\n             if (!sortedKeywordsOfAllEntriesBeforeUpdateByUser.contains(keyword)) {\n                 keywordsToAdd.add(keyword);, @@ -32,7 +32,7 @@\n import net.sf.jabref.gui.undo.NamedCompound;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -47,6 +47,7 @@\n  */\n public class MassSetFieldAction extends MnemonicAwareAction {\n \n+    private static final long serialVersionUID = -3335783568376999899L;\n     private final JabRefFrame frame;\n     private JDialog diag;\n     private JRadioButton all;\n@@ -82,7 +83,7 @@ private void createDialog() {\n         selected = new JRadioButton(Localization.lang(\"Selected entries\"));\n         clear = new JRadioButton(Localization.lang(\"Clear fields\"));\n         set = new JRadioButton(Localization.lang(\"Set fields\"));\n-        rename = new JRadioButton(Localization.lang(\"Rename field to:\"));\n+        rename = new JRadioButton(Localization.lang(\"Rename field to\") + \":\");\n         rename.setToolTipText(Localization.lang(\"Move contents of a field into a field with a different name\"));\n         set.addChangeListener(new ChangeListener() {\n \n@@ -116,27 +117,21 @@ public void stateChanged(ChangeEvent e) {\n         bg.add(clear);\n         bg.add(set);\n         bg.add(rename);\n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout(\n-                \"left:pref, 4dlu, fill:100dlu\", \"\"));\n-        builder.appendSeparator(Localization.lang(\"Field name\"));\n-        builder.append(Localization.lang(\"Field name\"));\n-        builder.append(field);\n-        builder.nextLine();\n-        builder.appendSeparator(Localization.lang(\"Include entries\"));\n-        builder.append(all, 3);\n-        builder.nextLine();\n-        builder.append(selected, 3);\n-        builder.nextLine();\n-        builder.appendSeparator(Localization.lang(\"New field value\"));\n-        builder.append(set);\n-        builder.append(text);\n-        builder.nextLine();\n-        builder.append(clear);\n-        builder.nextLine();\n-        builder.append(rename);\n-        builder.append(renameTo);\n-        builder.nextLine();\n-        builder.append(overwrite, 3);\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout(\n+                \"left:pref, 4dlu, fill:100dlu:grow\", \"pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\"));\n+        builder.addSeparator(Localization.lang(\"Field name\")).xyw(1, 1, 3);\n+        builder.add(Localization.lang(\"Field name\")).xy(1, 3);\n+        builder.add(field).xy(3, 3);\n+        builder.addSeparator(Localization.lang(\"Include entries\")).xyw(1, 5, 3);\n+        builder.add(all).xyw(1, 7, 3);\n+        builder.add(selected).xyw(1, 9, 3);\n+        builder.addSeparator(Localization.lang(\"New field value\")).xyw(1, 11, 3);\n+        builder.add(set).xy(1, 13);\n+        builder.add(text).xy(3, 13);\n+        builder.add(clear).xyw(1, 15, 3);\n+        builder.add(rename).xy(1, 17);\n+        builder.add(renameTo).xy(3, 17);\n+        builder.add(overwrite).xyw(1, 19, 3);\n \n         ButtonBarBuilder bb = new ButtonBarBuilder();\n         bb.addGlue();\n@@ -169,6 +164,8 @@ public void actionPerformed(ActionEvent e) {\n \n         AbstractAction cancelAction = new AbstractAction() {\n \n+            private static final long serialVersionUID = 5590008814009727518L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 cancelled = true;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     Copyright (C) 2015 Oliver Kopp\n \n     This program is free software; you can redistribute it and/or modify\n@@ -21,10 +21,7 @@\n package net.sf.jabref.util;\n \n import java.awt.BorderLayout;\n-import java.awt.CardLayout;\n import java.awt.Component;\n-import java.awt.Dimension;\n-import java.awt.Font;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.io.*;\n@@ -36,19 +33,13 @@\n import javax.swing.Action;\n import javax.swing.ActionMap;\n import javax.swing.BorderFactory;\n-import javax.swing.Box;\n import javax.swing.InputMap;\n-import javax.swing.JButton;\n import javax.swing.JComponent;\n import javax.swing.JDialog;\n-import javax.swing.JFrame;\n import javax.swing.JLabel;\n import javax.swing.JOptionPane;\n-import javax.swing.JPanel;\n import javax.swing.JProgressBar;\n import javax.swing.JRootPane;\n-import javax.swing.JScrollPane;\n-import javax.swing.JTextArea;\n import javax.swing.SwingUtilities;\n import javax.swing.undo.AbstractUndoableEdit;\n import javax.swing.undo.UndoableEdit;\n@@ -93,39 +84,36 @@\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n-import com.jgoodies.forms.layout.FormLayout;\n-\n /**\n  * utility functions\n  */\n public class Util {\n+\n     private static final Log LOGGER = LogFactory.getLog(Util.class);\n \n     public static final Pattern REMOTE_LINK_PATTERN = Pattern.compile(\"[a-z]+://.*\");\n-    \n+\n     private static final EasyDateFormat dateFormatter = new EasyDateFormat();\n-    \n+\n     public static final String ARXIV_LOOKUP_PREFIX = \"http://arxiv.org/abs/\";\n-    \n+\n     private static final String SEPARATING_CHARS_NOSPACE = \";,\\n\";\n-    \n+\n     private static final UnicodeCharMap UNICODE_CHAR_MAP = new UnicodeCharMap();\n \n+\n     /**\n-     * This method sets the location of a Dialog such that it is centered with\n-     * regard to another window, but not outside the screen on the left and the\n-     * top.\n+     * This method sets the location of a Dialog such that it is centered with regard to another window, but not outside\n+     * the screen on the left and the top.\n      */\n     public static void placeDialog(java.awt.Dialog diag, java.awt.Container win) {\n         diag.setLocationRelativeTo(win);\n     }\n \n     /**\n-     * This method translates a field or string from Bibtex notation, with\n-     * possibly text contained in \" \" or { }, and string references,\n-     * concatenated by '#' characters, into Bibkeeper notation, where string\n-     * references are enclosed in a pair of '#' characters.\n+     * This method translates a field or string from Bibtex notation, with possibly text contained in \" \" or { }, and\n+     * string references, concatenated by '#' characters, into Bibkeeper notation, where string references are enclosed\n+     * in a pair of '#' characters.\n      */\n     public static String parseField(String content) {\n         if (content.isEmpty()) {\n@@ -139,7 +127,7 @@ public static String parseField(String content) {\n             if (!s.isEmpty()) {\n                 char c = s.charAt(0);\n                 // String reference or not?\n-                if (c == '{' || c == '\"') {\n+                if ((c == '{') || (c == '\"')) {\n                     result.append(StringUtil.shaveString(string));\n                 } else {\n                     // This part should normally be a string reference, but if it's\n@@ -159,12 +147,11 @@ public static String parseField(String content) {\n     }\n \n     /**\n-     * Will return the publication date of the given bibtex entry in conformance\n-     * to ISO 8601, i.e. either YYYY or YYYY-MM.\n+     * Will return the publication date of the given bibtex entry in conformance to ISO 8601, i.e. either YYYY or\n+     * YYYY-MM.\n      * \n      * @param entry\n-     * @return will return the publication date of the entry or null if no year\n-     *         was found.\n+     * @return will return the publication date of the entry or null if no year was found.\n      */\n     // TODO: Should be instance method of BibTexEntry\n     public static String getPublicationDate(BibtexEntry entry) {\n@@ -187,13 +174,12 @@ public static String getPublicationDate(BibtexEntry entry) {\n     }\n \n     /**\n-     * This method returns a String similar to the one passed in, except that it\n-     * is molded into a form that is acceptable for bibtex.\n+     * This method returns a String similar to the one passed in, except that it is molded into a form that is\n+     * acceptable for bibtex.\n      * \n      * Watch-out that the returned string might be of length 0 afterwards.\n      * \n-     * @param key\n-     *            mayBeNull\n+     * @param key mayBeNull\n      */\n     public static String checkLegalKey(String key) {\n         if (key == null) {\n@@ -206,8 +192,7 @@ public static String checkLegalKey(String key) {\n             StringBuilder newKey = new StringBuilder();\n             for (int i = 0; i < key.length(); i++) {\n                 char c = key.charAt(i);\n-                if (!Character.isWhitespace(c) && c != '{' && c != '\\\\' && c != '\"'\n-                        && c != '}' && c != ',') {\n+                if (!Character.isWhitespace(c) && (c != '{') && (c != '\\\\') && (c != '\"') && (c != '}') && (c != ',')) {\n                     newKey.append(c);\n                 }\n             }\n@@ -217,8 +202,7 @@ public static String checkLegalKey(String key) {\n         StringBuilder newKey = new StringBuilder();\n         for (int i = 0; i < key.length(); i++) {\n             char c = key.charAt(i);\n-            if (!Character.isWhitespace(c) && c != '#' && c != '{' && c != '\\\\' && c != '\"'\n-                    && c != '}' && c != '~' && c != ',' && c != '^' && c != '\\'') {\n+            if (!Character.isWhitespace(c) && (c != '#') && (c != '{') && (c != '\\\\') && (c != '\"') && (c != '}') && (c != '~') && (c != ',') && (c != '^') && (c != '\\'')) {\n                 newKey.append(c);\n             }\n         }\n@@ -230,19 +214,17 @@ public static String checkLegalKey(String key) {\n     }\n \n     /**\n-     * Replace non-english characters like umlauts etc. with a sensible letter\n-     * or letter combination that bibtex can accept. The basis for replacement\n-     * is the HashMap Globals.UNICODE_CHARS.\n+     * Replace non-english characters like umlauts etc. with a sensible letter or letter combination that bibtex can\n+     * accept. The basis for replacement is the HashMap Globals.UNICODE_CHARS.\n      */\n     public static String replaceSpecialCharacters(String s) {\n-        for (Map.Entry<String, String> chrAndReplace : UNICODE_CHAR_MAP.entrySet()) {\n+        for (Map.Entry<String, String> chrAndReplace : Util.UNICODE_CHAR_MAP.entrySet()) {\n             s = s.replaceAll(chrAndReplace.getKey(), chrAndReplace.getValue());\n         }\n         return s;\n     }\n \n-    public static TreeSet<String> findDeliminatedWordsInField(BibtexDatabase db, String field,\n-            String deliminator) {\n+    public static TreeSet<String> findDeliminatedWordsInField(BibtexDatabase db, String field, String deliminator) {\n         TreeSet<String> res = new TreeSet<String>();\n \n         for (String s : db.getKeySet()) {\n@@ -260,15 +242,12 @@ public static String replaceSpecialCharacters(String s) {\n     }\n \n     /**\n-     * Returns a HashMap containing all words used in the database in the given\n-     * field type. Characters in <code>remove</code> are not included.\n+     * Returns a HashMap containing all words used in the database in the given field type. Characters in\n+     * <code>remove</code> are not included.\n      * \n-     * @param db\n-     *            a <code>BibtexDatabase</code> value\n-     * @param field\n-     *            a <code>String</code> value\n-     * @param remove\n-     *            a <code>String</code> value\n+     * @param db a <code>BibtexDatabase</code> value\n+     * @param field a <code>String</code> value\n+     * @param remove a <code>String</code> value\n      * @return a <code>HashSet</code> value\n      */\n     public static TreeSet<String> findAllWordsInField(BibtexDatabase db, String field, String remove) {\n@@ -289,6 +268,7 @@ public static String replaceSpecialCharacters(String s) {\n \n     /**\n      * Finds all authors' last names in all the given fields for the given database.\n+     * \n      * @param db The database.\n      * @param fields The fields to look in.\n      * @return a set containing the names.\n@@ -299,12 +279,12 @@ public static String replaceSpecialCharacters(String s) {\n             BibtexEntry be = db.getEntryById(s);\n             for (String field : fields) {\n                 String val = be.getField(field);\n-                if (val != null && !val.isEmpty()) {\n+                if ((val != null) && !val.isEmpty()) {\n                     AuthorList al = AuthorList.getAuthorList(val);\n                     for (int i = 0; i < al.size(); i++) {\n                         AuthorList.Author a = al.getAuthor(i);\n                         String lastName = a.getLast();\n-                        if (lastName != null && !lastName.isEmpty()) {\n+                        if ((lastName != null) && !lastName.isEmpty()) {\n                             res.add(lastName);\n                         }\n                     }\n@@ -317,14 +297,14 @@ public static String replaceSpecialCharacters(String s) {\n     }\n \n     /**\n-     * Make sure an URL is \"portable\", in that it doesn't contain bad characters\n-     * that break the open command in some OSes.\n+     * Make sure an URL is \"portable\", in that it doesn't contain bad characters that break the open command in some\n+     * OSes.\n      * \n      * A call to this method will also remove \\\\url{} enclosings and clean Doi links.\n-\t * \n-\t * @param link :the URL to sanitize.\n-\t * @return Sanitized URL\n-\t */\n+     * \n+     * @param link :the URL to sanitize.\n+     * @return Sanitized URL\n+     */\n     public static String sanitizeUrl(String link) {\n         link = link.trim();\n \n@@ -385,10 +365,10 @@ public static String sanitizeUrl(String link) {\n             int start = i;\n             if (Character.isJavaIdentifierStart(c[i])) {\n                 i++;\n-                while (i < c.length && (Character.isJavaIdentifierPart(c[i]) || c[i] == '.')) {\n+                while ((i < c.length) && (Character.isJavaIdentifierPart(c[i]) || (c[i] == '.'))) {\n                     i++;\n                 }\n-                if (i < c.length && c[i] == '(') {\n+                if ((i < c.length) && (c[i] == '(')) {\n \n                     String method = calls.substring(start, i);\n \n@@ -405,8 +385,7 @@ public static String sanitizeUrl(String link) {\n                             int startParam = i;\n                             i++;\n                             boolean escaped = false;\n-                            while (i + 1 < c.length &&\n-                                    !(!escaped && c[i] == '\"' && c[i + 1] == ')')) {\n+                            while (((i + 1) < c.length) && !(!escaped && (c[i] == '\"') && (c[i + 1] == ')'))) {\n                                 if (c[i] == '\\\\') {\n                                     escaped = !escaped;\n                                 } else {\n@@ -424,7 +403,7 @@ public static String sanitizeUrl(String link) {\n \n                             int startParam = i;\n \n-                            while (i < c.length && c[i] != ')') {\n+                            while ((i < c.length) && (c[i] != ')')) {\n                                 i++;\n                             }\n \n@@ -450,8 +429,7 @@ public static String sanitizeUrl(String link) {\n \n \n     /**\n-     * Takes a string that contains bracketed expression and expands each of\n-     * these using getFieldAndFormat.\n+     * Takes a string that contains bracketed expression and expands each of these using getFieldAndFormat.\n      *\n      * Unknown Bracket expressions are silently dropped.\n      *\n@@ -462,8 +440,8 @@ public static String sanitizeUrl(String link) {\n      */\n     private static final Pattern squareBracketsPattern = Pattern.compile(\"\\\\[.*?\\\\]\");\n \n-    public static String expandBrackets(String bracketString, BibtexEntry entry,\n-            BibtexDatabase database) {\n+\n+    public static String expandBrackets(String bracketString, BibtexEntry entry, BibtexDatabase database) {\n         Matcher m = Util.squareBracketsPattern.matcher(bracketString);\n         StringBuffer s = new StringBuffer();\n         while (m.find()) {\n@@ -479,20 +457,17 @@ public static String expandBrackets(String bracketString, BibtexEntry entry,\n     }\n \n     /**\n-     * Sets empty or non-existing owner fields of bibtex entries inside a List\n-     * to a specified default value. Timestamp field is also set. Preferences\n-     * are checked to see if these options are enabled.\n+     * Sets empty or non-existing owner fields of bibtex entries inside a List to a specified default value. Timestamp\n+     * field is also set. Preferences are checked to see if these options are enabled.\n      * \n-     * @param bibs\n-     *            List of bibtex entries\n+     * @param bibs List of bibtex entries\n      */\n-    public static void setAutomaticFields(Collection<BibtexEntry> bibs,\n-            boolean overwriteOwner, boolean overwriteTimestamp, boolean markEntries) {\n+    public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean overwriteOwner, boolean overwriteTimestamp, boolean markEntries) {\n \n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n \n         String defaultOwner = Globals.prefs.get(JabRefPreferences.DEFAULT_OWNER);\n-        String timestamp = dateFormatter.getCurrentDate();\n+        String timestamp = Util.dateFormatter.getCurrentDate();\n         boolean globalSetOwner = Globals.prefs.getBoolean(JabRefPreferences.USE_OWNER);\n         boolean globalSetTimeStamp = Globals.prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP);\n \n@@ -503,45 +478,34 @@ public static void setAutomaticFields(Collection<BibtexEntry> bibs,\n \n         // Iterate through all entries\n         for (BibtexEntry curEntry : bibs) {\n-            boolean setOwner = globalSetOwner &&\n-                    (overwriteOwner || curEntry.getField(BibtexFields.OWNER) == null);\n-            boolean setTimeStamp = globalSetTimeStamp &&\n-                    (overwriteTimestamp || curEntry.getField(timeStampField) == null);\n-            Util.setAutomaticFields(curEntry, setOwner, defaultOwner, setTimeStamp, timeStampField,\n-                    timestamp);\n+            boolean setOwner = globalSetOwner && (overwriteOwner || (curEntry.getField(BibtexFields.OWNER) == null));\n+            boolean setTimeStamp = globalSetTimeStamp && (overwriteTimestamp || (curEntry.getField(timeStampField) == null));\n+            Util.setAutomaticFields(curEntry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n             if (markEntries) {\n                 EntryMarker.markEntry(curEntry, EntryMarker.IMPORT_MARK_LEVEL, false, new NamedCompound(\"\"));\n             }\n         }\n     }\n \n     /**\n-     * Sets empty or non-existing owner fields of a bibtex entry to a specified\n-     * default value. Timestamp field is also set. Preferences are checked to\n-     * see if these options are enabled.\n+     * Sets empty or non-existing owner fields of a bibtex entry to a specified default value. Timestamp field is also\n+     * set. Preferences are checked to see if these options are enabled.\n      * \n-     * @param entry\n-     *            The entry to set fields for.\n-     * @param overwriteOwner\n-     *              Indicates whether owner should be set if it is already set.\n-     * @param overwriteTimestamp\n-     *              Indicates whether timestamp should be set if it is already set.\n+     * @param entry The entry to set fields for.\n+     * @param overwriteOwner Indicates whether owner should be set if it is already set.\n+     * @param overwriteTimestamp Indicates whether timestamp should be set if it is already set.\n      */\n-    public static void setAutomaticFields(BibtexEntry entry, boolean overwriteOwner,\n-            boolean overwriteTimestamp) {\n+    public static void setAutomaticFields(BibtexEntry entry, boolean overwriteOwner, boolean overwriteTimestamp) {\n         String defaultOwner = Globals.prefs.get(JabRefPreferences.DEFAULT_OWNER);\n-        String timestamp = dateFormatter.getCurrentDate();\n+        String timestamp = Util.dateFormatter.getCurrentDate();\n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n-        boolean setOwner = Globals.prefs.getBoolean(JabRefPreferences.USE_OWNER) &&\n-                (overwriteOwner || entry.getField(BibtexFields.OWNER) == null);\n-        boolean setTimeStamp = Globals.prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP) &&\n-                (overwriteTimestamp || entry.getField(timeStampField) == null);\n+        boolean setOwner = Globals.prefs.getBoolean(JabRefPreferences.USE_OWNER) && (overwriteOwner || (entry.getField(BibtexFields.OWNER) == null));\n+        boolean setTimeStamp = Globals.prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP) && (overwriteTimestamp || (entry.getField(timeStampField) == null));\n \n         Util.setAutomaticFields(entry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n     }\n \n-    private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, String owner,\n-            boolean setTimeStamp, String timeStampField, String timeStamp) {\n+    private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, String owner, boolean setTimeStamp, String timeStampField, String timeStamp) {\n \n         // Set owner field if this option is enabled:\n         if (setOwner) {\n@@ -559,8 +523,9 @@ private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, Stri\n     }\n \n     /**\n-     * Collect file links from the given set of fields, and add them to the list contained\n-     * in the field GUIGlobals.FILE_FIELD.\n+     * Collect file links from the given set of fields, and add them to the list contained in the field\n+     * GUIGlobals.FILE_FIELD.\n+     * \n      * @param database The database to modify.\n      * @param fields The fields to find links in.\n      * @return A CompoundEdit specifying the undo operation for the whole operation.\n@@ -570,8 +535,9 @@ public static NamedCompound upgradePdfPsToFile(BibtexDatabase database, String[]\n     }\n \n     /**\n-     * Collect file links from the given set of fields, and add them to the list contained\n-     * in the field GUIGlobals.FILE_FIELD.\n+     * Collect file links from the given set of fields, and add them to the list contained in the field\n+     * GUIGlobals.FILE_FIELD.\n+     * \n      * @param entries The entries to modify.\n      * @param fields The fields to find links in.\n      * @return A CompoundEdit specifying the undo operation for the whole operation.\n@@ -592,8 +558,7 @@ public static NamedCompound upgradePdfPsToFile(Collection<BibtexEntry> entries,\n                 if (o != null) {\n                     if (!o.trim().isEmpty()) {\n                         File f = new File(o);\n-                        FileListEntry flEntry = new FileListEntry(f.getName(), o,\n-                                Globals.prefs.getExternalFileTypeByExt(field));\n+                        FileListEntry flEntry = new FileListEntry(f.getName(), o, Globals.prefs.getExternalFileTypeByExt(field));\n                         tableModel.addEntry(tableModel.getRowCount(), flEntry);\n \n                         entry.clearField(field);\n@@ -612,30 +577,22 @@ public static NamedCompound upgradePdfPsToFile(Collection<BibtexEntry> entries,\n     }\n \n     /**\n-     * Warns the user of undesired side effects of an explicit\n-     * assignment/removal of entries to/from this group. Currently there are\n-     * four types of groups: AllEntriesGroup, SearchGroup - do not support\n-     * explicit assignment. ExplicitGroup - never modifies entries. KeywordGroup -\n-     * only this modifies entries upon assignment/removal. Modifications are\n-     * acceptable unless they affect a standard field (such as \"author\") besides\n-     * the \"keywords\" field.\n+     * Warns the user of undesired side effects of an explicit assignment/removal of entries to/from this group.\n+     * Currently there are four types of groups: AllEntriesGroup, SearchGroup - do not support explicit assignment.\n+     * ExplicitGroup - never modifies entries. KeywordGroup - only this modifies entries upon assignment/removal.\n+     * Modifications are acceptable unless they affect a standard field (such as \"author\") besides the \"keywords\" field.\n      * \n-     * @param parent\n-     *            The Component used as a parent when displaying a confirmation\n-     *            dialog.\n-     * @return true if the assignment has no undesired side effects, or the user\n-     *         chose to perform it anyway. false otherwise (this indicates that\n-     *         the user has aborted the assignment).\n+     * @param parent The Component used as a parent when displaying a confirmation dialog.\n+     * @return true if the assignment has no undesired side effects, or the user chose to perform it anyway. false\n+     *         otherwise (this indicates that the user has aborted the assignment).\n      */\n-    public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEntry[] entries,\n-            BibtexDatabase db, Component parent) {\n+    public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEntry[] entries, BibtexDatabase db, Component parent) {\n         Vector<String> affectedFields = new Vector<String>();\n         for (AbstractGroup group : groups) {\n             if (group instanceof KeywordGroup) {\n                 KeywordGroup kg = (KeywordGroup) group;\n                 String field = kg.getSearchField().toLowerCase();\n-                if (field.equals(\"keywords\"))\n-                 {\n+                if (field.equals(\"keywords\")) {\n                     continue; // this is not undesired\n                 }\n                 for (int i = 0, len = BibtexFields.numberOfPublicFields(); i < len; ++i) {\n@@ -646,24 +603,18 @@ public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEn\n                 }\n             }\n         }\n-        if (affectedFields.isEmpty())\n-         {\n+        if (affectedFields.isEmpty()) {\n             return true; // no side effects\n         }\n \n         // show a warning, then return\n         StringBuffer message = // JZTODO lyrics...\n-        new StringBuffer(\"This action will modify the following field(s)\\n\"\n-                + \"in at least one entry each:\\n\");\n+        new StringBuffer(\"This action will modify the following field(s)\\n\" + \"in at least one entry each:\\n\");\n         for (int i = 0; i < affectedFields.size(); ++i) {\n             message.append(affectedFields.elementAt(i)).append(\"\\n\");\n         }\n-        message.append(\"This could cause undesired changes to \"\n-                + \"your entries, so it is\\nrecommended that you change the grouping field \"\n-                + \"in your group\\ndefinition to \\\"keywords\\\" or a non-standard name.\"\n-                + \"\\n\\nDo you still want to continue?\");\n-        int choice = JOptionPane.showConfirmDialog(parent, message, Localization.lang(\"Warning\"),\n-                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);\n+        message.append(\"This could cause undesired changes to \" + \"your entries, so it is\\nrecommended that you change the grouping field \" + \"in your group\\ndefinition to \\\"keywords\\\" or a non-standard name.\" + \"\\n\\nDo you still want to continue?\");\n+        int choice = JOptionPane.showConfirmDialog(parent, message, Localization.lang(\"Warning\"), JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);\n         return choice != JOptionPane.NO_OPTION;\n \n         // if (groups instanceof KeywordGroup) {\n@@ -694,12 +645,10 @@ public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEn\n     }\n \n     /**\n-     * This method looks up what kind of external binding is used for the given\n-     * field, and constructs on OpenFileFilter suitable for browsing for an\n-     * external file.\n+     * This method looks up what kind of external binding is used for the given field, and constructs on OpenFileFilter\n+     * suitable for browsing for an external file.\n      * \n-     * @param fieldName\n-     *            The BibTeX field in question.\n+     * @param fieldName The BibTeX field in question.\n      * @return The file filter.\n      */\n     public static OpenFileFilter getFileFilterForField(String fieldName) {\n@@ -714,34 +663,25 @@ public static OpenFileFilter getFileFilterForField(String fieldName) {\n         return off;\n     }\n \n-\n     /**\n-     * Set a given field to a given value for all entries in a Collection. This\n-     * method DOES NOT update any UndoManager, but returns a relevant\n-     * CompoundEdit that should be registered by the caller.\n+     * Set a given field to a given value for all entries in a Collection. This method DOES NOT update any UndoManager,\n+     * but returns a relevant CompoundEdit that should be registered by the caller.\n      * \n-     * @param entries\n-     *            The entries to set the field for.\n-     * @param field\n-     *            The name of the field to set.\n-     * @param text\n-     *            The value to set. This value can be null, indicating that the\n-     *            field should be cleared.\n-     * @param overwriteValues\n-     *            Indicate whether the value should be set even if an entry\n-     *            already has the field set.\n+     * @param entries The entries to set the field for.\n+     * @param field The name of the field to set.\n+     * @param text The value to set. This value can be null, indicating that the field should be cleared.\n+     * @param overwriteValues Indicate whether the value should be set even if an entry already has the field set.\n      * @return A CompoundEdit for the entire operation.\n      */\n-    public static UndoableEdit massSetField(Collection<BibtexEntry> entries, String field, String text,\n-            boolean overwriteValues) {\n+    public static UndoableEdit massSetField(Collection<BibtexEntry> entries, String field, String text, boolean overwriteValues) {\n \n         NamedCompound ce = new NamedCompound(Localization.lang(\"Set field\"));\n         for (BibtexEntry entry : entries) {\n             String oldVal = entry.getField(field);\n             // If we are not allowed to overwrite values, check if there is a\n             // nonempty\n             // value already for this entry:\n-            if (!overwriteValues && oldVal != null && !oldVal.isEmpty()) {\n+            if (!overwriteValues && (oldVal != null) && !oldVal.isEmpty()) {\n                 continue;\n             }\n             if (text != null) {\n@@ -757,26 +697,26 @@ public static UndoableEdit massSetField(Collection<BibtexEntry> entries, String\n \n     /**\n      * Move contents from one field to another for a Collection of entries.\n+     * \n      * @param entries The entries to do this operation for.\n      * @param field The field to move contents from.\n      * @param newField The field to move contents into.\n-     * @param overwriteValues If true, overwrites any existing values in the new field.\n-     *          If false, makes no change for entries with existing value in the new field.\n+     * @param overwriteValues If true, overwrites any existing values in the new field. If false, makes no change for\n+     *            entries with existing value in the new field.\n      * @return A CompoundEdit for the entire operation.\n      */\n-    public static UndoableEdit massRenameField(Collection<BibtexEntry> entries, String field,\n-            String newField, boolean overwriteValues) {\n+    public static UndoableEdit massRenameField(Collection<BibtexEntry> entries, String field, String newField, boolean overwriteValues) {\n         NamedCompound ce = new NamedCompound(Localization.lang(\"Rename field\"));\n         for (BibtexEntry entry : entries) {\n             String valToMove = entry.getField(field);\n             // If there is no value, do nothing:\n-            if (valToMove == null || valToMove.isEmpty()) {\n+            if ((valToMove == null) || valToMove.isEmpty()) {\n                 continue;\n             }\n             // If we are not allowed to overwrite values, check if there is a\n             // nonempy value already for this entry for the new field:\n             String valInNewField = entry.getField(newField);\n-            if (!overwriteValues && valInNewField != null && !valInNewField.isEmpty()) {\n+            if (!overwriteValues && (valInNewField != null) && !valInNewField.isEmpty()) {\n                 continue;\n             }\n \n@@ -805,44 +745,37 @@ public static int intValueOf(String str) {\n         boolean sign = false;\n         char ch;\n \n-        if (str == null || (end = str.length()) == 0 ||\n-                ((ch = str.charAt(0)) < '0' || ch > '9')\n-                && (!(sign = ch == '-') || ++idx == end || (ch = str.charAt(idx)) < '0' || ch > '9')) {\n+        if ((str == null) || ((end = str.length()) == 0) || ((((ch = str.charAt(0)) < '0') || (ch > '9')) && (!(sign = ch == '-') || (++idx == end) || ((ch = str.charAt(idx)) < '0') || (ch > '9')))) {\n             throw new NumberFormatException(str);\n         }\n \n-        for (;; ival *= 10)\n-        {\n+        for (;; ival *= 10) {\n             ival += '0' - ch;\n             if (++idx == end) {\n                 return sign ? ival : -ival;\n             }\n-            if ((ch = str.charAt(idx)) < '0' || ch > '9') {\n+            if (((ch = str.charAt(idx)) < '0') || (ch > '9')) {\n                 throw new NumberFormatException(str);\n             }\n         }\n     }\n \n     /**\n-     * Static equals that can also return the right result when one of the\n-     * objects is null.\n+     * Static equals that can also return the right result when one of the objects is null.\n      * \n-     * @param one\n-     *            The object whose equals method is called if the first is not\n-     *            null.\n-     * @param two\n-     *            The object passed to the first one if the first is not null.\n+     * @param one The object whose equals method is called if the first is not null.\n+     * @param two The object passed to the first one if the first is not null.\n      * @return <code>one == null ? two == null : one.equals(two);</code>\n      */\n     public static boolean equals(Object one, Object two) {\n         return one == null ? two == null : one.equals(two);\n     }\n \n     /**\n-     * Run an AbstractWorker's methods using Spin features to put each method\n-     * on the correct thread.\n+     * Run an AbstractWorker's methods using Spin features to put each method on the correct thread.\n+     * \n      * @param worker The worker to run.\n-     * @throws Throwable \n+     * @throws Throwable\n      */\n     public static void runAbstractWorker(AbstractWorker worker) throws Throwable {\n         // This part uses Spin's features:\n@@ -878,7 +811,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n         try {\n             layout = new LayoutHelper(sr).getLayoutFromText(Globals.FORMATTER_PACKAGE);\n         } catch (Exception e) {\n-            LOGGER.info(Localization.lang(\"Wrong Format\").concat(\" \").concat(e.toString()), e);\n+            Util.LOGGER.info(Localization.lang(\"Wrong Format\").concat(\" \").concat(e.toString()), e);\n         }\n         if (layout != null) {\n             targetName = layout.doLayout(entry, database);\n@@ -897,7 +830,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n         // a more intelligent algorithm would check for the separator chosen (SEPARATING_CHARS_NOSPACE)\n         // if nothing is found, \" \" is likely to be the separating char.\n         // solution by RisKeywords.java: s.split(\",[ ]*\")\n-        StringTokenizer tok = new StringTokenizer(keywords, SEPARATING_CHARS_NOSPACE);\n+        StringTokenizer tok = new StringTokenizer(keywords, Util.SEPARATING_CHARS_NOSPACE);\n         while (tok.hasMoreTokens()) {\n             String word = tok.nextToken().trim();\n             res.add(word);\n@@ -924,10 +857,10 @@ public static void putKeywords(BibtexEntry entry, ArrayList<String> keywords, Na\n         } else {\n             newValue = null;\n         }\n-        if (oldValue == null && newValue == null) {\n+        if ((oldValue == null) && (newValue == null)) {\n             return;\n         }\n-        if (oldValue == null || !oldValue.equals(newValue)) {\n+        if ((oldValue == null) || !oldValue.equals(newValue)) {\n             entry.setField(\"keywords\", newValue);\n             if (ce != null) {\n                 ce.addEdit(new UndoableFieldChange(entry, \"keywords\", oldValue, newValue));\n@@ -947,14 +880,14 @@ public static void updateField(BibtexEntry be, String field, String newValue, Na\n      */\n     public static void updateField(BibtexEntry be, String field, String newValue, NamedCompound ce, Boolean nullFieldIfValueIsTheSame) {\n         String oldValue = be.getField(field);\n-        if (nullFieldIfValueIsTheSame && oldValue != null && oldValue.equals(newValue)) {\n+        if (nullFieldIfValueIsTheSame && (oldValue != null) && oldValue.equals(newValue)) {\n             // if oldValue == newValue then reset field if required by parameter\n             newValue = null;\n         }\n-        if (oldValue == null && newValue == null) {\n+        if ((oldValue == null) && (newValue == null)) {\n             return;\n         }\n-        if (oldValue == null || !oldValue.equals(newValue)) {\n+        if ((oldValue == null) || !oldValue.equals(newValue)) {\n             be.setField(field, newValue);\n             if (ce != null) {\n                 ce.addEdit(new UndoableFieldChange(be, field, oldValue, newValue));\n@@ -964,12 +897,12 @@ public static void updateField(BibtexEntry be, String field, String newValue, Na\n \n     /**\n      * Binds ESC-Key to cancel button\n+     * \n      * @param rootPane the pane to bind the action to. Typically, this variable is retrieved by this.getRootPane();\n      * @param cancelAction the action to bind\n      */\n     // TODO: move to GUI\n-    public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane,\n-            Action cancelAction) {\n+    public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane, Action cancelAction) {\n         InputMap im = rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n         ActionMap am = rootPane.getActionMap();\n         im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n@@ -978,6 +911,7 @@ public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane,\n \n     /**\n      * Download the URL and return contents as a String.\n+     * \n      * @param source\n      * @return\n      * @throws IOException\n@@ -989,8 +923,8 @@ public static String getResults(URLConnection source) throws IOException {\n \n     /**\n      * Download the URL using specified encoding and return contents as a String.\n-     * @param source\n-     * encoding\n+     * \n+     * @param source encoding\n      * @return\n      * @throws IOException\n      */\n@@ -1019,49 +953,44 @@ public static boolean updateTimeStampIsSet() {\n     }\n \n     /**\n-     * Updates the timestamp of the given entry,\n-     * nests the given undaoableEdit in a named compound,\n-     * and returns that named compound\n+     * Updates the timestamp of the given entry, nests the given undaoableEdit in a named compound, and returns that\n+     * named compound\n      */\n     public static NamedCompound doUpdateTimeStamp(BibtexEntry entry, AbstractUndoableEdit undoableEdit) {\n         NamedCompound ce = new NamedCompound(undoableEdit.getPresentationName());\n         ce.addEdit(undoableEdit);\n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n-        String timestamp = dateFormatter.getCurrentDate();\n+        String timestamp = Util.dateFormatter.getCurrentDate();\n         Util.updateField(entry, timeStampField, timestamp, ce);\n         return ce;\n     }\n \n     /**\n-     * Automatically add links for this set of entries, based on the globally stored list of\n-     * external file types. The entries are modified, and corresponding UndoEdit elements\n-     * added to the NamedCompound given as argument. Furthermore, all entries which are modified\n-     * are added to the Set of entries given as an argument.\n+     * Automatically add links for this set of entries, based on the globally stored list of external file types. The\n+     * entries are modified, and corresponding UndoEdit elements added to the NamedCompound given as argument.\n+     * Furthermore, all entries which are modified are added to the Set of entries given as an argument.\n      *\n-     * The entries' bibtex keys must have been set - entries lacking key are ignored.\n-     * The operation is done in a new thread, which is returned for the caller to wait for\n-     * if needed.\n+     * The entries' bibtex keys must have been set - entries lacking key are ignored. The operation is done in a new\n+     * thread, which is returned for the caller to wait for if needed.\n      *\n      * @param entries A collection of BibtexEntry objects to find links for.\n      * @param ce A NamedCompound to add UndoEdit elements to.\n-     * @param changedEntries MODIFIED, optional. A Set of BibtexEntry objects to which all modified entries is added. This is used for status output and debugging\n-     * @param singleTableModel UGLY HACK. The table model to insert links into. Already existing links are not duplicated or removed. This parameter has to be null if entries.count() != 1.\n-     *   The hack has been introduced as a bibtexentry does not (yet) support the function getListTableModel() and the FileListEntryEditor editor holds an instance of that table model and does not reconstruct it after the search has succeeded.\n+     * @param changedEntries MODIFIED, optional. A Set of BibtexEntry objects to which all modified entries is added.\n+     *            This is used for status output and debugging\n+     * @param singleTableModel UGLY HACK. The table model to insert links into. Already existing links are not\n+     *            duplicated or removed. This parameter has to be null if entries.count() != 1. The hack has been\n+     *            introduced as a bibtexentry does not (yet) support the function getListTableModel() and the\n+     *            FileListEntryEditor editor holds an instance of that table model and does not reconstruct it after the\n+     *            search has succeeded.\n      * @param metaData The MetaData providing the relevant file directory, if any.\n-     * @param callback An ActionListener that is notified (on the event dispatch thread) when the search is\n-     *  finished. The ActionEvent has id=0 if no new links were added, and id=1 if one or more links were added.\n-     *  This parameter can be null, which means that no callback will be notified.\n-     * @param diag An instantiated modal JDialog which will be used to display the progress of the autosetting.\n-     *      This parameter can be null, which means that no progress update will be shown.\n+     * @param callback An ActionListener that is notified (on the event dispatch thread) when the search is finished.\n+     *            The ActionEvent has id=0 if no new links were added, and id=1 if one or more links were added. This\n+     *            parameter can be null, which means that no callback will be notified.\n+     * @param diag An instantiated modal JDialog which will be used to display the progress of the autosetting. This\n+     *            parameter can be null, which means that no progress update will be shown.\n      * @return the thread performing the autosetting\n      */\n-    public static Runnable autoSetLinks(final Collection<BibtexEntry> entries,\n-                                        final NamedCompound ce,\n-                                        final Set<BibtexEntry> changedEntries,\n-                                        final FileListTableModel singleTableModel,\n-                                        final MetaData metaData,\n-                                        final ActionListener callback,\n-                                        final JDialog diag) {\n+    public static Runnable autoSetLinks(final Collection<BibtexEntry> entries, final NamedCompound ce, final Set<BibtexEntry> changedEntries, final FileListTableModel singleTableModel, final MetaData metaData, final ActionListener callback, final JDialog diag) {\n         final ExternalFileType[] types = Globals.prefs.getExternalFileTypeSelection();\n         if (diag != null) {\n             final JProgressBar prog = new JProgressBar(JProgressBar.HORIZONTAL, 0, types.length - 1);\n@@ -1077,6 +1006,7 @@ public static Runnable autoSetLinks(final Collection<BibtexEntry> entries,\n         }\n \n         Runnable r = new Runnable() {\n+\n             @Override\n             public void run() {\n                 // determine directories to search in\n@@ -1132,9 +1062,8 @@ public void run() {\n                             foundAny = true;\n                             ExternalFileType type;\n                             int index = f.getPath().lastIndexOf('.');\n-                            if (index >= 0 && index < f.getPath().length() - 1) {\n-                                type = Globals.prefs.getExternalFileTypeByExt\n-                                        (f.getPath().substring(index + 1).toLowerCase());\n+                            if ((index >= 0) && (index < (f.getPath().length() - 1))) {\n+                                type = Globals.prefs.getExternalFileTypeByExt(f.getPath().substring(index + 1).toLowerCase());\n                             } else {\n                                 type = new UnknownExternalFileType(\"\");\n                             }\n@@ -1147,8 +1076,7 @@ public void run() {\n                             }\n                             if (ce != null) {\n                                 // store undo information\n-                                UndoableFieldChange change = new UndoableFieldChange(anEntry,\n-                                        GUIGlobals.FILE_FIELD, oldVal, newVal);\n+                                UndoableFieldChange change = new UndoableFieldChange(anEntry, GUIGlobals.FILE_FIELD, oldVal, newVal);\n                                 ce.addEdit(change);\n                             }\n                             // hack: if table model is given, do NOT modify entry\n@@ -1166,6 +1094,7 @@ public void run() {\n                 // FIXME: The ID signals if action was successful :/\n                 final int id = foundAny ? 1 : 0;\n                 SwingUtilities.invokeLater(new Runnable() {\n+\n                     @Override\n                     public void run() {\n                         if (diag != null) {\n@@ -1192,27 +1121,23 @@ public void run() {\n     }\n \n     /**\n-     * Automatically add links for this entry to the table model given as an argument, based on\n-     * the globally stored list of external file types. The entry itself is not modified. The entry's\n-     * bibtex key must have been set.\n+     * Automatically add links for this entry to the table model given as an argument, based on the globally stored list\n+     * of external file types. The entry itself is not modified. The entry's bibtex key must have been set.\n      *\n      * @param entry The BibtexEntry to find links for.\n-     * @param singleTableModel The table model to insert links into. Already existing links are not duplicated or removed.\n+     * @param singleTableModel The table model to insert links into. Already existing links are not duplicated or\n+     *            removed.\n      * @param metaData The MetaData providing the relevant file directory, if any.\n-     * @param callback An ActionListener that is notified (on the event dispatch thread) when the search is\n-     *  finished. The ActionEvent has id=0 if no new links were added, and id=1 if one or more links were added.\n-     *  This parameter can be null, which means that no callback will be notified. The passed ActionEvent is constructed with\n-     *  (this, id, \"\"), where id is 1 if something has been done and 0 if nothing has been done.\n-     * @param diag An instantiated modal JDialog which will be used to display the progress of the autosetting.\n-     *      This parameter can be null, which means that no progress update will be shown.\n+     * @param callback An ActionListener that is notified (on the event dispatch thread) when the search is finished.\n+     *            The ActionEvent has id=0 if no new links were added, and id=1 if one or more links were added. This\n+     *            parameter can be null, which means that no callback will be notified. The passed ActionEvent is\n+     *            constructed with (this, id, \"\"), where id is 1 if something has been done and 0 if nothing has been\n+     *            done.\n+     * @param diag An instantiated modal JDialog which will be used to display the progress of the autosetting. This\n+     *            parameter can be null, which means that no progress update will be shown.\n      * @return the runnable able to perform the autosetting\n      */\n-    public static Runnable autoSetLinks(\n-            final BibtexEntry entry,\n-            final FileListTableModel singleTableModel,\n-            final MetaData metaData,\n-            final ActionListener callback,\n-            final JDialog diag) {\n+    public static Runnable autoSetLinks(final BibtexEntry entry, final FileListTableModel singleTableModel, final MetaData metaData, final ActionListener callback, final JDialog diag) {\n         final Collection<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n         entries.add(entry);\n \n@@ -1264,7 +1189,7 @@ public static Runnable autoSetLinks(\n             // First, look for exact matches:\n             for (BibtexEntry entry : entries) {\n                 String citeKey = entry.getCiteKey();\n-                if (citeKey != null && !citeKey.isEmpty()) {\n+                if ((citeKey != null) && !citeKey.isEmpty()) {\n                     if (dot > 0) {\n                         if (name.substring(0, dot).equals(citeKey)) {\n                             result.get(entry).add(file);\n@@ -1278,7 +1203,7 @@ public static Runnable autoSetLinks(\n             if (!exactOnly) {\n                 for (BibtexEntry entry : entries) {\n                     String citeKey = entry.getCiteKey();\n-                    if (citeKey != null && !citeKey.isEmpty()) {\n+                    if ((citeKey != null) && !citeKey.isEmpty()) {\n                         if (name.startsWith(citeKey)) {\n                             result.get(entry).add(file);\n                             continue nextFile;\n@@ -1292,9 +1217,8 @@ public static Runnable autoSetLinks(\n     }\n \n     /**\n-     * Accepts a string like [author:lower] or [title:abbr] or [auth],\n-     * whereas the first part signifies the bibtex-field to get, or the key generator\n-     * field marker to use, while the others are the modifiers that will be applied.\n+     * Accepts a string like [author:lower] or [title:abbr] or [auth], whereas the first part signifies the bibtex-field\n+     * to get, or the key generator field marker to use, while the others are the modifiers that will be applied.\n      *\n      * @param fieldAndFormat\n      * @param entry\n@@ -1333,7 +1257,7 @@ public static String getFieldAndFormat(String fieldAndFormat, BibtexEntry entry,\n             return null;\n         }\n \n-        if (afterColon == null || afterColon.isEmpty()) {\n+        if ((afterColon == null) || afterColon.isEmpty()) {\n             return fieldValue;\n         }\n \n@@ -1345,7 +1269,7 @@ public static String getFieldAndFormat(String fieldAndFormat, BibtexEntry entry,\n \n     // Returns a reg exp pattern in the form (w1)|(w2)| ... wi are escaped if no regex search is enabled\n     public static Pattern getPatternForWords(ArrayList<String> words) {\n-        if (words == null || words.isEmpty() || words.get(0).isEmpty()) {\n+        if ((words == null) || words.isEmpty() || words.get(0).isEmpty()) {\n             return Pattern.compile(\"\");\n         }\n , @@ -73,17 +73,18 @@\n public class FromAuxDialog\n         extends JDialog {\n \n+    private static final long serialVersionUID = -7839874395438295941L;\n     private final JPanel statusPanel = new JPanel();\n     private final JPanel buttons = new JPanel();\n     private final JButton selectInDBButton = new JButton();\n     private final JButton generateButton = new JButton();\n     private final JButton cancelButton = new JButton();\n     private final JButton parseButton = new JButton();\n \n-    private final JComboBox dbChooser = new JComboBox();\n+    private final JComboBox<String> dbChooser = new JComboBox<String>();\n     private JTextField auxFileField;\n \n-    private JList notFoundList;\n+    private JList<String> notFoundList;\n     private JTextArea statusInfos;\n \n     // all open databases from JabRefFrame\n@@ -171,6 +172,8 @@ public void actionPerformed(ActionEvent arg0) {\n         im.put(parent.prefs().getKey(\"Close dialog\"), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n+            private static final long serialVersionUID = -4511569209048851343L;\n+\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 dispose();\n@@ -196,7 +199,7 @@ private void initPanels(JabRefFrame parent) {\n         auxFileField = new JTextField(\"\", 25);\n         JButton browseAuxFileButton = new JButton(Localization.lang(\"Browse\"));\n         browseAuxFileButton.addActionListener(new BrowseAction(auxFileField, parent));\n-        notFoundList = new JList();\n+        notFoundList = new JList<String>();\n         JScrollPane listScrollPane = new JScrollPane(notFoundList);\n         //listScrollPane.setPreferredSize(new Dimension(250, 120));\n         statusInfos = new JTextArea(\"\", 5, 20);\n@@ -313,6 +316,7 @@ public BibtexDatabase getGenerateDB() {\n     static class BrowseAction\n             extends AbstractAction {\n \n+        private static final long serialVersionUID = 685593871964202310L;\n         private final JTextField comp;\n         private final JabRefFrame _frame;\n , ", 313, 381, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 694], ["Igor Steinmacher", "Updating pt_BR translations", "10/09/15, 06:13:14 PM", "Igor Steinmacher", "e97994f83eab4d734b471dbc3407038eb94f981e", ["src/main/resources/l10n/Menu_pt_BR.properties"], "@@ -132,4 +132,4 @@ Hide/show_toolbar=Mostrar/esconder_barra_de_ferramentas\n \n Fork_me_on_GitHub=Criar_um_fork_no_GitHub\n Save_selected_as_plain_BibTeX_...=Salvar_selecionado_como_Bibtex_simples\n-ADS_from_ADS-DOI=\n+ADS_from_ADS-DOI=ADS_do_ADS-DOI, ", 1, 1, "\"modified, \"", 2], ["Oscar Gustafsson", "Fixed warnings and clean up typo/comment", "10/24/15, 05:42:04 PM", "Oscar Gustafsson", "07ca454d409b4f7cf0119e7be9c22ba71f04a670", ["src/main/java/net/sf/jabref/gui/mergeentries/MergeEntries.java", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntriesDialog.java"], "@@ -18,7 +18,6 @@\n import java.awt.*;\n import java.io.IOException;\n import java.io.StringWriter;\n-import java.util.Set;\n import java.util.TreeSet;\n \n import javax.swing.*;\n@@ -68,15 +67,15 @@\n     private JTextArea jta;\n     private PreviewPanel pp;\n     private Boolean doneBuilding = false;\n-    private Set<String> joint;\n+    private TreeSet<String> joint;\n     private String[] jointStrings;\n     private final JPanel mergePanel = new JPanel();\n     private final JPanel mainPanel = new JPanel();\n \n \n     /**\n      * Constructor taking two entries\n-     * \n+     *\n      * @param bOne First entry\n      * @param bTwo Second entry\n      */\n@@ -88,7 +87,7 @@ public MergeEntries(BibtexEntry bOne, BibtexEntry bTwo) {\n \n     /**\n      * Constructor with optional column captions for the two entries\n-     * \n+     *\n      * @param bOne First entry\n      * @param bTwo Second entry\n      * @param headingOne Heading for first entry\n@@ -108,11 +107,11 @@ public MergeEntries(BibtexEntry bOne, BibtexEntry bTwo, String headingOne, Strin\n      */\n     private void initialize() {\n \n-        joint = new TreeSet<String>(one.getAllFields());\n+        joint = new TreeSet<>(one.getAllFields());\n         joint.addAll(two.getAllFields());\n \n         // Remove field starting with __\n-        Set<String> toberemoved = new TreeSet<String>();\n+        TreeSet<String> toberemoved = new TreeSet<>();\n         for (String field : joint) {\n             if (field.startsWith(\"__\")) {\n                 toberemoved.add(field);\n@@ -147,9 +146,9 @@ private void initialize() {\n         JLabel label = new JLabel(Localization.lang(\"Use\"));\n         Font font = label.getFont();\n         label.setFont(font.deriveFont(font.getStyle() | Font.BOLD));\n-        \n+\n         mainPanel.add(label, cc.xyw(4, 1, 7, \"center, bottom\"));\n-        \n+\n         // Set headings\n         JLabel headingLabels[] = new JLabel[6];\n         for (int i = 0; i < 6; i++) {\n@@ -364,7 +363,7 @@ public void stateChanged(ChangeEvent e) {\n             public void run() {\n                 scrollPane.getVerticalScrollBar().setValue(0);\n             }\n-         });\n+        });\n     }\n \n     /**, @@ -37,12 +37,11 @@\n \n /**\n  * @author Oscar\n- * \n+ *\n  *         Dialog for merging two Bibtex entries\n  */\n public class MergeEntriesDialog extends JDialog {\n \n-    // private String [] preferedOrder = {\"author\", \"title\", \"journal\", \"booktitle\", \"volume\", \"number\", \"pages\", \"year\", \"month\"};\n     private final Dimension DIM = new Dimension(800, 800);\n     private final BasePanel panel;\n     private final JabRefFrame frame;\n@@ -66,7 +65,7 @@ public MergeEntriesDialog(BasePanel panel) {\n \n     /**\n      * Sets up the dialog\n-     * \n+     *\n      * @param selected Selected BibtexEntries\n      */\n     private void init(BibtexEntry[] selected) {\n@@ -147,8 +146,8 @@ public void actionPerformed(ActionEvent e) {\n \n     /**\n      * Act on button pressed\n-     * \n-     * @param button Butten pressed\n+     *\n+     * @param button Button pressed\n      */\n     private void buttonPressed(String button) {\n         BibtexEntry mergedEntry = mergeEntries.getMergeEntry();, ", 12, 14, "\"modified, modified, \"", 26], ["Oscar Gustafsson", "Some minor fixes", "10/12/15, 07:34:56 PM", "Oscar Gustafsson", "0f2b253622e3d6f2a91519e95c340b7c03c394e2", ["src/main/java/net/sf/jabref/gui/DuplicateSearch.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -124,7 +124,7 @@ public void run() {\n                         duplicateCounter--; // correct counter\n                     } else if (answer == DuplicateResolverDialog.KEEP_MERGE) {\n                         toRemove.add(be[0]);\n-                        toRemove.add(be[0]);\n+                        toRemove.add(be[1]);\n                         toAdd.add(cb.getMergedEntry());\n                     }\n                 }, @@ -55,7 +55,6 @@\n import javax.swing.JTable;\n import javax.swing.SwingConstants;\n import javax.swing.SwingUtilities;\n-// import javax.swing.table.DefaultTableModel;\n import javax.swing.table.TableCellRenderer;\n import javax.swing.table.TableColumnModel;\n import javax.swing.table.TableModel;\n@@ -907,32 +906,6 @@ public void actionPerformed(ActionEvent event) {\n         }\n     }\n \n-/*    private static class MyTable extends JTable {\n-\n-        public MyTable(TableModel model) {\n-            super(model);\n-            // setDefaultRenderer(Boolean.class, );\n-        }\n-\n-        @Override\n-        public boolean isCellEditable(int row, int col) {\n-            return col == 0;\n-        }\n-    }\n-\n-    private static class MyTableModel extends DefaultTableModel {\n-\n-        @Override\n-        public Class<?> getColumnClass(int i) {\n-            if (i == 0) {\n-                return Boolean.class;\n-            } else {\n-                return String.class;\n-            }\n-        }\n-\n-    }*/\n-\n     class SelectionButton implements ActionListener {\n \n         final Boolean enable;, ", 2, 29, "\"modified, modified, \"", 31], ["Simon Harrer", "Removes non-compact rank symbols in favor of compact rank", "10/12/15, 09:06:29 PM", "Simon Harrer", "07c11ce20fb93f6659531502c7b34dcab7e0a55b", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/GUIGlobals.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/main/java/net/sf/jabref/gui/MainTable.java", "src/main/java/net/sf/jabref/gui/SearchResultsDialog.java", "src/main/java/net/sf/jabref/gui/preftabs/TableColumnsTab.java", "src/main/java/net/sf/jabref/specialfields/Rank.java", "src/main/java/net/sf/jabref/specialfields/RankCompact.java", "src/main/java/net/sf/jabref/specialfields/RankExtended.java", "src/main/java/net/sf/jabref/specialfields/SpecialFieldsUtils.java", "src/main/resources/images/crystal_16/Icons.properties", "src/main/resources/images/crystal_16/rank1.png", "src/main/resources/images/crystal_16/rank2.png", "src/main/resources/images/crystal_16/rank3.png", "src/main/resources/images/crystal_16/rank4.png", "src/main/resources/images/crystal_16/rank5.png", "src/main/resources/images/crystal_16/rankc1.png", "src/main/resources/images/crystal_16/rankc2.png", "src/main/resources/images/crystal_16/rankc3.png", "src/main/resources/images/crystal_16/rankc4.png", "src/main/resources/images/crystal_16/rankc5.png", "src/main/resources/l10n/JabRef_da.properties", "src/main/resources/l10n/JabRef_de.properties", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties"], "@@ -1,4 +1,5 @@\n [master]\n+    - Removes non-compact rank symbols in favor of compact rank\n     - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n     - Fixed a bug in the IEEEXploreFetcher\n     - Replaced some deprecated DefaultFormBuilder with FormBuilder, @@ -656,7 +656,6 @@ private JabRefPreferences() {\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY, SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING, SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING_DEFAULT);\n-        defaults.put(SpecialFieldsUtils.PREF_RANKING_COMPACT, SpecialFieldsUtils.PREF_RANKING_COMPACT_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE, SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED, SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED_DEFAULT);\n         defaults.put(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ, SpecialFieldsUtils.PREF_SHOWCOLUMN_READ_DEFAULT);, @@ -155,7 +155,6 @@\n \n     public static final int DEFAULT_FIELD_LENGTH = 100;\n     public static final int NUMBER_COL_LENGTH = 32;\n-    public static final int WIDTH_ICON_COL_RANKING = 35; // Width of Ranking Icon Column\n     public static final int WIDTH_ICON_COL = 19;\n \n     // Column widths for export customization dialog table:, @@ -821,20 +821,10 @@ private void setWidths() {\n         cm.getColumn(0).setMinWidth(55);\n         cm.getColumn(0).setMaxWidth(55);\n         for (int i = 1; i < PAD; i++) {\n-            // Check if the Column is a RankingColumn\n-            // If this is the case, set a certain Column-width,\n-            // because the RankingIconColumn needs some more width\n-            if (frame.basePanel().tableFormat.isRankingColumn(i)) {\n-                // Lock the width of ranking icon column.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-            } else {\n-                // Lock the width of icon columns.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n-            }\n+            // Lock the width of icon columns.\n+            cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n         }\n \n         for (int i = 0; i < fields.length; i++) {, @@ -323,21 +323,10 @@ private void setWidths() {\n         TableColumnModel cm = getColumnModel();\n         cm.getColumn(0).setPreferredWidth(ncWidth);\n         for (int i = 1; i < tableFormat.padleft; i++) {\n-\n-            // Check if the Column is an extended RankingColumn (and not a compact-ranking column) \n-            // If this is the case, set a certain Column-width,\n-            // because the RankingIconColumn needs some more width\n-            if (tableFormat.isRankingColumn(i) && !Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_RANKING_COMPACT)) {\n-                // Lock the width of ranking icon column.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-            } else {\n-                // Lock the width of icon columns.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n-            }\n+            // Lock the width of icon columns.\n+            cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n \n         }\n         for (int i = tableFormat.padleft; i < getModel().getColumnCount(); i++) {, @@ -255,20 +255,9 @@ private void setupComparatorChooser(TableComparatorChooser<BibtexEntry> comparat\n     private void setWidths() {\n         TableColumnModel cm = entryTable.getColumnModel();\n         for (int i = 0; i < PAD; i++) {\n-            // Check if the Column is a RankingColumn\n-            // If this is the case, set a certain Column-width,\n-            // because the RankingIconColumn needs some more width\n-            if (frame.basePanel().tableFormat.isRankingColumn(i)) {\n-                // Lock the width of ranking icon column.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL_RANKING);\n-            } else {\n-                // Lock the width of icon columns.\n-                cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n-                cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n-            }\n+            cm.getColumn(i).setPreferredWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMinWidth(GUIGlobals.WIDTH_ICON_COL);\n+            cm.getColumn(i).setMaxWidth(GUIGlobals.WIDTH_ICON_COL);\n         }\n \n         for (int i = 0; i < fields.length; i++) {, @@ -71,7 +71,6 @@\n     /*** begin: special fields ***/\n     private final JCheckBox specialFieldsEnabled;\n     private JCheckBox rankingColumn;\n-    private JCheckBox compactRankingColumn;\n     private JCheckBox qualityColumn;\n     private JCheckBox priorityColumn;\n     private JCheckBox relevanceColumn;\n@@ -81,7 +80,6 @@\n     private JRadioButton writeSpecialFields;\n     private boolean oldSpecialFieldsEnabled;\n     private boolean oldRankingColumn;\n-    private boolean oldCompcatRankingColumn;\n     private boolean oldQualityColumn;\n     private boolean oldPriorityColumn;\n     private boolean oldRelevanceColumn;\n@@ -295,7 +293,6 @@ public void stateChanged(ChangeEvent arg0) {\n             public void stateChanged(ChangeEvent event) {\n                 boolean isEnabled = specialFieldsEnabled.isSelected();\n                 rankingColumn.setEnabled(isEnabled);\n-                compactRankingColumn.setEnabled(isEnabled && rankingColumn.isSelected());\n                 qualityColumn.setEnabled(isEnabled);\n                 priorityColumn.setEnabled(isEnabled);\n                 relevanceColumn.setEnabled(isEnabled);\n@@ -306,14 +303,6 @@ public void stateChanged(ChangeEvent event) {\n             }\n         });\n         rankingColumn = new JCheckBox(Localization.lang(\"Show rank\"));\n-        rankingColumn.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                compactRankingColumn.setEnabled(rankingColumn.isSelected());\n-            }\n-        });\n-        compactRankingColumn = new JCheckBox(Localization.lang(\"Compact rank\"));\n         qualityColumn = new JCheckBox(Localization.lang(\"Show quality\"));\n         priorityColumn = new JCheckBox(Localization.lang(\"Show priority\"));\n         relevanceColumn = new JCheckBox(Localization.lang(\"Show relevance\"));\n@@ -339,12 +328,11 @@ public void stateChanged(ChangeEvent event) {\n \n         specialTableColumnsBuilder.add(specialFieldsEnabled, cc.xyw(1, 1, 3));\n         specialTableColumnsBuilder.add(rankingColumn, cc.xyw(2, 2, 2));\n-        specialTableColumnsBuilder.add(compactRankingColumn, cc.xy(3, 3));\n-        specialTableColumnsBuilder.add(relevanceColumn, cc.xyw(2, 4, 2));\n-        specialTableColumnsBuilder.add(qualityColumn, cc.xyw(2, 5, 2));\n-        specialTableColumnsBuilder.add(priorityColumn, cc.xyw(2, 6, 2));\n-        specialTableColumnsBuilder.add(printedColumn, cc.xyw(2, 7, 2));\n-        specialTableColumnsBuilder.add(readStatusColumn, cc.xyw(2, 8, 2));\n+        specialTableColumnsBuilder.add(relevanceColumn, cc.xyw(2, 3, 2));\n+        specialTableColumnsBuilder.add(qualityColumn, cc.xyw(2, 4, 2));\n+        specialTableColumnsBuilder.add(priorityColumn, cc.xyw(2, 5, 2));\n+        specialTableColumnsBuilder.add(printedColumn, cc.xyw(2, 6, 2));\n+        specialTableColumnsBuilder.add(readStatusColumn, cc.xyw(2, 7, 2));\n         specialTableColumnsBuilder.add(syncKeywords, cc.xyw(2, 10, 2));\n         specialTableColumnsBuilder.add(writeSpecialFields, cc.xyw(2, 11, 2));\n         specialTableColumnsBuilder.add(showOneLetterHeadingForIconColumns, cc.xyw(1, 12, 4));\n@@ -420,9 +408,6 @@ public void setValues() {\n         oldRankingColumn = prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING);\n         rankingColumn.setSelected(oldRankingColumn);\n \n-        oldCompcatRankingColumn = prefs.getBoolean(SpecialFieldsUtils.PREF_RANKING_COMPACT);\n-        compactRankingColumn.setSelected(oldCompcatRankingColumn);\n-\n         oldQualityColumn = prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY);\n         qualityColumn.setSelected(oldQualityColumn);\n \n@@ -731,7 +716,6 @@ public void storeSettings() {\n \n         boolean newSpecialFieldsEnabled = specialFieldsEnabled.isSelected();\n         boolean newRankingColumn = rankingColumn.isSelected();\n-        boolean newCompactRankingColumn = compactRankingColumn.isSelected();\n         boolean newQualityColumn = qualityColumn.isSelected();\n         boolean newPriorityColumn = priorityColumn.isSelected();\n         boolean newRelevanceColumn = relevanceColumn.isSelected();\n@@ -743,7 +727,6 @@ public void storeSettings() {\n         boolean restartRequired;\n         restartRequired = oldSpecialFieldsEnabled != newSpecialFieldsEnabled ||\n                 oldRankingColumn != newRankingColumn ||\n-                oldCompcatRankingColumn != newCompactRankingColumn ||\n                 oldQualityColumn != newQualityColumn ||\n                 oldPriorityColumn != newPriorityColumn ||\n                 oldRelevanceColumn != newRelevanceColumn ||\n@@ -765,7 +748,6 @@ public void storeSettings() {\n         if (restartRequired) {\n             prefs.putBoolean(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED, newSpecialFieldsEnabled);\n             prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING, newRankingColumn);\n-            prefs.putBoolean(SpecialFieldsUtils.PREF_RANKING_COMPACT, newCompactRankingColumn);\n             prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY, newPriorityColumn);\n             prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY, newQualityColumn);\n             prefs.putBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE, newRelevanceColumn);, @@ -16,20 +16,41 @@\n package net.sf.jabref.specialfields;\n \n import net.sf.jabref.Globals;\n+import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.logic.l10n.Localization;\n \n-public abstract class Rank extends SpecialField {\n+import javax.swing.*;\n+import java.util.ArrayList;\n \n-    Rank() {\n+public class Rank extends SpecialField {\n+\n+    private static Rank INSTANCE;\n+\n+    private Rank() {\n         TEXT_DONE_PATTERN = \"Set rank to '%0' for %1 entries\";\n+\n+        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        //lab.setName(\"i\");\n+        values.add(new SpecialFieldValue(this, null, \"clearRank\", Localization.lang(\"Clear rank\"), null, Localization.lang(\"No rank information\")));\n+        // DO NOT TRANSLATE \"rank1\" etc. as this makes the .bib files non portable\n+        values.add(new SpecialFieldValue(this, \"rank1\", \"setRank1\", Localization.lang(\"Set rank to one star\"), IconTheme.getImage(\"rank1\"), Localization.lang(\"One star\")));\n+        values.add(new SpecialFieldValue(this, \"rank2\", \"setRank2\", Localization.lang(\"Set rank to two stars\"), IconTheme.getImage(\"rank2\"), Localization.lang(\"Two stars\")));\n+        values.add(new SpecialFieldValue(this, \"rank3\", \"setRank3\", Localization.lang(\"Set rank to three stars\"), IconTheme.getImage(\"rank3\"), Localization.lang(\"Three stars\")));\n+        values.add(new SpecialFieldValue(this, \"rank4\", \"setRank4\", Localization.lang(\"Set rank to four stars\"), IconTheme.getImage(\"rank4\"), Localization.lang(\"Four stars\")));\n+        values.add(new SpecialFieldValue(this, \"rank5\", \"setRank5\", Localization.lang(\"Set rank to five stars\"), IconTheme.getImage(\"rank5\"), Localization.lang(\"Five stars\")));\n+        this.setValues(values);\n     }\n \n     public static Rank getInstance() {\n-        if (Globals.prefs.getBoolean(SpecialFieldsUtils.PREF_RANKING_COMPACT)) {\n-            return RankCompact.getInstance();\n-        } else {\n-            return RankExtended.getInstance();\n+        if (Rank.INSTANCE == null) {\n+            Rank.INSTANCE = new Rank();\n         }\n+        return Rank.INSTANCE;\n+    }\n+\n+    @Override\n+    public Icon getRepresentingIcon() {\n+        return IconTheme.getImage(\"ranking\");\n     }\n \n     @Override, @@ -1,43 +0,0 @@\n-package net.sf.jabref.specialfields;\n-\n-import java.util.ArrayList;\n-\n-import javax.swing.*;\n-\n-import net.sf.jabref.gui.IconTheme;\n-import net.sf.jabref.logic.l10n.Localization;\n-\n-/**\n- * Compact representation of icons\n- */\n-public class RankCompact extends Rank {\n-\n-    private static RankCompact INSTANCE;\n-\n-\n-    private RankCompact() {\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n-        //lab.setName(\"i\");\n-        values.add(new SpecialFieldValue(this, null, \"clearRank\", Localization.lang(\"Clear rank\"), null, Localization.lang(\"No rank information\")));\n-        // DO NOT TRANSLATE \"rank1\" etc. as this makes the .bib files non portable\n-        values.add(new SpecialFieldValue(this, \"rank1\", \"setRank1\", Localization.lang(\"Set rank to one star\"), IconTheme.getImage(\"rankc1\"), Localization.lang(\"One star\")));\n-        values.add(new SpecialFieldValue(this, \"rank2\", \"setRank2\", Localization.lang(\"Set rank to two stars\"), IconTheme.getImage(\"rankc2\"), Localization.lang(\"Two stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank3\", \"setRank3\", Localization.lang(\"Set rank to three stars\"), IconTheme.getImage(\"rankc3\"), Localization.lang(\"Three stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank4\", \"setRank4\", Localization.lang(\"Set rank to four stars\"), IconTheme.getImage(\"rankc4\"), Localization.lang(\"Four stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank5\", \"setRank5\", Localization.lang(\"Set rank to five stars\"), IconTheme.getImage(\"rankc5\"), Localization.lang(\"Five stars\")));\n-        this.setValues(values);\n-    }\n-\n-    public static RankCompact getInstance() {\n-        if (RankCompact.INSTANCE == null) {\n-            RankCompact.INSTANCE = new RankCompact();\n-        }\n-        return RankCompact.INSTANCE;\n-    }\n-\n-    @Override\n-    public Icon getRepresentingIcon() {\n-        return IconTheme.getImage(\"ranking\");\n-    }\n-\n-}, @@ -1,43 +0,0 @@\n-package net.sf.jabref.specialfields;\n-\n-import java.util.ArrayList;\n-\n-import javax.swing.*;\n-\n-import net.sf.jabref.gui.IconTheme;\n-import net.sf.jabref.logic.l10n.Localization;\n-\n-/**\n- * Wider representation of icons\n- */\n-public class RankExtended extends Rank {\n-\n-    private static RankExtended INSTANCE;\n-\n-\n-    private RankExtended() {\n-        super();\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n-        values.add(new SpecialFieldValue(this, null, \"clearRank\", Localization.lang(\"Clear rank\"), null, Localization.lang(\"No rank information\")));\n-        // DO NOT TRANSLATE \"rank1\" etc. as this makes the .bib files non portable\n-        values.add(new SpecialFieldValue(this, \"rank1\", \"setRank1\", Localization.lang(\"Set rank to one star\"), IconTheme.getImage(\"rank1\"), Localization.lang(\"One star\")));\n-        values.add(new SpecialFieldValue(this, \"rank2\", \"setRank2\", Localization.lang(\"Set rank to two stars\"), IconTheme.getImage(\"rank2\"), Localization.lang(\"Two stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank3\", \"setRank3\", Localization.lang(\"Set rank to three stars\"), IconTheme.getImage(\"rank3\"), Localization.lang(\"Three stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank4\", \"setRank4\", Localization.lang(\"Set rank to four stars\"), IconTheme.getImage(\"rank4\"), Localization.lang(\"Four stars\")));\n-        values.add(new SpecialFieldValue(this, \"rank5\", \"setRank5\", Localization.lang(\"Set rank to five stars\"), IconTheme.getImage(\"rank5\"), Localization.lang(\"Five stars\")));\n-        this.setValues(values);\n-    }\n-\n-    public static RankExtended getInstance() {\n-        if (RankExtended.INSTANCE == null) {\n-            RankExtended.INSTANCE = new RankExtended();\n-        }\n-        return RankExtended.INSTANCE;\n-    }\n-\n-    @Override\n-    public Icon getRepresentingIcon() {\n-        return this.getValues().get(1).getIcon();\n-    }\n-\n-}, @@ -39,9 +39,6 @@\n     public static final String PREF_SHOWCOLUMN_RANKING = \"showRankingColumn\";\n     public static final Boolean PREF_SHOWCOLUMN_RANKING_DEFAULT = Boolean.TRUE;\n \n-    public static final String PREF_RANKING_COMPACT = \"compactRankingColumn\";\n-    public static final Boolean PREF_RANKING_COMPACT_DEFAULT = Boolean.TRUE;\n-\n     public static final String PREF_SHOWCOLUMN_PRIORITY = \"showPriorityColumn\";\n     public static final Boolean PREF_SHOWCOLUMN_PRIORITY_DEFAULT = Boolean.FALSE;\n , @@ -72,11 +72,6 @@ rank2=rank2.png\n rank3=rank3.png\n rank4=rank4.png\n rank5=rank5.png\n-rankc1=rankc1.png\n-rankc2=rankc2.png\n-rankc3=rankc3.png\n-rankc4=rankc4.png\n-rankc5=rankc5.png\n ranking=ranking.png\n readStatusRead=read.png\n readStatusSkimmed=readskimmed.png, None, None, None, None, None, None, None, None, None, None, @@ -1503,7 +1503,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -2259,7 +2259,6 @@ Bibtex_key_patterns=BibTeX-Key-Muster\n Changed_special_field_settings=Einstellungen_f\\u00fcr_spezielle_Felder_ge\\u00e4ndert\n Clear_priority=Priorit\\u00e4t_aufheben\n Clear_rank=Rang_aufheben\n-Compact_rank=Kompakter_Rang\n Convert_1st,_2nd,_..._to_real_superscripts=1st,_2nd,_..._in_hochgestellte_Buchstaben_konvertieren\n Dropped_comment_from_database=Kommentar_aus_Datei_gel\\u00f6scht\n Enable_PDF_preview=PDF-Vorschau_aktivieren, @@ -2246,7 +2246,6 @@ Bibtex_key_patterns=Bibtex_key_patterns\n Changed_special_field_settings=Changed_special_field_settings\n Clear_priority=Clear_priority\n Clear_rank=Clear_rank\n-Compact_rank=Compact_rank\n Convert_1st,_2nd,_..._to_real_superscripts=Convert_1st,_2nd,_..._to_real_superscripts\n Dropped_comment_from_database=Dropped_comment_from_database\n Enable_PDF_preview=Enable_PDF_preview, @@ -1403,7 +1403,6 @@ Bibtex_key_patterns=Patrones_de_clave_BibTeX\n Changed_special_field_settings=Ajustes_de_campos_especiales_cambiados\n Clear_priority=Limpiar_prioridad\n Clear_rank=Limpiar_rango\n-Compact_rank=Compactar_rango\n Convert_1st,_2nd,_..._to_real_superscripts=Convertir_1st,_2nd,_..._a_super\\u00edndices\n Dropped_comment_from_database=Eliminado_comentario_de_la_base_de_datos\n Enable_PDF_preview=Habilitar_vista_previa_de_PDF, @@ -2244,7 +2244,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -1442,7 +1442,6 @@ Bibtex_key_patterns=Mod\\u00e8les_de_clef_BibTeX\n Changed_special_field_settings=Param\\u00e8tres_de_champs_sp\\u00e9ciaux_modifi\\u00e9s\n Clear_priority=Effacer_la_priorit\\u00e9\n Clear_rank=Effacer_le_rang\n-Compact_rank=Compacter_le_rang\n Convert_1st,_2nd,_..._to_real_superscripts=Convertir_1er,__2nd,_..._en_vrais_exposants\n Dropped_comment_from_database=Commentaires_supprim\\u00e9s_de_la_base\n Enable_PDF_preview=Autoriser_la_pr\\u00e9visualisation_des_PDF, @@ -1414,7 +1414,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -1524,7 +1524,6 @@ Changed_special_field_settings=Cambiate_le_impostazioni_dei_campi_speciali\n Clear_priority=Azzera_le_priorit\\u00e0\n # not sure how to translate 'rank': voto, punteggio, valutazione, grado, rango?\n Clear_rank=Azzera_la_valutazione\n-Compact_rank=Compatta_la_valutazione\n Convert_1st,_2nd,_..._to_real_superscripts=Converti_1st,_2nd,_..._in_apici\n Dropped_comment_from_database=Cancellato_il_commento_dal_database\n Enable_PDF_preview=Abilita_anteprima_PDF, @@ -2245,7 +2245,6 @@ Bibtex_key_patterns=BibTeX\\u9375\\u30d1\\u30bf\\u30fc\\u30f3\n Changed_special_field_settings=\\u7279\\u6b8a\\u30d5\\u30a3\\u30fc\\u30eb\\u30c9\\u306e\\u8a2d\\u5b9a\\u304c\\u5909\\u66f4\\u3055\\u308c\\u307e\\u3057\\u305f\n Clear_priority=\\u512a\\u5148\\u5ea6\\u3092\\u6d88\\u53bb\n Clear_rank=\\u8a55\\u4fa1\\u3092\\u6d88\\u53bb\n-Compact_rank=\\u8a55\\u4fa1\\u3092\\u7c21\\u7d20\\u8868\\u793a\n Convert_1st,_2nd,_..._to_real_superscripts=1st,_2nd,_..._\\u7b49\\u3092\\u4e0b\\u4ed8\\u304d\\u6587\\u5b57\\u3092\\u4f7f\\u3046\\u3088\\u3046\\u5909\\u63db\n Dropped_comment_from_database=\\u30c7\\u30fc\\u30bf\\u30d9\\u30fc\\u30b9\\u304b\\u3089\\u30b3\\u30e1\\u30f3\\u30c8\\u3092\\u53d6\\u308a\\u9664\\u304d\\u307e\\u3057\\u305f\n Enable_PDF_preview=PDF\\u30d7\\u30ec\\u30d3\\u30e5\\u30fc\\u3092\\u6709\\u52b9\\u306b\\u3059\\u308b, @@ -2245,7 +2245,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -2710,7 +2710,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -1410,7 +1410,6 @@ Bibtex_key_patterns=Padr\\u00f5es_de_chaves_BibTeX\n Changed_special_field_settings=Prefer\\u00eancias_de_campos_especiais_alteradas\n Clear_priority=Limpar_prioridades\n Clear_rank=Limpar_classifica\\u00e7\\u00e3o\n-Compact_rank=Compactar_classifica\\u00e7\\u00e3o\n Convert_1st,_2nd,_..._to_real_superscripts=Converter_primeiro_segundo_..._para_sobrescritos\n Dropped_comment_from_database=Coment\\u00e1rio_retirado_da_base_de_dados\n Enable_PDF_preview=Habilitar_preview_de_PDF, @@ -2244,7 +2244,6 @@ Bibtex_key_patterns=\u0428\u0430\u0431\u043b\u043e\u043d\u044b_\u043a\u043b\u044e\u0447\u0430_Bibtex\n Changed_special_field_settings=\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438_\u043f\u043e\u043b\u0435\u0439_\u043e\u0441\u043e\u0431\u044b\u0445_\u043e\u0442\u043c\u0435\u0442\u043e\u043a_\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u044b\n Clear_priority=\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c_\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f_\u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430\n Clear_rank=\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c_\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f_\u0440\u0430\u043d\u0433\u0430\n-Compact_rank=\u0421\u0432\u0435\u0440\u043d\u0443\u0442\u044c_\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f_\u0440\u0430\u043d\u0433\u0430\n Convert_1st,_2nd,_..._to_real_superscripts=\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c_1-\u0439,_2-\u0439,_..._\u0432_\u043d\u0430\u0434\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435_\u0437\u043d\u0430\u043a\u0438\n Dropped_comment_from_database=\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438,_\u043e\u0442\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0435_\u0411\u0414\n Enable_PDF_preview=\u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c_\u043f\u0440\u0435\u0434\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440_PDF, @@ -1433,7 +1433,6 @@ Bibtex_key_patterns=Bibtex_anahtar_paternleri\n Changed_special_field_settings=De\\u011fi\\u015ftirilmi\\u015f_\\u00f6zel_alan_ayarlar\\u0131\n Clear_priority=\\u00d6nceli\\u011fi_sil\n Clear_rank=R\\u00fctbeyi_sil\n-Compact_rank=R\\u00fctbeyi_s\\u0131k\\u0131la\\u015ft\\u0131r\n Convert_1st,_2nd,_..._to_real_superscripts=1.,_2.,_..._vs.'yi_ger\\u00e7ek_\\u00fcst_karaktere_d\\u00f6n\\u00fc\\u015ft\\u00fcr\n Dropped_comment_from_database=Yorum_veri_taban\\u0131ndan_\\u00e7\\u0131kart\\u0131ld\\u0131\n Enable_PDF_preview=PDF_\\u00f6nizlemeyi_etkinle\\u015ftir, @@ -2241,7 +2241,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, @@ -2233,7 +2233,6 @@ Bibtex_key_patterns=\n Changed_special_field_settings=\n Clear_priority=\n Clear_rank=\n-Compact_rank=\n Convert_1st,_2nd,_..._to_real_superscripts=\n Dropped_comment_from_database=\n Enable_PDF_preview=, ", 44, 184, "\"modified, modified, modified, modified, modified, modified, modified, modified, removed, removed, modified, modified, modified, modified, modified, modified, modified, removed, removed, removed, removed, removed, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 228], ["Oliver Kopp", "Add information on Material Design Icons to About.html files", "10/25/15, 06:46:14 PM", "Oliver Kopp", "f30f17fcc2001333a6e39fbb9c8457a4a53731a7", ["src/main/resources/help/da/About.html", "src/main/resources/help/de/About.html", "src/main/resources/help/en/About.html", "src/main/resources/help/fr/About.html", "src/main/resources/help/in/About.html", "src/main/resources/help/ja/About.html"], "@@ -27,6 +27,10 @@ <h2>Bidrag fra:</h2>\n \n         <h2>Tredjepartssoftware anvendt:</h2>\n \n+        <p>JabRef uses the <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, which are licensed under the\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a>.\n+        </p>\n+\n         <p>JabRef bruger JGoodies Looks og JGoodies Forms,\n         distribueret af JGoodies\n         (<code>http://www.jgoodies.com</code>) under betingelserne i, @@ -26,6 +26,10 @@ <h2>Beitr&auml;ge von:</h2>\n \n         <h2>Benutzte Fremdsoftware:</h2>\n \n+        <p>JabRef benutzt die <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, welche unter der\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a> vertrieben werden.\n+        </p>\n+\n         <p>JabRef benutzt JGoodies\n         Looks und JGoodies Forms, das von JGoodies\n         (<code>http://www.jgoodies.com</code>) unter den, @@ -34,6 +34,10 @@ <h2>Contributions from:</h2>\n \n         <h2>Third-party software used:</h2>\n \n+        <p>JabRef uses the <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, which are licensed under the\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a>.\n+        </p>\n+\n         <p>JabRef uses JGoodies\n         Looks and JGoodies Forms, distributed by\n         JGoodies (<code>http://www.jgoodies.com</code>) under the, @@ -35,6 +35,10 @@ <h2>Contributions de&nbsp;:</h2>\n \n         <h2>Logiciels tiers utilis&eacute;s&nbsp;:</h2>\n \n+        <p>JabRef uses the <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, which are licensed under the\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a>.\n+        </p>\n+\n         <p>JabRef\n         utilise JGoodies Looks 2.0.4 et JGoodies Forms 1.0.5\n         distribu&eacute;s par JGoodies, @@ -27,6 +27,10 @@ <h2>Pendukung lain:</h2>\n \n         <h2>Program tambahan yang digunakan:</h2>\n \n+        <p>JabRef uses the <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, which are licensed under the\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a>.\n+        </p>\n+\n         <p>JabRef menggunakan JGoodies\n         Looks dan JGoodies Forms, yang disebarkan oleh\n         JGoodies (<code>http://www.jgoodies.com</code>) mengikuti syarat dari Lisensi (Lihat, @@ -25,6 +25,10 @@ <h2>\u8ca2\u732e\u8005:</h2>\n \n         <h2>\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2:</h2>\n \n+        <p>JabRef uses the <a href=\"https://materialdesignicons.com/\">Material Design Icons</a>, which are licensed under the\n+          <a href=\"http://scripts.sil.org/OFL\">SIL Open Font License, Version 1.1</a>.\n+        </p>\n+\n         <p>JabRef\u306f\u3001JGoodies (<code>http://www.jgoodies.com</code>) \u304cBSD\u30e9\u30a4\u30bb\u30f3\u30b9 (\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f<code>http://www.opensource.org/licenses/bsd-license.html</code>\u3092\u53c2\u7167) \u306e\u4e0b\u3067\u914d\u5e03\u3057\u3066\u3044\u308bJGoodies Looks \u304a\u3088\u3073JGoodies Forms \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p>\n \n         <p>JabRef\u306f\u3001\u691c\u7d22\u6587\u5b57\u5217\u306e\u89e3\u91c8\u306bANTLR\u89e3\u6790\u751f\u6210\u5b50\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002ANTLR\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30c9\u30e1\u30a4\u30f3\u30fb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3059\u3002\u30e9\u30a4\u30bb\u30f3\u30b9\u6761\u9805\u306b\u3064\u3044\u3066\u306f\u3001<code>http://www.antlr.org/license.html</code>\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002</p>, ", 24, 0, "\"modified, modified, modified, modified, modified, modified, \"", 24], ["Simon Harrer", "Architecture tests now work fully.", "10/14/15, 08:38:25 AM", "Simon Harrer", "3a8c25c3637ab9ed3a14e29c068a61f6a5e209f6", ["src/main/java/net/sf/jabref/ArchitectureTests.java"], "@@ -35,8 +35,7 @@ public ArchitectureTests(String firstPackage, String secondPackage) {\n                 new Object[][] {\n                         {\"net.sf.jabref.logic\", PACKAGE_JAVA_AWT},\n                         {\"net.sf.jabref.logic\", PACKAGE_JAVAX_SWING},\n-                        // commented out as there are still four classes that do not conform to this specification\n-                        //{\"net.sf.jabref.logic\", PACKAGE_NET_SF_JABREF_GUI},\n+                        {\"net.sf.jabref.logic\", PACKAGE_NET_SF_JABREF_GUI},\n                         {\"net.sf.jabref.model\", PACKAGE_JAVA_AWT},\n                         {\"net.sf.jabref.model\", PACKAGE_JAVAX_SWING},\n                         {\"net.sf.jabref.model\", PACKAGE_NET_SF_JABREF_GUI}, ", 1, 2, "\"modified, \"", 3], ["tokkot", "Update journalList.txt\n\nAdding new capitalizations of \"PLoS One\", which is \"PLOS ONE (originally PLoS ONE)\" according to Wikipedia.", "10/14/15, 08:53:41 AM", "tokkot", "2ca00841aedd362715f6f8304d206799c268d3db", ["src/main/resources/journals/journalList.txt"], "@@ -11956,6 +11956,8 @@ PLoS Genetics = PLos Genet.\n PLoS Medicine = PLoS Med.\n PLoS Neglected Tropical Diseases = PLoS Negl.Trop. Dis.\n PLoS One = PLoS One\n+PLoS ONE = PLoS One\n+PLOS ONE = PLoS One\n PLoS Pathogens = PLoS Pathog.\n Plucne Bolesti = Plucne Bolesti\n Plucne Bolesti i Tuberkuloza = Plucne Bolesti Tuberk., ", 2, 0, "\"modified, \"", 2], ["Oscar Gustafsson", "Sorted out a minor issue, solution courtesy of Simon Harrer", "10/15/15, 08:31:53 PM", "Oscar Gustafsson", "76228cfae8bf9a7dd1e94e8cb6ca5d62c228f785", ["src/main/java/net/sf/jabref/logic/journals/AbbreviationParser.java"], "@@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.journals;\n \n \n@@ -30,10 +45,12 @@ public void readJournalListFromResource(String resourceFileName) {\n     }\n \n     public void readJournalListFromFile(File file) throws FileNotFoundException {\n-        try(FileReader fr = new FileReader(Objects.requireNonNull(file))) {\n-            readJournalList(fr);\n-        } catch(IOException e) {\n-            LOGGER.info(\"Could not read journal list from file \" + file.getAbsolutePath());\n+        try(FileReader reader = new FileReader(Objects.requireNonNull(file))) {\n+            readJournalList(reader);\n+        } catch (FileNotFoundException e) {\n+            throw e;\n+        } catch (IOException e) {\n+            LOGGER.warn(\"Could not read journal list from file \" + file.getAbsolutePath());\n         }\n     }\n     /**, ", 21, 4, "\"modified, \"", 25], ["Simon Harrer", "Removes support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.", "10/15/15, 07:07:41 AM", "Simon Harrer", "2cc00c6a784d8c63febcaeb501d033d9838277e3", ["CHANGELOG", "src/main/java/net/sf/jabref/external/push/AbstractPushToApplication.java", "src/main/java/net/sf/jabref/external/push/PushToApplication.java", "src/main/java/net/sf/jabref/external/push/PushToApplicationAction.java", "src/main/java/net/sf/jabref/external/push/PushToApplications.java", "src/main/java/net/sf/jabref/gui/keyboard/KeyBinds.java", "src/main/java/net/sf/jabref/openoffice/OpenOfficePanel.java"], "@@ -46,6 +46,7 @@\n     - Feature: all new lines when writing an entry are obeying the globally configured new line (File -> newline separator). Affects fields: abstract and review\n     - Feature: [veryShortTitle] and [shortTitle] also skip words like \"in\", \"among\", \"before\", ...\n     - Feature: New LabelPattern [keywordsN], where N is optional. Returns the first N keywords. If no N is specified (\"[keywords]\"), all keywords are returned. Spaces are removed.\n+    - Removes support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.\n [dev_2.11]\n     - Backports from 2.80: Fix bug #194: JabRef starts again on Win XP and Win Vista\n     - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly, @@ -61,11 +61,6 @@ public String getTooltip() {\n         return Localization.lang(\"Push to %0\", getApplicationName());\n     }\n \n-    @Override\n-    public String getKeyStrokeName() {\n-        return \"Push to \" + getApplicationName();\n-    }\n-\n     @Override\n     public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String keyString, MetaData metaData) {\n , @@ -35,8 +35,6 @@\n \n     Icon getIcon();\n \n-    String getKeyStrokeName();\n-\n     /**\n      * This method asks the implementing class to return a JPanel populated with the imlementation's options panel, if\n      * necessary. If the JPanel is shown to the user, and the user indicates that settings should be stored, the, @@ -45,9 +45,6 @@ public PushToApplicationAction(JabRefFrame frame, PushToApplication operation) {\n         putValue(Action.SMALL_ICON, operation.getIcon());\n         putValue(Action.NAME, operation.getName());\n         putValue(Action.SHORT_DESCRIPTION, operation.getTooltip());\n-        if (operation.getKeyStrokeName() != null) {\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(operation.getKeyStrokeName()));\n-        }\n         this.operation = operation;\n     }\n , @@ -28,7 +28,7 @@\n      * Set up the current available choices:\n      */\n     static {\n-        applications = new ArrayList<PushToApplication>();\n+        applications = new ArrayList<>();\n \n         PushToApplications.applications.add(new PushToLyx());\n         PushToApplications.applications.add(new PushToEmacs());, @@ -74,8 +74,6 @@\n     public static final String PREAMBLE_EDITOR_STORE_CHANGES = \"Preamble editor, store changes\";\n     public static final String PREVIOUS_TAB = \"Previous tab\";\n     public static final String PUSH_TO_APPLICATION = \"Push to application\";\n-    public static final String PUSH_TO_LY_X = \"Push to LyX\";\n-    public static final String PUSH_TO_WIN_EDT = \"Push to WinEdt\";\n     public static final String QUIT_JAB_REF = \"Quit JabRef\";\n     public static final String REDO = \"Redo\";\n     public static final String REFRESH_OO = \"Refresh OO\";\n@@ -113,8 +111,6 @@\n \n     public KeyBinds() {\n         keyBindMap.put(PUSH_TO_APPLICATION, \"ctrl L\");\n-        keyBindMap.put(PUSH_TO_LY_X, \"ctrl L\");\n-        keyBindMap.put(PUSH_TO_WIN_EDT, \"ctrl shift W\");\n         keyBindMap.put(QUIT_JAB_REF, \"ctrl Q\");\n         keyBindMap.put(OPEN_DATABASE, \"ctrl O\");\n         keyBindMap.put(SAVE_DATABASE, \"ctrl S\");, @@ -1006,11 +1006,6 @@ public Icon getIcon() {\n         return IconTheme.getImage(\"openoffice\");\n     }\n \n-    @Override\n-    public String getKeyStrokeName() {\n-        return null;\n-    }\n-\n     @Override\n     public JPanel getSettingsPanel() {\n         return null;, ", 2, 20, "\"modified, modified, modified, modified, modified, modified, modified, \"", 22], ["Simon Harrer", "Remove sysout in VM.java", "10/15/15, 03:23:54 PM", "Simon Harrer", "c94db3fc6f5b1918e10d9fe1336e4983a46ae0d7", ["src/main/java/net/sf/jabref/bst/VM.java"], "@@ -932,7 +932,6 @@ public void execute(BstEntry context) {\n             @Override\n             public void execute(BstEntry context) {\n                 String s = (String) stack.pop();\n-                System.out.println(s);\n                 VM.this.bbl.append(s);\n             }\n         });, ", 0, 1, "\"modified, \"", 1], ["Simon Harrer", "Removes \"edit preamble\" from toolbar", "10/19/15, 02:31:02 PM", "Simon Harrer", "66bf6f142a831fe3000a61ded82e0f4bf60ff76d", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/JabRefFrame.java"], "@@ -47,6 +47,7 @@\n     - Feature: [veryShortTitle] and [shortTitle] also skip words like \"in\", \"among\", \"before\", ...\n     - Feature: New LabelPattern [keywordsN], where N is optional. Returns the first N keywords. If no N is specified (\"[keywords]\"), all keywords are returned. Spaces are removed.\n     - Removes support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.\n+    - Removes \"edit preamble\" from toolbar\n [dev_2.11]\n     - Backports from 2.80: Fix bug #194: JabRef starts again on Win XP and Win Vista\n     - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly, @@ -1410,8 +1410,7 @@ private void createToolBar() {\n         tlb.addSeparator();\n         tlb.addAction(newEntryAction);\n         tlb.addAction(editEntry);\n-        tlb.addAction(editPreamble);\n-        tlb.addAction(editStrings);\n+\ttlb.addAction(editStrings);\n         tlb.addAction(makeKeyAction);\n         tlb.addAction(Cleanup);\n         tlb.addAction(mergeEntries);, ", 2, 2, "\"modified, modified, \"", 4], ["Oliver Kopp", "Set default encoding to UTF-8 and not to system's default encoding", "10/15/15, 08:57:35 PM", "Oliver Kopp", "f6a4a97faff20bc0a43ebcb81822a75579b4bee5", ["src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -591,7 +591,7 @@ private JabRefPreferences() {\n         defaults.put(HIGHLIGHT_GROUPS_MATCHING_ALL, Boolean.FALSE);\n         defaults.put(TOOLBAR_VISIBLE, Boolean.TRUE);\n         defaults.put(SEARCH_PANEL_VISIBLE, Boolean.FALSE);\n-        defaults.put(DEFAULT_ENCODING, System.getProperty(\"file.encoding\"));\n+        defaults.put(DEFAULT_ENCODING, \"UTF-8\");\n         defaults.put(GROUPS_VISIBLE_ROWS, 8);\n         defaults.put(DEFAULT_OWNER, System.getProperty(\"user.name\"));\n         defaults.put(PRESERVE_FIELD_FORMATTING, Boolean.FALSE);, ", 1, 1, "\"modified, \"", 2], ["Oscar Gustafsson", "Remove unused code from StringDialog and updated ChangeLog", "10/15/15, 09:51:45 PM", "Oscar Gustafsson", "cb0d1610e4306d11e29525344f732a44b88cf9ac", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/StringDialog.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Added save button to string edit dialog\n     - Removes non-compact rank symbols in favor of compact rank\n     - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n     - Fixed a bug in the IEEEXploreFetcher, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -61,6 +61,8 @@\n \n class StringDialog extends JDialog {\n \n+    private static final long serialVersionUID = 3649022684378600168L;\n+\n     // A reference to the entry this object works on.\n     private final BibtexDatabase base;\n     private final JabRefFrame frame;\n@@ -98,9 +100,11 @@ public void windowClosing(WindowEvent e) {\n         // that only allows the StringTable to gain keyboard focus.\n         setFocusTraversalPolicy(new LayoutFocusTraversalPolicy() {\n \n+            private static final long serialVersionUID = 601883449812894601L;\n+\n             @Override\n             protected boolean accept(Component c) {\n-                return super.accept(c) && c instanceof StringTable;\n+                return super.accept(c) && (c instanceof StringTable);\n             }\n         });\n \n@@ -133,10 +137,6 @@ protected boolean accept(Component c) {\n         im.put(prefs.getKey(\"String dialog, remove string\"), \"remove\");\n         RemoveStringAction removeStringAction = new RemoveStringAction(this);\n         am.put(\"remove\", removeStringAction);\n-        //im.put(prefs.getKey(\"String dialog, move string up\"), \"up\");\n-        //am.put(\"up\", stringUpAction);\n-        //im.put(prefs.getKey(\"String dialog, move string down\"), \"down\");\n-        //am.put(\"down\", stringDownAction);\n         im.put(prefs.getKey(\"Save database\"), \"save\");\n         am.put(\"save\", saveAction);\n        im.put(prefs.getKey(\"Close dialog\"), \"close\");\n@@ -150,14 +150,10 @@ protected boolean accept(Component c) {\n         RedoAction redoAction = new RedoAction();\n         am.put(\"redo\", redoAction);\n \n-        //tlb.add(closeAction);\n-        //tlb.addSeparator();\n         tlb.add(newStringAction);\n         tlb.add(removeStringAction);\n         tlb.addSeparator();\n         tlb.add(saveAction);\n-        //tlb.add(stringUpAction);\n-        //tlb.add(stringDownAction);\n         tlb.addSeparator();\n         tlb.add(helpAction);\n         Container conPane = getContentPane();\n@@ -175,6 +171,8 @@ protected boolean accept(Component c) {\n \n     class StringTable extends JTable {\n \n+        private static final long serialVersionUID = -2772213505406760942L;\n+\n         final JScrollPane sp = new JScrollPane(this);\n \n \n@@ -227,13 +225,15 @@ public void saveDatabase() {\n \n     class StringTableModel extends AbstractTableModel {\n \n-        final BibtexDatabase base;\n+        private static final long serialVersionUID = -3696860403245796557L;\n+\n+        final BibtexDatabase tbase;\n         final StringDialog parent;\n \n \n         public StringTableModel(StringDialog parent, BibtexDatabase base) {\n             this.parent = parent;\n-            this.base = base;\n+            this.tbase = base;\n         }\n \n         @Override\n@@ -245,14 +245,10 @@ public Object getValueAt(int row, int col) {\n \n         @Override\n         public void setValueAt(Object value, int row, int col) {\n-            //\t    if (row >= base.getStringCount())\n-            //\treturn; // After a Remove operation the program somehow\n-            // thinks the user is still editing an entry,\n-            // which might now be outside\n             if (col == 0) {\n                 // Change name of string.\n                 if (!value.equals(((BibtexString) strings[row]).getName())) {\n-                    if (base.hasStringLabel((String) value)) {\n+                    if (tbase.hasStringLabel((String) value)) {\n                         JOptionPane.showMessageDialog(parent,\n                                 Localization.lang(\"A string with that label \"\n                                         + \"already exists\"),\n@@ -363,6 +359,8 @@ void assureNotEditing() {\n \n     class CloseAction extends AbstractAction {\n \n+        private static final long serialVersionUID = 5530138721879378049L;\n+\n         final StringDialog parent;\n \n \n@@ -389,6 +387,8 @@ public void actionPerformed(ActionEvent e) {\n \n     class NewStringAction extends AbstractAction {\n \n+        private static final long serialVersionUID = -950091418779927997L;\n+\n         final StringDialog parent;\n \n \n@@ -455,32 +455,12 @@ public void actionPerformed(ActionEvent e) {\n     }\n \n \n-    StoreContentAction storeContentAction = new StoreContentAction(this);\n-\n-\n-    static class StoreContentAction extends AbstractAction {\n-\n-        final StringDialog parent;\n-\n-\n-        public StoreContentAction(StringDialog parent) {\n-            super(\"Store string\",\n-                    IconTheme.getImage(\"add\"));\n-            putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Store string\"));\n-            this.parent = parent;\n-        }\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-        }\n-    }\n-\n-\n     SaveDatabaseAction saveAction = new SaveDatabaseAction(this);\n \n-\n     static class SaveDatabaseAction extends AbstractAction {\n \n+        private static final long serialVersionUID = 2780778445054043703L;\n+\n         final StringDialog parent;\n \n \n@@ -500,6 +480,8 @@ public void actionPerformed(ActionEvent e) {\n \n     class RemoveStringAction extends AbstractAction {\n \n+        private static final long serialVersionUID = -1134835504587601867L;\n+\n         final StringDialog parent;\n \n \n@@ -547,84 +529,16 @@ public void actionPerformed(ActionEvent e) {\n                     if (base.getStringCount() > 0)\n                      {\n                         table.setRowSelectionInterval(0, 0);\n-                    //table.repaint();\n-                    //panel.markBaseChanged();\n                     }\n                 }\n             }\n         }\n     }\n \n-\n-    /*    StringUpAction stringUpAction = new StringUpAction();\n-    class StringUpAction extends AbstractAction {\n-    public StringUpAction() {\n-        super(\"Move string up\",\n-    \t  new ImageIcon(GUIGlobals.upIconFile));\n-        putValue(SHORT_DESCRIPTION, Globals.lang(\"Move string up\"));\n-    }\n-    public void actionPerformed(ActionEvent e) {\n-        int[] sel = table.getSelectedRows();\n-        if ((sel.length == 1) && (sel[0] > 0)) {\n-\n-    \t// Make sure no cell is being edited, as caused by the\n-    \t// keystroke. This makes the content hang on the screen.\n-    \tassureNotEditing();\n-    \t// Store undo information:\n-    \tpanel.undoManager.addEdit(new UndoableMoveString\n-    \t\t\t\t      (panel, base, sel[0], true));\n-\n-    \tBibtexString bs = base.getString(sel[0]);\n-    \tbase.removeString(sel[0]);\n-    \ttry {\n-    \t    base.addString(bs, sel[0]-1);\n-    \t} catch (KeyCollisionException ex) {}\n-    \ttable.revalidate();\n-    \ttable.setRowSelectionInterval(sel[0]-1, sel[0]-1);\n-    \ttable.repaint();\n-    \tpanel.markBaseChanged();\n-        }\n-    }\n-    }\n-\n-    StringDownAction stringDownAction = new StringDownAction();\n-    class StringDownAction extends AbstractAction {\n-    public StringDownAction() {\n-        super(\"Move string down\",\n-    \t  new ImageIcon(GUIGlobals.downIconFile));\n-        putValue(SHORT_DESCRIPTION, Globals.lang(\"Move string down\"));\n-    }\n-    public void actionPerformed(ActionEvent e) {\n-        int[] sel = table.getSelectedRows();\n-        if ((sel.length == 1) && (sel[0]+1 < base.getStringCount())) {\n-\n-    \t// Make sure no cell is being edited, as caused by the\n-    \t// keystroke. This makes the content hang on the screen.\n-    \tassureNotEditing();\n-\n-\n-    \t// Store undo information:\n-    \tpanel.undoManager.addEdit(new UndoableMoveString\n-    \t\t\t\t      (panel, base, sel[0], false));\n-\n-\n-    \tBibtexString bs = base.getString(sel[0]);\n-    \tbase.removeString(sel[0]);\n-    \ttry {\n-    \t    base.addString(bs, sel[0]+1);\n-    \t} catch (KeyCollisionException ex) {}\n-    \ttable.revalidate();\n-    \ttable.setRowSelectionInterval(sel[0]+1, sel[0]+1);\n-    \ttable.repaint();\n-    \tpanel.markBaseChanged();\n-        }\n-\n-    }\n-    }*/\n-\n-\n     class UndoAction extends AbstractAction {\n \n+        private static final long serialVersionUID = -599852779966425698L;\n+\n         public UndoAction() {\n             super(\"Undo\", IconTheme.getImage(\"undo\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Undo\"));\n@@ -642,6 +556,8 @@ public void actionPerformed(ActionEvent e) {\n \n     class RedoAction extends AbstractAction {\n \n+        private static final long serialVersionUID = -4404964237851372948L;\n+\n         public RedoAction() {\n             super(\"Undo\", IconTheme.getImage(\"redo\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Redo\"));\n@@ -655,5 +571,4 @@ public void actionPerformed(ActionEvent e) {\n             }\n         }\n     }\n-\n }, ", 26, 110, "\"modified, modified, \"", 136], ["Oscar Gustafsson", "Removed serialization IDs and ran code clean up", "10/20/15, 05:31:30 PM", "Oscar Gustafsson", "5ca621f55040c31a7e84928f7dda0e1ef8af0013", ["src/main/java/net/sf/jabref/gui/StringDialog.java"], "@@ -61,8 +61,6 @@\n \n class StringDialog extends JDialog {\n \n-    private static final long serialVersionUID = 3649022684378600168L;\n-\n     // A reference to the entry this object works on.\n     private final BibtexDatabase base;\n     private final JabRefFrame frame;\n@@ -75,8 +73,7 @@\n     private final HelpAction helpAction;\n \n \n-    public StringDialog(JabRefFrame frame, BasePanel panel,\n-            BibtexDatabase base, JabRefPreferences prefs) {\n+    public StringDialog(JabRefFrame frame, BasePanel panel, BibtexDatabase base, JabRefPreferences prefs) {\n         super(frame);\n         this.frame = frame;\n         this.panel = panel;\n@@ -85,8 +82,7 @@ public StringDialog(JabRefFrame frame, BasePanel panel,\n \n         sortStrings();\n \n-        helpAction = new HelpAction\n-                (frame.helpDiag, GUIGlobals.stringEditorHelp, Localization.lang(\"Help\"));\n+        helpAction = new HelpAction(frame.helpDiag, GUIGlobals.stringEditorHelp, Localization.lang(\"Help\"));\n \n         addWindowListener(new WindowAdapter() {\n \n@@ -100,8 +96,6 @@ public void windowClosing(WindowEvent e) {\n         // that only allows the StringTable to gain keyboard focus.\n         setFocusTraversalPolicy(new LayoutFocusTraversalPolicy() {\n \n-            private static final long serialVersionUID = 601883449812894601L;\n-\n             @Override\n             protected boolean accept(Component c) {\n                 return super.accept(c) && (c instanceof StringTable);\n@@ -139,7 +133,7 @@ protected boolean accept(Component c) {\n         am.put(\"remove\", removeStringAction);\n         im.put(prefs.getKey(\"Save database\"), \"save\");\n         am.put(\"save\", saveAction);\n-       im.put(prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(prefs.getKey(\"Close dialog\"), \"close\");\n         am.put(\"close\", closeAction);\n         im.put(prefs.getKey(\"Help\"), \"help\");\n         am.put(\"help\", helpAction);\n@@ -161,16 +155,16 @@ protected boolean accept(Component c) {\n         if (panel.getFile() != null) {\n             setTitle(Localization.lang(GUIGlobals.stringsTitle) + \": \" + panel.getFile().getName());\n         } else {\n-            setTitle(Localization.lang(GUIGlobals.stringsTitle) + \": \" + Localization.lang(GUIGlobals.untitledTitle));\n+            // @formatter:off\n+            setTitle(Localization.lang(GUIGlobals.stringsTitle) + \": \" \n+                    + Localization.lang(GUIGlobals.untitledTitle));\n+            // @formatter:on\n         }\n-\n     }\n \n \n     class StringTable extends JTable {\n \n-        private static final long serialVersionUID = -2772213505406760942L;\n-\n         final JScrollPane sp = new JScrollPane(this);\n \n \n@@ -186,12 +180,10 @@ public StringTable(StringTableModel stm) {\n             cm.getColumn(0).setPreferredWidth(800);\n             cm.getColumn(1).setPreferredWidth(2000);\n             sp.getViewport().setBackground(Globals.prefs.getColor(JabRefPreferences.TABLE_BACKGROUND));\n-            // getInputMap().remove(GUIGlobals.exitDialog);\n             getInputMap().put(frame.prefs.getKey(\"Close dialog\"), \"close\");\n             getActionMap().put(\"close\", closeAction);\n             getInputMap().put(frame.prefs.getKey(\"Help\"), \"help\");\n             getActionMap().put(\"help\", helpAction);\n-\n         }\n \n         public JComponent getPane() {\n@@ -221,9 +213,8 @@ public void saveDatabase() {\n         panel.runCommand(\"save\");\n     }\n \n-    class StringTableModel extends AbstractTableModel {\n \n-        private static final long serialVersionUID = -3696860403245796557L;\n+    class StringTableModel extends AbstractTableModel {\n \n         final BibtexDatabase tbase;\n         final StringDialog parent;\n@@ -236,9 +227,7 @@ public StringTableModel(StringDialog parent, BibtexDatabase base) {\n \n         @Override\n         public Object getValueAt(int row, int col) {\n-            return col == 0 ?\n-                    ((BibtexString) strings[row]).getName() :\n-                    ((BibtexString) strings[row]).getContent();\n+            return col == 0 ? ((BibtexString) strings[row]).getName() : ((BibtexString) strings[row]).getContent();\n         }\n \n         @Override\n@@ -247,39 +236,24 @@ public void setValueAt(Object value, int row, int col) {\n                 // Change name of string.\n                 if (!value.equals(((BibtexString) strings[row]).getName())) {\n                     if (tbase.hasStringLabel((String) value)) {\n-                        JOptionPane.showMessageDialog(parent,\n-                                Localization.lang(\"A string with that label \"\n-                                        + \"already exists\"),\n-                                Localization.lang(\"Label\"),\n-                                JOptionPane.ERROR_MESSAGE);\n+                        // @formatter:off\n+                        JOptionPane.showMessageDialog(parent, Localization.lang(\"A string with that label \" \n+                                + \"already exists\"),\n+                                Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n                     } else if (((String) value).contains(\" \")) {\n-                        JOptionPane.showMessageDialog\n-                                (parent,\n-                                        Localization.lang(\"The label of the string cannot contain spaces.\"),\n-                                        Localization.lang(\"Label\"),\n-                                        JOptionPane.ERROR_MESSAGE);\n-                    }\n-                    else if (((String) value).contains(\"#\")) {\n-                        JOptionPane.showMessageDialog\n-                                (parent,\n-                                        Localization.lang(\"The label of the string cannot contain the '#' character.\"),\n-                                        Localization.lang(\"Label\"),\n-                                        JOptionPane.ERROR_MESSAGE);\n-                    }\n-                    else if (isNumber((String) value)) {\n-                        JOptionPane.showMessageDialog\n-                                (parent,\n-                                        Localization.lang(\"The label of the string cannot be a number.\"),\n-                                        Localization.lang(\"Label\"),\n-                                        JOptionPane.ERROR_MESSAGE);\n-                    }\n-                    else {\n+                        JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot contain spaces.\"),\n+                                Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                    } else if (((String) value).contains(\"#\")) {\n+                        JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot contain the '#' character.\"),\n+                                Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                    } else if (isNumber((String) value)) {\n+                        JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot be a number.\"),\n+                                Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                        // @formatter:on\n+                    } else {\n                         // Store undo information.\n                         BibtexString subject = (BibtexString) strings[row];\n-                        panel.undoManager.addEdit\n-                                (new UndoableStringChange\n-                                (panel, subject, true,\n-                                        subject.getName(), (String) value));\n+                        panel.undoManager.addEdit(new UndoableStringChange(panel, subject, true, subject.getName(), (String) value));\n                         subject.setName((String) value);\n                         panel.markBaseChanged();\n                         refreshTable();\n@@ -296,10 +270,7 @@ else if (isNumber((String) value)) {\n                         return;\n                     }\n                     // Store undo information.\n-                    panel.undoManager.addEdit\n-                            (new UndoableStringChange\n-                            (panel, subject, false,\n-                                    subject.getContent(), (String) value));\n+                    panel.undoManager.addEdit(new UndoableStringChange(panel, subject, false, subject.getContent(), (String) value));\n \n                     subject.setContent((String) value);\n                     panel.markBaseChanged();\n@@ -314,13 +285,15 @@ public int getColumnCount() {\n \n         @Override\n         public int getRowCount() {\n-            return strings.length; //base.getStringCount();\n+            return strings.length;\n         }\n \n         @Override\n         public String getColumnName(int col) {\n-            return col == 0 ?\n-                    Localization.lang(\"Name\") : Localization.lang(\"Content\");\n+            // @formatter:off\n+            return col == 0 ? Localization.lang(\"Name\") : \n+                Localization.lang(\"Content\");\n+            // @formatter:on\n         }\n \n         @Override\n@@ -357,14 +330,11 @@ void assureNotEditing() {\n \n     class CloseAction extends AbstractAction {\n \n-        private static final long serialVersionUID = 5530138721879378049L;\n-\n         final StringDialog parent;\n \n \n         public CloseAction(StringDialog parent) {\n             super(\"Close window\");\n-            //, new ImageIcon(GUIGlobals.closeIconFile));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Close dialog\"));\n             this.parent = parent;\n         }\n@@ -382,89 +352,76 @@ public void actionPerformed(ActionEvent e) {\n         }\n     }\n \n-\n     class NewStringAction extends AbstractAction {\n \n-        private static final long serialVersionUID = -950091418779927997L;\n-\n         final StringDialog parent;\n \n \n         public NewStringAction(StringDialog parent) {\n-            super(\"New string\",\n-                    IconTheme.getImage(\"add\"));\n+            super(\"New string\", IconTheme.getImage(\"add\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"New string\"));\n             this.parent = parent;\n         }\n \n         @Override\n         public void actionPerformed(ActionEvent e) {\n-            String name =\n-                    JOptionPane.showInputDialog(parent,\n-                            Localization.lang(\"Please enter the string's label\"));\n+            String name = JOptionPane.showInputDialog(parent, Localization.lang(\"Please enter the string's label\"));\n             if (name == null) {\n                 return;\n             }\n             if (isNumber(name)) {\n-                JOptionPane.showMessageDialog\n-                        (parent,\n-                                Localization.lang(\"The label of the string cannot be a number.\"),\n-                                Localization.lang(\"Label\"),\n-                                JOptionPane.ERROR_MESSAGE);\n+                // @formatter:off\n+                JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot be a number.\"),\n+                        Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                // @formatter:on\n                 return;\n             }\n             if (name.contains(\"#\")) {\n-                JOptionPane.showMessageDialog\n-                        (parent,\n-                                Localization.lang(\"The label of the string cannot contain the '#' character.\"),\n-                                Localization.lang(\"Label\"),\n-                                JOptionPane.ERROR_MESSAGE);\n+                // @formatter:off\n+                JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot contain the '#' character.\"),\n+                        Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                // @formatter:on\n                 return;\n             }\n             if (name.contains(\" \")) {\n-                JOptionPane.showMessageDialog\n-                        (parent,\n-                                Localization.lang(\"The label of the string cannot contain spaces.\"),\n-                                Localization.lang(\"Label\"),\n-                                JOptionPane.ERROR_MESSAGE);\n+                // @formatter:off\n+                JOptionPane.showMessageDialog(parent, Localization.lang(\"The label of the string cannot contain spaces.\"),\n+                        Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                // @formatter:on\n                 return;\n             }\n             try {\n                 String newId = IdGenerator.next();\n                 BibtexString bs = new BibtexString(newId, name, \"\");\n \n                 // Store undo information:\n-                panel.undoManager.addEdit\n-                        (new UndoableInsertString\n-                        (panel, panel.database, bs));\n+                panel.undoManager.addEdit(new UndoableInsertString(panel, panel.database, bs));\n \n                 base.addString(bs);\n                 refreshTable();\n                 //\t\ttable.revalidate();\n                 panel.markBaseChanged();\n             } catch (KeyCollisionException ex) {\n-                JOptionPane.showMessageDialog(parent,\n-                        Localization.lang(\"A string with that label \"\n-                                + \"already exists\"),\n-                        Localization.lang(\"Label\"),\n-                        JOptionPane.ERROR_MESSAGE);\n+                // @formatter:off\n+                JOptionPane.showMessageDialog(parent, Localization.lang(\"A string with that label \" \n+                        + \"already exists\"),\n+                        Localization.lang(\"Label\"), JOptionPane.ERROR_MESSAGE);\n+                // @formatter:on\n             }\n         }\n     }\n \n \n     SaveDatabaseAction saveAction = new SaveDatabaseAction(this);\n \n-    static class SaveDatabaseAction extends AbstractAction {\n \n-        private static final long serialVersionUID = 2780778445054043703L;\n+    static class SaveDatabaseAction extends AbstractAction {\n \n         final StringDialog parent;\n \n \n         public SaveDatabaseAction(StringDialog parent) {\n-            super(\"Save database\",\n-                    IconTheme.getImage(\"save\"));\n+            super(\"Save database\", IconTheme.getImage(\"save\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Save database\"));\n             this.parent = parent;\n         }\n@@ -475,17 +432,13 @@ public void actionPerformed(ActionEvent e) {\n         }\n     }\n \n-\n     class RemoveStringAction extends AbstractAction {\n \n-        private static final long serialVersionUID = -1134835504587601867L;\n-\n         final StringDialog parent;\n \n \n         public RemoveStringAction(StringDialog parent) {\n-            super(\"Remove selected strings\",\n-                    IconTheme.getImage(\"remove\"));\n+            super(\"Remove selected strings\", IconTheme.getImage(\"remove\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Remove selected strings\"));\n             this.parent = parent;\n         }\n@@ -499,12 +452,13 @@ public void actionPerformed(ActionEvent e) {\n                 // keystroke. This makes the content hang on the screen.\n                 assureNotEditing();\n \n-                String msg = Localization.lang(\"Really delete the selected\") + ' ' +\n-                        (sel.length > 1 ? sel.length + \" \" + Localization.lang(\"entries\")\n-                                : Localization.lang(\"entry\")) + '?';\n+                // @formatter:off\n+                String msg = Localization.lang(\"Really delete the selected\") + ' ' \n+                        + (sel.length > 1 ? sel.length + \" \" + Localization.lang(\"entries\") \n+                        : Localization.lang(\"entry\")) + '?';\n                 int answer = JOptionPane.showConfirmDialog(parent, msg, Localization.lang(\"Delete strings\"),\n-                        JOptionPane.YES_NO_OPTION,\n-                        JOptionPane.QUESTION_MESSAGE);\n+                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n+                // @formatter:on\n                 if (answer == JOptionPane.YES_OPTION) {\n                     CompoundEdit ce = new CompoundEdit();\n                     for (int i = sel.length - 1; i >= 0; i--) {\n@@ -513,9 +467,7 @@ public void actionPerformed(ActionEvent e) {\n                         BibtexString subject = (BibtexString) strings[sel[i]];\n \n                         // Store undo information:\n-                        ce.addEdit(new UndoableRemoveString\n-                                (panel, base,\n-                                        subject));\n+                        ce.addEdit(new UndoableRemoveString(panel, base, subject));\n \n                         base.removeString(subject.getId());\n                     }\n@@ -524,8 +476,7 @@ public void actionPerformed(ActionEvent e) {\n \n                     //table.revalidate();\n                     refreshTable();\n-                    if (base.getStringCount() > 0)\n-                     {\n+                    if (base.getStringCount() > 0) {\n                         table.setRowSelectionInterval(0, 0);\n                     }\n                 }\n@@ -535,8 +486,6 @@ public void actionPerformed(ActionEvent e) {\n \n     class UndoAction extends AbstractAction {\n \n-        private static final long serialVersionUID = -599852779966425698L;\n-\n         public UndoAction() {\n             super(\"Undo\", IconTheme.getImage(\"undo\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Undo\"));\n@@ -551,11 +500,8 @@ public void actionPerformed(ActionEvent e) {\n         }\n     }\n \n-\n     class RedoAction extends AbstractAction {\n \n-        private static final long serialVersionUID = -4404964237851372948L;\n-\n         public RedoAction() {\n             super(\"Undo\", IconTheme.getImage(\"redo\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Redo\"));, ", 61, 115, "\"modified, \"", 176], ["Simon Harrer", "Removes button to merge entries and keep the old ones.", "10/20/15, 08:51:38 AM", "Simon Harrer", "73f3b76e983bebb5fac55a80867f92648c56230e", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntriesDialog.java", "src/main/resources/l10n/JabRef_da.properties", "src/main/resources/l10n/JabRef_de.properties", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties"], "@@ -1,4 +1,5 @@\n [master]\n+    - Removes button to merge entries and keep the old ones.\n     - Removes non-compact rank symbols in favor of compact rank\n     - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n     - Fixed a bug in the IEEEXploreFetcher, @@ -112,17 +112,7 @@ public void actionPerformed(ActionEvent e) {\n             }\n         });\n \n-        JButton newentry = new JButton(Localization.lang(\"Add new entry and keep both old entries\"));\n-        newentry.setActionCommand(\"newentry\");\n-        newentry.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                buttonPressed(e.getActionCommand());\n-            }\n-        });\n-\n-        JButton replaceentries = new JButton(Localization.lang(\"Replace old entries with new entry\"));\n+        JButton replaceentries = new JButton(Localization.lang(\"Merge entries\"));\n         replaceentries.setActionCommand(\"replace\");\n         replaceentries.addActionListener(new ActionListener() {\n \n@@ -132,7 +122,7 @@ public void actionPerformed(ActionEvent e) {\n             }\n         });\n \n-        bb.addButton(new JButton[] {replaceentries, newentry, cancel});\n+        bb.addButton(new JButton[] {replaceentries, cancel});\n         this.add(bb.getPanel(), cc.xy(1, 5));\n \n         // Add some margin around the layout\n@@ -168,15 +158,6 @@ private void buttonPressed(String button) {\n             // Cancelled, throw it away\n             panel.output(Localization.lang(\"Cancelled merging entries\"));\n \n-            dispose();\n-        } else if (button.equals(\"newentry\")) {\n-            // Create a new entry and add it to the undo stack\n-            // Keep the other two entries\n-            panel.insertEntry(mergedEntry);\n-            ce.addEdit(new UndoableInsertEntry(panel.database(), mergedEntry, panel));\n-            ce.end();\n-            panel.undoManager.addEdit(ce);\n-            panel.output(Localization.lang(\"Merged entries into a new and kept the old\"));\n             dispose();\n         } else if (button.equals(\"replace\")) {\n             // Create a new entry and add it to the undo stack\n@@ -189,7 +170,7 @@ private void buttonPressed(String button) {\n             panel.database().removeEntry(two.getId());\n             ce.end();\n             panel.undoManager.addEdit(ce);\n-            panel.output(Localization.lang(\"Merged entries into a new and removed the old\"));\n+            panel.output(Localization.lang(\"Merged entries\"));\n             dispose();\n         }\n     }, @@ -1592,19 +1592,16 @@ Log=\n ISO_690=\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -2348,19 +2348,16 @@ Log=Protokoll\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Bei_Einheiten_Klammern_hinzuf\\u00fcgen_und_Trennzeichen_durch_ihre_nicht-umbrechenden_Varianten_ersetzen\n-Add_new_entry_and_keep_both_old_entries=Neuen_Eintrag_hinzuf\\u00fcgen_und_beide_alten_Eintr\\u00e4ge_behalten\n Cancelled_merging_entries=Zusammenf\\u00fchren_der_Eintr\\u00e4ge_abgebrochen\n Error_in_entry=Fehler_im_Eintrag\n First_entry=Erster_Eintrag\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Einheiten_formatieren:_nicht-umbrechende_Trennzeichen_hinzuf\\u00fcgen_und_bei_der_Suche_Gro\\u00df-/Kleinschreibung_beibehalten\n Merge_entries=Eintr\\u00e4ge_zusammenf\\u00fchren\n-Merged_entries_into_a_new_and_kept_the_old=Die_Eintr\\u00e4ge_wurden_in_einen_neuen_zusammengef\\u00fchrt_und_die_alten_behalten\n-Merged_entries_into_a_new_and_removed_the_old=Die_Eintr\\u00e4ge_wurden_in_einen_neuen_zusammengef\\u00fchrt_und_die_alten_gel\\u00f6scht\n+Merged_entries=Die_Eintr\\u00e4ge_wurden_zusammengef\\u00fchrt\n Merged_entry=Eintrag_zusammengef\\u00fchrt\n None=Kein(e/r)\n Parse=Parsen\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Unn\\u00f6tige_$,_{_und_}_entfernen_und_benachbarte_Ziffern_in_Gleichungen_verschieben\n-Replace_old_entries_with_new_entry=Alte_Eintr\\u00e4ge_durch_einen_neuen_ersetzen\n Result=Ergebnis\n Second_entry=Zweiter_Eintrag\n Show_DOI_first=DOI_zuerst_anzeigen, @@ -2334,20 +2334,17 @@ Log=Log\n \n ISO_690=ISO_690\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units\n-Add_new_entry_and_keep_both_old_entries=Add_new_entry_and_keep_both_old_entries\n Cancelled_merging_entries=Cancelled_merging_entries\n Error_in_entry=Error_in_entry\n First_entry=First_entry\n \n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search\n Merge_entries=Merge_entries\n-Merged_entries_into_a_new_and_kept_the_old=Merged_entries_into_a_new_and_kept_the_old\n-Merged_entries_into_a_new_and_removed_the_old=Merged_entries_into_a_new_and_removed_the_old\n+Merged_entries=Merged_entries\n Merged_entry=Merged_entry\n None=None\n Parse=Parse\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations\n-Replace_old_entries_with_new_entry=Replace_old_entries_with_new_entry\n Result=Result\n Second_entry=Second_entry\n Show_DOI_first=Show_DOI_first, @@ -1488,19 +1488,16 @@ Get_BibTeX_entry_from_DiVA=Obtener_entrada_BibTeX_desde_DiVA\n Log=Registro\n ISO_690=ISO_690\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=A\\u00f1adir_par\\u00e9ntesis_y_reemplazar_separadores_con_sus_versiones_no_divisoras_para_unidades.\n-Add_new_entry_and_keep_both_old_entries=A\\u00f1adir_nueva_entrada_y_mantener_las_dos_entradas_antiguas\n Cancelled_merging_entries=Cancelar_fusionado_de_entradas\n Error_in_entry=Error_en_la_entrada\n First_entry=Primera_entrada\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Formatear_unidades_a\\u00f1adiendo_separadores_no_divisores_y_manteniendo_may\\u00fasculas/min\\u00fasculas_correctamente_en_la_b\\u00fasqueda\n Merge_entries=Fusionar_entradas\n-Merged_entries_into_a_new_and_kept_the_old=Fusionar_entradas_en_una_nueva_y_mantener_la_antigua\n-Merged_entries_into_a_new_and_removed_the_old=Entradas_fusionadas_en_una_nueva_y_eliminada_la_antigua\n+Merged_entries=Fusionar_entradas_en_una_nueva_y_mantener_la_antigua\n Merged_entry=Entrada_fusionada\n None=Ning\\u00fan\n Parse=Analizar\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Eliminar_$,_{_y_}_innecesarios_y_mover_n\\u00fameros_adyacentes_a_ecuaciones\n-Replace_old_entries_with_new_entry=Reemplazar_viejas_entradas_con_la_nueva\n Result=Resultado\n Second_entry=Segunda_entrada\n Show_DOI_first=Mostrar_DOI_en_primer_lugar, @@ -2332,20 +2332,17 @@ Log=\n \n ISO_690=\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n \n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -1531,19 +1531,16 @@ Log=Message\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Ajouter_des_crochets_et_remplacer_les_s\\u00e9parateurs_par_leur_version_non_interruptible_pour_les_unit\\u00e9s\n-Add_new_entry_and_keep_both_old_entries=Ajouter_une_nouvelle_entr\\u00e9e_et_conserver_les_deux_anciennes_entr\\u00e9es\n Cancelled_merging_entries=Fusion_des_entr\\u00e9es_interrompues\n Error_in_entry=Erreur_dans_l'entr\\u00e9e\n First_entry=Premi\\u00e8re_entr\\u00e9e\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Formatter_les_unit\\u00e9s_en_ajouter_des_s\\u00e9parateurs_non_interruptibles_et_conserver_la_casse_correcte_pour_la_recherche\n Merge_entries=Fusionner_les_entr\\u00e9es\n-Merged_entries_into_a_new_and_kept_the_old=Entr\\u00e9es_fusionn\\u00e9es_dans_une_nouvelle_et_anciennes_conserv\\u00e9es\n-Merged_entries_into_a_new_and_removed_the_old=Entr\\u00e9es_fusionn\\u00e9es_dans_une_nouvelle_et_anciennes_supprim\\u00e9es\n+Merged_entries=Entr\\u00e9es_fusionn\\u00e9es_dans_une_nouvelle_et_anciennes_conserv\\u00e9es\n Merged_entry=Entr\\u00e9e_fusionn\\u00e9e\n None=Aucune\n Parse=Analyser\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Supprimer_les_$,_{,_et_}_inutiles_et_d\\u00e9placer_les_nombres_adjacents_dans_des_\\u00e9quations\n-Replace_old_entries_with_new_entry=Remplacer_les_anciennes_entr\\u00e9es_par_la_nouvelle\n Result=R\\u00e9sultat\n Second_entry=Deuxi\\u00e8me_entr\\u00e9e\n Show_DOI_first=Montrer_le_DOI_en_premier, @@ -1503,19 +1503,16 @@ Log=\n ISO_690=\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -1614,19 +1614,16 @@ Log=Registro\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Aggiungere_le_parentesi_e_sostituire_i_separatori_con_le_loro_versioni_non_interrompiblili_per_le_unit\\u00e0\n-Add_new_entry_and_keep_both_old_entries=Aggiungi_una_nuova_voce_e_conserva_entrambe_le_due_vecchie_voci\n Cancelled_merging_entries=Accorpamento_delle_voci_cancellato\n Error_in_entry=Errore_nella_voce\n First_entry=Prima_voce\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Struttura_le_unit\\u00e0_aggiungendo_separatori_non_interrompibili_e_conservare_la_corretta_capitalizzazione_per_la_ricerca\n Merge_entries=Accorpa_le_voci\n-Merged_entries_into_a_new_and_kept_the_old=Accorpate_le_voci_in_una_nuova_e_mantenute_le_vecchie\n-Merged_entries_into_a_new_and_removed_the_old=Accorpate_le_voci_in_una_nuova_e_rimosse_le_vecchie\n+Merged_entries=Accorpate_le_voci_in_una_nuova_e_mantenute_le_vecchie\n Merged_entry=Voce_accorpata\n None=Nessuna\n Parse=Analizza\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Rimovi_$,_{,_e_}_non_necessari_e_sposta_i_numeri_adiacenti_nelle_equazioni\n-Replace_old_entries_with_new_entry=Sostituisci_le_vecchie_voci_con_la_nuova\n Result=Risultato\n Second_entry=Seconda_voce\n Show_DOI_first=Mostrare_prima_il_DOI, @@ -2334,19 +2334,16 @@ Log=\\u30ed\\u30b0\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\\u6ce2\\u62ec\\u5f27\\u3092\\u8ffd\\u52a0\\u3057\\u3001\\u533a\\u5207\\u308a\\u6587\\u5b57\\u3092\\u5358\\u4f4d\\u306e\\u975e\\u6539\\u884c\\u7248\\u3067\\u7f6e\\u304d\\u63db\\u3048\\u308b\n-Add_new_entry_and_keep_both_old_entries=\\u53e4\\u3044\\u9805\\u76ee\\u3092\\u7dad\\u6301\\u3057\\u305f\\u307e\\u307e\\u65b0\\u898f\\u9805\\u76ee\\u3092\\u8ffd\\u52a0\n Cancelled_merging_entries=\\u9805\\u76ee\\u306e\\u7d71\\u5408\\u3092\\u53d6\\u308a\\u6d88\\u3057\\u307e\\u3057\\u305f\n Error_in_entry=\\u9805\\u76ee\\u306b\\u30a8\\u30e9\\u30fc\\u304c\\u3042\\u308a\\u307e\\u3059\n First_entry=\\u7b2c\\u4e00\\u9805\\u76ee\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\\u975e\\u6539\\u884c\\u533a\\u5207\\u308a\\u3092\\u4ed8\\u3057\\u3066\\u691c\\u7d22\\u3067\\u5927\\u6587\\u5b57\\u5c0f\\u6587\\u5b57\\u304c\\u6b63\\u3057\\u304f\\u306a\\u308b\\u3088\\u3046\\u5358\\u4f4d\\u3092\\u6574\\u5f62\n Merge_entries=\\u9805\\u76ee\\u3092\\u7d71\\u5408\n-Merged_entries_into_a_new_and_kept_the_old=\\u7d71\\u5408\\u9805\\u76ee\\u3092\\u65b0\\u898f\\u306b\\u8ffd\\u52a0\\u3057\\u65e7\\u9805\\u76ee\\u3092\\u6b8b\\u3057\\u307e\\u3057\\u305f\n-Merged_entries_into_a_new_and_removed_the_old=\\u7d71\\u5408\\u9805\\u76ee\\u3092\\u65b0\\u898f\\u306b\\u8ffd\\u52a0\\u3057\\u3001\\u65e7\\u9805\\u76ee\\u3092\\u524a\\u9664\\u3057\\u307e\\u3057\\u305f\n+Merged_entries=\\u7d71\\u5408\\u9805\\u76ee\\u3092\\u65b0\\u898f\\u306b\\u8ffd\\u52a0\\u3057\\u65e7\\u9805\\u76ee\\u3092\\u6b8b\\u3057\\u307e\\u3057\\u305f\n Merged_entry=\\u9805\\u76ee\\u3092\\u7d71\\u5408\\u3057\\u307e\\u3057\\u305f\n None=\\u306a\\u3057\n Parse=\\u89e3\\u6790\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\\u4e0d\\u8981\\u306a$\\u30fb{\\u30fb}\\u3092\\u524a\\u9664\\u3057\\u3066\\u6570\\u5f0f\\u306b\\u96a3\\u63a5\\u3059\\u308b\\u756a\\u53f7\\u3092\\u5165\\u308c\\u308b\n-Replace_old_entries_with_new_entry=\\u53e4\\u3044\\u9805\\u76ee\\u3092\\u65b0\\u898f\\u9805\\u76ee\\u3067\\u7f6e\\u304d\\u63db\\u3048\\u308b\n Result=\\u7d50\\u679c\n Second_entry=\\u7b2c\\u4e8c\\u9805\\u76ee\n Show_DOI_first=DOI\\u3092\\u6700\\u521d\\u306b\\u8868\\u793a, @@ -2334,19 +2334,16 @@ Log=\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -2799,19 +2799,16 @@ Log=\n ISO_690=\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -1499,19 +1499,16 @@ Log=Log\n ISO_690=ISO_690\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=Adicionar_colchetes_e_substituir_separadores_por_suas_vers\\u00f5es_sem_quebras_de_unidades\n-Add_new_entry_and_keep_both_old_entries=Adicionar_nova_refer\\u00eancia_e_manter_ambas_entradas_antigas\n Cancelled_merging_entries=Uni\\u00e3o_das_refer\\u00eancias_cancelada\n Error_in_entry=Erro_na_refer\\u00eancia\n First_entry=Primeira_refer\\u00eancia\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Formatar_unidades_adicionando_separadores_sem_quebras_e_manter_mai\\u00fasculas_e_min\\u00fasculas_na_busca\n Merge_entries=Mesclar_refer\\u00eancias\n-Merged_entries_into_a_new_and_kept_the_old=Mesclou_refer\\u00eancias_em_uma_nova_e_manteve_a_antiga\n-Merged_entries_into_a_new_and_removed_the_old=Mesclou_as_refer\\u00eancias_em_uma_nova_e_removeu_a_antiga\n+Merged_entries=Mesclou_refer\\u00eancias_em_uma_nova_e_manteve_a_antiga\n Merged_entry=Refer\\u00eancia_mesclada\n None=None\n Parse=Interpretar\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Remover_$,_{,_e_}_desnecess\\u00e1rios_e_mover_os_n\\u00fameros_adjacentes_para_equa\\u00e7\\u00f5es\n-Replace_old_entries_with_new_entry=Substituir_refer\\u00eancias_antigas_pela_nova_refer\\u00eancia\n Result=Resultado\n Second_entry=Segunda_refer\\u00eancia\n Show_DOI_first=Mostrar_DOI_antes, @@ -2332,20 +2332,17 @@ Log=\u041e\u0442\u0447\u0435\u0442\n \n ISO_690=ISO_690\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435_\u0441\u043a\u043e\u0431\u043e\u043a_\u0438_\u0437\u0430\u043c\u0435\u043d\u0430_\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432_\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439_\u043d\u0430_\u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0435_\u0441\u0438\u043c\u0432\u043e\u043b\u044b_\u0434\u043b\u044f_\u0435\u0434\u0438\u043d\u0438\u0446\n-Add_new_entry_and_keep_both_old_entries=\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c_\u043d\u043e\u0432\u0443\u044e_\u0437\u0430\u043f\u0438\u0441\u044c_\u0438_\u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c_\u043e\u0431\u0435_\u0441\u0442\u0430\u0440\u044b\u0435_\u0437\u0430\u043f\u0438\u0441\u0438\n Cancelled_merging_entries=\u0421\u043b\u0438\u044f\u043d\u0438\u0435_\u0437\u0430\u043f\u0438\u0441\u0435\u0439_\u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e\n Error_in_entry=\u041e\u0448\u0438\u0431\u043a\u0430_\u0432_\u0437\u0430\u043f\u0438\u0441\u0438\n First_entry=\u041f\u0435\u0440\u0432\u0430\u044f_\u0437\u0430\u043f\u0438\u0441\u044c\n \n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435_\u0435\u0434\u0438\u043d\u0438\u0446_\u0441_\u043f\u043e\u043c\u043e\u0449\u044c\u044e_\u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0445_\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432-\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439_\u0441_\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c_\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0433\u043e_\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430_\u043f\u0440\u0438_\u043f\u043e\u0438\u0441\u043a\u0435\n Merge_entries=\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435_\u0437\u0430\u043f\u0438\u0441\u0435\u0439\n-Merged_entries_into_a_new_and_kept_the_old=\u0417\u0430\u043f\u0438\u0441\u0438_\u0441_\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c_\u0432_\u043d\u043e\u0432\u0443\u044e_\u0438_\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c_\u0441\u0442\u0430\u0440\u043e\u0439\n-Merged_entries_into_a_new_and_removed_the_old=\u0417\u0430\u043f\u0438\u0441\u0438_\u0441_\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c_\u0432_\u043d\u043e\u0432\u0443\u044e_\u0438_\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u043c_\u0441\u0442\u0430\u0440\u043e\u0439\n+Merged_entries=\u0417\u0430\u043f\u0438\u0441\u0438_\u0441_\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c_\u0432_\u043d\u043e\u0432\u0443\u044e_\u0438_\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c_\u0441\u0442\u0430\u0440\u043e\u0439\n Merged_entry=\u0417\u0430\u043f\u0438\u0441\u044c_\u0441_\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c\n None=\u041d\u0438_\u043e\u0434\u043d\u043e\u0439\n Parse=\u0410\u043d\u0430\u043b\u0438\u0437\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435_\u0438\u0437_\u0444\u043e\u0440\u043c\u0443\u043b_\u043b\u0438\u0448\u043d\u0438\u0445_\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432_$,_{,_}_\u0438_\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435_\u0432_\u043d\u0438\u0445_\u043f\u0440\u0438\u043b\u0435\u0436\u0430\u0449\u0438\u0445_\u0447\u0438\u0441\u0435\u043b\n-Replace_old_entries_with_new_entry=\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c_\u0441\u0442\u0430\u0440\u044b\u0435_\u0437\u0430\u043f\u0438\u0441\u0438_\u043d\u0430_\u043d\u043e\u0432\u0443\u044e\n Result=\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n Second_entry=\u0412\u0442\u043e\u0440\u0430\u044f_\u0437\u0430\u043f\u0438\u0441\u044c\n Show_DOI_first=\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c_\u0441\u043d\u0430\u0447\u0430\u043b\u0430_DOI, @@ -1522,19 +1522,16 @@ Log=Kay\\u0131t\n \n ISO_690=ISO_690\n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=K\\u00f6\\u015feli_parantezler_ekle_ve_ayra\\u00e7lar\\u0131_birimler_i\\u00e7in_b\\u00f6l\\u00fcnemez_s\\u00fcr\\u00fcmleriyle_de\\u011fi\\u015ftir\n-Add_new_entry_and_keep_both_old_entries=Yeni_girdi_ekle_ve_her_iki_eski_girdiyi_de_koru\n Cancelled_merging_entries=Girdilerin_birle\\u015ftirilmesi_iptal_edildi\n Error_in_entry=Girdide_hata\n First_entry=\\u0130lk_girdi\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=Birimleri_b\\u00f6l\\u00fcnemez_ayra\\u00e7lar_ekleyerek_ve_aramadaki_b\\u00fcy\\u00fck_k\\u00fc\\u00e7\\u00fck_harfleri_koruyarak_bi\\u00e7imle\n Merge_entries=Girdileri_birle\\u015ftir\n-Merged_entries_into_a_new_and_kept_the_old=Girdiler_yeni_birine_birle\\u015ftirildi_ve_eskiler_korundu\n-Merged_entries_into_a_new_and_removed_the_old=Girdiler_yeni_birine_birle\\u015ftirildi_ve_eskiler_silindi\n+Merged_entries=Girdiler_yeni_birine_birle\\u015ftirildi_ve_eskiler_korundu\n Merged_entry=Birle\\u015fmi\\u015f_girdi\n None=Hi\\u00e7\n Parse=Ayr\\u0131\\u015ft\\u0131r\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=Gereksiz_$,_{,_ve_}'lar\\u0131_sil_ve_biti\\u015fik_numaralar\\u0131_denkleme_ta\\u015f\\u0131\n-Replace_old_entries_with_new_entry=Eski_girdileri_yenisiyle_de\\u011fi\\u015ftir\n Result=Sonu\\u00e7\n Second_entry=\\u0130kinci_girdi\n Show_DOI_first=\\u00d6nce_DOI'y\\u0131_g\\u00f6ster, @@ -2330,19 +2330,16 @@ Log=\n ISO_690=\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, @@ -2322,19 +2322,16 @@ Log=\\u65e5\\u5fd7\n ISO_690=\n \n Add_brackets_and_replace_separators_with_their_non-breaking_version_for_units=\n-Add_new_entry_and_keep_both_old_entries=\n Cancelled_merging_entries=\n Error_in_entry=\n First_entry=\n Format_units_by_adding_non-breaking_separators_and_keeping_the_correct_case_on_search=\n Merge_entries=\n-Merged_entries_into_a_new_and_kept_the_old=\n-Merged_entries_into_a_new_and_removed_the_old=\n+Merged_entries=\n Merged_entry=\n None=\n Parse=\n Remove_unneccessary_$,_{,_and_}_and_move_adjacent_numbers_into_equations=\n-Replace_old_entries_with_new_entry=\n Result=\n Second_entry=\n Show_DOI_first=, ", 20, 86, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 106], ["Oliver Kopp", "gradlew eclipse now generates formatter and save action settings", "10/20/15, 11:32:50 PM", "Oliver Kopp", "9a6c63bca863c9fa3f47a8430025a0d8898f2846", ["CONTRIBUTING.md", "build.gradle", "eclipse.gradle"], "@@ -21,6 +21,7 @@ Ensure your code is formatted according the JabRef formatting guidelines.\n These are provided as Eclipse formatting configuration in [formatter_settings.xml](ide-settings/formatter_settings.xml).\n Ensure that JabRef's code cleanup settings are activated.\n Import [cleanup_settings.xml](ide-settings/cleanup_settings.xml).\n+When you use Eclipse, the required config is generated automatically by `gradlew eclipse`.\n You can also run `gradlew format` to let the [Gradle Format plugin](https://github.com/youribonnaffe/gradle-format-plugin) do the formatting.\n \n , @@ -16,6 +16,7 @@ apply plugin: \"sonar-runner\"\n apply plugin: \"maven\"\n apply plugin: 'jacoco'\n apply plugin: 'com.github.kt3k.coveralls'\n+apply from: 'eclipse.gradle'\n \n group = \"net.sf.jabref\"\n version = \"2.80dev\"\n@@ -363,9 +364,3 @@ task getdeps(type: Copy) {\n     into 'build/tmp/alldeps/'\n }\n \n-// workaround until https://issues.gradle.org/browse/GRADLE-2274 is resolved\n-eclipseJdt << {\n-    File f = file('.settings/org.eclipse.core.resources.prefs')\n-    f.write('eclipse.preferences.version=1\\n')\n-    f.append('encoding/<project>=UTF-8')\n-}, @@ -0,0 +1,534 @@\n+// workaround until https://issues.gradle.org/browse/GRADLE-2274 is resolved\n+eclipseJdt << {\n+    File f = file('.settings/org.eclipse.core.resources.prefs')\n+    f.write('eclipse.preferences.version=1\\n')\n+    f.append('encoding/<project>=UTF-8')\n+}\n+\n+// add formatter and cleanup settings to Eclipse settings\n+// see http://stackoverflow.com/a/27461890/873282\n+\n+tasks.cleanEclipse.doLast {\n+    delete(\"${project.projectDir}/.settings/org.eclipse.core.resources.prefs\")\n+    delete(\"${project.projectDir}/.settings/org.eclipse.jdt.core.prefs\")\n+    delete(\"${project.projectDir}/.settings/org.eclipse.jdt.ui.prefs\")\n+}\n+\n+tasks.eclipse.doFirst {\n+    File jdt_core_prefs = file(\"${project.projectDir}/.settings/org.eclipse.jdt.core.prefs\")\n+    // existance check doesn't work as gradle generates the file on its own\n+    /* following entries are not written as they are generated by gradle:\n+            org.eclipse.jdt.core.compiler.debug.lineNumber=generate\n+            org.eclipse.jdt.core.compiler.debug.localVariable=generate\n+            org.eclipse.jdt.core.compiler.debug.sourceFile=generate\n+            org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n+            org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve\n+            org.eclipse.jdt.core.compiler.problem.assertIdentifier=error\n+            org.eclipse.jdt.core.compiler.problem.enumIdentifier=error\n+    */\n+    jdt_core_prefs.append('''\n+        org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled\n+        org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore\n+        org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull\n+        org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault\n+        org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable\n+        org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled\n+        org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning\n+        org.eclipse.jdt.core.compiler.problem.autoboxing=ignore\n+        org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning\n+        org.eclipse.jdt.core.compiler.problem.deadCode=warning\n+        org.eclipse.jdt.core.compiler.problem.deprecation=warning\n+        org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled\n+        org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled\n+        org.eclipse.jdt.core.compiler.problem.discouragedReference=warning\n+        org.eclipse.jdt.core.compiler.problem.emptyStatement=warning\n+        org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=warning\n+        org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore\n+        org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled\n+        org.eclipse.jdt.core.compiler.problem.fieldHiding=warning\n+        org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning\n+        org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning\n+        org.eclipse.jdt.core.compiler.problem.forbiddenReference=error\n+        org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning\n+        org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled\n+        org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning\n+        org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning\n+        org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore\n+        org.eclipse.jdt.core.compiler.problem.localVariableHiding=warning\n+        org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning\n+        org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore\n+        org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning\n+        org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled\n+        org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning\n+        org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning\n+        org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled\n+        org.eclipse.jdt.core.compiler.problem.missingSerialVersion=ignore\n+        org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore\n+        org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning\n+        org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning\n+        org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore\n+        org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning\n+        org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error\n+        org.eclipse.jdt.core.compiler.problem.nullReference=warning\n+        org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error\n+        org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning\n+        org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning\n+        org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore\n+        org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning\n+        org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore\n+        org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=warning\n+        org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning\n+        org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning\n+        org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore\n+        org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=warning\n+        org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore\n+        org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore\n+        org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=warning\n+        org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled\n+        org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning\n+        org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled\n+        org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled\n+        org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled\n+        org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore\n+        org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning\n+        org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled\n+        org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning\n+        org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning\n+        org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=warning\n+        org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning\n+        org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning\n+        org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning\n+        org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore\n+        org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled\n+        org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled\n+        org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled\n+        org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore\n+        org.eclipse.jdt.core.compiler.problem.unusedImport=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedLabel=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedLocal=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedParameter=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=disabled\n+        org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled\n+        org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled\n+        org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=warning\n+        org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning\n+        org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning\n+        org.eclipse.jdt.core.formatter.align_type_members_on_columns=false\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=1\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16\n+        org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16\n+        org.eclipse.jdt.core.formatter.alignment_for_assignment=0\n+        org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16\n+        org.eclipse.jdt.core.formatter.alignment_for_compact_if=16\n+        org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=0\n+        org.eclipse.jdt.core.formatter.alignment_for_enum_constants=81\n+        org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16\n+        org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0\n+        org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16\n+        org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=88\n+        org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16\n+        org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=17\n+        org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n+        org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16\n+        org.eclipse.jdt.core.formatter.blank_lines_after_imports=1\n+        org.eclipse.jdt.core.formatter.blank_lines_after_package=1\n+        org.eclipse.jdt.core.formatter.blank_lines_before_field=0\n+        org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=1\n+        org.eclipse.jdt.core.formatter.blank_lines_before_imports=1\n+        org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1\n+        org.eclipse.jdt.core.formatter.blank_lines_before_method=1\n+        org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=2\n+        org.eclipse.jdt.core.formatter.blank_lines_before_package=0\n+        org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1\n+        org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1\n+        org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line\n+        org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line\n+        org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false\n+        org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false\n+        org.eclipse.jdt.core.formatter.comment.format_block_comments=false\n+        org.eclipse.jdt.core.formatter.comment.format_header=false\n+        org.eclipse.jdt.core.formatter.comment.format_html=true\n+        org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true\n+        org.eclipse.jdt.core.formatter.comment.format_line_comments=false\n+        org.eclipse.jdt.core.formatter.comment.format_source_code=true\n+        org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true\n+        org.eclipse.jdt.core.formatter.comment.indent_root_tags=true\n+        org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert\n+        org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert\n+        org.eclipse.jdt.core.formatter.comment.line_length=120\n+        org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true\n+        org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true\n+        org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false\n+        org.eclipse.jdt.core.formatter.compact_else_if=true\n+        org.eclipse.jdt.core.formatter.continuation_indentation=2\n+        org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2\n+        org.eclipse.jdt.core.formatter.disabling_tag=@formatter\\\\:off\n+        org.eclipse.jdt.core.formatter.enabling_tag=@formatter\\\\:on\n+        org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false\n+        org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true\n+        org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true\n+        org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true\n+        org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true\n+        org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true\n+        org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true\n+        org.eclipse.jdt.core.formatter.indent_empty_lines=false\n+        org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true\n+        org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true\n+        org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true\n+        org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false\n+        org.eclipse.jdt.core.formatter.indentation.size=4\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert\n+        org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert\n+        org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert\n+        org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert\n+        org.eclipse.jdt.core.formatter.join_lines_in_comments=true\n+        org.eclipse.jdt.core.formatter.join_wrapped_lines=true\n+        org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false\n+        org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false\n+        org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false\n+        org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false\n+        org.eclipse.jdt.core.formatter.lineSplit=120\n+        org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false\n+        org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false\n+        org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0\n+        org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1\n+        org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true\n+        org.eclipse.jdt.core.formatter.tabulation.char=space\n+        org.eclipse.jdt.core.formatter.tabulation.size=4\n+        org.eclipse.jdt.core.formatter.use_on_off_tags=true\n+        org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false\n+        org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true\n+        org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=false\n+        org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true\n+        org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter\n+        '''. stripIndent())\n+\n+    File jdt_ui_prefs = file(\"${project.projectDir}/.settings/org.eclipse.jdt.ui.prefs\")\n+    if (jdt_ui_prefs.exists()) {\n+        logger.warn(\"UI preferences already exist and will not be overridden. Use task 'cleanEclipse' first.\")\n+    } else {\n+        jdt_ui_prefs.append('''\n+            cleanup.add_default_serial_version_id=true\n+            cleanup.add_generated_serial_version_id=false\n+            cleanup.add_missing_annotations=true\n+            cleanup.add_missing_deprecated_annotations=true\n+            cleanup.add_missing_methods=false\n+            cleanup.add_missing_nls_tags=false\n+            cleanup.add_missing_override_annotations=true\n+            cleanup.add_missing_override_annotations_interface_methods=true\n+            cleanup.add_serial_version_id=false\n+            cleanup.always_use_blocks=true\n+            cleanup.always_use_parentheses_in_expressions=true\n+            cleanup.always_use_this_for_non_static_field_access=true\n+            cleanup.always_use_this_for_non_static_method_access=true\n+            cleanup.convert_functional_interfaces=false\n+            cleanup.convert_to_enhanced_for_loop=false\n+            cleanup.correct_indentation=true\n+            cleanup.format_source_code=true\n+            cleanup.format_source_code_changes_only=false\n+            cleanup.insert_inferred_type_arguments=false\n+            cleanup.make_local_variable_final=false\n+            cleanup.make_parameters_final=false\n+            cleanup.make_private_fields_final=true\n+            cleanup.make_type_abstract_if_missing_method=false\n+            cleanup.make_variable_declarations_final=true\n+            cleanup.never_use_blocks=false\n+            cleanup.never_use_parentheses_in_expressions=false\n+            cleanup.organize_imports=false\n+            cleanup.qualify_static_field_accesses_with_declaring_class=true\n+            cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=false\n+            cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=false\n+            cleanup.qualify_static_member_accesses_with_declaring_class=false\n+            cleanup.qualify_static_method_accesses_with_declaring_class=false\n+            cleanup.remove_private_constructors=true\n+            cleanup.remove_redundant_type_arguments=true\n+            cleanup.remove_trailing_whitespaces=true\n+            cleanup.remove_trailing_whitespaces_all=true\n+            cleanup.remove_trailing_whitespaces_ignore_empty=false\n+            cleanup.remove_unnecessary_casts=true\n+            cleanup.remove_unnecessary_nls_tags=true\n+            cleanup.remove_unused_imports=true\n+            cleanup.remove_unused_local_variables=false\n+            cleanup.remove_unused_private_fields=true\n+            cleanup.remove_unused_private_members=false\n+            cleanup.remove_unused_private_methods=true\n+            cleanup.remove_unused_private_types=true\n+            cleanup.sort_members=false\n+            cleanup.sort_members_all=true\n+            cleanup.use_anonymous_class_creation=false\n+            cleanup.use_blocks=true\n+            cleanup.use_blocks_only_for_return_and_throw=false\n+            cleanup.use_lambda=true\n+            cleanup.use_parentheses_in_expressions=true\n+            cleanup.use_this_for_non_static_field_access=false\n+            cleanup.use_this_for_non_static_field_access_only_if_necessary=false\n+            cleanup.use_this_for_non_static_method_access=false\n+            cleanup.use_this_for_non_static_method_access_only_if_necessary=false\n+            cleanup.use_type_arguments=false\n+            cleanup_profile=_JabRef\n+            cleanup_settings_version=2\n+            eclipse.preferences.version=1\n+            editor_save_participant_org.eclipse.jdt.ui.postsavelistener.cleanup=true\n+            formatter_profile=_JabRef\n+            formatter_settings_version=12\n+            sp_cleanup.add_default_serial_version_id=true\n+            sp_cleanup.add_generated_serial_version_id=false\n+            sp_cleanup.add_missing_annotations=true\n+            sp_cleanup.add_missing_deprecated_annotations=true\n+            sp_cleanup.add_missing_methods=false\n+            sp_cleanup.add_missing_nls_tags=false\n+            sp_cleanup.add_missing_override_annotations=true\n+            sp_cleanup.add_missing_override_annotations_interface_methods=true\n+            sp_cleanup.add_serial_version_id=false\n+            sp_cleanup.always_use_blocks=true\n+            sp_cleanup.always_use_parentheses_in_expressions=true\n+            sp_cleanup.always_use_this_for_non_static_field_access=true\n+            sp_cleanup.always_use_this_for_non_static_method_access=true\n+            sp_cleanup.convert_functional_interfaces=false\n+            sp_cleanup.convert_to_enhanced_for_loop=false\n+            sp_cleanup.correct_indentation=true\n+            sp_cleanup.format_source_code=true\n+            sp_cleanup.format_source_code_changes_only=true\n+            sp_cleanup.insert_inferred_type_arguments=false\n+            sp_cleanup.make_local_variable_final=false\n+            sp_cleanup.make_parameters_final=false\n+            sp_cleanup.make_private_fields_final=true\n+            sp_cleanup.make_type_abstract_if_missing_method=false\n+            sp_cleanup.make_variable_declarations_final=true\n+            sp_cleanup.never_use_blocks=false\n+            sp_cleanup.never_use_parentheses_in_expressions=false\n+            sp_cleanup.on_save_use_additional_actions=true\n+            sp_cleanup.organize_imports=false\n+            sp_cleanup.qualify_static_field_accesses_with_declaring_class=true\n+            sp_cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=false\n+            sp_cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=false\n+            sp_cleanup.qualify_static_member_accesses_with_declaring_class=false\n+            sp_cleanup.qualify_static_method_accesses_with_declaring_class=false\n+            sp_cleanup.remove_private_constructors=true\n+            sp_cleanup.remove_redundant_type_arguments=true\n+            sp_cleanup.remove_trailing_whitespaces=true\n+            sp_cleanup.remove_trailing_whitespaces_all=true\n+            sp_cleanup.remove_trailing_whitespaces_ignore_empty=false\n+            sp_cleanup.remove_unnecessary_casts=true\n+            sp_cleanup.remove_unnecessary_nls_tags=true\n+            sp_cleanup.remove_unused_imports=true\n+            sp_cleanup.remove_unused_local_variables=false\n+            sp_cleanup.remove_unused_private_fields=true\n+            sp_cleanup.remove_unused_private_members=false\n+            sp_cleanup.remove_unused_private_methods=true\n+            sp_cleanup.remove_unused_private_types=true\n+            sp_cleanup.sort_members=false\n+            sp_cleanup.sort_members_all=true\n+            sp_cleanup.use_anonymous_class_creation=false\n+            sp_cleanup.use_blocks=true\n+            sp_cleanup.use_blocks_only_for_return_and_throw=false\n+            sp_cleanup.use_lambda=true\n+            sp_cleanup.use_parentheses_in_expressions=true\n+            sp_cleanup.use_this_for_non_static_field_access=false\n+            sp_cleanup.use_this_for_non_static_field_access_only_if_necessary=false\n+            sp_cleanup.use_this_for_non_static_method_access=false\n+            sp_cleanup.use_this_for_non_static_method_access_only_if_necessary=false\n+            sp_cleanup.use_type_arguments=false\n+            '''. stripIndent())\n+    }\n+}, ", 536, 6, "\"modified, modified, added, \"", 542], ["Simon Harrer", "Remove preferences associated with the legacy pdf and ps sync option", "10/22/15, 01:59:27 PM", "Simon Harrer", "2facc25d383f6970e825100aa872e1291a678c97", ["src/main/java/net/sf/jabref/gui/preftabs/ExternalTab.java"], "@@ -45,10 +45,8 @@\n \n     private final JabRefFrame frame;\n \n-    private final JTextField pdfDir;\n     private final JTextField regExpTextField;\n     private final JTextField fileDir;\n-    private final JTextField psDir;\n     private final JTextField emailSubject;\n     private final JTextField citeCommand;\n \n@@ -69,8 +67,6 @@ public ExternalTab(JabRefFrame frame, PreferencesDialog prefsDiag, JabRefPrefere\n         this.frame = frame;\n         setLayout(new BorderLayout());\n \n-        psDir = new JTextField(25);\n-        pdfDir = new JTextField(25);\n         fileDir = new JTextField(25);\n         bibLocationAsFileDir = new JCheckBox(Localization.lang(\"Allow file links relative to each bib file's location\"));\n         bibLocAsPrimaryDir = new JCheckBox(Localization.lang(\"Use the bib file location as primary file directory\"));\n@@ -168,32 +164,7 @@ public void itemStateChanged(ItemEvent e) {\n         builder.append(openFoldersOfAttachedFiles);\n         builder.nextLine();\n \n-        builder.appendSeparator(Localization.lang(\"Legacy file fields\"));\n-        pan = new JPanel();\n-        builder.append(pan);\n-        builder.append(new JLabel(\"<html>\" + Localization.lang(\"Note that these settings are used for the legacy \"\n-                + \"<b>pdf</b> and <b>ps</b> fields only.<br>For most users, setting the <b>Main file directory</b> \"\n-                + \"above should be sufficient.\") + \"</html>\"), 5);\n-        builder.nextLine();\n-        pan = new JPanel();\n-        builder.append(pan);\n-        lab = new JLabel(Localization.lang(\"Main PDF directory\") + ':');\n-        builder.append(lab);\n-        builder.append(pdfDir);\n-        browse = BrowseAction.buildForDir(this.frame, pdfDir);\n-        builder.append(new JButton(browse));\n-        builder.nextLine();\n-\n-        pan = new JPanel();\n-        builder.append(pan);\n-        lab = new JLabel(Localization.lang(\"Main PS directory\") + ':');\n-        builder.append(lab);\n-        builder.append(psDir);\n-        browse = BrowseAction.buildForDir(this.frame, psDir);\n-        builder.append(new JButton(browse));\n-        builder.nextLine();\n         builder.appendSeparator(Localization.lang(\"External programs\"));\n-\n         builder.nextLine();\n \n         JPanel butpan = new JPanel();\n@@ -239,8 +210,6 @@ public void actionPerformed(ActionEvent event) {\n \n     @Override\n     public void setValues() {\n-        pdfDir.setText(prefs.get(\"pdfDirectory\"));\n-        psDir.setText(prefs.get(\"psDirectory\"));\n         fileDir.setText(prefs.get(Globals.FILE_FIELD + \"Directory\"));\n         bibLocationAsFileDir.setSelected(prefs.getBoolean(JabRefPreferences.BIB_LOCATION_AS_FILE_DIR));\n         bibLocAsPrimaryDir.setSelected(prefs.getBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR));\n@@ -272,8 +241,6 @@ public void storeSettings() {\n         }\n \n         // We should maybe do some checking on the validity of the contents?\n-        prefs.put(\"pdfDirectory\", pdfDir.getText());\n-        prefs.put(\"psDirectory\", psDir.getText());\n         prefs.put(Globals.FILE_FIELD + \"Directory\", fileDir.getText());\n         prefs.putBoolean(JabRefPreferences.BIB_LOCATION_AS_FILE_DIR, bibLocationAsFileDir.isSelected());\n         prefs.putBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR, bibLocAsPrimaryDir.isSelected());, ", 0, 33, "\"modified, \"", 33], ["matthiasgeiger", "update supported lookAndFeels", "10/22/15, 12:56:13 PM", "matthiasgeiger", "bfb8c81caa027f72846bb423f06db58f0b90e06f", ["CHANGELOG", "src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java"], "@@ -50,6 +50,7 @@\n     - Removes support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.\n     - Removes \"edit preamble\" from toolbar\n     - Fix #250: No hard line breaks after 70 chars in serialized JabRef meta data\n+    - Update supported LookAndFeels\n [dev_2.11]\n     - Backports from 2.80: Fix bug #194: JabRef starts again on Win XP and Win Vista\n     - Backports from 2.80: Fixes #103: JDialog for auto set links is openend and closed correctly, @@ -87,9 +87,8 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag, JabRef jabRef) {\n         String[] possibleLookAndFeels = {\n                 UIManager.getSystemLookAndFeelClassName(),\n                 UIManager.getCrossPlatformLookAndFeelClassName(),\n-                \"com.jgoodies.plaf.plastic.Plastic3DLookAndFeel\",\n-                \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\",\n-                \"javax.swing.plaf.mac.MacLookAndFeel\",\n+                \"com.jgoodies.looks.plastic.Plastic3DLookAndFeel\",\n+                \"com.jgoodies.looks.windows.WindowsLookAndFeel\"\n         };\n         // Only list L&F which are available\n         List<String> lookAndFeels = new ArrayList<String>();, ", 3, 3, "\"modified, modified, \"", 6], ["Joerg Lenhard", "Remove unused preference preserveFieldFormatting", "10/22/15, 11:49:11 AM", "Joerg Lenhard", "2e0a9701298a6859fb5f7c94584cde7723365ac1", ["src/main/java/net/sf/jabref/JabRefPreferences.java"], "@@ -221,7 +221,6 @@\n     public static final String GENERAL_FIELDS = \"generalFields\";\n     public static final String RENAME_ON_MOVE_FILE_TO_FILE_DIR = \"renameOnMoveFileToFileDir\";\n     public static final String MEMORY_STICK_MODE = \"memoryStickMode\";\n-    public static final String PRESERVE_FIELD_FORMATTING = \"preserveFieldFormatting\";\n     public static final String DEFAULT_OWNER = \"defaultOwner\";\n     public static final String GROUPS_VISIBLE_ROWS = \"groupsVisibleRows\";\n     public static final String DEFAULT_ENCODING = \"defaultEncoding\";\n@@ -581,7 +580,6 @@ private JabRefPreferences() {\n         defaults.put(DEFAULT_ENCODING, \"UTF-8\");\n         defaults.put(GROUPS_VISIBLE_ROWS, 8);\n         defaults.put(DEFAULT_OWNER, System.getProperty(\"user.name\"));\n-        defaults.put(PRESERVE_FIELD_FORMATTING, Boolean.FALSE);\n         defaults.put(MEMORY_STICK_MODE, Boolean.FALSE);\n         defaults.put(RENAME_ON_MOVE_FILE_TO_FILE_DIR, Boolean.TRUE);\n , ", 0, 2, "\"modified, \"", 2], ["Oscar Gustafsson", "Moving listener in the code to obtain proper formatting", "10/25/15, 05:12:54 PM", "Oscar Gustafsson", "169696c12db8cacedd24b5ebceda55a3e402ca30", ["src/main/java/net/sf/jabref/model/database/BibtexDatabase.java"], "@@ -71,594 +71,593 @@\n      */\n     private final HashMap<String, Integer> allKeys = new HashMap<>();\n \n-    /*\n-     * Entries are stored in a HashMap with the ID as key. What happens if\n-     * someone changes a BibtexEntry's ID after it has been added to this\n-     * BibtexDatabase? The key of that entry would be the old ID, not the new\n-     * one. Use a PropertyChangeListener to identify an ID change and update the\n-     * Map.\n-     */\n-    private final VetoableChangeListener listener =\n-            propertyChangeEvent -> {\n-                if (propertyChangeEvent.getPropertyName() == null) {\n-                    fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this, DatabaseChangeEvent.ChangeType.CHANGING_ENTRY, (BibtexEntry) propertyChangeEvent.getSource()));\n-                } else if (\"id\".equals(propertyChangeEvent.getPropertyName())) {\n-                    // locate the entry under its old key\n-                    BibtexEntry oldEntry =\n-                            entries.remove(propertyChangeEvent.getOldValue());\n-\n-                    if (oldEntry != propertyChangeEvent.getSource()) {\n-                        // Something is very wrong!\n-                        // The entry under the old key isn't\n-                        // the one that sent this event.\n-                        // Restore the old state.\n-                        entries.put((String) propertyChangeEvent.getOldValue(), oldEntry);\n-                        throw new PropertyVetoException(\"Wrong old ID\", propertyChangeEvent);\n-                    }\n-\n-                    if (entries.get(propertyChangeEvent.getNewValue()) != null) {\n-                        entries.put((String) propertyChangeEvent.getOldValue(), oldEntry);\n-                        throw new PropertyVetoException\n-                        (\"New ID already in use, please choose another\",\n-                                propertyChangeEvent);\n-                    }\n-\n-                    // and re-file this entry\n-                    entries.put((String) propertyChangeEvent.getNewValue(),\n-                            (BibtexEntry) propertyChangeEvent.getSource());\n-                } else {\n-                    fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this, DatabaseChangeEvent.ChangeType.CHANGED_ENTRY, (BibtexEntry) propertyChangeEvent.getSource()));\n-                }\n-            };\n-\n-\n-            /**\n-             * Returns the number of entries.\n-             */\n-            public int getEntryCount() {\n-                return entries.size();\n-            }\n-\n-            /**\n-             * Returns a Set containing the keys to all entries.\n-             * Use getKeySet().iterator() to iterate over all entries.\n-             */\n-            public Set<String> getKeySet() {\n-                return entries.keySet();\n-            }\n-\n-            /**\n-             * Returns an EntrySorter with the sorted entries from this base,\n-             * sorted by the given Comparator.\n-             */\n-            public synchronized EntrySorter getSorter(Comparator<BibtexEntry> comp) {\n-                EntrySorter sorter = new EntrySorter(entries, comp);\n-                addDatabaseChangeListener(sorter);\n-                return sorter;\n-            }\n \n-            /**\n-             * Just temporary, for testing purposes....\n-             *\n-             * @return\n-             */\n-            public Map<String, BibtexEntry> getEntryMap() {\n-                return entries;\n-            }\n+    /**\n+     * Returns the number of entries.\n+     */\n+    public int getEntryCount() {\n+        return entries.size();\n+    }\n \n-            /**\n-             * Returns the entry with the given ID (-> entry_type + hashcode).\n-             */\n-            public BibtexEntry getEntryById(String id) {\n-                return entries.get(id);\n-            }\n+    /**\n+     * Returns a Set containing the keys to all entries.\n+     * Use getKeySet().iterator() to iterate over all entries.\n+     */\n+    public Set<String> getKeySet() {\n+        return entries.keySet();\n+    }\n \n-            public Collection<BibtexEntry> getEntries() {\n-                return entries.values();\n-            }\n+    /**\n+     * Returns an EntrySorter with the sorted entries from this base,\n+     * sorted by the given Comparator.\n+     */\n+    public synchronized EntrySorter getSorter(Comparator<BibtexEntry> comp) {\n+        EntrySorter sorter = new EntrySorter(entries, comp);\n+        addDatabaseChangeListener(sorter);\n+        return sorter;\n+    }\n \n-            public TreeSet<String> getAllVisibleFields() {\n-                TreeSet<String> allFields = new TreeSet<>();\n-                for (BibtexEntry e : getEntries()) {\n-                    allFields.addAll(e.getAllFields());\n-                }\n-                TreeSet<String> toberemoved = new TreeSet<>();\n-                for (String field : allFields) {\n-                    if (field.startsWith(\"__\")) {\n-                        toberemoved.add(field);\n-                    }\n-                }\n+    /**\n+     * Just temporary, for testing purposes....\n+     *\n+     * @return\n+     */\n+    public Map<String, BibtexEntry> getEntryMap() {\n+        return entries;\n+    }\n \n-                for (String field : toberemoved) {\n-                    allFields.remove(field);\n-                }\n-                return allFields;\n-            }\n+    /**\n+     * Returns the entry with the given ID (-> entry_type + hashcode).\n+     */\n+    public BibtexEntry getEntryById(String id) {\n+        return entries.get(id);\n+    }\n+\n+    public Collection<BibtexEntry> getEntries() {\n+        return entries.values();\n+    }\n+\n+    public TreeSet<String> getAllVisibleFields() {\n+        TreeSet<String> allFields = new TreeSet<>();\n+        for (BibtexEntry e : getEntries()) {\n+            allFields.addAll(e.getAllFields());\n+        }\n+        TreeSet<String> toberemoved = new TreeSet<>();\n+        for (String field : allFields) {\n+            if (field.startsWith(\"__\")) {\n+                toberemoved.add(field);\n+            }\n+        }\n+\n+        for (String field : toberemoved) {\n+            allFields.remove(field);\n+        }\n+        return allFields;\n+    }\n \n-            /**\n-             * Returns the entry with the given bibtex key.\n-             */\n-            public synchronized BibtexEntry getEntryByKey(String key) {\n-                BibtexEntry back = null;\n-\n-                int keyHash = key.hashCode(); // key hash for better performance\n-\n-                Set<String> keySet = entries.keySet();\n-                for (String entryID : keySet) {\n-                    BibtexEntry entry = getEntryById(entryID);\n-                    if ((entry != null) && (entry.getCiteKey() != null)) {\n-                        String citeKey = entry.getCiteKey();\n-                        if (citeKey != null) {\n-                            if (keyHash == citeKey.hashCode()) {\n-                                back = entry;\n-                            }\n-                        }\n+    /**\n+     * Returns the entry with the given bibtex key.\n+     */\n+    public synchronized BibtexEntry getEntryByKey(String key) {\n+        BibtexEntry back = null;\n+\n+        int keyHash = key.hashCode(); // key hash for better performance\n+\n+        Set<String> keySet = entries.keySet();\n+        for (String entryID : keySet) {\n+            BibtexEntry entry = getEntryById(entryID);\n+            if ((entry != null) && (entry.getCiteKey() != null)) {\n+                String citeKey = entry.getCiteKey();\n+                if (citeKey != null) {\n+                    if (keyHash == citeKey.hashCode()) {\n+                        back = entry;\n                     }\n                 }\n-                return back;\n             }\n+        }\n+        return back;\n+    }\n \n-            public synchronized BibtexEntry[] getEntriesByKey(String key) {\n+    public synchronized BibtexEntry[] getEntriesByKey(String key) {\n \n-                ArrayList<BibtexEntry> result = new ArrayList<>();\n+        ArrayList<BibtexEntry> result = new ArrayList<>();\n \n-                for (BibtexEntry entry : entries.values()) {\n-                    if (key.equals(entry.getCiteKey())) {\n-                        result.add(entry);\n-                    }\n-                }\n-\n-                return result.toArray(new BibtexEntry[result.size()]);\n+        for (BibtexEntry entry : entries.values()) {\n+            if (key.equals(entry.getCiteKey())) {\n+                result.add(entry);\n             }\n+        }\n \n-            /**\n-             * Inserts the entry, given that its ID is not already in use.\n-             * use Util.createId(...) to make up a unique ID for an entry.\n-             */\n-            public synchronized boolean insertEntry(BibtexEntry entry)\n-                    throws KeyCollisionException {\n-                String id = entry.getId();\n-                if (getEntryById(id) != null) {\n-                    throw new KeyCollisionException(\n-                            \"ID is already in use, please choose another\");\n-                }\n-\n-                entry.addPropertyChangeListener(listener);\n-\n-                entries.put(id, entry);\n-\n-                fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.ADDED_ENTRY, entry));\n-\n-                return checkForDuplicateKeyAndAdd(null, entry.getCiteKey());\n-            }\n+        return result.toArray(new BibtexEntry[result.size()]);\n+    }\n \n-            /**\n-             * Removes the entry with the given string.\n-             * <p>\n-             * Returns null if not found.\n-             */\n-            public synchronized BibtexEntry removeEntry(String id) {\n-                BibtexEntry oldValue = entries.remove(id);\n+    /**\n+     * Inserts the entry, given that its ID is not already in use.\n+     * use Util.createId(...) to make up a unique ID for an entry.\n+     */\n+    public synchronized boolean insertEntry(BibtexEntry entry)\n+            throws KeyCollisionException {\n+        String id = entry.getId();\n+        if (getEntryById(id) != null) {\n+            throw new KeyCollisionException(\n+                    \"ID is already in use, please choose another\");\n+        }\n \n-                if (oldValue == null) {\n-                    return null;\n-                }\n+        entry.addPropertyChangeListener(listener);\n \n-                removeKeyFromSet(oldValue.getCiteKey());\n-                oldValue.removePropertyChangeListener(listener);\n-                fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.REMOVED_ENTRY, oldValue));\n+        entries.put(id, entry);\n \n-                return oldValue;\n-            }\n+        fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.ADDED_ENTRY, entry));\n \n-            public synchronized boolean setCiteKeyForEntry(String id, String key) {\n-                if (!entries.containsKey(id)) {\n-                    return false; // Entry doesn't exist!\n-                }\n-                BibtexEntry entry = getEntryById(id);\n-                String oldKey = entry.getCiteKey();\n-                if (key != null) {\n-                    entry.setField(BibtexEntry.KEY_FIELD, key);\n-                } else {\n-                    entry.clearField(BibtexEntry.KEY_FIELD);\n-                }\n-                return checkForDuplicateKeyAndAdd(oldKey, entry.getCiteKey());\n-            }\n+        return checkForDuplicateKeyAndAdd(null, entry.getCiteKey());\n+    }\n \n-            /**\n-             * Sets the database's preamble.\n-             */\n-            public synchronized void setPreamble(String preamble) {\n-                this.preamble = preamble;\n-            }\n+    /**\n+     * Removes the entry with the given string.\n+     * <p>\n+     * Returns null if not found.\n+     */\n+    public synchronized BibtexEntry removeEntry(String id) {\n+        BibtexEntry oldValue = entries.remove(id);\n+\n+        if (oldValue == null) {\n+            return null;\n+        }\n+\n+        removeKeyFromSet(oldValue.getCiteKey());\n+        oldValue.removePropertyChangeListener(listener);\n+        fireDatabaseChanged(new DatabaseChangeEvent(this, DatabaseChangeEvent.ChangeType.REMOVED_ENTRY, oldValue));\n+\n+        return oldValue;\n+    }\n+\n+    public synchronized boolean setCiteKeyForEntry(String id, String key) {\n+        if (!entries.containsKey(id)) {\n+            return false; // Entry doesn't exist!\n+        }\n+        BibtexEntry entry = getEntryById(id);\n+        String oldKey = entry.getCiteKey();\n+        if (key != null) {\n+            entry.setField(BibtexEntry.KEY_FIELD, key);\n+        } else {\n+            entry.clearField(BibtexEntry.KEY_FIELD);\n+        }\n+        return checkForDuplicateKeyAndAdd(oldKey, entry.getCiteKey());\n+    }\n \n-            /**\n-             * Returns the database's preamble.\n-             */\n-            public synchronized String getPreamble() {\n-                return preamble;\n-            }\n+    /**\n+     * Sets the database's preamble.\n+     */\n+    public synchronized void setPreamble(String preamble) {\n+        this.preamble = preamble;\n+    }\n \n-            /**\n-             * Inserts a Bibtex String at the given index.\n-             */\n-            public synchronized void addString(BibtexString string)\n-                    throws KeyCollisionException {\n-                if (hasStringLabel(string.getName())) {\n-                    throw new KeyCollisionException(Localization.lang(\"A string with this label already exists\"));\n-                }\n+    /**\n+     * Returns the database's preamble.\n+     */\n+    public synchronized String getPreamble() {\n+        return preamble;\n+    }\n \n-                if (bibtexStrings.containsKey(string.getId())) {\n-                    throw new KeyCollisionException(\"Duplicate BibtexString id.\");\n-                }\n+    /**\n+     * Inserts a Bibtex String at the given index.\n+     */\n+    public synchronized void addString(BibtexString string)\n+            throws KeyCollisionException {\n+        if (hasStringLabel(string.getName())) {\n+            throw new KeyCollisionException(Localization.lang(\"A string with this label already exists\"));\n+        }\n \n-                bibtexStrings.put(string.getId(), string);\n-            }\n+        if (bibtexStrings.containsKey(string.getId())) {\n+            throw new KeyCollisionException(\"Duplicate BibtexString id.\");\n+        }\n \n-            /**\n-             * Removes the string at the given index.\n-             */\n-            public void removeString(String id) {\n-                bibtexStrings.remove(id);\n-            }\n+        bibtexStrings.put(string.getId(), string);\n+    }\n \n-            /**\n-             * Returns a Set of keys to all BibtexString objects in the database.\n-             * These are in no sorted order.\n-             */\n-            public Set<String> getStringKeySet() {\n-                return bibtexStrings.keySet();\n-            }\n+    /**\n+     * Removes the string at the given index.\n+     */\n+    public void removeString(String id) {\n+        bibtexStrings.remove(id);\n+    }\n \n-            /**\n-             * Returns a Collection of all BibtexString objects in the database.\n-             * These are in no particular order.\n-             */\n-            public Collection<BibtexString> getStringValues() {\n-                return bibtexStrings.values();\n-            }\n+    /**\n+     * Returns a Set of keys to all BibtexString objects in the database.\n+     * These are in no sorted order.\n+     */\n+    public Set<String> getStringKeySet() {\n+        return bibtexStrings.keySet();\n+    }\n \n-            /**\n-             * Returns the string at the given index.\n-             */\n-            public BibtexString getString(String o) {\n-                return bibtexStrings.get(o);\n-            }\n+    /**\n+     * Returns a Collection of all BibtexString objects in the database.\n+     * These are in no particular order.\n+     */\n+    public Collection<BibtexString> getStringValues() {\n+        return bibtexStrings.values();\n+    }\n \n-            /**\n-             * Returns the number of strings.\n-             */\n-            public int getStringCount() {\n-                return bibtexStrings.size();\n-            }\n+    /**\n+     * Returns the string at the given index.\n+     */\n+    public BibtexString getString(String o) {\n+        return bibtexStrings.get(o);\n+    }\n \n-            /**\n-             * Returns true if a string with the given label already exists.\n-             */\n-            public synchronized boolean hasStringLabel(String label) {\n-                for (BibtexString value : bibtexStrings.values()) {\n-                    if (value.getName().equals(label)) {\n-                        return true;\n-                    }\n-                }\n-                return false;\n-            }\n+    /**\n+     * Returns the number of strings.\n+     */\n+    public int getStringCount() {\n+        return bibtexStrings.size();\n+    }\n \n-            /**\n-             * Resolves any references to strings contained in this field content,\n-             * if possible.\n-             */\n-            public String resolveForStrings(String content) {\n-                if (content == null) {\n-                    throw new IllegalArgumentException(\"Content for resolveForStrings must not be null.\");\n-                }\n-                return resolveContent(content, new HashSet<>());\n+    /**\n+     * Returns true if a string with the given label already exists.\n+     */\n+    public synchronized boolean hasStringLabel(String label) {\n+        for (BibtexString value : bibtexStrings.values()) {\n+            if (value.getName().equals(label)) {\n+                return true;\n             }\n+        }\n+        return false;\n+    }\n \n-            /**\n-             * Take the given collection of BibtexEntry and resolve any string\n-             * references.\n-             *\n-             * @param entries A collection of BibtexEntries in which all strings of the form\n-             *                #xxx# will be resolved against the hash map of string\n-             *                references stored in the databasee.\n-             * @param inPlace If inPlace is true then the given BibtexEntries will be modified, if false then copies of the BibtexEntries are made before resolving the strings.\n-             * @return a list of bibtexentries, with all strings resolved. It is dependent on the value of inPlace whether copies are made or the given BibtexEntries are modified.\n-             */\n-            public List<BibtexEntry> resolveForStrings(Collection<BibtexEntry> entries, boolean inPlace) {\n-\n-                if (entries == null) {\n-                    throw new IllegalArgumentException(\"entries must not be null\");\n-                }\n+    /**\n+     * Resolves any references to strings contained in this field content,\n+     * if possible.\n+     */\n+    public String resolveForStrings(String content) {\n+        if (content == null) {\n+            throw new IllegalArgumentException(\"Content for resolveForStrings must not be null.\");\n+        }\n+        return resolveContent(content, new HashSet<>());\n+    }\n \n-                List<BibtexEntry> results = new ArrayList<>(entries.size());\n+    /**\n+     * Take the given collection of BibtexEntry and resolve any string\n+     * references.\n+     *\n+     * @param entries A collection of BibtexEntries in which all strings of the form\n+     *                #xxx# will be resolved against the hash map of string\n+     *                references stored in the databasee.\n+     * @param inPlace If inPlace is true then the given BibtexEntries will be modified, if false then copies of the BibtexEntries are made before resolving the strings.\n+     * @return a list of bibtexentries, with all strings resolved. It is dependent on the value of inPlace whether copies are made or the given BibtexEntries are modified.\n+     */\n+    public List<BibtexEntry> resolveForStrings(Collection<BibtexEntry> entries, boolean inPlace) {\n \n-                for (BibtexEntry entry : entries) {\n-                    results.add(this.resolveForStrings(entry, inPlace));\n-                }\n-                return results;\n-            }\n+        if (entries == null) {\n+            throw new IllegalArgumentException(\"entries must not be null\");\n+        }\n \n-            /**\n-             * Take the given BibtexEntry and resolve any string references.\n-             *\n-             * @param entry   A BibtexEntry in which all strings of the form #xxx# will be\n-             *                resolved against the hash map of string references stored in\n-             *                the databasee.\n-             * @param inPlace If inPlace is true then the given BibtexEntry will be\n-             *                modified, if false then a copy is made using close made before\n-             *                resolving the strings.\n-             * @return a BibtexEntry with all string references resolved. It is\n-             * dependent on the value of inPlace whether a copy is made or the\n-             * given BibtexEntries is modified.\n-             */\n-            public BibtexEntry resolveForStrings(BibtexEntry entry, boolean inPlace) {\n-\n-                if (!inPlace) {\n-                    entry = (BibtexEntry) entry.clone();\n-                }\n+        List<BibtexEntry> results = new ArrayList<>(entries.size());\n \n-                for (Object field : entry.getAllFields()) {\n-                    entry.setField(field.toString(), this.resolveForStrings(entry.getField(field.toString())));\n-                }\n+        for (BibtexEntry entry : entries) {\n+            results.add(this.resolveForStrings(entry, inPlace));\n+        }\n+        return results;\n+    }\n \n-                return entry;\n-            }\n+    /**\n+     * Take the given BibtexEntry and resolve any string references.\n+     *\n+     * @param entry   A BibtexEntry in which all strings of the form #xxx# will be\n+     *                resolved against the hash map of string references stored in\n+     *                the databasee.\n+     * @param inPlace If inPlace is true then the given BibtexEntry will be\n+     *                modified, if false then a copy is made using close made before\n+     *                resolving the strings.\n+     * @return a BibtexEntry with all string references resolved. It is\n+     * dependent on the value of inPlace whether a copy is made or the\n+     * given BibtexEntries is modified.\n+     */\n+    public BibtexEntry resolveForStrings(BibtexEntry entry, boolean inPlace) {\n \n-            /**\n-             * If the label represents a string contained in this database, returns\n-             * that string's content. Resolves references to other strings, taking\n-             * care not to follow a circular reference pattern.\n-             * If the string is undefined, returns null.\n-             */\n-            private String resolveString(String label, HashSet<String> usedIds) {\n-                for (BibtexString string : bibtexStrings.values()) {\n-\n-                    //Util.pr(label+\" : \"+string.getName());\n-                    if (string.getName().toLowerCase().equals(label.toLowerCase())) {\n-\n-                        // First check if this string label has been resolved\n-                        // earlier in this recursion. If so, we have a\n-                        // circular reference, and have to stop to avoid\n-                        // infinite recursion.\n-                        if (usedIds.contains(string.getId())) {\n-                            LOGGER.info(\"Stopped due to circular reference in strings: \" + label);\n-                            return label;\n-                        }\n-                        // If not, log this string's ID now.\n-                        usedIds.add(string.getId());\n-\n-                        // Ok, we found the string. Now we must make sure we\n-                        // resolve any references to other strings in this one.\n-                        String result = string.getContent();\n-                        result = resolveContent(result, usedIds);\n-\n-                        // Finished with recursing this branch, so we remove our\n-                        // ID again:\n-                        usedIds.remove(string.getId());\n-\n-                        return result;\n-                    }\n-                }\n+        if (!inPlace) {\n+            entry = (BibtexEntry) entry.clone();\n+        }\n \n-                // If we get to this point, the string has obviously not been defined locally.\n-                // Check if one of the standard BibTeX month strings has been used:\n-                MonthUtil.Month month = MonthUtil.getMonthByShortName(label);\n-                if (month.isValid()) {\n-                    return month.fullName;\n-                } else {\n-                    return null;\n-                }\n-            }\n+        for (Object field : entry.getAllFields()) {\n+            entry.setField(field.toString(), this.resolveForStrings(entry.getField(field.toString())));\n+        }\n \n-            private String resolveContent(String res, HashSet<String> usedIds) {\n-\n-                if (res.matches(\".*#[^#]+#.*\")) {\n-                    StringBuilder newRes = new StringBuilder();\n-                    int piv = 0;\n-                    int next;\n-                    while ((next = res.indexOf(\"#\", piv)) >= 0) {\n-\n-                        // We found the next string ref. Append the text\n-                        // up to it.\n-                        if (next > 0) {\n-                            newRes.append(res.substring(piv, next));\n-                        }\n-                        int stringEnd = res.indexOf(\"#\", next + 1);\n-                        if (stringEnd >= 0) {\n-                            // We found the boundaries of the string ref,\n-                            // now resolve that one.\n-                            String refLabel = res.substring(next + 1, stringEnd);\n-                            String resolved = resolveString(refLabel, usedIds);\n-\n-                            if (resolved == null) {\n-                                // Could not resolve string. Display the #\n-                                // characters rather than removing them:\n-                                newRes.append(res.substring(next, stringEnd + 1));\n-                            } else {\n-                                // The string was resolved, so we display its meaning only,\n-                                // stripping the # characters signifying the string label:\n-                                newRes.append(resolved);\n-                            }\n-                            piv = stringEnd + 1;\n-                        } else {\n-                            // We didn't find the boundaries of the string ref. This\n-                            // makes it impossible to interpret it as a string label.\n-                            // So we should just append the rest of the text and finish.\n-                            newRes.append(res.substring(next));\n-                            piv = res.length();\n-                            break;\n-                        }\n+        return entry;\n+    }\n \n+    /**\n+     * If the label represents a string contained in this database, returns\n+     * that string's content. Resolves references to other strings, taking\n+     * care not to follow a circular reference pattern.\n+     * If the string is undefined, returns null.\n+     */\n+    private String resolveString(String label, HashSet<String> usedIds) {\n+        for (BibtexString string : bibtexStrings.values()) {\n+\n+            //Util.pr(label+\" : \"+string.getName());\n+            if (string.getName().toLowerCase().equals(label.toLowerCase())) {\n+\n+                // First check if this string label has been resolved\n+                // earlier in this recursion. If so, we have a\n+                // circular reference, and have to stop to avoid\n+                // infinite recursion.\n+                if (usedIds.contains(string.getId())) {\n+                    LOGGER.info(\"Stopped due to circular reference in strings: \" + label);\n+                    return label;\n+                }\n+                // If not, log this string's ID now.\n+                usedIds.add(string.getId());\n+\n+                // Ok, we found the string. Now we must make sure we\n+                // resolve any references to other strings in this one.\n+                String result = string.getContent();\n+                result = resolveContent(result, usedIds);\n+\n+                // Finished with recursing this branch, so we remove our\n+                // ID again:\n+                usedIds.remove(string.getId());\n+\n+                return result;\n+            }\n+        }\n+\n+        // If we get to this point, the string has obviously not been defined locally.\n+        // Check if one of the standard BibTeX month strings has been used:\n+        MonthUtil.Month month = MonthUtil.getMonthByShortName(label);\n+        if (month.isValid()) {\n+            return month.fullName;\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    private String resolveContent(String res, HashSet<String> usedIds) {\n+\n+        if (res.matches(\".*#[^#]+#.*\")) {\n+            StringBuilder newRes = new StringBuilder();\n+            int piv = 0;\n+            int next;\n+            while ((next = res.indexOf(\"#\", piv)) >= 0) {\n+\n+                // We found the next string ref. Append the text\n+                // up to it.\n+                if (next > 0) {\n+                    newRes.append(res.substring(piv, next));\n+                }\n+                int stringEnd = res.indexOf(\"#\", next + 1);\n+                if (stringEnd >= 0) {\n+                    // We found the boundaries of the string ref,\n+                    // now resolve that one.\n+                    String refLabel = res.substring(next + 1, stringEnd);\n+                    String resolved = resolveString(refLabel, usedIds);\n+\n+                    if (resolved == null) {\n+                        // Could not resolve string. Display the #\n+                        // characters rather than removing them:\n+                        newRes.append(res.substring(next, stringEnd + 1));\n+                    } else {\n+                        // The string was resolved, so we display its meaning only,\n+                        // stripping the # characters signifying the string label:\n+                        newRes.append(resolved);\n                     }\n-                    if (piv < (res.length() - 1)) {\n-                        newRes.append(res.substring(piv));\n-                    }\n-                    res = newRes.toString();\n-                }\n-                return res;\n-            }\n-\n-            //##########################################\n-            //  usage:\n-            //  isDuplicate=checkForDuplicateKeyAndAdd( null, b.getKey() , issueDuplicateWarning);\n-            //############################################\n-            // if the newkey already exists and is not the same as oldkey it will give a warning\n-            // else it will add the newkey to the to set and remove the oldkey\n-            private boolean checkForDuplicateKeyAndAdd(String oldKey, String newKey) {\n-                // Globals.logger(\" checkForDuplicateKeyAndAdd [oldKey = \" + oldKey + \"] [newKey = \" + newKey + \"]\");\n-\n-                boolean duplicate;\n-                if (oldKey == null) {// this is a new entry so don't bother removing oldKey\n-                    duplicate = addKeyToSet(newKey);\n+                    piv = stringEnd + 1;\n                 } else {\n-                    if (oldKey.equals(newKey)) {// were OK because the user did not change keys\n-                        duplicate = false;\n-                    } else {// user changed the key\n-\n-                        // removed the oldkey\n-                        // But what if more than two have the same key?\n-                        // this means that user can add another key and would not get a warning!\n-                        // consider this: i add a key xxx, then i add another key xxx . I get a warning. I delete the key xxx. JBM\n-                        // removes this key from the allKey. then I add another key xxx. I don't get a warning!\n-                        // i need a way to count the number of keys of each type\n-                        // hashmap=>int (increment each time)\n-\n-                        removeKeyFromSet(oldKey);\n-                        duplicate = addKeyToSet(newKey);\n-                    }\n-                }\n-                if (duplicate) {\n-                    LOGGER.warn(Localization.lang(\"Warning there is a duplicate key\") + ':' + newKey);\n-                }\n-                return duplicate;\n-            }\n+                    // We didn't find the boundaries of the string ref. This\n+                    // makes it impossible to interpret it as a string label.\n+                    // So we should just append the rest of the text and finish.\n+                    newRes.append(res.substring(next));\n+                    piv = res.length();\n+                    break;\n+                }\n+\n+            }\n+            if (piv < (res.length() - 1)) {\n+                newRes.append(res.substring(piv));\n+            }\n+            res = newRes.toString();\n+        }\n+        return res;\n+    }\n+\n+    //##########################################\n+    //  usage:\n+    //  isDuplicate=checkForDuplicateKeyAndAdd( null, b.getKey() , issueDuplicateWarning);\n+    //############################################\n+    // if the newkey already exists and is not the same as oldkey it will give a warning\n+    // else it will add the newkey to the to set and remove the oldkey\n+    private boolean checkForDuplicateKeyAndAdd(String oldKey, String newKey) {\n+        // Globals.logger(\" checkForDuplicateKeyAndAdd [oldKey = \" + oldKey + \"] [newKey = \" + newKey + \"]\");\n+\n+        boolean duplicate;\n+        if (oldKey == null) {// this is a new entry so don't bother removing oldKey\n+            duplicate = addKeyToSet(newKey);\n+        } else {\n+            if (oldKey.equals(newKey)) {// were OK because the user did not change keys\n+                duplicate = false;\n+            } else {// user changed the key\n+\n+                // removed the oldkey\n+                // But what if more than two have the same key?\n+                // this means that user can add another key and would not get a warning!\n+                // consider this: i add a key xxx, then i add another key xxx . I get a warning. I delete the key xxx. JBM\n+                // removes this key from the allKey. then I add another key xxx. I don't get a warning!\n+                // i need a way to count the number of keys of each type\n+                // hashmap=>int (increment each time)\n+\n+                removeKeyFromSet(oldKey);\n+                duplicate = addKeyToSet(newKey);\n+            }\n+        }\n+        if (duplicate) {\n+            LOGGER.warn(Localization.lang(\"Warning there is a duplicate key\") + ':' + newKey);\n+        }\n+        return duplicate;\n+    }\n \n-            /**\n-             * Returns the number of occurences of the given key in this database.\n-             */\n-            public int getNumberOfKeyOccurences(String key) {\n-                Object o = allKeys.get(key);\n-                if (o == null) {\n-                    return 0;\n-                } else {\n-                    return (Integer) o;\n-                }\n+    /**\n+     * Returns the number of occurences of the given key in this database.\n+     */\n+    public int getNumberOfKeyOccurences(String key) {\n+        Object o = allKeys.get(key);\n+        if (o == null) {\n+            return 0;\n+        } else {\n+            return (Integer) o;\n+        }\n+\n+    }\n+\n+    //========================================================\n+    // keep track of all the keys to warn if there are duplicates\n+    //========================================================\n+    private boolean addKeyToSet(String key) {\n+        boolean exists = false;\n+        if ((key == null) || key.isEmpty()) {\n+            return false;//don't put empty key\n+        }\n+        if (allKeys.containsKey(key)) {\n+            // warning\n+            exists = true;\n+            allKeys.put(key, allKeys.get(key) + 1);// incrementInteger( allKeys.get(key)));\n+        } else {\n+            allKeys.put(key, 1);\n+        }\n+        return exists;\n+    }\n+\n+    //========================================================\n+    // reduce the number of keys by 1. if this number goes to zero then remove from the set\n+    // note: there is a good reason why we should not use a hashset but use hashmap instead\n+    //========================================================\n+    private void removeKeyFromSet(String key) {\n+        if ((key == null) || key.isEmpty()) {\n+            return;\n+        }\n+        if (allKeys.containsKey(key)) {\n+            Integer tI = allKeys.get(key); // if(allKeys.get(key) instanceof Integer)\n+            if (tI == 1) {\n+                allKeys.remove(key);\n+            } else {\n+                allKeys.put(key, tI - 1);//decrementInteger( tI ));\n+            }\n+        }\n+    }\n+\n+    private void fireDatabaseChanged(DatabaseChangeEvent e) {\n+        for (DatabaseChangeListener listener : changeListeners) {\n+            listener.databaseChanged(e);\n+        }\n+    }\n+\n+    public void addDatabaseChangeListener(DatabaseChangeListener l) {\n+        changeListeners.add(l);\n+    }\n+\n+    public void removeDatabaseChangeListener(DatabaseChangeListener l) {\n+        changeListeners.remove(l);\n+    }\n \n-            }\n+    /**\n+     * Returns the text stored in the given field of the given bibtex entry\n+     * which belongs to the given database.\n+     * <p>\n+     * If a database is given, this function will try to resolve any string\n+     * references in the field-value.\n+     * Also, if a database is given, this function will try to find values for\n+     * unset fields in the entry linked by the \"crossref\" field, if any.\n+     *\n+     * @param field    The field to return the value of.\n+     * @param bibtex   maybenull\n+     *                 The bibtex entry which contains the field.\n+     * @param database maybenull\n+     *                 The database of the bibtex entry.\n+     * @return The resolved field value or null if not found.\n+     */\n+    public static String getResolvedField(String field, BibtexEntry bibtex,\n+            BibtexDatabase database) {\n \n-            //========================================================\n-            // keep track of all the keys to warn if there are duplicates\n-            //========================================================\n-            private boolean addKeyToSet(String key) {\n-                boolean exists = false;\n-                if ((key == null) || key.isEmpty()) {\n-                    return false;//don't put empty key\n-                }\n-                if (allKeys.containsKey(key)) {\n-                    // warning\n-                    exists = true;\n-                    allKeys.put(key, allKeys.get(key) + 1);// incrementInteger( allKeys.get(key)));\n-                } else {\n-                    allKeys.put(key, 1);\n-                }\n-                return exists;\n-            }\n+        if (field.equals(\"bibtextype\")) {\n+            return bibtex.getType().getName();\n+        }\n \n-            //========================================================\n-            // reduce the number of keys by 1. if this number goes to zero then remove from the set\n-            // note: there is a good reason why we should not use a hashset but use hashmap instead\n-            //========================================================\n-            private void removeKeyFromSet(String key) {\n-                if ((key == null) || key.isEmpty()) {\n-                    return;\n-                }\n-                if (allKeys.containsKey(key)) {\n-                    Integer tI = allKeys.get(key); // if(allKeys.get(key) instanceof Integer)\n-                    if (tI == 1) {\n-                        allKeys.remove(key);\n-                    } else {\n-                        allKeys.put(key, tI - 1);//decrementInteger( tI ));\n-                    }\n-                }\n-            }\n+        // TODO: Changed this to also consider alias fields, which is the expected\n+        // behavior for the preview layout and for the check whatever all fields are present.\n+        // But there might be unwanted side-effects?!\n+        Object o = bibtex.getFieldOrAlias(field);\n \n-            private void fireDatabaseChanged(DatabaseChangeEvent e) {\n-                for (DatabaseChangeListener listener : changeListeners) {\n-                    listener.databaseChanged(e);\n+        // If this field is not set, and the entry has a crossref, try to look up the\n+        // field in the referred entry: Do not do this for the bibtex key.\n+        if ((o == null) && (database != null) && database.followCrossrefs && !field.equals(BibtexEntry.KEY_FIELD)) {\n+            Object crossRef = bibtex.getField(\"crossref\");\n+            if (crossRef != null) {\n+                BibtexEntry referred = database.getEntryByKey((String) crossRef);\n+                if (referred != null) {\n+                    // Ok, we found the referred entry. Get the field value from that\n+                    // entry. If it is unset there, too, stop looking:\n+                    o = referred.getField(field);\n                 }\n             }\n+        }\n \n-            public void addDatabaseChangeListener(DatabaseChangeListener l) {\n-                changeListeners.add(l);\n-            }\n-\n-            public void removeDatabaseChangeListener(DatabaseChangeListener l) {\n-                changeListeners.remove(l);\n-            }\n+        return BibtexDatabase.getText((String) o, database);\n+    }\n \n-            /**\n-             * Returns the text stored in the given field of the given bibtex entry\n-             * which belongs to the given database.\n-             * <p>\n-             * If a database is given, this function will try to resolve any string\n-             * references in the field-value.\n-             * Also, if a database is given, this function will try to find values for\n-             * unset fields in the entry linked by the \"crossref\" field, if any.\n-             *\n-             * @param field    The field to return the value of.\n-             * @param bibtex   maybenull\n-             *                 The bibtex entry which contains the field.\n-             * @param database maybenull\n-             *                 The database of the bibtex entry.\n-             * @return The resolved field value or null if not found.\n-             */\n-            public static String getResolvedField(String field, BibtexEntry bibtex,\n-                    BibtexDatabase database) {\n-\n-                if (field.equals(\"bibtextype\")) {\n-                    return bibtex.getType().getName();\n-                }\n+    /**\n+     * Returns a text with references resolved according to an optionally given\n+     * database.\n+     *\n+     * @param toResolve maybenull The text to resolve.\n+     * @param database  maybenull The database to use for resolving the text.\n+     * @return The resolved text or the original text if either the text or the database are null\n+     */\n+    public static String getText(String toResolve, BibtexDatabase database) {\n+        if ((toResolve != null) && (database != null)) {\n+            return database.resolveForStrings(toResolve);\n+        }\n \n-                // TODO: Changed this to also consider alias fields, which is the expected\n-                // behavior for the preview layout and for the check whatever all fields are present.\n-                // But there might be unwanted side-effects?!\n-                Object o = bibtex.getFieldOrAlias(field);\n-\n-                // If this field is not set, and the entry has a crossref, try to look up the\n-                // field in the referred entry: Do not do this for the bibtex key.\n-                if ((o == null) && (database != null) && database.followCrossrefs && !field.equals(BibtexEntry.KEY_FIELD)) {\n-                    Object crossRef = bibtex.getField(\"crossref\");\n-                    if (crossRef != null) {\n-                        BibtexEntry referred = database.getEntryByKey((String) crossRef);\n-                        if (referred != null) {\n-                            // Ok, we found the referred entry. Get the field value from that\n-                            // entry. If it is unset there, too, stop looking:\n-                            o = referred.getField(field);\n-                        }\n-                    }\n-                }\n+        return toResolve;\n+    }\n \n-                return BibtexDatabase.getText((String) o, database);\n-            }\n+    public void setFollowCrossrefs(boolean followCrossrefs) {\n+        this.followCrossrefs = followCrossrefs;\n+    }\n \n-            /**\n-             * Returns a text with references resolved according to an optionally given\n-             * database.\n-             *\n-             * @param toResolve maybenull The text to resolve.\n-             * @param database  maybenull The database to use for resolving the text.\n-             * @return The resolved text or the original text if either the text or the database are null\n-             */\n-            public static String getText(String toResolve, BibtexDatabase database) {\n-                if ((toResolve != null) && (database != null)) {\n-                    return database.resolveForStrings(toResolve);\n-                }\n \n-                return toResolve;\n-            }\n+    /*\n+     * Entries are stored in a HashMap with the ID as key. What happens if\n+     * someone changes a BibtexEntry's ID after it has been added to this\n+     * BibtexDatabase? The key of that entry would be the old ID, not the new\n+     * one. Use a PropertyChangeListener to identify an ID change and update the\n+     * Map.\n+     */\n+    private final VetoableChangeListener listener = propertyChangeEvent -> {\n+        if (propertyChangeEvent.getPropertyName() == null) {\n+            fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this,\n+                    DatabaseChangeEvent.ChangeType.CHANGING_ENTRY, (BibtexEntry) propertyChangeEvent.getSource()));\n+        } else if (\"id\".equals(propertyChangeEvent.getPropertyName())) {\n+            // locate the entry under its old key\n+            BibtexEntry oldEntry = entries.remove(propertyChangeEvent.getOldValue());\n+\n+            if (oldEntry != propertyChangeEvent.getSource()) {\n+                // Something is very wrong!\n+                // The entry under the old key isn't\n+                // the one that sent this event.\n+                // Restore the old state.\n+                entries.put((String) propertyChangeEvent.getOldValue(), oldEntry);\n+                throw new PropertyVetoException(\"Wrong old ID\", propertyChangeEvent);\n+            }\n+\n+            if (entries.get(propertyChangeEvent.getNewValue()) != null) {\n+                entries.put((String) propertyChangeEvent.getOldValue(), oldEntry);\n+                throw new PropertyVetoException(\"New ID already in use, please choose another\", propertyChangeEvent);\n+            }\n+\n+            // and re-file this entry\n+            entries.put((String) propertyChangeEvent.getNewValue(), (BibtexEntry) propertyChangeEvent.getSource());\n+        } else {\n+            fireDatabaseChanged(new DatabaseChangeEvent(BibtexDatabase.this,\n+                    DatabaseChangeEvent.ChangeType.CHANGED_ENTRY, (BibtexEntry) propertyChangeEvent.getSource()));\n+        }\n+    };\n \n-            public void setFollowCrossrefs(boolean followCrossrefs) {\n-                this.followCrossrefs = followCrossrefs;\n-            }\n }, ", 531, 532, "\"modified, \"", 1063], ["Oscar Gustafsson", "Replaced the deprecated DefaultFormBuilder with FormBuilder in DatabasePropertiesDialog", "10/23/15, 10:27:28 PM", "Oscar Gustafsson", "1dfd6fe6fe31b778cf7deee01d79599480724008", ["src/main/java/net/sf/jabref/gui/DatabasePropertiesDialog.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -34,8 +34,6 @@\n import javax.swing.JComponent;\n import javax.swing.JDialog;\n import javax.swing.JFrame;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n import javax.swing.JRadioButton;\n import javax.swing.JTextField;\n \n@@ -46,7 +44,7 @@\n import net.sf.jabref.logic.config.SaveOrderConfig;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Encodings;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -123,68 +121,55 @@ private void init(JFrame parent) {\n \n         setupSortOrderConfiguration();\n \n-        DefaultFormBuilder builder = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, left:pref, 4dlu, fill:pref\", \"\"));\n+        FormBuilder builder = FormBuilder.create().layout(new FormLayout(\"left:pref, 4dlu, left:pref, 4dlu, fill:pref\",\n+                \"pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\"));\n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n \n-        builder.append(Localization.lang(\"Database encoding\"));\n-        builder.append(encoding);\n-        builder.nextLine();\n-\n-        builder.appendSeparator(Localization.lang(\"Override default file directories\"));\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"General file directory\"));\n-        builder.append(fileDir);\n-        builder.append(browseFile);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"User-specific file directory\"));\n-        builder.append(fileDirIndv);\n-        builder.append(browseFileIndv);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"PDF directory\"));\n-        builder.append(pdfDir);\n-        builder.append(browsePdf);\n-        builder.nextLine();\n-        builder.append(Localization.lang(\"PS directory\"));\n-        builder.append(psDir);\n-        builder.append(browsePs);\n-        builder.nextLine();\n-\n-        builder.appendSeparator(Localization.lang(\"Save sort order\"));\n-        builder.append(saveAsConfiguredGlobally, 1);\n-        builder.nextLine();\n-        builder.append(saveInOriginalOrder, 1);\n-        builder.nextLine();\n-        builder.append(saveInSpecifiedOrder, 1);\n-        builder.nextLine();\n-\n+        builder.add(Localization.lang(\"Database encoding\")).xy(1, 1);\n+        builder.add(encoding).xy(3, 1);\n+\n+        builder.addSeparator(Localization.lang(\"Override default file directories\")).xyw(1, 3, 5);\n+        builder.add(Localization.lang(\"General file directory\")).xy(1, 5);\n+        builder.add(fileDir).xy(3, 5);\n+        builder.add(browseFile).xy(5, 5);\n+        builder.add(Localization.lang(\"User-specific file directory\")).xy(1, 7);\n+        builder.add(fileDirIndv).xy(3, 7);\n+        builder.add(browseFileIndv).xy(5, 7);\n+        builder.add(Localization.lang(\"PDF directory\")).xy(1, 9);\n+        builder.add(pdfDir).xy(3, 9);\n+        builder.add(browsePdf).xy(5, 9);\n+        builder.add(Localization.lang(\"PS directory\")).xy(1, 11);\n+        builder.add(psDir).xy(3, 11);\n+        builder.add(browsePs).xy(5, 11);\n+        \n+        builder.addSeparator(Localization.lang(\"Save sort order\")).xyw(1, 13, 5);\n+        builder.add(saveAsConfiguredGlobally).xyw(1, 15, 5);\n+        builder.add(saveInOriginalOrder).xyw(1, 17, 5);\n+        builder.add(saveInSpecifiedOrder).xyw(1, 19, 5);\n+        \n         // Create a new panel with its own FormLayout for these items:\n-        FormLayout layout2 = new FormLayout(\"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\", \"\");\n-        DefaultFormBuilder builder2 = new DefaultFormBuilder(layout2);\n-        JLabel lab = new JLabel(Localization.lang(\"Primary sort criterion\"));\n-        builder2.append(lab);\n-        builder2.append(savePriSort);\n-        builder2.append(savePriField);\n-        builder2.append(savePriDesc);\n-        builder2.nextLine();\n-        lab = new JLabel(Localization.lang(\"Secondary sort criterion\"));\n-        builder2.append(lab);\n-        builder2.append(saveSecSort);\n-        builder2.append(saveSecField);\n-        builder2.append(saveSecDesc);\n-        builder2.nextLine();\n-        lab = new JLabel(Localization.lang(\"Tertiary sort criterion\"));\n-        builder2.append(lab);\n-        builder2.append(saveTerSort);\n-        builder2.append(saveTerField);\n-        builder2.append(saveTerDesc);\n-\n-        JPanel saveSpecPanel = builder2.getPanel();\n-        builder.append(saveSpecPanel);\n-        builder.nextLine();\n-\n-        builder.appendSeparator(Localization.lang(\"Database protection\"));\n-        builder.nextLine();\n-        builder.append(protect, 3);\n+        FormLayout layout2 = new FormLayout(\"right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref\",\n+                \"pref, 2dlu, pref, 2dlu, pref\");\n+        FormBuilder builder2 = FormBuilder.create().layout(layout2);\n+        builder2.add(Localization.lang(\"Primary sort criterion\")).xy(1, 1);\n+        builder2.add(savePriSort).xy(3, 1);\n+        builder2.add(savePriField).xy(5, 1);\n+        builder2.add(savePriDesc).xy(7, 1);\n+\n+        builder2.add(Localization.lang(\"Secondary sort criterion\")).xy(1, 3);\n+        builder2.add(saveSecSort).xy(3, 3);\n+        builder2.add(saveSecField).xy(5, 3);\n+        builder2.add(saveSecDesc).xy(7, 3);\n+\n+        builder2.add(Localization.lang(\"Tertiary sort criterion\")).xy(1, 5);\n+        builder2.add(saveTerSort).xy(3, 5);\n+        builder2.add(saveTerField).xy(5, 5);\n+        builder2.add(saveTerDesc).xy(7, 5);\n+\n+        builder.add(builder2.getPanel()).xyw(1, 21, 5);\n+\n+        builder.addSeparator(Localization.lang(\"Database protection\")).xyw(1, 23, 5);\n+        builder.add(protect).xyw(1, 25, 5);\n         ButtonBarBuilder bb = new ButtonBarBuilder();\n         bb.addGlue();\n         bb.addButton(ok);, ", 48, 63, "\"modified, \"", 111], ["Oliver Kopp", "Fix typo", "10/26/15, 12:05:38 AM", "Oliver Kopp", "5e608fce3834e327e06a0b6302d6477603b4bd4b", ["build.gradle"], "@@ -132,7 +132,7 @@ processResources {\n \n             // mark that entry has been written\n             id = \"\"\n-            // note is not present at all antries. Ensure that no note is written instead of the last note\n+            // note is not present at all entries. Ensure that no note is written instead of the last note.\n             note = \"\"\n         }\n     }, ", 1, 1, "\"modified, \"", 2], ["Oliver Kopp", "Add script to generate DEVELOPERS file based on information availble from GitHub", "10/25/15, 04:55:52 PM", "Oliver Kopp", "680e76877ec0155ecbf22d8c7a8dbcd9d6cdf53e", ["DEVELOPERS", "scripts/generate-developers.sh"], "@@ -0,0 +1,7 @@\n+# This file lists all individuals being part of JabRef's developers team\n+# For how it is generated, see `scripts/generate-developers.sh`.\n+J\u00f6rg Lenhard\n+Matthias Geiger\n+Oliver Kopp\n+Simon Harrer\n+Stefan Kolb, @@ -0,0 +1,34 @@\n+#!/bin/bash\n+set -e\n+\n+#Check environment variables\n+if [ -z $GITHUB_OAUTH_TOKEN ]; then\n+    echo \"GITHUB_OAUTH_TOKEN not set\";\n+    exit 1;\n+fi;\n+\n+\n+cd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")/..\"\n+\n+#github requires authorization on JabRef's developers team (id 727640) even if the team is public\n+#github returns a formatted json. Therefore, we use plain sed to get the field content instead of using jq\n+userURLs=`curl --silent -H \"Authorization: token $GITHUB_OAUTH_TOKEN\" https://api.github.com/teams/727640/members | grep \\\"url\\\" | sed 's|.*: \"\\(.*\\)\".*|\\1|'`\n+#now we have a list of URLs each pointing to a team member\n+\n+{\n+    #generate header\n+    cat <<-'EOF'\n+\t# This file lists all individuals being part of JabRef's developers team\n+\t# For how it is generated, see `scripts/generate-developers.sh`.\n+\tEOF\n+\n+    #list all developer names alphabetically (sorted by first name)\n+    {\n+        #iterate through all URLss and fetch name info\n+        for userURL in $userURLs; do\n+            name=`curl --silent $userURL | grep \"name\" | sed 's|.*: \"\\(.*\\)\".*|\\1|'`\n+            echo $name\n+        done\n+    } | LC_ALL=C.UTF-8 sort\n+\n+} > DEVELOPERS\n\\ No newline at end of file, ", 41, 0, "\"added, added, \"", 41], ["Oscar Gustafsson", "Even more warnings removed", "10/25/15, 11:45:53 PM", "Oscar Gustafsson", "ef0cd5d3d616a40cf0788e00a30e61a904c7f8ad", ["src/main/java/net/sf/jabref/exporter/VerifyingWriter.java", "src/main/java/net/sf/jabref/exporter/layout/format/WrapFileLinks.java", "src/main/java/net/sf/jabref/exporter/layout/format/XMLChars.java", "src/main/java/net/sf/jabref/external/RegExpFileSearch.java", "src/main/java/net/sf/jabref/external/WriteXMPEntryEditorAction.java", "src/main/java/net/sf/jabref/gui/OpenFileFilter.java", "src/main/java/net/sf/jabref/gui/PreambleEditor.java", "src/main/java/net/sf/jabref/gui/VerticalLabelUI.java", "src/main/java/net/sf/jabref/gui/actions/SortTabsAction.java", "src/main/java/net/sf/jabref/gui/labelPattern/SearchFixDuplicateLabels.java", "src/main/java/net/sf/jabref/gui/preftabs/PreferencesDialog.java", "src/main/java/net/sf/jabref/importer/ZipFileChooser.java", "src/main/java/net/sf/jabref/importer/fetcher/UnitFormatter.java", "src/main/java/net/sf/jabref/importer/fileformat/OvidImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/RisImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/ScifinderImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/SilverPlatterImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/SixpackImporter.java", "src/main/java/net/sf/jabref/logic/fetcher/SpringerLink.java", "src/main/java/net/sf/jabref/logic/xmp/XMPSchemaBibtex.java", "src/main/java/net/sf/jabref/logic/xmp/XMPUtil.java", "src/main/java/net/sf/jabref/specialfields/Printed.java", "src/main/java/net/sf/jabref/specialfields/Priority.java", "src/main/java/net/sf/jabref/specialfields/Quality.java", "src/main/java/net/sf/jabref/specialfields/Rank.java", "src/main/java/net/sf/jabref/specialfields/ReadStatus.java", "src/main/java/net/sf/jabref/sql/SQLUtil.java", "src/main/java/net/sf/jabref/util/Util.java", "src/test/java/net/sf/jabref/SearchTextListenerTest.java", "src/test/java/net/sf/jabref/external/RegExpFileSearchTests.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.exporter;\n \n import java.io.IOException;\n@@ -30,9 +30,9 @@\n  */\n public class VerifyingWriter extends OutputStreamWriter {\n \n-    private CharsetEncoder encoder;\n+    private final CharsetEncoder encoder;\n     private boolean couldEncodeAll = true;\n-    private final TreeSet<Character> problemCharacters = new TreeSet<Character>();\n+    private final TreeSet<Character> problemCharacters = new TreeSet<>();\n \n \n     public VerifyingWriter(OutputStream out, String encoding), @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.exporter.layout.format;\n \n import net.sf.jabref.logic.util.io.FileUtil;\n@@ -91,18 +91,18 @@\n \n     private String fileType;\n     private List<FormatEntry> format;\n-    private final Map<String, String> replacements = new HashMap<String, String>();\n+    private final Map<String, String> replacements = new HashMap<>();\n \n \n     @Override\n     public void setArgument(String arg) {\n         String[] parts = AbstractParamLayoutFormatter.parseArgument(arg);\n         format = parseFormatString(parts[0]);\n-        if (parts.length > 1 && !parts[1].trim().isEmpty()) {\n+        if ((parts.length > 1) && !parts[1].trim().isEmpty()) {\n             fileType = parts[1];\n         }\n         if (parts.length > 2) {\n-            for (int i = 2; i < parts.length - 1; i += 2) {\n+            for (int i = 2; i < (parts.length - 1); i += 2) {\n                 replacements.put(parts[i], parts[i + 1]);\n             }\n         }\n@@ -123,7 +123,7 @@ public String format(String field) {\n         for (int i = 0; i < tableModel.getRowCount(); i++) {\n             FileListEntry flEntry = tableModel.getEntry(i);\n             // Use this entry if we don't discriminate on types, or if the type fits:\n-            if (fileType == null || flEntry.getType().getName().toLowerCase().equals(fileType)) {\n+            if ((fileType == null) || flEntry.getType().getName().toLowerCase().equals(fileType)) {\n \n                 for (FormatEntry entry : format) {\n                     switch (entry.getType()) {\n@@ -186,7 +186,7 @@ public String format(String field) {\n                             break;\n                         }\n                         int index = flEntry.getLink().lastIndexOf('.');\n-                        if (index >= 0 && index < flEntry.getLink().length() - 1) {\n+                        if ((index >= 0) && (index < (flEntry.getLink().length() - 1))) {\n                             sb.append(replaceStrings(flEntry.getLink().substring(index + 1)));\n                         }\n                         break;\n@@ -226,7 +226,7 @@ private String replaceStrings(String text) {\n     private static final int RELATIVE_FILE_PATH = 6;\n \n     // Define which escape sequences give what results:\n-    private static final Map<Character, Integer> ESCAPE_SEQ = new HashMap<Character, Integer>();\n+    private static final Map<Character, Integer> ESCAPE_SEQ = new HashMap<>();\n \n     static {\n         WrapFileLinks.ESCAPE_SEQ.put('i', WrapFileLinks.ITERATION_COUNT);\n@@ -247,8 +247,8 @@ private String replaceStrings(String text) {\n      * @param format The marked-up string.\n      * @return the resulting format entries.\n      */\n-    private List<FormatEntry> parseFormatString(String format) {\n-        List<FormatEntry> l = new ArrayList<FormatEntry>();\n+    private static List<FormatEntry> parseFormatString(String format) {\n+        List<FormatEntry> l = new ArrayList<>();\n         StringBuilder sb = new StringBuilder();\n         boolean escaped = false;\n         for (int i = 0; i < format.length(); i++) {, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n ///////////////////////////////////////////////////////////////////////////////\n //  Filename: $RCSfile$\n //  Purpose:  Atom representation.\n@@ -48,8 +48,8 @@\n public class XMLChars implements LayoutFormatter {\n \n     private static final XmlCharsMap XML_CHARS = new XmlCharsMap();\n-    \n-    private static final Map<String, String> ASCII_TO_XML_CHARS = new HashMap<String, String>();\n+\n+    private static final Map<String, String> ASCII_TO_XML_CHARS = new HashMap<>();\n \n     static {\n         ASCII_TO_XML_CHARS.put(\"<\", \"&lt;\");\n@@ -72,7 +72,7 @@ public String format(String fieldText) {\n         return restFormat(fieldText);\n     }\n \n-    private String firstFormat(String s) {\n+    private static String firstFormat(String s) {\n         return s.replaceAll(\"&|\\\\\\\\&\", \"&#x0026;\").replaceAll(\"--\", \"&#x2013;\");\n     }\n \n@@ -107,14 +107,14 @@ private String restFormat(String toFormat) {\n \n             // Checking the case when the character is already escaped\n             // Just push \"&#\" to the buffer and keep going from the next char\n-            if (code == 38 && fieldText.charAt(i + 1) == 35) {\n+            if ((code == 38) && (fieldText.charAt(i + 1) == 35)) {\n                 i += 2;\n                 buffer.append(\"&#\");\n                 code = fieldText.charAt(i);\n             }\n \n-            // TODO: Check whether > 125 is correct here or whether it should rather be >=  \n-            if (code > 125 || forceReplace[code]) {\n+            // TODO: Check whether > 125 is correct here or whether it should rather be >=\n+            if ((code > 125) || forceReplace[code]) {\n                 buffer.append(\"&#\").append(code).append(';');\n             } else {\n                 buffer.append((char) code);, @@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.external;\n \n import net.sf.jabref.logic.util.strings.StringUtil;\n@@ -50,7 +50,7 @@\n     public static Map<BibtexEntry, java.util.List<File>> findFilesForSet(Collection<BibtexEntry> entries,\n             Collection<String> extensions, List<File> directories, String regExp) {\n \n-        Map<BibtexEntry, java.util.List<File>> res = new HashMap<BibtexEntry, List<File>>();\n+        Map<BibtexEntry, java.util.List<File>> res = new HashMap<>();\n         for (BibtexEntry entry : entries) {\n             res.put(entry, RegExpFileSearch.findFiles(entry, extensions, directories, regExp));\n         }\n@@ -67,7 +67,7 @@\n      * @return A list of files paths matching the given criteria.\n      */\n     private static List<File> findFiles(BibtexEntry entry, Collection<String> extensions,\n-                                        Collection<File> directories, String regularExpression) {\n+            Collection<File> directories, String regularExpression) {\n \n         StringBuilder sb = new StringBuilder();\n         for (Iterator<String> i = extensions.iterator(); i.hasNext();) {\n@@ -122,8 +122,8 @@\n      *         null if none was found.\n      */\n     private static List<File> findFile(BibtexEntry entry, BibtexDatabase database, Collection<File> dirs,\n-                                       String file, String extensionRegExp, boolean relative) {\n-        ArrayList<File> res = new ArrayList<File>();\n+            String file, String extensionRegExp, boolean relative) {\n+        ArrayList<File> res = new ArrayList<>();\n         for (File directory : dirs) {\n             List<File> tmp = RegExpFileSearch.findFile(entry, database, directory.getPath(), file, extensionRegExp, relative);\n             if (tmp != null) {\n@@ -139,7 +139,7 @@\n      *\n      */\n     private static List<File> findFile(BibtexEntry entry, BibtexDatabase database, String directory,\n-                                       String file, String extensionRegExp, boolean relative) {\n+            String file, String extensionRegExp, boolean relative) {\n \n         List<File> res;\n         File root;\n@@ -164,7 +164,7 @@\n                     // Changed by M. Alver 2007.01.04:\n                     // Remove first character if it is a directory separator character:\n                     String tmp = res.get(i).getCanonicalPath().substring(root.getCanonicalPath().length());\n-                    if (tmp.length() > 1 && tmp.charAt(0) == File.separatorChar) {\n+                    if ((tmp.length() > 1) && (tmp.charAt(0) == File.separatorChar)) {\n                         tmp = tmp.substring(1);\n                     }\n                     res.set(i, new File(tmp));\n@@ -182,9 +182,9 @@\n      * given directory using the given regular expression string for search.\n      */\n     private static List<File> findFile(BibtexEntry entry, BibtexDatabase database, File directory,\n-                                       String file, String extensionRegExp) {\n+            String file, String extensionRegExp) {\n \n-        ArrayList<File> res = new ArrayList<File>();\n+        ArrayList<File> res = new ArrayList<>();\n \n         if (file.startsWith(\"/\")) {\n             directory = new File(\".\");\n@@ -207,7 +207,7 @@\n \n         if (fileParts.length > 1) {\n \n-            for (int i = 0; i < fileParts.length - 1; i++) {\n+            for (int i = 0; i < (fileParts.length - 1); i++) {\n \n                 String dirToProcess = fileParts[i];\n                 dirToProcess = Util.expandBrackets(dirToProcess, entry, database);\n@@ -238,7 +238,7 @@\n                 }\n                 // Do for all direct and indirect subdirs\n                 if (dirToProcess.equals(\"**\")) {\n-                    List<File> toDo = new LinkedList<File>();\n+                    List<File> toDo = new LinkedList<>();\n                     toDo.add(directory);\n \n                     String restOfFileString = StringUtil.join(fileParts, \"/\", i + 1, fileParts.length);\n@@ -281,7 +281,7 @@ public boolean accept(File arg0, String arg1) {\n                 return toMatch.matcher(arg1).matches();\n             }\n         });\n-        if (matches != null && matches.length > 0) {\n+        if ((matches != null) && (matches.length > 0)) {\n             Collections.addAll(res, matches);\n         }\n         return res;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.external;\n \n import net.sf.jabref.Globals;\n@@ -58,7 +58,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n         BibtexEntry entry = editor.getEntry();\n \n         // Make a list of all PDFs linked from this entry:\n-        List<File> files = new ArrayList<File>();\n+        List<File> files = new ArrayList<>();\n \n         // First check the (legacy) \"pdf\" field:\n         String pdf = entry.getField(\"pdf\");\n@@ -76,7 +76,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n             tm.setContent(field);\n             for (int j = 0; j < tm.getRowCount(); j++) {\n                 FileListEntry flEntry = tm.getEntry(j);\n-                if (flEntry.getType() != null && flEntry.getType().getName().toLowerCase().equals(\"pdf\")) {\n+                if ((flEntry.getType() != null) && flEntry.getType().getName().toLowerCase().equals(\"pdf\")) {\n                     f = FileUtil.expandFilename(flEntry.getLink(), dirs);\n                     if (f != null) {\n                         files.add(f);, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui;\n \n import java.io.File;\n@@ -21,7 +21,7 @@\n \n public class OpenFileFilter extends javax.swing.filechooser.FileFilter implements FilenameFilter {\n \n-    private final HashSet<String> extSet = new HashSet<String>();\n+    private final HashSet<String> extSet = new HashSet<>();\n     private final String desc;\n \n \n@@ -84,7 +84,7 @@ public boolean accept(String filenm) {\n         int dotDotPos = filenm.lastIndexOf(\".\", dotPos - 1); // for dot.dot extensions\n \n         return extSet.contains(filenm.substring(dotPos)) ||\n-                dotDotPos >= 0 && extSet.contains(filenm.substring(dotDotPos));\n+                ((dotDotPos >= 0) && extSet.contains(filenm.substring(dotDotPos)));\n     }\n \n     public String getSuffix(String filenm) {, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui;\n \n import java.awt.event.*;\n@@ -62,7 +62,7 @@ public void windowOpened(WindowEvent e) {\n \n             @Override\n             protected boolean accept(Component c) {\n-                return super.accept(c) && c instanceof FieldEditor;\n+                return super.accept(c) && (c instanceof FieldEditor);\n             }\n         });\n \n@@ -123,9 +123,9 @@ public void updatePreamble() {\n     private class FieldListener extends FocusAdapter {\n \n         /*\n-        * Focus listener that fires the storeFieldAction when a TextArea\n-        * loses focus.\n-        */\n+         * Focus listener that fires the storeFieldAction when a TextArea\n+         * loses focus.\n+         */\n         @Override\n         public void focusLost(FocusEvent e) {\n             if (!e.isTemporary()) {\n@@ -158,15 +158,15 @@ public void actionPerformed(ActionEvent e) {\n             if (toSet == null) {\n                 set = base.getPreamble() != null;\n             } else {\n-                set = !(base.getPreamble() != null\n+                set = !((base.getPreamble() != null)\n                         && toSet.equals(base.getPreamble()));\n             }\n \n             if (set) {\n                 panel.undoManager.addEdit(new UndoablePreambleChange\n                         (base, panel, base.getPreamble(), toSet));\n                 base.setPreamble(toSet);\n-                if (toSet != null && !toSet.isEmpty()) {\n+                if ((toSet != null) && !toSet.isEmpty()) {\n                     ed.setLabelColor(GUIGlobals.entryEditorLabelColor);\n                     ed.setValidBackgroundColor();\n                 } else {\n@@ -198,6 +198,7 @@ public void actionPerformed(ActionEvent e) {\n             try {\n                 panel.runCommand(\"undo\");\n             } catch (Throwable ignored) {\n+                // Ignored\n             }\n         }\n     }\n@@ -218,6 +219,7 @@ public void actionPerformed(ActionEvent e) {\n             try {\n                 panel.runCommand(\"redo\");\n             } catch (Throwable ignored) {\n+                // Ignored\n             }\n         }\n     }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui;\n \n import java.awt.Component;\n@@ -33,13 +33,12 @@\n  * <P>\n  * Extends {@link BasicLabelUI}.\n  * <P>\n- * The only difference between the appearance of labels in the Basic and Metal\n- * L&Fs is the manner in which diabled text is painted.  As VerticalLabelUI\n- * does not override the method paintDisabledText, this class can be adapted\n- * for Metal L&F by extending MetalLabelUI instead of BasicLabelUI.\n+ * The only difference between the appearance of labels in the Basic and Metal L&Fs is the manner in which diabled text\n+ * is painted. As VerticalLabelUI does not override the method paintDisabledText, this class can be adapted for Metal\n+ * L&F by extending MetalLabelUI instead of BasicLabelUI.\n  * <P>\n  * No other changes are required.\n- * \n+ *\n  * @author Darryl\n  */\n public class VerticalLabelUI extends BasicLabelUI {\n@@ -72,7 +71,7 @@ public VerticalLabelUI(boolean clockwise) {\n     }\n \n     /**\n-     * @see ComponentUI#createUI(javax.swing.JComponent) \n+     * @see ComponentUI#createUI(javax.swing.JComponent)\n      */\n     public static ComponentUI createUI(JComponent c) {\n         if (System.getSecurityManager() != null) {\n@@ -85,7 +84,7 @@ public static ComponentUI createUI(JComponent c) {\n     /**\n      * Overridden to always return -1, since a vertical label does not have a\n      * meaningful baseline.\n-     * \n+     *\n      * @see ComponentUI#getBaseline(JComponent, int, int)\n      */\n     @Override\n@@ -96,8 +95,8 @@ public int getBaseline(JComponent c, int width, int height) {\n \n     /**\n      * Overridden to always return Component.BaselineResizeBehavior.OTHER,\n-     * since a vertical label does not have a meaningful baseline \n-     * \n+     * since a vertical label does not have a meaningful baseline\n+     *\n      * @see ComponentUI#getBaselineResizeBehavior(javax.swing.JComponent)\n      */\n     @Override\n@@ -148,7 +147,7 @@ public void paint(Graphics g, JComponent c) {\n \n     /**\n      * Returns a Dimension appropriate for vertical rendering\n-     * \n+     *\n      * @see ComponentUI#getPreferredSize(javax.swing.JComponent)\n      */\n     @Override\n@@ -158,7 +157,7 @@ public Dimension getPreferredSize(JComponent c) {\n \n     /**\n      * Returns a Dimension appropriate for vertical rendering\n-     * \n+     *\n      * @see ComponentUI#getMaximumSize(javax.swing.JComponent)\n      */\n     @Override\n@@ -168,19 +167,19 @@ public Dimension getMaximumSize(JComponent c) {\n \n     /**\n      * Returns a Dimension appropriate for vertical rendering\n-     * \n+     *\n      * @see ComponentUI#getMinimumSize(javax.swing.JComponent)\n      */\n     @Override\n     public Dimension getMinimumSize(JComponent c) {\n         return transposeDimension(super.getMinimumSize(c));\n     }\n \n-    private Dimension transposeDimension(Dimension from) {\n+    private static Dimension transposeDimension(Dimension from) {\n         return new Dimension(from.height, from.width + 2);\n     }\n \n-    private Rectangle transposeRectangle(Rectangle from, Rectangle to) {\n+    private static Rectangle transposeRectangle(Rectangle from, Rectangle to) {\n         if (to == null) {\n             to = new Rectangle();\n         }\n@@ -191,7 +190,7 @@ private Rectangle transposeRectangle(Rectangle from, Rectangle to) {\n         return to;\n     }\n \n-    private Rectangle copyRectangle(Rectangle from, Rectangle to) {\n+    private static Rectangle copyRectangle(Rectangle from, Rectangle to) {\n         if (to == null) {\n             to = new Rectangle();\n         }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui.actions;\n \n import java.awt.event.ActionEvent;\n@@ -46,7 +46,7 @@ public SortTabsAction(JabRefFrame frame) {\n     public void actionPerformed(ActionEvent e) {\n         JTabbedPane tabbedPane = frame.getTabbedPane();\n         // Make a sorted Map that compares case-insensitively:\n-        TreeMap<String, BasePanel> map = new TreeMap<String, BasePanel>(this);\n+        TreeMap<String, BasePanel> map = new TreeMap<>(this);\n \n         for (int i = 0; i < tabbedPane.getTabCount(); i++) {\n             BasePanel panel = (BasePanel) tabbedPane.getComponent(i);, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui.labelPattern;\n \n import net.sf.jabref.gui.BasePanel;\n@@ -46,14 +46,14 @@ public SearchFixDuplicateLabels(BasePanel panel) {\n     @Override\n     public void run() {\n         // Find all multiple occurences of BibTeX keys.\n-        dupes = new HashMap<String, List<BibtexEntry>>();\n+        dupes = new HashMap<>();\n \n-        HashMap<String, BibtexEntry> foundKeys = new HashMap<String, BibtexEntry>();\n+        HashMap<String, BibtexEntry> foundKeys = new HashMap<>();\n         BibtexDatabase db = panel.database();\n         for (BibtexEntry entry : db.getEntries()) {\n             String key = entry.getCiteKey();\n             // Only handle keys that are actually set:\n-            if (key != null && !key.isEmpty()) {\n+            if ((key != null) && !key.isEmpty()) {\n                 // See whether this entry's key is already known:\n                 if (!foundKeys.containsKey(key)) {\n                     // Not already known. Add key and entry to map:\n@@ -67,7 +67,7 @@ public void run() {\n                     }\n                     else {\n                         // Construct a list of entries for this key:\n-                        ArrayList<BibtexEntry> al = new ArrayList<BibtexEntry>();\n+                        ArrayList<BibtexEntry> al = new ArrayList<>();\n                         // Add both the first one we found, and the one we found just now:\n                         al.add(foundKeys.get(key));\n                         al.add(entry);\n@@ -87,7 +87,7 @@ public void init() throws Throwable {\n \n     @Override\n     public void update() {\n-        List<BibtexEntry> toGenerateFor = new ArrayList<BibtexEntry>();\n+        List<BibtexEntry> toGenerateFor = new ArrayList<>();\n         for (String key : dupes.keySet()) {\n             ResolveDuplicateLabelDialog rdld = new ResolveDuplicateLabelDialog(panel,\n                     key, dupes.get(key));, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.gui.preftabs;\n \n import java.awt.BorderLayout;\n@@ -56,9 +56,9 @@\n  * separate classes. Tabs MUST implement the PrefsTab interface, since this\n  * dialog will call the storeSettings() method of all tabs when the user presses\n  * ok.\n- * \n+ *\n  * With this design, it should be very easy to add new tabs later.\n- * \n+ *\n  */\n public class PreferencesDialog extends JDialog {\n \n@@ -137,7 +137,7 @@ public void valueChanged(ListSelectionEvent e) {\n                 if (e.getValueIsAdjusting()) {\n                     return;\n                 }\n-                String o = (String) chooser.getSelectedValue();\n+                String o = chooser.getSelectedValue();\n                 cardLayout.show(main, o);\n             }\n         });\n@@ -183,16 +183,16 @@ public void actionPerformed(ActionEvent e) {\n                 }\n                 File file = new File(filename);\n                 if (!file.exists()\n-                        || JOptionPane.showConfirmDialog(PreferencesDialog.this, '\\'' + file.getName()\n-                                + \"' \" + Localization.lang(\"exists. Overwrite file?\"),\n-                                Localization.lang(\"Export preferences\"), JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {\n+                        || (JOptionPane.showConfirmDialog(PreferencesDialog.this, '\\'' + file.getName()\n+                        + \"' \" + Localization.lang(\"exists. Overwrite file?\"),\n+                        Localization.lang(\"Export preferences\"), JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION)) {\n \n                     try {\n                         prefs.exportPreferences(filename);\n                     } catch (IOException ex) {\n                         JOptionPane.showMessageDialog(PreferencesDialog.this,\n                                 Localization.lang(\"Could not export preferences\")\n-                                        + \": \" + ex.getMessage(), Localization.lang(\"Export preferences\"),\n+                                + \": \" + ex.getMessage(), Localization.lang(\"Export preferences\"),\n                                 JOptionPane.ERROR_MESSAGE);\n                     }\n                 }\n@@ -220,7 +220,7 @@ public void actionPerformed(ActionEvent e) {\n                 } catch (IOException ex) {\n                     JOptionPane.showMessageDialog(PreferencesDialog.this,\n                             Localization.lang(\"Could not import preferences\")\n-                                    + \": \" + ex.getMessage(), Localization.lang(\"Import preferences\"),\n+                            + \": \" + ex.getMessage(), Localization.lang(\"Import preferences\"),\n                             JOptionPane.ERROR_MESSAGE);\n                 }\n             }, @@ -1,4 +1,4 @@\n-/*\n+/* Copyright (C) 2015 JabRef contributors.\n  Copyright (C) 2005 Andreas Rudert\n \n  All programs in this directory and\n@@ -59,17 +59,17 @@\n \n /**\n  * Dialog to allow users to choose a file contained in a ZIP file.\n- * \n+ *\n  * @author andreas_sf at rudert-home dot de\n  */\n class ZipFileChooser extends JDialog {\n \n     /**\n      * Table model for the ZIP archive contents.\n-     * \n+     *\n      * <p>Contains one row for each entry.\n      * Does not contain rows for directory entries.</p>\n-     * \n+     *\n      * <p>The columns contain information about ZIIP file entries:\n      * <ol><li>\n      *   name {@link String}\n@@ -86,8 +86,8 @@\n                 Localization.lang(\"Last modified\"),\n                 Localization.lang(\"Size\")\n         };\n-        private ZipEntry[] rows;\n-        private ZipFile zipFile;\n+        private final ZipEntry[] rows;\n+        private final ZipFile zipFile;\n \n \n         ZipFileChooserTableModel(ZipFile zipFile, ZipEntry[] rows) {\n@@ -125,7 +125,7 @@ public String getColumnName(int col) {\n \n         /**\n          * Zip-File entry at the given row index.\n-         * \n+         *\n          * @param rowIndex  row index\n          * @return  Zip file entry\n          */\n@@ -135,7 +135,7 @@ public ZipEntry getZipEntry(int rowIndex) {\n \n         /**\n          * Zip file which contains all entries of this model.\n-         * \n+         *\n          * @return zip file\n          */\n         public ZipFile getZipFile() {\n@@ -183,12 +183,12 @@ public Dimension getSize() {\n \n     /**\n      * Entries that can be selected with this dialog.\n-     * \n+     *\n      * @param zipFile  Zip-File\n      * @return  entries that can be selected\n      */\n-    private ZipEntry[] getSelectableZipEntries(ZipFile zipFile) {\n-        List<ZipEntry> entries = new ArrayList<ZipEntry>();\n+    private static ZipEntry[] getSelectableZipEntries(ZipFile zipFile) {\n+        List<ZipEntry> entries = new ArrayList<>();\n         Enumeration<? extends ZipEntry> e = zipFile.entries();\n         while (e.hasMoreElements()) {\n             ZipEntry entry = e.nextElement();\n@@ -201,7 +201,7 @@ public Dimension getSize() {\n \n     /**\n      * New Zip file chooser.\n-     * \n+     *\n      * @param owner  Owner of the file chooser\n      * @param zipFile  Zip-Fle to choose from, must be readable\n      * @throws HeadlessException, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fetcher;\n \n import java.util.Arrays;\n@@ -97,14 +97,14 @@\n         unitCombinations = new String[uCLength];\n         for (int i = 0; i < uLLength; i++) {\n             for (int j = 0; j < uPLLength; j++) {\n-                UnitFormatter.unitCombinations[i * uPLLength + j] = UnitFormatter.unitPrefixList[j] + UnitFormatter.unitList[i];\n+                UnitFormatter.unitCombinations[(i * uPLLength) + j] = UnitFormatter.unitPrefixList[j] + UnitFormatter.unitList[i];\n             }\n         }\n \n     }\n \n \n-    private String format(String text, String[] listOfWords) {\n+    private static String format(String text, String[] listOfWords) {\n         if (text == null) {\n             return null;\n         }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fileformat;\n \n import java.util.regex.Matcher;\n@@ -85,7 +85,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String str;\n         int i = 0;\n-        while ((str = in.readLine()) != null && i < 50) {\n+        while (((str = in.readLine()) != null) && (i < 50)) {\n \n             if (OvidImporter.ovidPattern.matcher(str).find()) {\n                 return true;\n@@ -103,12 +103,12 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n      */\n     @Override\n     public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\n-        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n         StringBuilder sb = new StringBuilder();\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String line;\n         while ((line = in.readLine()) != null) {\n-            if (!line.isEmpty() && line.charAt(0) != ' ') {\n+            if (!line.isEmpty() && (line.charAt(0) != ' ')) {\n                 sb.append(\"__NEWFIELD__\");\n             }\n             sb.append(line);\n@@ -118,15 +118,15 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         String[] items = sb.toString().split(\"<[0-9]+>\");\n \n         for (int i = 1; i < items.length; i++) {\n-            HashMap<String, String> h = new HashMap<String, String>();\n+            HashMap<String, String> h = new HashMap<>();\n             String[] fields = items[i].split(\"__NEWFIELD__\");\n             for (String field : fields) {\n                 int linebreak = field.indexOf('\\n');\n                 String fieldName = field.substring(0, linebreak).trim();\n                 String content = field.substring(linebreak).trim();\n \n                 // Check if this is the author field (due to a minor special treatment for this field):\n-                boolean isAuthor = fieldName.indexOf(\"Author\") == 0\n+                boolean isAuthor = (fieldName.indexOf(\"Author\") == 0)\n                         && !fieldName.contains(\"Author Keywords\")\n                         && !fieldName.contains(\"Author e-mail\");\n \n@@ -206,7 +206,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n             // Now we need to check if a book entry has given editors in the author field;\n             // if so, rearrange:\n             String auth = h.get(\"author\");\n-            if (auth != null && auth.contains(\" [Ed]\")) {\n+            if ((auth != null) && auth.contains(\" [Ed]\")) {\n                 h.remove(\"author\");\n                 h.put(\"editor\", auth.replaceAll(\" \\\\[Ed\\\\]\", \"\"));\n             }\n@@ -247,7 +247,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n      * @param content The name string.\n      * @return The formatted names.\n      */\n-    private String fixNames(String content) {\n+    private static String fixNames(String content) {\n         String names;\n         if (content.indexOf(\";\") > 0) { //LN FN; [LN FN;]*\n             names = content.replaceAll(\"[^\\\\.A-Za-z,;\\\\- ]\", \"\").replaceAll(\";\", \" and\");, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fileformat;\n \n import java.util.regex.Pattern;\n@@ -81,7 +81,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n      */\n     @Override\n     public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\n-        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n         StringBuilder sb = new StringBuilder();\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String str;\n@@ -103,16 +103,16 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n             String startPage = \"\";\n             String endPage = \"\";\n             String comment = \"\";\n-            HashMap<String, String> hm = new HashMap<String, String>();\n+            HashMap<String, String> hm = new HashMap<>();\n \n             String[] fields = entry1.split(\"\\n\");\n \n             for (int j = 0; j < fields.length; j++) {\n                 StringBuilder current = new StringBuilder(fields[j]);\n                 boolean done = false;\n-                while (!done && j < fields.length - 1) {\n-                    if (fields[j + 1].length() >= 6 && !fields[j + 1].substring(2, 6).equals(\"  - \")) {\n-                        if (current.length() > 0\n+                while (!done && (j < (fields.length - 1))) {\n+                    if ((fields[j + 1].length() >= 6) && !fields[j + 1].substring(2, 6).equals(\"  - \")) {\n+                        if ((current.length() > 0)\n                                 && !Character.isWhitespace(current.charAt(current.length() - 1))\n                                 && !Character.isWhitespace(fields[j + 1].charAt(0))) {\n                             current.append(' ');\n@@ -208,10 +208,10 @@ else if (lab.equals(\"T2\") || lab.equals(\"T3\") || lab.equals(\"BT\")) {\n                         }\n                     } else if (lab.equals(\"UR\")) {\n                         hm.put(\"url\", val);\n-                    } else if ((lab.equals(\"Y1\") || lab.equals(\"PY\")) && val.length() >= 4) {\n+                    } else if ((lab.equals(\"Y1\") || lab.equals(\"PY\")) && (val.length() >= 4)) {\n                         String[] parts = val.split(\"/\");\n                         hm.put(\"year\", parts[0]);\n-                        if (parts.length > 1 && !parts[1].isEmpty()) {\n+                        if ((parts.length > 1) && !parts[1].isEmpty()) {\n                             try {\n \n                                 int monthNumber = Integer.parseInt(parts[1]);\n@@ -266,10 +266,10 @@ else if (lab.equals(\"ID\")) {\n                     .getEntryType(type)); // id assumes an existing database so don't\n \n             // Remove empty fields:\n-            ArrayList<Object> toRemove = new ArrayList<Object>();\n+            ArrayList<Object> toRemove = new ArrayList<>();\n             for (String key : hm.keySet()) {\n                 String content = hm.get(key);\n-                if (content == null || content.trim().isEmpty()) {\n+                if ((content == null) || content.trim().isEmpty()) {\n                     toRemove.add(key);\n                 }\n             }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fileformat;\n \n import java.io.InputStream;\n@@ -62,7 +62,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String str;\n         int i = 0;\n-        while ((str = in.readLine()) != null && i < 50) {\n+        while (((str = in.readLine()) != null) && (i < 50)) {\n \n             if (str.trim().equals(\"START_RECORD\")) {\n                 return true;\n@@ -80,7 +80,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n      */\n     @Override\n     public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\n-        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n         StringBuilder sb = new StringBuilder();\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String str;\n@@ -92,7 +92,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         }\n \n         String[] entries = sb.toString().split(\"START_RECORD\");\n-        HashMap<String, String> hm = new HashMap<String, String>();\n+        HashMap<String, String> hm = new HashMap<>();\n         for (int i = 1; i < entries.length; i++) {\n             String[] fields = entries[i].split(\"FIELD \");\n             String journal = null;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fileformat;\n \n import java.io.InputStream;\n@@ -70,11 +70,11 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         while ((str = in.readLine()) != null) {\n \n             if (pat1.matcher(str).find())\n-             {\n+            {\n                 return false; // This is an inspec file, so return false.\n             }\n \n-            if (str.length() >= 5 && str.substring(0, 5).equals(\"TI:  \")) {\n+            if ((str.length() >= 5) && str.substring(0, 5).equals(\"TI:  \")) {\n                 return true;\n             }\n         }\n@@ -87,139 +87,139 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n      */\n     @Override\n     public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\n-        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n-        BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n-        boolean isChapter = false;\n-        String str;\n-        StringBuilder sb = new StringBuilder();\n-        while ((str = in.readLine()) != null) {\n-            if (str.length() < 2) {\n-                sb.append(\"__::__\").append(str);\n-            } else {\n-                sb.append(\"__NEWFIELD__\").append(str);\n-            }\n-        }\n-        in.close();\n-        String[] entries = sb.toString().split(\"__::__\");\n-        String Type = \"\";\n-        HashMap<String, String> h = new HashMap<String, String>();\n-        for (String entry : entries) {\n-            if (entry.trim().length() < 6) {\n-                continue;\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n+        try (BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream))) {\n+            boolean isChapter = false;\n+            String str;\n+            StringBuilder sb = new StringBuilder();\n+            while ((str = in.readLine()) != null) {\n+                if (str.length() < 2) {\n+                    sb.append(\"__::__\").append(str);\n+                } else {\n+                    sb.append(\"__NEWFIELD__\").append(str);\n+                }\n             }\n-            //System.out.println(\"'\"+entries[i]+\"'\");\n-            h.clear();\n-            String[] fields = entry.split(\"__NEWFIELD__\");\n-            for (String field : fields) {\n-                if (field.length() < 6) {\n+            String[] entries = sb.toString().split(\"__::__\");\n+            String Type = \"\";\n+            HashMap<String, String> h = new HashMap<>();\n+            for (String entry : entries) {\n+                if (entry.trim().length() < 6) {\n                     continue;\n                 }\n-                //System.out.println(\">\"+fields[j]+\"<\");\n-                String f3 = field.substring(0, 2);\n-                String frest = field.substring(5);\n-                if (f3.equals(\"TI\")) {\n-                    h.put(\"title\", frest);\n-                } else if (f3.equals(\"AU\")) {\n-                    if (frest.trim().endsWith(\"(ed)\")) {\n-                        String ed = frest.trim();\n-                        ed = ed.substring(0, ed.length() - 4);\n-                        h.put(\"editor\", AuthorList.fixAuthor_lastNameFirst(ed.replaceAll(\",-\", \", \")\n-                                .replaceAll(\";\", \" and \")));\n-                    } else {\n-                        h.put(\"author\", AuthorList.fixAuthor_lastNameFirst(frest.replaceAll(\n-                                \",-\", \", \").replaceAll(\";\", \" and \")));\n+                //System.out.println(\"'\"+entries[i]+\"'\");\n+                h.clear();\n+                String[] fields = entry.split(\"__NEWFIELD__\");\n+                for (String field : fields) {\n+                    if (field.length() < 6) {\n+                        continue;\n                     }\n-                } else if (f3.equals(\"AB\")) {\n-                    h.put(\"abstract\", frest);\n-                } else if (f3.equals(\"DE\")) {\n-                    String kw = frest.replaceAll(\"-;\", \",\").toLowerCase();\n-                    h.put(\"keywords\", kw.substring(0, kw.length() - 1));\n-                } else if (f3.equals(\"SO\")) {\n-                    int m = frest.indexOf(\".\");\n-                    if (m >= 0) {\n-                        String jr = frest.substring(0, m);\n-                        h.put(\"journal\", jr.replaceAll(\"-\", \" \"));\n-                        frest = frest.substring(m);\n-                        m = frest.indexOf(\";\");\n-                        if (m >= 5) {\n-                            String yr = frest.substring(m - 5, m).trim();\n-                            h.put(\"year\", yr);\n+                    //System.out.println(\">\"+fields[j]+\"<\");\n+                    String f3 = field.substring(0, 2);\n+                    String frest = field.substring(5);\n+                    if (f3.equals(\"TI\")) {\n+                        h.put(\"title\", frest);\n+                    } else if (f3.equals(\"AU\")) {\n+                        if (frest.trim().endsWith(\"(ed)\")) {\n+                            String ed = frest.trim();\n+                            ed = ed.substring(0, ed.length() - 4);\n+                            h.put(\"editor\", AuthorList.fixAuthor_lastNameFirst(ed.replaceAll(\",-\", \", \")\n+                                    .replaceAll(\";\", \" and \")));\n+                        } else {\n+                            h.put(\"author\", AuthorList.fixAuthor_lastNameFirst(frest.replaceAll(\n+                                    \",-\", \", \").replaceAll(\";\", \" and \")));\n+                        }\n+                    } else if (f3.equals(\"AB\")) {\n+                        h.put(\"abstract\", frest);\n+                    } else if (f3.equals(\"DE\")) {\n+                        String kw = frest.replaceAll(\"-;\", \",\").toLowerCase();\n+                        h.put(\"keywords\", kw.substring(0, kw.length() - 1));\n+                    } else if (f3.equals(\"SO\")) {\n+                        int m = frest.indexOf(\".\");\n+                        if (m >= 0) {\n+                            String jr = frest.substring(0, m);\n+                            h.put(\"journal\", jr.replaceAll(\"-\", \" \"));\n                             frest = frest.substring(m);\n-                            m = frest.indexOf(\":\");\n-                            if (m >= 0) {\n-                                String pg = frest.substring(m + 1).trim();\n-                                h.put(\"pages\", pg);\n-                                h.put(\"volume\", frest.substring(1, m));\n+                            m = frest.indexOf(\";\");\n+                            if (m >= 5) {\n+                                String yr = frest.substring(m - 5, m).trim();\n+                                h.put(\"year\", yr);\n+                                frest = frest.substring(m);\n+                                m = frest.indexOf(\":\");\n+                                if (m >= 0) {\n+                                    String pg = frest.substring(m + 1).trim();\n+                                    h.put(\"pages\", pg);\n+                                    h.put(\"volume\", frest.substring(1, m));\n+                                }\n                             }\n                         }\n-                    }\n-                } else if (f3.equals(\"PB\")) {\n-                    int m = frest.indexOf(\":\");\n-                    if (m >= 0) {\n-                        String jr = frest.substring(0, m);\n-                        h.put(\"publisher\", jr.replaceAll(\"-\", \" \").trim());\n-                        frest = frest.substring(m);\n-                        m = frest.indexOf(\", \");\n-                        if (m + 2 < frest.length()) {\n-                            String yr = frest.substring(m + 2).trim();\n-                            try {\n-                                Integer.parseInt(yr);\n-                                h.put(\"year\", yr);\n-                            } catch (NumberFormatException ex) {\n-                                // Let's assume that this wasn't a number, since it\n-                                // couldn't be parsed as an integer.\n+                    } else if (f3.equals(\"PB\")) {\n+                        int m = frest.indexOf(\":\");\n+                        if (m >= 0) {\n+                            String jr = frest.substring(0, m);\n+                            h.put(\"publisher\", jr.replaceAll(\"-\", \" \").trim());\n+                            frest = frest.substring(m);\n+                            m = frest.indexOf(\", \");\n+                            if ((m + 2) < frest.length()) {\n+                                String yr = frest.substring(m + 2).trim();\n+                                try {\n+                                    Integer.parseInt(yr);\n+                                    h.put(\"year\", yr);\n+                                } catch (NumberFormatException ex) {\n+                                    // Let's assume that this wasn't a number, since it\n+                                    // couldn't be parsed as an integer.\n+                                }\n+\n                             }\n \n                         }\n-\n-                    }\n-                } else if (f3.equals(\"AF\")) {\n-                    h.put(\"school\", frest.trim());\n-\n-                } else if (f3.equals(\"DT\")) {\n-                    frest = frest.trim();\n-                    if (frest.equals(\"Monograph\")) {\n-                        Type = \"book\";\n-                    } else if (frest.startsWith(\"Dissertation\")) {\n-                        Type = \"phdthesis\";\n-                    } else if (frest.toLowerCase().contains(\"journal\")) {\n-                        Type = \"article\";\n-                    } else if (frest.equals(\"Contribution\") || frest.equals(\"Chapter\")) {\n-                        Type = \"incollection\";\n-                        // This entry type contains page numbers and booktitle in the\n-                        // title field.\n-                        isChapter = true;\n-                    } else {\n-                        Type = frest.replaceAll(\" \", \"\");\n+                    } else if (f3.equals(\"AF\")) {\n+                        h.put(\"school\", frest.trim());\n+\n+                    } else if (f3.equals(\"DT\")) {\n+                        frest = frest.trim();\n+                        if (frest.equals(\"Monograph\")) {\n+                            Type = \"book\";\n+                        } else if (frest.startsWith(\"Dissertation\")) {\n+                            Type = \"phdthesis\";\n+                        } else if (frest.toLowerCase().contains(\"journal\")) {\n+                            Type = \"article\";\n+                        } else if (frest.equals(\"Contribution\") || frest.equals(\"Chapter\")) {\n+                            Type = \"incollection\";\n+                            // This entry type contains page numbers and booktitle in the\n+                            // title field.\n+                            isChapter = true;\n+                        } else {\n+                            Type = frest.replaceAll(\" \", \"\");\n+                        }\n                     }\n                 }\n-            }\n \n-            if (isChapter) {\n-                Object titleO = h.get(\"title\");\n-                if (titleO != null) {\n-                    String title = ((String) titleO).trim();\n-                    int inPos = title.indexOf(\"\\\" in \");\n-                    int pgPos = title.lastIndexOf(\" \");\n-                    if (inPos > 1) {\n-                        h.put(\"title\", title.substring(1, inPos));\n-                    }\n-                    if (pgPos > inPos) {\n-                        h.put(\"pages\", title.substring(pgPos)\n-                                .replaceAll(\"-\", \"--\"));\n+                if (isChapter) {\n+                    Object titleO = h.get(\"title\");\n+                    if (titleO != null) {\n+                        String title = ((String) titleO).trim();\n+                        int inPos = title.indexOf(\"\\\" in \");\n+                        int pgPos = title.lastIndexOf(\" \");\n+                        if (inPos > 1) {\n+                            h.put(\"title\", title.substring(1, inPos));\n+                        }\n+                        if (pgPos > inPos) {\n+                            h.put(\"pages\", title.substring(pgPos)\n+                                    .replaceAll(\"-\", \"--\"));\n+                        }\n+\n                     }\n \n                 }\n \n-            }\n-\n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(Type)); // id assumes an existing database so don't\n-            // create one here\n-            b.setField(h);\n+                BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n+                        .getEntryType(Type)); // id assumes an existing database so don't\n+                // create one here\n+                b.setField(h);\n \n-            bibitems.add(b);\n+                bibitems.add(b);\n \n+            }\n         }\n \n         return bibitems;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.importer.fileformat;\n \n import java.io.InputStream;\n@@ -39,7 +39,7 @@\n public class SixpackImporter extends ImportFormat {\n \n     private final String SEPARATOR = new String(new char[] {0, 48});\n-    \n+\n     private static final Log LOGGER = LogFactory.getLog(SixpackImporter.class);\n \n \n@@ -68,7 +68,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         String str;\n         int i = 0;\n-        while ((str = in.readLine()) != null && i < 50) {\n+        while (((str = in.readLine()) != null) && (i < 50)) {\n \n             if (str.contains(SEPARATOR)) {\n                 return true;\n@@ -87,7 +87,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n     @Override\n     public List<BibtexEntry> importEntries(InputStream stream, OutputPrinter status) throws IOException {\n \n-        HashMap<String, String> fI = new HashMap<String, String>();\n+        HashMap<String, String> fI = new HashMap<>();\n         fI.put(\"id\", \"bibtexkey\");\n         fI.put(\"au\", \"author\");\n         fI.put(\"ti\", \"title\");\n@@ -116,7 +116,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n         fI.put(\"cr\", \"crossref\");\n         fI.put(\"fi\", \"file\");\n \n-        ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n+        ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n         BufferedReader in = new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));\n         in.readLine();\n         String ln = in.readLine();\n@@ -133,7 +133,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n                 String[] fields = s.split(SEPARATOR);\n                 // Check type and create entry:\n                 if (fields.length < 2)\n-                 {\n+                {\n                     continue; // Avoid ArrayIndexOutOfBoundsException\n                 }\n                 BibtexEntryType typ = BibtexEntryType, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.logic.fetcher;\n \n import com.mashape.unirest.http.HttpResponse;\n@@ -6,7 +21,6 @@\n import com.mashape.unirest.http.exceptions.UnirestException;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.DOI;\n-import net.sf.jabref.model.entry.BibtexEntry;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.json.JSONObject;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.logic.xmp;\n \n import java.io.IOException;\n@@ -47,7 +47,7 @@\n \n     /**\n      * Create a new empty XMPSchemaBibtex as a child in the given XMPMetadata.\n-     * \n+     *\n      * @param parent\n      */\n     public XMPSchemaBibtex(XMPMetadata parent) {\n@@ -56,21 +56,21 @@ public XMPSchemaBibtex(XMPMetadata parent) {\n \n     /**\n      * Create schema from an existing XML element.\n-     * \n+     *\n      * @param e\n      *            The existing XML element.\n      */\n     public XMPSchemaBibtex(Element e, String namespace) {\n         super(e, XMPSchemaBibtex.KEY);\n     }\n \n-    private String makeProperty(String propertyName) {\n+    private static String makeProperty(String propertyName) {\n         return XMPSchemaBibtex.KEY + ':' + propertyName;\n     }\n \n     /**\n      * Uses XMPSchema methods\n-     * \n+     *\n      * @param field\n      * @return\n      */\n@@ -174,15 +174,15 @@ private static String getContents(NodeList seqList) {\n     /**\n      * Returns a map of all properties and their values. LIs and bags in seqs\n      * are concatenated using \" and \".\n-     * \n+     *\n      * @return Map from name of textproperty (String) to value (String). For\n      *         instance: \"year\" => \"2005\". Empty map if none found.\n      * @throws TransformerException\n      */\n     public static Map<String, String> getAllProperties(XMPSchema schema, String namespaceName) {\n         NodeList nodes = schema.getElement().getChildNodes();\n \n-        Map<String, String> result = new HashMap<String, String>();\n+        Map<String, String> result = new HashMap<>();\n \n         if (nodes == null) {\n             return result;\n@@ -193,16 +193,16 @@ private static String getContents(NodeList seqList) {\n \n         for (int i = 0; i < n; i++) {\n             Node node = nodes.item(i);\n-            if (node.getNodeType() != Node.ATTRIBUTE_NODE\n-                    && node.getNodeType() != Node.ELEMENT_NODE) {\n+            if ((node.getNodeType() != Node.ATTRIBUTE_NODE)\n+                    && (node.getNodeType() != Node.ELEMENT_NODE)) {\n                 continue;\n             }\n \n             String nodeName = node.getNodeName();\n \n             String[] split = nodeName.split(\":\");\n \n-            if (split.length == 2 && split[0].equals(namespaceName)) {\n+            if ((split.length == 2) && split[0].equals(namespaceName)) {\n                 NodeList seqList = ((Element) node).getElementsByTagName(\"rdf:Seq\");\n                 if (seqList.getLength() > 0) {\n \n@@ -235,14 +235,14 @@ private static String getContents(NodeList seqList) {\n \n             String nodeName = attr.getNodeName();\n             String[] split = nodeName.split(\":\");\n-            if (split.length == 2 && split[0].equals(namespaceName)) {\n+            if ((split.length == 2) && split[0].equals(namespaceName)) {\n                 result.put(split[1], attr.getNodeValue());\n             }\n         }\n \n         /*\n          * Collapse Whitespace\n-         * \n+         *\n          * Quoting from\n          * http://www.gerg.ca/software/btOOL/doc/bt_postprocess.html: <cite>\n          * \"The exact rules for collapsing whitespace are simple: non-space\n@@ -264,7 +264,7 @@ private static String getContents(NodeList seqList) {\n     }\n \n \n-    private static final HashSet<String> preserveWhiteSpace = new HashSet<String>();\n+    private static final HashSet<String> preserveWhiteSpace = new HashSet<>();\n     static {\n         XMPSchemaBibtex.preserveWhiteSpace.add(\"abstract\");\n         XMPSchemaBibtex.preserveWhiteSpace.add(\"note\");\n@@ -277,7 +277,7 @@ public void setBibtexEntry(BibtexEntry entry) {\n     }\n \n     /**\n-     * \n+     *\n      * @param entry\n      * @param database maybenull\n      */\n@@ -287,7 +287,8 @@ public void setBibtexEntry(BibtexEntry entry, BibtexDatabase database) {\n \n         JabRefPreferences prefs = JabRefPreferences.getInstance();\n         if (prefs.getBoolean(JabRefPreferences.USE_XMP_PRIVACY_FILTER)) {\n-            TreeSet<String> filters = new TreeSet<String>(Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n+            TreeSet<String> filters = new TreeSet<>(\n+                    Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n             fields.removeAll(filters);\n         }\n \n@@ -323,9 +324,9 @@ public BibtexEntry getBibtexEntry() {\n \n     /**\n      * Taken from DOM2Utils.java:\n-     * \n+     *\n      * JBoss, the OpenSource EJB server\n-     * \n+     *\n      * Distributable under LGPL license. See terms of license at gnu.org.\n      */\n     public static String getTextContent(Node node) {, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.logic.xmp;\n \n import java.io.*;\n@@ -49,18 +49,18 @@\n /**\n  * XMPUtils provide support for reading and writing BibTex data as XMP-Metadata\n  * in PDF-documents.\n- * \n+ *\n  * @author Christopher Oezbek <oezi@oezi.de>\n- * \n+ *\n  * TODO:\n- * \n+ *\n  * Synchronization\n  */\n public class XMPUtil {\n \n     /**\n      * Convenience method for readXMP(File).\n-     * \n+     *\n      * @param filename\n      *            The filename from which to open the file.\n      * @return BibtexEntryies found in the PDF or an empty list\n@@ -73,15 +73,15 @@\n     /**\n      * Try to write the given BibTexEntry in the XMP-stream of the given\n      * PDF-file.\n-     * \n+     *\n      * Throws an IOException if the file cannot be read or written, so the user\n      * can remove a lock or cancel the operation.\n-     * \n+     *\n      * The method will overwrite existing BibTeX-XMP-data, but keep other\n      * existing metadata.\n-     * \n+     *\n      * This is a convenience method for writeXMP(File, BibtexEntry).\n-     * \n+     *\n      * @param filename\n      *            The filename from which to open the file.\n      * @param entry\n@@ -102,30 +102,27 @@ public static void writeXMP(String filename, BibtexEntry entry,\n \n     /**\n      * Try to read the BibTexEntries from the XMP-stream of the given PDF-file.\n-     * \n+     *\n      * @param file\n      *            The file to read from.\n-     * \n+     *\n      * @throws IOException\n      *             Throws an IOException if the file cannot be read, so the user\n      *             than remove a lock or cancel the operation.\n      */\n     public static List<BibtexEntry> readXMP(File file) throws IOException {\n-        FileInputStream is = new FileInputStream(file);\n-        try {\n+        try (FileInputStream is = new FileInputStream(file)) {\n             return XMPUtil.readXMP(is);\n-        } finally {\n-            is.close();\n         }\n     }\n \n     /**\n      * Try to read the given BibTexEntry from the XMP-stream of the given\n      * inputstream containing a PDF-file.\n-     * \n+     *\n      * @param inputStream\n      *            The inputstream to read from.\n-     * \n+     *\n      * @throws IOException\n      *             Throws an IOException if the file cannot be read, so the user\n      *             than remove a lock or cancel the operation.\n@@ -134,7 +131,7 @@ public static void writeXMP(String filename, BibtexEntry entry,\n     public static List<BibtexEntry> readXMP(InputStream inputStream)\n             throws IOException {\n \n-        List<BibtexEntry> result = new LinkedList<BibtexEntry>();\n+        List<BibtexEntry> result = new LinkedList<>();\n \n         PDDocument document = null;\n \n@@ -198,16 +195,16 @@ public static void writeXMP(String filename, BibtexEntry entry,\n     /**\n      * Helper function for retrieving a BibtexEntry from the\n      * PDDocumentInformation in a PDF file.\n-     * \n+     *\n      * To understand how to get hold of a PDDocumentInformation have a look in\n      * the test cases for XMPUtil.\n-     * \n+     *\n      * The BibtexEntry is build by mapping individual fields in the document\n      * information (like author, title, keywords) to fields in a bibtex entry.\n-     * \n+     *\n      * @param di\n      *            The document information from which to build a BibtexEntry.\n-     * \n+     *\n      * @return The bibtex entry found in the document information.\n      */\n     @SuppressWarnings(\"unchecked\")\n@@ -261,16 +258,16 @@ public static BibtexEntry getBibtexEntryFromDocumentInformation(\n     /**\n      * Helper function for retrieving a BibtexEntry from the DublinCore metadata\n      * in a PDF file.\n-     * \n+     *\n      * To understand how to get hold of a XMPSchemaDublinCore have a look in the\n      * test cases for XMPUtil.\n-     * \n+     *\n      * The BibtexEntry is build by mapping individual fields in the dublin core\n      * (like creator, title, subject) to fields in a bibtex entry.\n-     * \n+     *\n      * @param dcSchema\n      *            The document information from which to build a BibtexEntry.\n-     * \n+     *\n      * @return The bibtex entry found in the document information.\n      */\n     @SuppressWarnings(\"unchecked\")\n@@ -323,7 +320,7 @@ public static BibtexEntry getBibtexEntryFromDublinCore(\n          * Year + Month -> Date\n          */\n         List<String> dates = dcSchema.getSequenceList(\"dc:date\");\n-        if (dates != null && !dates.isEmpty()) {\n+        if ((dates != null) && !dates.isEmpty()) {\n             String date = dates.get(0).trim();\n             Calendar c = null;\n             try {\n@@ -377,7 +374,7 @@ public static BibtexEntry getBibtexEntryFromDublinCore(\n \n         /**\n          * Relation -> bibtexkey\n-         * \n+         *\n          * We abuse the relationship attribute to store all other values in the\n          * bibtex document\n          */\n@@ -442,7 +439,7 @@ public static BibtexEntry getBibtexEntryFromDublinCore(\n          * Type -> Type\n          */\n         List<String> l = dcSchema.getTypes();\n-        if (l != null && !l.isEmpty()) {\n+        if ((l != null) && !l.isEmpty()) {\n             s = l.get(0);\n             if (s != null) {\n                 BibtexEntryType type = BibtexEntryType.getStandardType(s);\n@@ -458,15 +455,15 @@ public static BibtexEntry getBibtexEntryFromDublinCore(\n     /**\n      * Try to write the given BibTexEntry in the XMP-stream of the given\n      * PDF-file.\n-     * \n+     *\n      * Throws an IOException if the file cannot be read or written, so the user\n      * can remove a lock or cancel the operation.\n-     * \n+     *\n      * The method will overwrite existing BibTeX-XMP-data, but keep other\n      * existing metadata.\n-     * \n+     *\n      * This is a convenience method for writeXMP(File, Collection).\n-     * \n+     *\n      * @param file\n      *            The file to write to.\n      * @param entry\n@@ -482,16 +479,16 @@ public static BibtexEntry getBibtexEntryFromDublinCore(\n      */\n     public static void writeXMP(File file, BibtexEntry entry,\n             BibtexDatabase database) throws IOException, TransformerException {\n-        List<BibtexEntry> l = new LinkedList<BibtexEntry>();\n+        List<BibtexEntry> l = new LinkedList<>();\n         l.add(entry);\n         XMPUtil.writeXMP(file, l, database, true);\n     }\n \n     /**\n      * Write the given BibtexEntries as XMP-metadata text to the given stream.\n-     * \n+     *\n      * The text that is written to the stream contains a complete XMP-document.\n-     * \n+     *\n      * @param bibtexEntries\n      *            The BibtexEntries to write XMP-metadata for.\n      * @param database\n@@ -502,13 +499,13 @@ public static void writeXMP(File file, BibtexEntry entry,\n      *             Thrown if the bibtexEntries could not transformed to XMP.\n      * @throws IOException\n      *             Thrown if an IOException occured while writing to the stream.\n-     * \n+     *\n      * @see #toXMP(java.util.Collection, BibtexDatabase) if you don't need strings to be\n      *      resolved.\n      */\n     private static void toXMP(Collection<BibtexEntry> bibtexEntries,\n-                              BibtexDatabase database, OutputStream outputStream)\n-            throws IOException, TransformerException {\n+            BibtexDatabase database, OutputStream outputStream)\n+                    throws IOException, TransformerException {\n \n         if (database != null) {\n             bibtexEntries = database.resolveForStrings(bibtexEntries, true);\n@@ -529,11 +526,11 @@ private static void toXMP(Collection<BibtexEntry> bibtexEntries,\n      * Convenience method for toXMP(Collection<BibtexEntry>, BibtexDatabase,\n      * OutputStream) returning a String containing the XMP-metadata of the given\n      * collection of BibtexEntries.\n-     * \n+     *\n      * The resulting metadata string is wrapped as a complete XMP-document.\n-     * \n+     *\n      * @param bibtexEntries\n-     *            The BibtexEntries to return XMP-metadata for. \n+     *            The BibtexEntries to return XMP-metadata for.\n      * @param database\n      *            maybenull An optional database which the given bibtex entries\n      *            belong to, which will be used to resolve strings. If the\n@@ -556,7 +553,7 @@ public static String toXMP(Collection<BibtexEntry> bibtexEntries,\n     /**\n      * Will read the XMPMetadata from the given pdf file, closing the file\n      * afterwards.\n-     * \n+     *\n      * @param inputStream\n      *            The inputStream representing a PDF-file to read the\n      *            XMPMetadata from.\n@@ -601,24 +598,21 @@ private static XMPMetadata getXMPMetadata(PDDocument document) throws IOExceptio\n     /**\n      * Will read the XMPMetadata from the given pdf file, closing the file\n      * afterwards.\n-     * \n+     *\n      * @param file\n      *            The file to read the XMPMetadata from.\n      * @return The XMPMetadata object found in the file or null if none is\n      *         found.\n      * @throws IOException\n      */\n     public static XMPMetadata readRawXMP(File file) throws IOException {\n-        FileInputStream is = new FileInputStream(file);\n-        try {\n+        try (FileInputStream is = new FileInputStream(file)) {\n             return XMPUtil.readRawXMP(is);\n-        } finally {\n-            is.close();\n         }\n     }\n \n     private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n-                                        BibtexEntry entry, BibtexDatabase database) {\n+            BibtexEntry entry, BibtexDatabase database) {\n \n         if (database != null) {\n             entry = database.resolveForStrings(entry, false);\n@@ -629,7 +623,8 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n         boolean useXmpPrivacyFilter =\n                 prefs.getBoolean(JabRefPreferences.USE_XMP_PRIVACY_FILTER);\n         // Fields for which not to write XMP data later on:\n-        TreeSet<String> filters = new TreeSet<String>(Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n+        TreeSet<String> filters = new TreeSet<>(\n+                Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n \n         // Set all the values including key and entryType\n \n@@ -644,16 +639,16 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n                 /**\n                  * Editor -> Contributor\n-                 * \n+                 *\n                  * Field: dc:contributor\n-                 * \n+                 *\n                  * Type: bag ProperName\n-                 * \n+                 *\n                  * Category: External\n-                 * \n+                 *\n                  * Description: Contributors to the resource (other than the\n                  * authors).\n-                 * \n+                 *\n                  * Bibtex-Fields used: editor\n                  */\n \n@@ -669,24 +664,24 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * ? -> Coverage\n-             * \n+             *\n              * Unmapped\n-             * \n+             *\n              * dc:coverage Text External The extent or scope of the resource.\n              */\n \n             /**\n              * Author -> Creator\n-             * \n+             *\n              * Field: dc:creator\n-             * \n+             *\n              * Type: seq ProperName\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: The authors of the resource (listed in order of\n              * precedence, if significant).\n-             * \n+             *\n              * Bibtex-Fields used: author\n              */\n             if (field.equals(\"author\")) {\n@@ -709,16 +704,16 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n                 /**\n                  * Year + Month -> Date\n-                 * \n+                 *\n                  * Field: dc:date\n-                 * \n+                 *\n                  * Type: seq Date\n-                 * \n+                 *\n                  * Category: External\n-                 * \n+                 *\n                  * Description: Date(s) that something interesting happened to\n                  * the resource.\n-                 * \n+                 *\n                  * Bibtex-Fields used: year, month\n                  */\n                 String publicationDate = Util.getPublicationDate(entry);\n@@ -729,16 +724,16 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n             }\n             /**\n              * Abstract -> Description\n-             * \n+             *\n              * Field: dc:description\n-             * \n+             *\n              * Type: Lang Alt\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: A textual description of the content of the\n              * resource. Multiple values may be present for different languages.\n-             * \n+             *\n              * Bibtex-Fields used: abstract\n              */\n             if (field.equals(\"abstract\")) {\n@@ -749,15 +744,15 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * DOI -> identifier\n-             * \n+             *\n              * Field: dc:identifier\n-             * \n+             *\n              * Type: Text\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: Unique identifier of the resource.\n-             * \n+             *\n              * Bibtex-Fields used: doi\n              */\n             if (field.equals(\"doi\")) {\n@@ -768,24 +763,24 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * ? -> Language\n-             * \n+             *\n              * Unmapped\n-             * \n+             *\n              * dc:language bag Locale Internal An unordered array specifying the\n              * languages used in the resource.\n              */\n \n             /**\n              * Publisher -> Publisher\n-             * \n+             *\n              * Field: dc:publisher\n-             * \n+             *\n              * Type: bag ProperName\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: Publishers.\n-             * \n+             *\n              * Bibtex-Fields used: doi\n              */\n             if (field.equals(\"publisher\")) {\n@@ -796,34 +791,34 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * ? -> Rights\n-             * \n+             *\n              * Unmapped\n-             * \n+             *\n              * dc:rights Lang Alt External Informal rights statement, selected\n              * by language.\n              */\n \n             /**\n              * ? -> Source\n-             * \n+             *\n              * Unmapped\n-             * \n+             *\n              * dc:source Text External Unique identifier of the work from which\n              * this resource was derived.\n              */\n \n             /**\n              * Keywords -> Subject\n-             * \n+             *\n              * Field: dc:subject\n-             * \n+             *\n              * Type: bag Text\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: An unordered array of descriptive phrases or\n              * keywords that specify the topic of the content of the resource.\n-             * \n+             *\n              * Bibtex-Fields used: doi\n              */\n             if (field.equals(\"keywords\")) {\n@@ -837,17 +832,17 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * Title -> Title\n-             * \n+             *\n              * Field: dc:title\n-             * \n+             *\n              * Type: Lang Alt\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: The title of the document, or the name given to the\n              * resource. Typically, it will be a name by which the resource is\n              * formally known.\n-             * \n+             *\n              * Bibtex-Fields used: title\n              */\n             if (field.equals(\"title\")) {\n@@ -858,15 +853,15 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n             /**\n              * bibtextype -> relation\n-             * \n+             *\n              * Field: dc:relation\n-             * \n+             *\n              * Type: bag Text\n-             * \n+             *\n              * Category: External\n-             * \n+             *\n              * Description: Relationships to other documents.\n-             * \n+             *\n              * Bibtex-Fields used: bibtextype\n              */\n             /**\n@@ -879,9 +874,9 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n         /**\n          * ? -> Format\n-         * \n+         *\n          * Unmapped\n-         * \n+         *\n          * dc:format MIMEType Internal The file format used when saving the\n          * resource. Tools and applications should set this property to the save\n          * format of the data. It may include appropriate qualifiers.\n@@ -890,16 +885,16 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n         /**\n          * Type -> Type\n-         * \n+         *\n          * Field: dc:type\n-         * \n+         *\n          * Type: bag open Choice\n-         * \n+         *\n          * Category: External\n-         * \n+         *\n          * Description: A document type; for example, novel, poem, or working\n          * paper.\n-         * \n+         *\n          * Bibtex-Fields used: title\n          */\n         Object o = entry.getType().getName();\n@@ -910,9 +905,9 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n \n     /**\n      * Try to write the given BibTexEntry as a DublinCore XMP Schema\n-     * \n+     *\n      * Existing DublinCore schemas in the document are not modified.\n-     * \n+     *\n      * @param document\n      *            The pdf document to write to.\n      * @param entry\n@@ -927,17 +922,17 @@ private static void writeToDCSchema(XMPSchemaDublinCore dcSchema,\n     public static void writeDublinCore(PDDocument document, BibtexEntry entry,\n             BibtexDatabase database) throws IOException, TransformerException {\n \n-        List<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n+        List<BibtexEntry> entries = new ArrayList<>();\n         entries.add(entry);\n \n         XMPUtil.writeDublinCore(document, entries, database);\n     }\n \n     /**\n      * Try to write the given BibTexEntries as DublinCore XMP Schemas\n-     * \n+     *\n      * Existing DublinCore schemas in the document are removed\n-     * \n+     *\n      * @param document\n      *            The pdf document to write to.\n      * @param entries\n@@ -951,8 +946,8 @@ public static void writeDublinCore(PDDocument document, BibtexEntry entry,\n      */\n     @SuppressWarnings(\"unchecked\")\n     private static void writeDublinCore(PDDocument document,\n-                                        Collection<BibtexEntry> entries, BibtexDatabase database)\n-            throws IOException, TransformerException {\n+            Collection<BibtexEntry> entries, BibtexDatabase database)\n+                    throws IOException, TransformerException {\n \n         if (database != null) {\n             entries = database.resolveForStrings(entries, false);\n@@ -992,10 +987,10 @@ private static void writeDublinCore(PDDocument document,\n     /**\n      * Try to write the given BibTexEntry in the Document Information (the\n      * properties of the pdf).\n-     * \n+     *\n      * Existing fields values are overriden if the bibtex entry has the\n      * corresponding value set.\n-     * \n+     *\n      * @param document\n      *            The pdf document to write to.\n      * @param entry\n@@ -1006,7 +1001,7 @@ private static void writeDublinCore(PDDocument document,\n      *            database is null the strings will not be resolved.\n      */\n     private static void writeDocumentInformation(PDDocument document,\n-                                                 BibtexEntry entry, BibtexDatabase database) {\n+            BibtexEntry entry, BibtexDatabase database) {\n \n         PDDocumentInformation di = document.getDocumentInformation();\n \n@@ -1019,7 +1014,8 @@ private static void writeDocumentInformation(PDDocument document,\n         boolean useXmpPrivacyFilter =\n                 prefs.getBoolean(JabRefPreferences.USE_XMP_PRIVACY_FILTER);\n         // Fields for which not to write XMP data later on:\n-        TreeSet<String> filters = new TreeSet<String>(Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n+        TreeSet<String> filters = new TreeSet<>(\n+                Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));\n \n         // Set all the values including key and entryType\n         Set<String> fields = entry.getAllFields();\n@@ -1057,20 +1053,20 @@ private static void writeDocumentInformation(PDDocument document,\n             }\n         }\n         di\n-                .setCustomMetadataValue(\"bibtex/entrytype\", entry.getType()\n-                        .getName());\n+        .setCustomMetadataValue(\"bibtex/entrytype\", entry.getType()\n+                .getName());\n     }\n \n     /**\n      * Try to write the given BibTexEntry in the XMP-stream of the given\n      * PDF-file.\n-     * \n+     *\n      * Throws an IOException if the file cannot be read or written, so the user\n      * can remove a lock or cancel the operation.\n-     * \n+     *\n      * The method will overwrite existing BibTeX-XMP-data, but keep other\n      * existing metadata.\n-     * \n+     *\n      * @param file\n      *            The file to write the entries to.\n      * @param bibtexEntries\n@@ -1104,7 +1100,7 @@ public static void writeXMP(File file,\n                         \"Error: Cannot add metadata to encrypted document.\");\n             }\n \n-            if (writePDFInfo && bibtexEntries.size() == 1) {\n+            if (writePDFInfo && (bibtexEntries.size() == 1)) {\n                 XMPUtil.writeDocumentInformation(document, bibtexEntries\n                         .iterator().next(), null);\n                 XMPUtil.writeDublinCore(document, bibtexEntries, null);\n@@ -1161,7 +1157,7 @@ public static void writeXMP(File file,\n \n     /**\n      * Print usage information for the command line tool xmpUtil.\n-     * \n+     *\n      * @see XMPUtil#main(String[])\n      */\n     private static void usage() {\n@@ -1173,20 +1169,20 @@ private static void usage() {\n         System.out.println(\"Read from PDF and print raw XMP:\");\n         System.out.println(\"  xmpUtil -x <pdf>\");\n         System.out\n-                .println(\"Write the entry in <bib> given by <key> to the PDF:\");\n+        .println(\"Write the entry in <bib> given by <key> to the PDF:\");\n         System.out.println(\"  xmpUtil <key> <bib> <pdf>\");\n         System.out.println(\"Write all entries in <bib> to the PDF:\");\n         System.out.println(\"  xmpUtil <bib> <pdf>\");\n         System.out.println(\"\");\n         System.out\n-                .println(\"To report bugs visit http://jabref.sourceforge.net\");\n+        .println(\"To report bugs visit http://jabref.sourceforge.net\");\n     }\n \n     /**\n      * Command-line tool for working with XMP-data.\n-     * \n+     *\n      * Read or write XMP-metadata from or to pdf file.\n-     * \n+     *\n      * Usage:\n      * <dl>\n      * <dd>Read from PDF and print as bibtex:</dd>\n@@ -1198,7 +1194,7 @@ private static void usage() {\n      * <dd>Write all entries in BIB to the PDF:</dd>\n      * <dt>xmpUtil BIB PDF</dt>\n      * </dl>\n-     * \n+     *\n      * @param args\n      *            Command line strings passed to utility.\n      * @throws IOException\n@@ -1207,7 +1203,7 @@ private static void usage() {\n      *             If the given BibtexEntry is malformed.\n      */\n     public static void main(String[] args) throws IOException,\n-            TransformerException {\n+    TransformerException {\n \n         // Don't forget to initialize the preferences\n         if (Globals.prefs == null) {\n@@ -1252,72 +1248,72 @@ public static void main(String[] args) throws IOException,\n                 XMPUtil.usage();\n             }\n             break;\n-            case 2:\n-                if (args[0].equals(\"-x\") && args[1].endsWith(\".pdf\")) {\n-                    // Read from pdf and write as BibTex\n-                    XMPMetadata meta = XMPUtil.readRawXMP(new File(args[1]));\n-\n-                    if (meta == null) {\n-                        System.err\n-                                .println(\"The given pdf does not contain any XMP-metadata.\");\n-                    } else {\n-                        XMLUtil.save(meta.getXMPDocument(), System.out, \"UTF-8\");\n-                    }\n-                    break;\n+        case 2:\n+            if (args[0].equals(\"-x\") && args[1].endsWith(\".pdf\")) {\n+                // Read from pdf and write as BibTex\n+                XMPMetadata meta = XMPUtil.readRawXMP(new File(args[1]));\n+\n+                if (meta == null) {\n+                    System.err\n+                    .println(\"The given pdf does not contain any XMP-metadata.\");\n+                } else {\n+                    XMLUtil.save(meta.getXMPDocument(), System.out, \"UTF-8\");\n                 }\n+                break;\n+            }\n \n-                if (args[0].endsWith(\".bib\") && args[1].endsWith(\".pdf\")) {\n-                    ParserResult result = BibtexParser\n-                            .parse(new FileReader(args[0]));\n+            if (args[0].endsWith(\".bib\") && args[1].endsWith(\".pdf\")) {\n+                ParserResult result = BibtexParser\n+                        .parse(new FileReader(args[0]));\n \n-                    Collection<BibtexEntry> entries = result.getDatabase()\n-                            .getEntries();\n+                Collection<BibtexEntry> entries = result.getDatabase()\n+                        .getEntries();\n \n-                    if (entries.isEmpty()) {\n-                        System.err.println(\"Could not find BibtexEntry in \"\n-                                + args[0]);\n-                    } else {\n-                        XMPUtil.writeXMP(new File(args[1]), entries, result\n-                                .getDatabase(), false);\n-                        System.out.println(\"XMP written.\");\n-                    }\n-                    break;\n+                if (entries.isEmpty()) {\n+                    System.err.println(\"Could not find BibtexEntry in \"\n+                            + args[0]);\n+                } else {\n+                    XMPUtil.writeXMP(new File(args[1]), entries, result\n+                            .getDatabase(), false);\n+                    System.out.println(\"XMP written.\");\n                 }\n+                break;\n+            }\n \n+            XMPUtil.usage();\n+            break;\n+        case 3:\n+            if (!args[1].endsWith(\".bib\") && !args[2].endsWith(\".pdf\")) {\n                 XMPUtil.usage();\n                 break;\n-            case 3:\n-                if (!args[1].endsWith(\".bib\") && !args[2].endsWith(\".pdf\")) {\n-                    XMPUtil.usage();\n-                    break;\n-                }\n+            }\n \n-                ParserResult result = BibtexParser.parse(new FileReader(args[1]));\n+            ParserResult result = BibtexParser.parse(new FileReader(args[1]));\n \n-                BibtexEntry e = result.getDatabase().getEntryByKey(args[0]);\n+            BibtexEntry e = result.getDatabase().getEntryByKey(args[0]);\n \n-                if (e == null) {\n-                    System.err.println(\"Could not find BibtexEntry \" + args[0]\n-                            + \" in \" + args[0]);\n-                } else {\n-                    XMPUtil.writeXMP(new File(args[2]), e, result.getDatabase());\n+            if (e == null) {\n+                System.err.println(\"Could not find BibtexEntry \" + args[0]\n+                        + \" in \" + args[0]);\n+            } else {\n+                XMPUtil.writeXMP(new File(args[2]), e, result.getDatabase());\n \n-                    System.out.println(\"XMP written.\");\n-                }\n-                break;\n+                System.out.println(\"XMP written.\");\n+            }\n+            break;\n \n-            default:\n+        default:\n             XMPUtil.usage();\n         }\n     }\n \n     /**\n      * Will try to read XMP metadata from the given file, returning whether\n      * metadata was found.\n-     * \n+     *\n      * Caution: This method is as expensive as it is reading the actual metadata\n      * itself from the PDF.\n-     * \n+     *\n      * @param is\n      *            The inputstream to read the PDF from.\n      * @return whether a BibtexEntry was found in the given PDF., @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.specialfields;\n \n import java.util.ArrayList;\n@@ -28,7 +28,7 @@\n \n \n     private Printed() {\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        ArrayList<SpecialFieldValue> values = new ArrayList<>();\n         // DO NOT TRANSLATE \"printed\" as this makes the produced .bib files non portable\n         values.add(new SpecialFieldValue(this, \"printed\", \"togglePrinted\", Localization.lang(\"Toogle print status\"), IconTheme.JabRefIcon.PRINTED.getSmallIcon(), Localization.lang(\"Toogle print status\")));\n         this.setValues(values);, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.specialfields;\n \n import java.util.ArrayList;\n@@ -30,16 +30,19 @@\n \n \n     private Priority() {\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        ArrayList<SpecialFieldValue> values = new ArrayList<>();\n         values.add(new SpecialFieldValue(this, null, \"clearPriority\", Localization.lang(\"Clear priority\"), null, Localization.lang(\"No priority information\")));\n-        Icon icon;\n-        icon = IconTheme.JabRefIcon.PRIORITY_HIGH.getSmallIcon();\n+        Icon tmpicon;\n+        tmpicon = IconTheme.JabRefIcon.PRIORITY_HIGH.getSmallIcon();\n         // DO NOT TRANSLATE \"prio1\" etc. as this makes the .bib files non portable\n-        values.add(new SpecialFieldValue(this, \"prio1\", \"setPriority1\", Localization.lang(\"Set priority to high\"), icon, Localization.lang(\"Priority high\")));\n-        icon = IconTheme.JabRefIcon.PRIORITY_MEDIUM.getSmallIcon();\n-        values.add(new SpecialFieldValue(this, \"prio2\", \"setPriority2\", Localization.lang(\"Set priority to medium\"), icon, Localization.lang(\"Priority medium\")));\n-        icon = IconTheme.JabRefIcon.PRIORITY_LOW.getSmallIcon();\n-        values.add(new SpecialFieldValue(this, \"prio3\", \"setPriority3\", Localization.lang(\"Set priority to low\"), icon, Localization.lang(\"Priority low\")));\n+        values.add(new SpecialFieldValue(this, \"prio1\", \"setPriority1\", Localization.lang(\"Set priority to high\"),\n+                tmpicon, Localization.lang(\"Priority high\")));\n+        tmpicon = IconTheme.JabRefIcon.PRIORITY_MEDIUM.getSmallIcon();\n+        values.add(new SpecialFieldValue(this, \"prio2\", \"setPriority2\", Localization.lang(\"Set priority to medium\"),\n+                tmpicon, Localization.lang(\"Priority medium\")));\n+        tmpicon = IconTheme.JabRefIcon.PRIORITY_LOW.getSmallIcon();\n+        values.add(new SpecialFieldValue(this, \"prio3\", \"setPriority3\", Localization.lang(\"Set priority to low\"),\n+                tmpicon, Localization.lang(\"Priority low\")));\n         this.setValues(values);\n         TEXT_DONE_PATTERN = \"Set priority to '%0' for %1 entries\";\n     }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.specialfields;\n \n import java.util.ArrayList;\n@@ -28,7 +28,7 @@\n \n \n     private Quality() {\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        ArrayList<SpecialFieldValue> values = new ArrayList<>();\n         // DO NOT TRANSLATE \"qualityAssured\" as this makes the produced .bib files non portable\n         values.add(new SpecialFieldValue(this, \"qualityAssured\", \"toggleQualityAssured\", Localization.lang(\"Toogle quality assured\"), IconTheme.JabRefIcon.QUALITY_ASSURED.getSmallIcon(), Localization.lang(\"Toogle quality assured\")));\n         this.setValues(values);, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,10 +12,9 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.specialfields;\n \n-import net.sf.jabref.Globals;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -29,7 +28,7 @@\n     private Rank() {\n         TEXT_DONE_PATTERN = \"Set rank to '%0' for %1 entries\";\n \n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        ArrayList<SpecialFieldValue> values = new ArrayList<>();\n         //lab.setName(\"i\");\n         values.add(new SpecialFieldValue(this, null, \"clearRank\", Localization.lang(\"Clear rank\"), null, Localization.lang(\"No rank information\")));\n         // DO NOT TRANSLATE \"rank1\" etc. as this makes the .bib files non portable, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2012 JabRef contributors.\n+/*  Copyright (C) 2012-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -12,7 +12,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n package net.sf.jabref.specialfields;\n \n import java.util.ArrayList;\n@@ -30,14 +30,16 @@\n \n \n     private ReadStatus() {\n-        ArrayList<SpecialFieldValue> values = new ArrayList<SpecialFieldValue>();\n+        ArrayList<SpecialFieldValue> values = new ArrayList<>();\n         values.add(new SpecialFieldValue(this, null, \"clearReadStatus\", Localization.lang(\"Clear read status\"), null, Localization.lang(\"No read status information\")));\n-        Icon icon;\n-        icon = IconTheme.JabRefIcon.READ_STATUS_READ.getSmallIcon();\n+        Icon tmpicon;\n+        tmpicon = IconTheme.JabRefIcon.READ_STATUS_READ.getSmallIcon();\n         // DO NOT TRANSLATE \"read\" as this makes the produced .bib files non portable\n-        values.add(new SpecialFieldValue(this, \"read\", \"setReadStatusToRead\", Localization.lang(\"Set read status to read\"), icon, Localization.lang(\"Read status read\")));\n-        icon = IconTheme.JabRefIcon.READ_STATUS_SKIMMED.getSmallIcon();\n-        values.add(new SpecialFieldValue(this, \"skimmed\", \"setReadStatusToSkimmed\", Localization.lang(\"Set read status to skimmed\"), icon, Localization.lang(\"Read status skimmed\")));\n+        values.add(new SpecialFieldValue(this, \"read\", \"setReadStatusToRead\",\n+                Localization.lang(\"Set read status to read\"), tmpicon, Localization.lang(\"Read status read\")));\n+        tmpicon = IconTheme.JabRefIcon.READ_STATUS_SKIMMED.getSmallIcon();\n+        values.add(new SpecialFieldValue(this, \"skimmed\", \"setReadStatusToSkimmed\",\n+                Localization.lang(\"Set read status to skimmed\"), tmpicon, Localization.lang(\"Read status skimmed\")));\n         this.setValues(values);\n         TEXT_DONE_PATTERN = \"Set read status to '%0' for %1 entries\";\n     }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General public static License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -26,9 +26,9 @@\n import net.sf.jabref.gui.BibtexFields;\n \n /**\n- * \n+ *\n  * @author pattonlk\n- * \n+ *\n  *         Reestructured by ifsteinm. Jan 20th Now it is possible to export more\n  *         than one jabref database. BD creation, insertions and queries where\n  *         reformulated to accomodate the changes. The changes include a\n@@ -39,7 +39,7 @@\n \n public class SQLUtil {\n \n-    private static final ArrayList<String> reservedDBWords = new ArrayList<String>(\n+    private static final ArrayList<String> reservedDBWords = new ArrayList<>(\n             Collections.singletonList(\"key\"));\n \n     private static ArrayList<String> allFields;\n@@ -54,7 +54,7 @@ private SQLUtil() {\n      */\n     private static void refreshFields() {\n         if (SQLUtil.allFields == null) {\n-            SQLUtil.allFields = new ArrayList<String>();\n+            SQLUtil.allFields = new ArrayList<>();\n         } else {\n             SQLUtil.allFields.clear();\n         }\n@@ -63,7 +63,7 @@ private static void refreshFields() {\n     }\n \n     /**\n-     * \n+     *\n      * @return All existent fields for a bibtex entry\n      */\n     public static ArrayList<String> getAllFields() {\n@@ -74,7 +74,7 @@ private static void refreshFields() {\n     }\n \n     /**\n-     * \n+     *\n      * @return Create a common separated field names\n      */\n     public static String getFieldStr() {\n@@ -97,7 +97,7 @@ public static String getFieldStr() {\n     /**\n      * Inserts the elements of a String array into an ArrayList making sure not\n      * to duplicate entries in the ArrayList\n-     * \n+     *\n      * @param list\n      *            The ArrayList containing unique entries\n      * @param array\n@@ -121,7 +121,7 @@ public static String getFieldStr() {\n     /**\n      * Generates DML specifying table columns and their datatypes. The output of\n      * this routine should be used within a CREATE TABLE statement.\n-     * \n+     *\n      * @param fields\n      *            Contains unique field names\n      * @param datatype\n@@ -146,7 +146,7 @@ public static String fieldsAsCols(ArrayList<String> fields, String datatype) {\n     }\n \n     /**\n-     * \n+     *\n      * @param allFields\n      *            All existent fields for a given entry type\n      * @param reqFields\n@@ -183,7 +183,7 @@ public static String fieldsAsCols(ArrayList<String> fields, String datatype) {\n \n     /**\n      * Return a message raised from a SQLException\n-     * \n+     *\n      * @param ex\n      *            The SQLException raised\n      */\n@@ -200,7 +200,7 @@ public static String getExceptionMessage(Exception ex) {\n     /**\n      * return a ResultSet with the result of a \"SELECT *\" query for a given\n      * table\n-     * \n+     *\n      * @param conn\n      *            Connection to the database\n      * @param tableName\n@@ -218,7 +218,7 @@ public static ResultSet queryAllFromTable(Connection conn, String tableName)\n \n     /**\n      * Utility method for processing DML with proper output\n-     * \n+     *\n      * @param out\n      *            The output (PrintStream or Connection) object to which the DML\n      *            should be sent\n@@ -238,7 +238,7 @@ public static void processQuery(Object out, String dml) throws SQLException {\n \n     /**\n      * Utility method for processing DML with proper output\n-     * \n+     *\n      * @param out\n      *            The output (PrintStream or Connection) object to which the DML\n      *            should be sent\n@@ -249,7 +249,7 @@ public static void processQuery(Object out, String dml) throws SQLException {\n     public static Object processQueryWithResults(Object out, String query)\n             throws SQLException {\n         if (out instanceof PrintStream) {// TODO: how to handle the PrintStream\n-                                         // case?\n+            // case?\n             PrintStream fout = (PrintStream) out;\n             fout.println(query);\n             return fout;\n@@ -263,7 +263,7 @@ public static Object processQueryWithResults(Object out, String query)\n \n     /**\n      * This routine returns the JDBC url corresponding to the DBStrings input.\n-     * \n+     *\n      * @param dbStrings\n      *            The DBStrings to use to make the connection\n      * @return The JDBC url corresponding to the input DBStrings\n@@ -280,7 +280,7 @@ public static String createJDBCurl(DBStrings dbStrings, boolean withDBName) {\n      * Process a query and returns only the first result of a result set as a\n      * String. To be used when it is certain that only one String (single cell)\n      * will be returned from the DB\n-     * \n+     *\n      * @param conn\n      *            The Connection object to which the DML should be sent\n      * @param query\n@@ -300,7 +300,7 @@ public static String processQueryWithSingleResult(Connection conn,\n \n     /**\n      * Utility method for executing DML\n-     * \n+     *\n      * @param conn\n      *            The DML Connection object that will execute the SQL\n      * @param qry\n@@ -319,7 +319,7 @@ private static void executeQuery(Connection conn, String qry)\n \n     /**\n      * Utility method for executing DML\n-     * \n+     *\n      * @param conn\n      *            The DML Connection object that will execute the SQL\n      * @param qry, @@ -14,7 +14,7 @@\n     You should have received a copy of the GNU General Public License along\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n-*/\n+ */\n \n // created by : Morten O. Alver 2003\n \n@@ -148,7 +148,7 @@ public static String parseField(String content) {\n     /**\n      * Will return the publication date of the given bibtex entry in conformance to ISO 8601, i.e. either YYYY or\n      * YYYY-MM.\n-     * \n+     *\n      * @param entry\n      * @return will return the publication date of the entry or null if no year was found.\n      */\n@@ -175,9 +175,9 @@ public static String getPublicationDate(BibtexEntry entry) {\n     /**\n      * This method returns a String similar to the one passed in, except that it is molded into a form that is\n      * acceptable for bibtex.\n-     * \n+     *\n      * Watch-out that the returned string might be of length 0 afterwards.\n-     * \n+     *\n      * @param key mayBeNull\n      */\n     public static String checkLegalKey(String key) {\n@@ -224,7 +224,7 @@ public static String replaceSpecialCharacters(String s) {\n     }\n \n     public static TreeSet<String> findDeliminatedWordsInField(BibtexDatabase db, String field, String deliminator) {\n-        TreeSet<String> res = new TreeSet<String>();\n+        TreeSet<String> res = new TreeSet<>();\n \n         for (String s : db.getKeySet()) {\n             BibtexEntry be = db.getEntryById(s);\n@@ -243,14 +243,14 @@ public static String replaceSpecialCharacters(String s) {\n     /**\n      * Returns a HashMap containing all words used in the database in the given field type. Characters in\n      * <code>remove</code> are not included.\n-     * \n+     *\n      * @param db a <code>BibtexDatabase</code> value\n      * @param field a <code>String</code> value\n      * @param remove a <code>String</code> value\n      * @return a <code>HashSet</code> value\n      */\n     public static TreeSet<String> findAllWordsInField(BibtexDatabase db, String field, String remove) {\n-        TreeSet<String> res = new TreeSet<String>();\n+        TreeSet<String> res = new TreeSet<>();\n         StringTokenizer tok;\n         for (String s : db.getKeySet()) {\n             BibtexEntry be = db.getEntryById(s);\n@@ -267,13 +267,13 @@ public static String replaceSpecialCharacters(String s) {\n \n     /**\n      * Finds all authors' last names in all the given fields for the given database.\n-     * \n+     *\n      * @param db The database.\n      * @param fields The fields to look in.\n      * @return a set containing the names.\n      */\n     public static Set<String> findAuthorLastNames(BibtexDatabase db, List<String> fields) {\n-        Set<String> res = new TreeSet<String>();\n+        Set<String> res = new TreeSet<>();\n         for (String s : db.getKeySet()) {\n             BibtexEntry be = db.getEntryById(s);\n             for (String field : fields) {\n@@ -298,9 +298,9 @@ public static String replaceSpecialCharacters(String s) {\n     /**\n      * Make sure an URL is \"portable\", in that it doesn't contain bad characters that break the open command in some\n      * OSes.\n-     * \n+     *\n      * A call to this method will also remove \\\\url{} enclosings and clean Doi links.\n-     * \n+     *\n      * @param link :the URL to sanitize.\n      * @return Sanitized URL\n      */\n@@ -337,11 +337,12 @@ public static String sanitizeUrl(String link) {\n         try {\n             link = URLDecoder.decode(link, \"UTF-8\");\n         } catch (UnsupportedEncodingException ignored) {\n+            // Ignored\n         }\n \n         /**\n          * Fix for: [ 1574773 ] sanitizeUrl() breaks ftp:// and file:///\n-         * \n+         *\n          * http://sourceforge.net/tracker/index.php?func=detail&aid=1574773&group_id=92314&atid=600306\n          */\n         try {\n@@ -353,7 +354,7 @@ public static String sanitizeUrl(String link) {\n \n     public static ArrayList<String[]> parseMethodsCalls(String calls) throws RuntimeException {\n \n-        ArrayList<String[]> result = new ArrayList<String[]>();\n+        ArrayList<String[]> result = new ArrayList<>();\n \n         char[] c = calls.toCharArray();\n \n@@ -458,7 +459,7 @@ public static String expandBrackets(String bracketString, BibtexEntry entry, Bib\n     /**\n      * Sets empty or non-existing owner fields of bibtex entries inside a List to a specified default value. Timestamp\n      * field is also set. Preferences are checked to see if these options are enabled.\n-     * \n+     *\n      * @param bibs List of bibtex entries\n      */\n     public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean overwriteOwner, boolean overwriteTimestamp, boolean markEntries) {\n@@ -489,7 +490,7 @@ public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean over\n     /**\n      * Sets empty or non-existing owner fields of a bibtex entry to a specified default value. Timestamp field is also\n      * set. Preferences are checked to see if these options are enabled.\n-     * \n+     *\n      * @param entry The entry to set fields for.\n      * @param overwriteOwner Indicates whether owner should be set if it is already set.\n      * @param overwriteTimestamp Indicates whether timestamp should be set if it is already set.\n@@ -524,7 +525,7 @@ private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, Stri\n     /**\n      * Collect file links from the given set of fields, and add them to the list contained in the field\n      * GUIGlobals.FILE_FIELD.\n-     * \n+     *\n      * @param database The database to modify.\n      * @param fields The fields to find links in.\n      * @return A CompoundEdit specifying the undo operation for the whole operation.\n@@ -536,7 +537,7 @@ public static NamedCompound upgradePdfPsToFile(BibtexDatabase database, String[]\n     /**\n      * Collect file links from the given set of fields, and add them to the list contained in the field\n      * GUIGlobals.FILE_FIELD.\n-     * \n+     *\n      * @param entries The entries to modify.\n      * @param fields The fields to find links in.\n      * @return A CompoundEdit specifying the undo operation for the whole operation.\n@@ -580,13 +581,13 @@ public static NamedCompound upgradePdfPsToFile(Collection<BibtexEntry> entries,\n      * Currently there are four types of groups: AllEntriesGroup, SearchGroup - do not support explicit assignment.\n      * ExplicitGroup - never modifies entries. KeywordGroup - only this modifies entries upon assignment/removal.\n      * Modifications are acceptable unless they affect a standard field (such as \"author\") besides the \"keywords\" field.\n-     * \n+     *\n      * @param parent The Component used as a parent when displaying a confirmation dialog.\n      * @return true if the assignment has no undesired side effects, or the user chose to perform it anyway. false\n      *         otherwise (this indicates that the user has aborted the assignment).\n      */\n     public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEntry[] entries, BibtexDatabase db, Component parent) {\n-        Vector<String> affectedFields = new Vector<String>();\n+        Vector<String> affectedFields = new Vector<>();\n         for (AbstractGroup group : groups) {\n             if (group instanceof KeywordGroup) {\n                 KeywordGroup kg = (KeywordGroup) group;\n@@ -608,7 +609,7 @@ public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEn\n \n         // show a warning, then return\n         StringBuffer message = // JZTODO lyrics...\n-        new StringBuffer(\"This action will modify the following field(s)\\n\" + \"in at least one entry each:\\n\");\n+                new StringBuffer(\"This action will modify the following field(s)\\n\" + \"in at least one entry each:\\n\");\n         for (int i = 0; i < affectedFields.size(); ++i) {\n             message.append(affectedFields.elementAt(i)).append(\"\\n\");\n         }\n@@ -646,7 +647,7 @@ public static boolean warnAssignmentSideEffects(AbstractGroup[] groups, BibtexEn\n     /**\n      * This method looks up what kind of external binding is used for the given field, and constructs on OpenFileFilter\n      * suitable for browsing for an external file.\n-     * \n+     *\n      * @param fieldName The BibTeX field in question.\n      * @return The file filter.\n      */\n@@ -665,7 +666,7 @@ public static OpenFileFilter getFileFilterForField(String fieldName) {\n     /**\n      * Set a given field to a given value for all entries in a Collection. This method DOES NOT update any UndoManager,\n      * but returns a relevant CompoundEdit that should be registered by the caller.\n-     * \n+     *\n      * @param entries The entries to set the field for.\n      * @param field The name of the field to set.\n      * @param text The value to set. This value can be null, indicating that the field should be cleared.\n@@ -696,7 +697,7 @@ public static UndoableEdit massSetField(Collection<BibtexEntry> entries, String\n \n     /**\n      * Move contents from one field to another for a Collection of entries.\n-     * \n+     *\n      * @param entries The entries to do this operation for.\n      * @param field The field to move contents from.\n      * @param newField The field to move contents into.\n@@ -761,7 +762,7 @@ public static int intValueOf(String str) {\n \n     /**\n      * Static equals that can also return the right result when one of the objects is null.\n-     * \n+     *\n      * @param one The object whose equals method is called if the first is not null.\n      * @param two The object passed to the first one if the first is not null.\n      * @return <code>one == null ? two == null : one.equals(two);</code>\n@@ -772,7 +773,7 @@ public static boolean equals(Object one, Object two) {\n \n     /**\n      * Run an AbstractWorker's methods using Spin features to put each method on the correct thread.\n-     * \n+     *\n      * @param worker The worker to run.\n      * @throws Throwable\n      */\n@@ -825,7 +826,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n      * @return an ArrayList containing the keywords. An emtpy list if keywords are null or empty\n      */\n     public static ArrayList<String> getSeparatedKeywords(String keywords) {\n-        ArrayList<String> res = new ArrayList<String>();\n+        ArrayList<String> res = new ArrayList<>();\n         if (keywords == null) {\n             return res;\n         }\n@@ -900,7 +901,7 @@ public static void updateField(BibtexEntry be, String field, String newValue, Na\n \n     /**\n      * Binds ESC-Key to cancel button\n-     * \n+     *\n      * @param rootPane the pane to bind the action to. Typically, this variable is retrieved by this.getRootPane();\n      * @param cancelAction the action to bind\n      */\n@@ -914,7 +915,7 @@ public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane, Action c\n \n     /**\n      * Download the URL and return contents as a String.\n-     * \n+     *\n      * @param source\n      * @return\n      * @throws IOException\n@@ -926,7 +927,7 @@ public static String getResults(URL source) throws IOException {\n \n     /**\n      * Download the URL and return contents as a String.\n-     * \n+     *\n      * @param source\n      * @return\n      * @throws IOException\n@@ -938,7 +939,7 @@ public static String getResults(URLConnection source) throws IOException {\n \n     /**\n      * Download the URL using specified encoding and return contents as a String.\n-     * \n+     *\n      * @param source encoding\n      * @return\n      * @throws IOException\n@@ -948,7 +949,7 @@ public static String getResultsWithEncoding(URL source, String encoding) throws\n     }\n     /**\n      * Download the URL using specified encoding and return contents as a String.\n-     * \n+     *\n      * @param source encoding\n      * @return\n      * @throws IOException\n@@ -975,7 +976,7 @@ public static String getResultsWithEncoding(URLConnection source, String encodin\n \n     /**\n      * Read results from a file instead of an URL. Just for faster debugging.\n-     * \n+     *\n      * @param f\n      * @return\n      * @throws IOException\n@@ -1059,14 +1060,14 @@ public static Runnable autoSetLinks(final Collection<BibtexEntry> entries, final\n             @Override\n             public void run() {\n                 // determine directories to search in\n-                ArrayList<File> dirs = new ArrayList<File>();\n+                ArrayList<File> dirs = new ArrayList<>();\n                 String[] dirsS = metaData.getFileDirectory(Globals.FILE_FIELD);\n                 for (String dirs1 : dirsS) {\n                     dirs.add(new File(dirs1));\n                 }\n \n                 // determine extensions\n-                Collection<String> extensions = new ArrayList<String>();\n+                Collection<String> extensions = new ArrayList<>();\n                 for (final ExternalFileType type : types) {\n                     extensions.add(type.getExtension());\n                 }\n@@ -1187,22 +1188,22 @@ public void run() {\n      * @return the runnable able to perform the autosetting\n      */\n     public static Runnable autoSetLinks(final BibtexEntry entry, final FileListTableModel singleTableModel, final MetaData metaData, final ActionListener callback, final JDialog diag) {\n-        final Collection<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n+        final Collection<BibtexEntry> entries = new ArrayList<>();\n         entries.add(entry);\n \n         return Util.autoSetLinks(entries, null, null, singleTableModel, metaData, callback, diag);\n     }\n \n     /**\n      * Returns the list of linked files. The files have the absolute filename\n-     * \n+     *\n      * @param bes list of BibTeX entries\n      * @param fileDirs list of directories to try for expansion\n-     * \n+     *\n      * @return list of files. May be empty\n      */\n     public static List<File> getListOfLinkedFiles(BibtexEntry[] bes, String[] fileDirs) {\n-        ArrayList<File> res = new ArrayList<File>();\n+        ArrayList<File> res = new ArrayList<>();\n         for (BibtexEntry entry : bes) {\n             FileListTableModel tm = new FileListTableModel();\n             tm.setContent(entry.getField(\"file\"));\n@@ -1219,7 +1220,7 @@ public static Runnable autoSetLinks(final BibtexEntry entry, final FileListTable\n     }\n \n     public static Map<BibtexEntry, List<File>> findAssociatedFiles(Collection<BibtexEntry> entries, Collection<String> extensions, Collection<File> directories) {\n-        HashMap<BibtexEntry, List<File>> result = new HashMap<BibtexEntry, List<File>>();\n+        HashMap<BibtexEntry, List<File>> result = new HashMap<>();\n \n         // First scan directories\n         Set<File> filesWithExtension = FileFinder.findFiles(extensions, directories);, @@ -1,6 +1,20 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref;\n \n-import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.fieldeditors.TextArea;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -34,7 +48,7 @@ public void testHighlighting() {\n         Assert.assertEquals(\"Expected no highlighting area \", 0, highlight.length);\n \n         //set up arraylist with \"word\" and inform the fieldtextarea\n-        ArrayList<String> wordsToHighlight = new ArrayList<String>();\n+        ArrayList<String> wordsToHighlight = new ArrayList<>();\n         wordsToHighlight.add(contentToHighlight1);\n         ta.searchText(wordsToHighlight);\n \n@@ -85,14 +99,14 @@ public void testHighlightingContentIndependence() {\n         String textOne = ta.getText();\n \n         //set up arraylist with \"word\" and inform the fieldtextarea\n-        ArrayList<String> wordsToHighlight = new ArrayList<String>();\n+        ArrayList<String> wordsToHighlight = new ArrayList<>();\n         wordsToHighlight.add(contentToHighlight1);\n         ta.searchText(wordsToHighlight);\n \n         String textTwo = ta.getText();\n \n         //set up empty arraylist and inform the fieldtextarea\n-        ArrayList<String> wordsToHighlight2 = new ArrayList<String>();\n+        ArrayList<String> wordsToHighlight2 = new ArrayList<>();\n         ta.searchText(wordsToHighlight2);\n \n         String textThree = ta.getText();, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.external;\n \n import static org.junit.Assert.assertEquals;\n@@ -19,9 +34,9 @@\n \n public class RegExpFileSearchTests {\n \n-    private String filesDirectory = \"/src/test/resources/net/sf/jabref/imports/unlinkedFilesTestFolder\";\n+    private final String filesDirectory = \"/src/test/resources/net/sf/jabref/imports/unlinkedFilesTestFolder\";\n+\n \n-    \n     @Before\n     public void setUp(){\n         Globals.prefs = JabRefPreferences.getInstance();\n@@ -30,7 +45,7 @@ public void setUp(){\n     @Test\n     public void testFindFiles() {\n         //given\n-        List<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n+        List<BibtexEntry> entries = new ArrayList<>();\n         BibtexEntry entry = new BibtexEntry(\"123\", BibtexEntryTypes.ARTICLE);\n         entry.setField(BibtexEntry.KEY_FIELD, \"pdfInDatabase\");\n         entry.setField(\"year\", \"2001\");\n@@ -47,7 +62,7 @@ public void testFindFiles() {\n         //then\n         assertEquals(1, result.keySet().size());\n     }\n-    \n+\n     @After\n     public void tearDown(){\n         Globals.prefs = null;, ", 591, 545, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 1136], ["Oliver Kopp", "quick hack to have \"merge entries\" avaiable at RightClickMenu", "10/26/15, 06:52:12 AM", "Oliver Kopp", "528083d3446aec43e3310cf11d81406793a01287", ["src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/RightClickMenu.java"], "@@ -394,7 +394,8 @@ public void actionPerformed(ActionEvent e) {\n             prefs.getKey(KeyBinds.CLEANUP),\n             IconTheme.JabRefIcon.CLEANUP_ENTRIES.getIcon());\n \n-    private final AbstractAction mergeEntries = new GeneralAction(Actions.MERGE_ENTRIES,\n+    // used by RightClickMenu\n+    final AbstractAction mergeEntries = new GeneralAction(Actions.MERGE_ENTRIES,\n             Localization.menuTitle(\"Merge entries\"),\n             Localization.lang(\"Merge entries\"),\n             IconTheme.JabRefIcon.MERGE_ENTRIES.getIcon());, @@ -189,6 +189,9 @@ public RightClickMenu(BasePanel panel_, MetaData metaData_) {\n \n         add(JabRef.jrf.massSetField);\n         add(JabRef.jrf.manageKeywords);\n+        // TODO: QUICK HACK. This should be done using panel.runCommand(...);\n+        // TODO: This should be disabled if (!multiple)\n+        add(JabRef.jrf.mergeEntries);\n \n         addSeparator(); // for \"add/move/remove to/from group\" entries (appended here)\n , ", 5, 1, "\"modified, modified, \"", 6], ["matthiasgeiger", "remove unused code regarding imports and exports", "10/26/15, 08:03:53 PM", "matthiasgeiger", "9001201e22600295b5a110051e8dfbaa9b1bc3a8", ["src/main/java/net/sf/jabref/gui/JabRefFrame.java"], "@@ -1823,39 +1823,6 @@ public void run() {\n             });\n     }\n \n-    private void setUpImportMenu(JMenu importMenu, boolean intoNew_) {\n-        importMenu.removeAll();\n-\n-        // Add a menu item for autodetecting import format:\n-        importMenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_));\n-\n-        // Add custom importers\n-        importMenu.addSeparator();\n-\n-        SortedSet<ImportFormat> customImporters = Globals.importFormatReader.getCustomImportFormats();\n-        JMenu submenu = new JMenu(Localization.lang(\"Custom importers\"));\n-        submenu.setMnemonic(KeyEvent.VK_S);\n-\n-        // Put in all formatters registered in ImportFormatReader:\n-        for (ImportFormat imFo : customImporters) {\n-            submenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_, imFo));\n-        }\n-\n-        if (!customImporters.isEmpty()) {\n-            submenu.addSeparator();\n-        }\n-\n-        submenu.add(customImpAction);\n-\n-        importMenu.add(submenu);\n-        importMenu.addSeparator();\n-\n-        // Put in all formatters registered in ImportFormatReader:\n-        for (ImportFormat imFo : Globals.importFormatReader.getBuiltInInputFormats()) {\n-            importMenu.add(new ImportMenuItem(JabRefFrame.this, intoNew_, imFo));\n-        }\n-    }\n-\n     public FileHistory getFileHistory() {\n         return fileHistory;\n     }, ", 0, 33, "\"modified, \"", 33], ["Simon Harrer", "coveralls.io does not work anymore with our repo", "11/10/15, 08:55:09 AM", "Simon Harrer", "53dc24953d7689f4df37e6f98cbec22371e7bb84", ["README.md"], "@@ -4,7 +4,6 @@\n [![Dependency Status](https://www.versioneye.com/user/projects/557f2723386664002000009c/badge.svg?style=flat)](https://www.versioneye.com/user/projects/557f2723386664002000009c)\n [![codecov.io](https://codecov.io/github/JabRef/jabref/coverage.svg?branch=master)](https://codecov.io/github/JabRef/jabref?branch=master)\n [![Coverity Status](https://badges.ondemand.coverity.com/streams/unhetcisrp7nna3b5cilqev4bk)](https://ondemand.coverity.com/streams/unhetcisrp7nna3b5cilqev4bk)\n-[![Coverage Status](https://coveralls.io/repos/JabRef/jabref/badge.svg)](https://coveralls.io/r/JabRef/jabref)\n [![License](https://img.shields.io/badge/license-GPLv2-blue.svg)](http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt)\n [![Join the chat at https://gitter.im/JabRef/jabref](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/JabRef/jabref?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n [![Donation](https://img.shields.io/badge/donate-paypal-orange.svg)](https://www.paypal.com/cgi-bin/webscr?item_name=JabRef+Bibliography+Manager&cmd=_donations&lc=US&currency_code=EUR&business=jabrefmail%40gmail.com), ", 0, 1, "\"modified, \"", 1], ["Oscar Gustafsson", "Changes based on comments", "10/27/15, 10:23:37 AM", "Oscar Gustafsson", "1e86937b3ba6674c7656387db9130fb2ddbdf6b2", ["src/main/java/net/sf/jabref/bibtex/EntrySorter.java", "src/main/java/net/sf/jabref/logic/util/strings/StringUtil.java"], "@@ -116,7 +116,6 @@ public void databaseChanged(DatabaseChangeEvent e) {\n                 changed = true;\n                 break;\n             case CHANGED_ENTRY:\n-                // Entry changed. Resort list:\n                 pos = Collections.binarySearch(set, e.getEntry(), comp);\n                 int posOld = set.indexOf(e.getEntry());\n                 if (pos < 0) {, @@ -459,12 +459,10 @@ private static String encodeStringArray(String[] entry) {\n             if (!escaped && (c == '\\\\')) {\n                 escaped = true;\n                 continue;\n-            }\n-            else if (!escaped && (c == ':')) {\n+            } else if (!escaped && (c == ':')) {\n                 thisEntry.add(sb.toString());\n                 sb = new StringBuilder();\n-            }\n-            else if (!escaped && (c == ';')) {\n+            } else if (!escaped && (c == ';')) {\n                 thisEntry.add(sb.toString());\n                 sb = new StringBuilder();\n                 newList.add(thisEntry);, ", 2, 5, "\"modified, modified, \"", 7], ["Simon Harrer", "Removes option to hide the BibTeX Code tab in the entry editor.", "10/27/15, 10:35:30 AM", "Simon Harrer", "42477c5f50bc35e1c34154fd5f3abd1720979c58", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java", "src/main/java/net/sf/jabref/gui/preftabs/EntryEditorPrefsTab.java"], "@@ -1,4 +1,5 @@\n [master]\n+    - Removes option to hide the BibTeX Code tab in the entry editor.\n     - Removes option to set a custom icon for the external file types. This is not possible anymore with the new icon font.\n     - Added combo box in MassSetFieldAction to simplify selecting the correct field name\n     - Fixes bug when having added and then removed a personal journal list, an exception is always shown on startup, @@ -137,7 +137,6 @@\n     public static final String SEARCH_REQ = \"searchReq\";\n     public static final String CASE_SENSITIVE_SEARCH = \"caseSensitiveSearch\";\n     public static final String DEFAULT_AUTO_SORT = \"defaultAutoSort\";\n-    public static final String SHOW_SOURCE = \"showSource\";\n     public static final String DEFAULT_SHOW_SOURCE = \"defaultShowSource\";\n     public static final String STRINGS_SIZE_Y = \"stringsSizeY\";\n     public static final String STRINGS_SIZE_X = \"stringsSizeX\";\n@@ -542,7 +541,6 @@ private JabRefPreferences() {\n         defaults.put(DUPLICATES_SIZE_X, 800);\n         defaults.put(DUPLICATES_SIZE_Y, 600);\n         defaults.put(DEFAULT_SHOW_SOURCE, Boolean.FALSE);\n-        defaults.put(SHOW_SOURCE, Boolean.TRUE);\n         defaults.put(DEFAULT_AUTO_SORT, Boolean.FALSE);\n         defaults.put(CASE_SENSITIVE_SEARCH, Boolean.FALSE);\n         defaults.put(SEARCH_REQ, Boolean.TRUE);, @@ -199,7 +199,7 @@ public EntryEditor(JabRefFrame frame, BasePanel panel, BibtexEntry entry) {\n         setupSourcePanel();\n         add(tabbed, BorderLayout.CENTER);\n         tabbed.addChangeListener(tabListener);\n-        if (prefs.getBoolean(JabRefPreferences.SHOW_SOURCE) && prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE)) {\n+        if (prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE)) {\n             tabbed.setSelectedIndex(sourceIndex);\n         }\n \n@@ -299,11 +299,9 @@ private void setupFieldPanels() {\n         }\n \n         srcPanel.setName(Localization.lang(\"BibTeX source\"));\n-        if (Globals.prefs.getBoolean(JabRefPreferences.SHOW_SOURCE)) {\n-            tabbed.addTab(Localization.lang(\"BibTeX source\"), IconTheme.JabRefIcon.SOURCE.getSmallIcon(), srcPanel,\n-                    Localization.lang(\"Show/edit BibTeX source\"));\n-            tabs.add(srcPanel);\n-        }\n+        tabbed.addTab(Localization.lang(\"BibTeX source\"), IconTheme.JabRefIcon.SOURCE.getSmallIcon(), srcPanel,\n+                Localization.lang(\"Show/edit BibTeX source\"));\n+        tabs.add(srcPanel);\n         sourceIndex = tabs.size() - 1; // Set the sourceIndex variable.\n         srcPanel.setFocusCycleRoot(true);\n     }, @@ -36,7 +36,6 @@\n class EntryEditorPrefsTab extends JPanel implements PrefsTab {\n \n     private final JCheckBox autoOpenForm;\n-    private final JCheckBox showSource;\n     private final JCheckBox defSource;\n     private final JCheckBox emacsMode;\n     private final JCheckBox emacsRebindCtrlA;\n@@ -78,7 +77,6 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n \n         autoOpenForm = new JCheckBox(Localization.lang(\"Open editor when a new entry is created\"));\n         defSource = new JCheckBox(Localization.lang(\"Show BibTeX source by default\"));\n-        showSource = new JCheckBox(Localization.lang(\"Show BibTeX source panel\"));\n         emacsMode = new JCheckBox(Localization.lang(\"Use Emacs key bindings\"));\n         emacsRebindCtrlA = new JCheckBox(Localization.lang(\"Rebind C-a, too\"));\n         emacsRebindCtrlF = new JCheckBox(Localization.lang(\"Rebind C-f, too\"));\n@@ -106,49 +104,20 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n         firstNameModeButtonGroup.add(firstNameModeBoth);\n \n         Insets marg = new Insets(0, 20, 3, 0);\n-        defSource.setMargin(marg);\n-        // We need a listener on showSource to enable and disable the source panel-related choices:\n-        showSource.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                defSource.setEnabled(showSource.isSelected());\n-            }\n-        }\n-                );\n \n         emacsRebindCtrlA.setMargin(marg);\n         // We need a listener on showSource to enable and disable the source panel-related choices:\n-        emacsMode.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n-            }\n-        }\n-                );\n+        emacsMode.addChangeListener(event -> emacsRebindCtrlA.setEnabled(emacsMode.isSelected()));\n \n         emacsRebindCtrlF.setMargin(marg);\n         // We need a listener on showSource to enable and disable the source panel-related choices:\n-        emacsMode.addChangeListener(new ChangeListener() {\n-            public void stateChanged(ChangeEvent event) {\n-                emacsRebindCtrlF.setEnabled(emacsMode.isSelected());\n-            }\n-        }\n-        );\n+        emacsMode.addChangeListener(event -> emacsRebindCtrlF.setEnabled(emacsMode.isSelected()));\n \n         \n         autoCompFields = new JTextField(40);\n         // We need a listener on autoComplete to enable and disable the\n         // autoCompFields text field:\n-        autoComplete.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent event) {\n-                setAutoCompleteElementsEnabled(autoComplete.isSelected());\n-            }\n-        }\n-                );\n+        autoComplete.addChangeListener(event -> setAutoCompleteElementsEnabled(autoComplete.isSelected()));\n \n         FormLayout layout = new FormLayout\n                 (// columns\n@@ -164,13 +133,12 @@ public void stateChanged(ChangeEvent event) {\n         builder.addSeparator(Localization.lang(\"Editor options\"), cc.xyw(1, 1, 5));\n         builder.add(autoOpenForm, cc.xy(2, 3));\n         builder.add(disableOnMultiple, cc.xy(2, 5));\n-        builder.add(showSource, cc.xy(2, 7));\n-        builder.add(defSource, cc.xy(2, 9));\n-        builder.add(emacsMode, cc.xy(2, 11));\n-        builder.add(emacsRebindCtrlA, cc.xy(2, 13));\n-        builder.add(emacsRebindCtrlF, cc.xy(2, 15));\n+        builder.add(defSource, cc.xy(2, 7));\n+        builder.add(emacsMode, cc.xy(2, 9));\n+        builder.add(emacsRebindCtrlA, cc.xy(2, 11));\n+        builder.add(emacsRebindCtrlF, cc.xy(2, 13));\n         \n-        builder.addSeparator(Localization.lang(\"Autocompletion options\"), cc.xyw(1, 17, 5));\n+        builder.addSeparator(Localization.lang(\"Autocompletion options\"), cc.xyw(1, 15, 5));\n         builder.add(autoComplete, cc.xy(2, 19));\n         \n         DefaultFormBuilder builder3 = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, fill:150dlu\",\"\"));\n@@ -202,7 +170,6 @@ public void stateChanged(ChangeEvent event) {\n     public void setValues() {\n         autoOpenForm.setSelected(prefs.getBoolean(JabRefPreferences.AUTO_OPEN_FORM));\n         defSource.setSelected(prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE));\n-        showSource.setSelected(prefs.getBoolean(JabRefPreferences.SHOW_SOURCE));\n         emacsMode.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS));\n         emacsRebindCtrlA.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA));\n         emacsRebindCtrlF.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CF));\n@@ -232,8 +199,6 @@ public void setValues() {\n         oldAutoCompFModeAbbr = firstNameModeAbbr.isSelected();\n         oldAutoCompFModeFull = firstNameModeFull.isSelected();\n \n-        // This choice only makes sense when the source panel is visible:\n-        defSource.setEnabled(showSource.isSelected());\n         // similar for emacs CTRL-a and emacs mode\n         emacsRebindCtrlA.setEnabled(emacsMode.isSelected());\n         // Autocomplete fields is only enabled when autocompletion is selected\n@@ -269,12 +234,10 @@ public void storeSettings() {\n         prefs.putBoolean(JabRefPreferences.DISABLE_ON_MULTIPLE_SELECTION, disableOnMultiple.isSelected());\n         // We want to know if the following settings have been modified:\n         boolean oldAutoComplete = prefs.getBoolean(JabRefPreferences.AUTO_COMPLETE);\n-        boolean oldShowSource = prefs.getBoolean(JabRefPreferences.SHOW_SOURCE);\n         String oldAutoCompFields = prefs.get(JabRefPreferences.AUTO_COMPLETE_FIELDS);\n         prefs.putInt(JabRefPreferences.SHORTEST_TO_COMPLETE, (Integer) shortestToComplete.getValue());\n         prefs.putBoolean(JabRefPreferences.AUTO_COMPLETE, autoComplete.isSelected());\n         prefs.put(JabRefPreferences.AUTO_COMPLETE_FIELDS, autoCompFields.getText());\n-        prefs.putBoolean(JabRefPreferences.SHOW_SOURCE, showSource.isSelected());\n         if (autoCompBoth.isSelected()) {\n             prefs.putBoolean(JabRefPreferences.AUTO_COMP_FIRST_LAST, false);\n             prefs.putBoolean(JabRefPreferences.AUTO_COMP_LAST_FIRST, false);\n@@ -297,7 +260,7 @@ else if (autoCompFF.isSelected()) {\n \n         // We need to remove all entry editors from cache if the source panel setting\n         // or the autocompletion settings have been changed:\n-        if (oldShowSource != showSource.isSelected() || oldAutoComplete != autoComplete.isSelected()\n+        if (oldAutoComplete != autoComplete.isSelected()\n                 || !oldAutoCompFields.equals(autoCompFields.getText()) ||\n                 oldAutoCompFF != autoCompFF.isSelected() || oldAutoCompLF != autoCompLF.isSelected() ||\n                 oldAutoCompFModeAbbr != firstNameModeAbbr.isSelected() ||, ", 14, 54, "\"modified, modified, modified, modified, \"", 68], ["Oscar Gustafsson", "Replaced Integer.valueOf() with Util.intValueOf()", "10/27/15, 12:03:26 PM", "Oscar Gustafsson", "526f77fee541c0f9b18b94af9e187d593db56c1e", ["src/main/java/net/sf/jabref/importer/fetcher/JSTORFetcher2.java"], "@@ -156,7 +156,7 @@ public boolean processQuery(String query, ImportInspector dialog, OutputPrinter\n                 }\n                 //System.out.println(\"JSTORFetcher2 getCitations numberofrefs=\" + numberOfRefs[0]);\n                 //System.out.println(\"JSTORFetcher2 getCitations numberofrefs=\" + \" refsRequested=\" + numberOfRefs[1]);\n-                refsRequested = Integer.valueOf(numberOfRefs[1]);\n+                refsRequested = Util.intValueOf(numberOfRefs[1]);\n                 //System.out.println(\"JSTORFetcher2 getCitations refsRequested=\" + Integer.valueOf(refsRequested));\n                 numberOfPagesRequested = ((refsRequested - 1 - ((refsRequested - 1) % JSTORFetcher2.REFS_PER_PAGE)) / JSTORFetcher2.REFS_PER_PAGE) + 1;\n                 //System.out.println(\"JSTORFetcher2 getCitations numberOfPagesRequested=\" + Integer.valueOf(numberOfPagesRequested));\n@@ -187,7 +187,7 @@ private String getCitationsFromUrl(String urlQuery, List<String> ids, int count,\n             if (mn.find()) {\n                 //System.out.println(\"JSTORFetcher2 getCitationsFromUrl numberofhits=\" + mn.group(1));\n                 numberOfRefs[0] = mn.group(1);\n-                countOfRefs = Integer.valueOf(numberOfRefs[0]);\n+                countOfRefs = Util.intValueOf(numberOfRefs[0]);\n                 //System.out.println(\"JSTORFetcher2 getCitationsFromUrl numberofrefs[0]=\" + Integer.valueOf(numberOfRefs[0]));\n             } else {\n                 //System.out.println(\"JSTORFetcher2 getCitationsFromUrl cant find numberofhits=\");\n@@ -212,8 +212,8 @@ private String getCitationsFromUrl(String urlQuery, List<String> ids, int count,\n                 }\n             }\n         }\n-        countOfRefs = Integer.valueOf(numberOfRefs[0]);\n-        refsRequested = Integer.valueOf(numberOfRefs[1]);\n+        countOfRefs = Util.intValueOf(numberOfRefs[0]);\n+        refsRequested = Util.intValueOf(numberOfRefs[1]);\n \n         Matcher m = JSTORFetcher2.idPattern.matcher(cont);\n , ", 4, 4, "\"modified, \"", 8], ["Stefan Kolb", "Add onSave action for superscripts #131", "10/27/15, 03:22:29 PM", "Stefan Kolb", "dcffb31c1b0fddc327b02cbef72eb2cb26c4678b", ["src/main/java/net/sf/jabref/exporter/SaveDatabaseAction.java", "src/main/java/net/sf/jabref/logic/cleanup/AutoFormatter.java", "src/test/java/net/sf/jabref/logic/cleanup/AutoFormatterTest.java"], "@@ -25,9 +25,11 @@\n import net.sf.jabref.collab.ChangeScanner;\n import net.sf.jabref.gui.worker.CallBack;\n import net.sf.jabref.gui.worker.Worker;\n+import net.sf.jabref.logic.cleanup.AutoFormatter;\n import net.sf.jabref.logic.l10n.Encodings;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.io.FileBasedLock;\n+import net.sf.jabref.model.entry.BibtexEntry;\n \n import javax.swing.*;\n import java.io.File;\n@@ -52,7 +54,6 @@\n \n \n     public SaveDatabaseAction(BasePanel panel) {\n-\n         this.panel = panel;\n         this.frame = panel.frame();\n     }\n@@ -184,6 +185,12 @@ public void run() {\n             // lacking keys, before saving:\n             panel.autoGenerateKeysBeforeSaving();\n \n+            // onSave cleanup actions\n+            for(BibtexEntry entry: panel.database.getEntries()) {\n+                AutoFormatter formatter = new AutoFormatter(entry);\n+                formatter.runDefaultCleanups();\n+            }\n+\n             if (!FileBasedLock.waitForFileLock(panel.getFile(), 10)) {\n                 success = false;\n                 fileLockedError = true;, @@ -0,0 +1,58 @@\n+package net.sf.jabref.logic.cleanup;\n+\n+import net.sf.jabref.model.entry.BibtexEntry;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * This class includes sensible defaults for consistent formatting of BibTex entries.\n+ */\n+public class AutoFormatter {\n+    private BibtexEntry entry;\n+\n+    public AutoFormatter(BibtexEntry entry) {\n+        this.entry = entry;\n+    }\n+\n+    /**\n+     * Runs all default cleanups for the BibTex entry.\n+     */\n+    public void runDefaultCleanups() {\n+        applySuperscripts();\n+    }\n+\n+    /**\n+     * Converts ordinal numbers to superscripts, e.g. 1st, 2nd or 3rd.\n+     * Run the replacement for every available BibTex field.\n+     * Will replace ordinal numbers even if they are semantically wrong, e.g. 21rd\n+     *\n+     * <example>\n+     *     1st Conf. Cloud Computing -> 1\\textsuperscript{st} Conf. Cloud Computing\n+     * </example>\n+     */\n+    public void applySuperscripts() {\n+        // find possible superscripts on word boundaries\n+        final Pattern pattern = Pattern.compile(\"\\\\b(\\\\d+)(st|nd|rd|th)\\\\b\", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE);\n+        // adds superscript tag\n+        final String replace = \"$1\\\\\\\\textsuperscript{$2}\";\n+\n+        for(String name: entry.getAllFields()) {\n+            String value = entry.getField(name);\n+\n+            // nothing to do\n+            if (value == null || value.isEmpty()) {\n+                continue;\n+            }\n+\n+            Matcher matcher = pattern.matcher(value);\n+            // replace globally\n+            String newValue = matcher.replaceAll(replace);\n+\n+            // write field\n+            if(!newValue.equals(value)) {\n+                entry.setField(name, newValue);\n+            }\n+        }\n+    }\n+}, @@ -0,0 +1,112 @@\n+package net.sf.jabref.logic.cleanup;\n+\n+import junit.framework.Assert;\n+import net.sf.jabref.model.entry.BibtexEntry;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+public class AutoFormatterTest {\n+    private BibtexEntry entry;\n+\n+    @Before\n+    public void setUp() {\n+        entry = new BibtexEntry();\n+    }\n+\n+    @After\n+    public void teardown() {\n+        entry = null;\n+    }\n+\n+    @Test\n+    public void replacesSuperscript() {\n+        entry.setField(\"field one\", \"1st\");\n+        entry.setField(\"field two\", \"2nd\");\n+        entry.setField(\"field three\", \"3rd\");\n+        entry.setField(\"field four\", \"4th\");\n+        entry.setField(\"field five\", \"21th\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\"1\\\\textsuperscript{st}\", entry.getField(\"field one\"));\n+        Assert.assertEquals(\"2\\\\textsuperscript{nd}\", entry.getField(\"field two\"));\n+        Assert.assertEquals(\"3\\\\textsuperscript{rd}\", entry.getField(\"field three\"));\n+        Assert.assertEquals(\"4\\\\textsuperscript{th}\", entry.getField(\"field four\"));\n+        Assert.assertEquals(\"21\\\\textsuperscript{th}\", entry.getField(\"field five\"));\n+    }\n+\n+    @Test\n+    public void replacesSuperscriptsInAllFields() {\n+        entry.setField(\"field_one\", \"1st\");\n+        entry.setField(\"field_two\", \"1st\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        for(String name: entry.getAllFields()) {\n+            Assert.assertEquals(\"1\\\\textsuperscript{st}\", entry.getField(name));\n+        }\n+    }\n+\n+    @Test\n+    public void replaceSuperscriptsEmptyFields() {\n+        entry.setField(\"empty field\", \"\");\n+        entry.setField(\"null field\", null);\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\"\", entry.getField(\"empty field\"));\n+        Assert.assertEquals(null, entry.getField(\"null field\"));\n+    }\n+\n+    @Test\n+    public void replaceSuperscriptsIgnoresCase() {\n+        entry.setField(\"lowercase\", \"1st\");\n+        entry.setField(\"uppercase\", \"1ST\");\n+        entry.setField(\"mixedcase\", \"1sT\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\"1\\\\textsuperscript{st}\", entry.getField(\"lowercase\"));\n+        Assert.assertEquals(\"1\\\\textsuperscript{ST}\", entry.getField(\"uppercase\"));\n+        Assert.assertEquals(\"1\\\\textsuperscript{sT}\", entry.getField(\"mixedcase\"));\n+    }\n+\n+    @Test\n+    public void replaceSuperscriptsInMultilineStrings() {\n+        entry.setField(\"multiline\", \"replace on 1st line\\nand on 2nd line.\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\n+                \"replace on 1\\\\textsuperscript{st} line\\nand on 2\\\\textsuperscript{nd} line.\",\n+                entry.getField(\"multiline\")\n+        );\n+    }\n+\n+    @Test\n+    public void replaceAllSuperscripts() {\n+        entry.setField(\"multiple\", \"1st 2nd 3rd 4th\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\n+                \"1\\\\textsuperscript{st} 2\\\\textsuperscript{nd} 3\\\\textsuperscript{rd} 4\\\\textsuperscript{th}\",\n+                entry.getField(\"multiple\")\n+        );\n+    }\n+\n+    @Test\n+    public void ignoreSuperscriptsInsideWords() {\n+        entry.setField(\"word boundaries\", \"1st 1stword words1st inside1stwords\");\n+\n+        new AutoFormatter(entry).applySuperscripts();\n+\n+        Assert.assertEquals(\n+                \"1\\\\textsuperscript{st} 1stword words1st inside1stwords\",\n+                entry.getField(\"word boundaries\")\n+        );\n+    }\n+}\n\\ No newline at end of file, ", 178, 1, "\"modified, added, added, \"", 179], ["Stefan Kolb", "Only create the undo action if value was changed", "10/29/15, 08:50:28 AM", "Stefan Kolb", "60811a514a9d430c4cb060b319d65e3489e39cd3", ["src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java"], "@@ -42,6 +42,7 @@\n import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.cleanup.PageNumbersCleanup;\n+import net.sf.jabref.logic.formatter.FieldFormatters;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.DOI;\n@@ -451,7 +452,9 @@ private static void doCleanUpPageNumbers(BibtexEntry entry, NamedCompound ce) {\n         // new value\n         String newValue = entry.getField(\"pages\");\n         // undo action\n-        ce.addEdit(new UndoableFieldChange(entry, \"pages\", oldValue, newValue));\n+        if(!oldValue.equals(newValue)) {\n+            ce.addEdit(new UndoableFieldChange(entry, \"pages\", oldValue, newValue));\n+        }\n     }\n \n     private static void fixWrongFileEntries(BibtexEntry entry, NamedCompound ce) {, ", 4, 1, "\"modified, \"", 5], ["Oscar Gustafsson", "Used ComponentAdaptor to always store movements and size changes", "11/13/15, 10:09:52 PM", "Oscar Gustafsson", "8f15279c63dc5e8953ec904553bdbceda3e3165a", ["src/main/java/net/sf/jabref/gui/DuplicateResolverDialog.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/StringDialog.java", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntriesDialog.java", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntryDOIDialog.java", "src/main/java/net/sf/jabref/gui/util/PositionWindow.java"], "@@ -18,6 +18,8 @@\n import java.awt.*;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n \n import javax.swing.*;\n \n@@ -169,6 +171,23 @@ public void actionPerformed(ActionEvent e) {\n         pw = new PositionWindow(this, JabRefPreferences.DUPLICATES_POS_X, JabRefPreferences.DUPLICATES_POS_Y,\n                 JabRefPreferences.DUPLICATES_SIZE_X, JabRefPreferences.DUPLICATES_SIZE_Y);\n         pw.setWindowPosition();\n+\n+        // Set up a ComponentListener that saves the last size and position of the dialog\n+        addComponentListener(new ComponentAdapter() {\n+\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+        });\n+\n         both.requestFocus();\n \n     }\n@@ -177,7 +196,6 @@ public void actionPerformed(ActionEvent e) {\n     private void buttonPressed(int button) {\n         status = button;\n         block = false;\n-        pw.storeWindowPosition();\n         dispose();\n     }\n , @@ -25,6 +25,8 @@\n import java.awt.Insets;\n import java.awt.Window;\n import java.awt.event.ActionEvent;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n import java.awt.event.KeyAdapter;\n import java.awt.event.MouseAdapter;\n import java.awt.event.WindowAdapter;\n@@ -578,6 +580,23 @@ public void windowClosing(WindowEvent e) {\n                 JabRefPreferences.SIZE_Y);\n         positionWindowOnScreen();\n \n+        // Set up a ComponentListener that saves the last size and position of the dialog\n+        this.addComponentListener(new ComponentAdapter() {\n+\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+        });\n+\n+\n         tabbedPane.setBorder(null);\n         tabbedPane.setForeground(GUIGlobals.inActiveTabbed);\n \n@@ -761,7 +780,6 @@ private void tearDownJabRef(Vector<String> filenames) {\n         if (basePanel() != null) {\n             basePanel().saveDividerLocation();\n         }\n-        pw.storeWindowPosition();\n \n         //prefs.putBoolean(JabRefPreferences.WINDOW_MAXIMISED, (getExtendedState()&MAXIMIZED_BOTH)>0);\n         prefs.putBoolean(JabRefPreferences.WINDOW_MAXIMISED, getExtendedState() == Frame.MAXIMIZED_BOTH);, @@ -21,6 +21,8 @@\n import java.awt.GridBagConstraints;\n import java.awt.GridBagLayout;\n import java.awt.event.ActionEvent;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n import java.awt.event.WindowAdapter;\n import java.awt.event.WindowEvent;\n import java.util.TreeSet;\n@@ -157,6 +159,22 @@ protected boolean accept(Component c) {\n         pw = new PositionWindow(this, JabRefPreferences.STRINGS_POS_X, JabRefPreferences.STRINGS_POS_Y,\n                 JabRefPreferences.STRINGS_SIZE_X, JabRefPreferences.STRINGS_SIZE_Y);\n         pw.setWindowPosition();\n+\n+        // Set up a ComponentListener that saves the last size and position of the dialog\n+        addComponentListener(new ComponentAdapter() {\n+\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+        });\n     }\n \n \n@@ -342,7 +360,6 @@ public CloseAction(StringDialog parent) {\n         public void actionPerformed(ActionEvent e) {\n             panel.stringsClosing();\n             dispose();\n-            pw.storeWindowPosition();\n         }\n     }\n , @@ -17,6 +17,8 @@\n \n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n \n import javax.swing.*;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -128,18 +130,28 @@ public void actionPerformed(ActionEvent e) {\n         layout.insertRow(1, RowSpec.decode(\"5px\"));\n         layout.insertColumn(1, ColumnSpec.decode(\"5px\"));\n \n-        pack();\n+        // Set up a ComponentListener that saves the last size and position of the dialog\n+        this.addComponentListener(new ComponentAdapter() {\n \n-        pw = new PositionWindow(this, JabRefPreferences.MERGEENTRIES_POS_X,\n-                JabRefPreferences.MERGEENTRIES_POS_Y, JabRefPreferences.MERGEENTRIES_SIZE_X,\n-                JabRefPreferences.MERGEENTRIES_SIZE_Y);\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+        });\n+\n+        pw = new PositionWindow(this, JabRefPreferences.MERGEENTRIES_POS_X, JabRefPreferences.MERGEENTRIES_POS_Y,\n+                JabRefPreferences.MERGEENTRIES_SIZE_X, JabRefPreferences.MERGEENTRIES_SIZE_Y);\n         pw.setWindowPosition();\n \n         // Show what we've got\n         setVisible(true);\n-\n-        pack();\n-\n     }\n \n     /**\n@@ -165,8 +177,6 @@ private void buttonPressed(String button) {\n             panel.undoManager.addEdit(ce);\n             panel.output(Localization.lang(\"Merged entries\"));\n         }\n-        // Save dialog position\n-        pw.storeWindowPosition();\n         dispose();\n     }\n }\n\\ No newline at end of file, @@ -17,6 +17,8 @@\n \n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n import java.util.Set;\n import java.util.TreeSet;\n \n@@ -143,17 +145,30 @@ public void actionPerformed(ActionEvent e) {\n         layout.insertRow(1, RowSpec.decode(\"5px\"));\n         layout.insertColumn(1, ColumnSpec.decode(\"5px\"));\n \n-        pack();\n-\n         pw = new PositionWindow(this, JabRefPreferences.MERGEENTRIES_POS_X,\n                 JabRefPreferences.MERGEENTRIES_POS_Y, JabRefPreferences.MERGEENTRIES_SIZE_X,\n                 JabRefPreferences.MERGEENTRIES_SIZE_Y);\n         pw.setWindowPosition();\n+\n+        // Set up a ComponentListener that saves the last size and position of the dialog\n+        addComponentListener(new ComponentAdapter() {\n+\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                // Save dialog position\n+                pw.storeWindowPosition();\n+            }\n+        });\n+\n         // Show what we've got\n         setVisible(true);\n \n-        pack();\n-\n     }\n \n     /**\n@@ -191,8 +206,6 @@ private void buttonPressed(String button) {\n                 panel.output(Localization.lang(\"No information added\"));\n             }\n         }\n-        // Save dialog position\n-        pw.storeWindowPosition();\n         dispose();\n     }\n }\n\\ No newline at end of file, @@ -108,8 +108,6 @@ public void storeWindowPosition() {\n     /**\n      * This method sets the location of a Dialog such that it is centered with regard to another window, but not outside\n      * the screen on the left and the top.\n-     *\n-     * Moved from Util\n      */\n     public static void placeDialog(java.awt.Dialog diag, java.awt.Container win) {\n         diag.setLocationRelativeTo(win);, ", 94, 20, "\"modified, modified, modified, modified, modified, modified, \"", 114], ["Stefan Kolb", "Move convertToBiblatex back to CleanupAction as it has GUI dependencies", "10/29/15, 11:44:06 AM", "Stefan Kolb", "a8c2e26dbc3a79c1e983cbed19ca077f62fcee8e", ["src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/gui/undo/UndoableFieldChange.java", "src/main/java/net/sf/jabref/model/entry/EntryConverter.java"], "@@ -18,6 +18,7 @@\n import java.io.File;\n import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.Map;\n import java.util.Optional;\n \n import javax.swing.JCheckBox;\n@@ -120,6 +121,40 @@ private static void removeFieldValue(BibtexEntry entry, String fieldName, NamedC\n         entry.setField(fieldName, \"\");\n     }\n \n+    /**\n+     * Converts to BibLatex format\n+     */\n+    public static void convertToBiblatex(BibtexEntry entry, NamedCompound ce) {\n+        for (Map.Entry<String, String> alias : EntryConverter.FIELD_ALIASES_TEX_TO_LTX.entrySet()) {\n+            String oldFieldName = alias.getKey();\n+            String newFieldName = alias.getValue();\n+            String oldValue = entry.getField(oldFieldName);\n+            String newValue = entry.getField(newFieldName);\n+            if ((oldValue != null) && (!oldValue.isEmpty()) && (newValue == null)) {\n+                // There is content in the old field and no value in the new, so just copy\n+                entry.setField(newFieldName, oldValue);\n+                ce.addEdit(new UndoableFieldChange(entry, newFieldName, null, oldValue));\n+\n+                entry.setField(oldFieldName, null);\n+                ce.addEdit(new UndoableFieldChange(entry, oldFieldName, oldValue, null));\n+            }\n+        }\n+\n+        // Dates: create date out of year and month, save it and delete old fields\n+        if ((entry.getField(\"date\") == null) || (entry.getField(\"date\").isEmpty())) {\n+            String newDate = entry.getFieldOrAlias(\"date\");\n+            String oldYear = entry.getField(\"year\");\n+            String oldMonth = entry.getField(\"month\");\n+            entry.setField(\"date\", newDate);\n+            entry.setField(\"year\", null);\n+            entry.setField(\"month\", null);\n+\n+            ce.addEdit(new UndoableFieldChange(entry, \"date\", null, newDate));\n+            ce.addEdit(new UndoableFieldChange(entry, \"year\", oldYear, null));\n+            ce.addEdit(new UndoableFieldChange(entry, \"month\", oldMonth, null));\n+        }\n+    }\n+\n     private void initOptionsPanel() {\n         cleanUpSuperscripts = new JCheckBox(Localization.lang(\"Convert 1st, 2nd, ... to real superscripts\"));\n         cleanUpDOI = new JCheckBox(Localization.lang(\"Move DOIs from note and URL field to DOI field and remove http prefix\"));\n@@ -319,7 +354,7 @@ public void run() {\n                 doConvertUnicode(entry, ce);\n             }\n             if (choiceConvertToBiblatex) {\n-                EntryConverter.convertToBiblatex(entry, ce);\n+                convertToBiblatex(entry, ce);\n             }\n \n             ce.end();, @@ -29,15 +29,12 @@\n  * new value. Old/new values can be null.\n  */\n public class UndoableFieldChange extends AbstractUndoableEdit {\n-\n-    private static final long serialVersionUID = 1L;\n+    private static final Log LOGGER = LogFactory.getLog(UndoableFieldChange.class);\n     \n     private final BibtexEntry entry;\n     private final String field;\n     private final String oldValue;\n     private final String newValue;\n-    \n-    private static final Log LOGGER = LogFactory.getLog(UndoableFieldChange.class);\n \n \n     public UndoableFieldChange(BibtexEntry entry, String field,, @@ -1,8 +1,5 @@\n package net.sf.jabref.model.entry;\n \n-import net.sf.jabref.gui.undo.NamedCompound;\n-import net.sf.jabref.gui.undo.UndoableFieldChange;\n-\n import java.util.HashMap;\n import java.util.Map;\n import java.util.stream.Collectors;\n@@ -39,41 +36,4 @@\n         FIELD_ALIASES.putAll(EntryConverter.FIELD_ALIASES_TEX_TO_LTX);\n         FIELD_ALIASES.putAll(EntryConverter.FIELD_ALIASES_LTX_TO_TEX);\n     }\n-\n-    /**\n-     * Converts to BibLatex format\n-     */\n-    public static void convertToBiblatex(BibtexEntry entry, NamedCompound ce) {\n-\n-        for (Map.Entry<String, String> alias : FIELD_ALIASES_TEX_TO_LTX.entrySet()) {\n-            String oldFieldName = alias.getKey();\n-            String newFieldName = alias.getValue();\n-            String oldValue = entry.getField(oldFieldName);\n-            String newValue = entry.getField(newFieldName);\n-            if ((oldValue != null) && (!oldValue.isEmpty()) && (newValue == null))\n-            {\n-                // There is content in the old field and no value in the new, so just copy\n-                entry.setField(newFieldName, oldValue);\n-                ce.addEdit(new UndoableFieldChange(entry, newFieldName, null, oldValue));\n-\n-                entry.setField(oldFieldName, null);\n-                ce.addEdit(new UndoableFieldChange(entry, oldFieldName, oldValue, null));\n-            }\n-        }\n-\n-        // Dates: create date out of year and month, save it and delete old fields\n-        if ((entry.getField(\"date\") == null) || (entry.getField(\"date\").isEmpty()))\n-        {\n-            String newDate = entry.getFieldOrAlias(\"date\");\n-            String oldYear = entry.getField(\"year\");\n-            String oldMonth = entry.getField(\"month\");\n-            entry.setField(\"date\", newDate);\n-            entry.setField(\"year\", null);\n-            entry.setField(\"month\", null);\n-\n-            ce.addEdit(new UndoableFieldChange(entry, \"date\", null, newDate));\n-            ce.addEdit(new UndoableFieldChange(entry, \"year\", oldYear, null));\n-            ce.addEdit(new UndoableFieldChange(entry, \"month\", oldMonth, null));\n-        }\n-    }\n }, ", 37, 45, "\"modified, modified, modified, \"", 82], ["Stefan Kolb", "Extract and refactor CaseChangers", "10/29/15, 02:05:42 PM", "Stefan Kolb", "2b790533f9a063b0f38e4acc27586d27865d23a1", ["src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/logic/cleanup/PageNumbersCleanup.java", "src/main/java/net/sf/jabref/logic/formatter/BibtexFieldFormatters.java", "src/main/java/net/sf/jabref/logic/formatter/CaseChangers.java", "src/main/java/net/sf/jabref/logic/formatter/bibtexfields/PageNumbersFormatter.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/LowerCaseChanger.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/Title.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/TitleCaseChanger.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/TitleParser.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/UpperCaseChanger.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/UpperEachFirstCaseChanger.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/UpperFirstCaseChanger.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/Word.java", "src/main/java/net/sf/jabref/logic/labelPattern/LabelPatternUtil.java", "src/test/java/net/sf/jabref/logic/formatter/PageNumbersFormatterTest.java"], "@@ -42,7 +42,6 @@\n import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.cleanup.PageNumbersCleanup;\n-import net.sf.jabref.logic.formatter.FieldFormatters;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.DOI;, @@ -1,7 +1,6 @@\n package net.sf.jabref.logic.cleanup;\n \n-import net.sf.jabref.logic.formatter.FieldFormatters;\n-import net.sf.jabref.logic.formatter.PageNumbersFormatter;\n+import net.sf.jabref.logic.formatter.BibtexFieldFormatters;\n import net.sf.jabref.model.entry.BibtexEntry;\n \n /**\n@@ -24,7 +23,7 @@ public void cleanup() {\n         final String field = \"pages\";\n \n         String value = entry.getField(field);\n-        String newValue = FieldFormatters.PAGE_NUMBERS.format(value);\n+        String newValue = BibtexFieldFormatters.PAGE_NUMBERS.format(value);\n         entry.setField(field, newValue);\n     }\n }, @@ -1,9 +1,11 @@\n package net.sf.jabref.logic.formatter;\n \n+import net.sf.jabref.logic.formatter.bibtexfields.PageNumbersFormatter;\n+\n import java.util.Arrays;\n import java.util.List;\n \n-public class FieldFormatters {\n+public class BibtexFieldFormatters {\n     public static final PageNumbersFormatter PAGE_NUMBERS = new PageNumbersFormatter();\n \n     public static final List<Formatter> ALL = Arrays.asList(PAGE_NUMBERS);, @@ -17,8 +17,9 @@\n */\n package net.sf.jabref.logic.formatter;\n \n+import net.sf.jabref.logic.formatter.casechanger.*;\n+\n import java.util.*;\n-import java.util.stream.Collectors;\n \n /**\n  * Class with static methods for changing the case of strings and arrays of strings.\n@@ -28,330 +29,11 @@\n  * This can be done by starting at the letter position and moving forward and backword to see if there is a '{' and '}, respectively.\n  */\n public class CaseChangers {\n-\n-    public static final Set<String> SMALLER_WORDS;\n-\n-    static {\n-        Set<String> smallerWords = new HashSet<>();\n-        // NOTE: before JabRef 2.80, it was SKIP_WORDS = {\"a\", \"an\", \"the\", \"for\", \"on\", \"of\"}; in net.sf.jabref.logic.labelPattern.LabelPatternUtil.SKIP_WORDS\n-\n-        // Articles\n-        smallerWords.addAll(Arrays.asList(\"a\", \"an\", \"the\"));\n-        // Prepositions\n-        smallerWords.addAll(Arrays.asList(\"above\", \"about\", \"across\", \"against\", \"along\", \"among\", \"around\", \"at\", \"before\", \"behind\", \"below\", \"beneath\", \"beside\", \"between\", \"beyond\", \"by\", \"down\", \"during\", \"except\", \"for\", \"from\", \"in\", \"inside\", \"into\", \"like\", \"near\", \"of\", \"off\", \"on\", \"onto\", \"since\", \"to\", \"toward\", \"through\", \"under\", \"until\", \"up\", \"upon\", \"with\", \"within\", \"without\"));\n-        // Conjunctions\n-        smallerWords.addAll(Arrays.asList(\"and\", \"but\", \"for\", \"nor\", \"or\", \"so\", \"yet\"));\n-\n-        // unmodifiable for thread safety\n-        SMALLER_WORDS = Collections.unmodifiableSet(smallerWords);\n-    }\n-\n-    /**\n-     * Represents a word in a title of a bibtex entry.\n-     * <p>\n-     * A word can have protected chars (enclosed in '{' '}') and may be a small (a, an, the, ...) word.\n-     */\n-    private static final class Word {\n-\n-        private final char[] chars;\n-        private final boolean[] protectedChars;\n-\n-        public Word(char[] chars, boolean[] protectedChars) {\n-            this.chars = Objects.requireNonNull(chars);\n-            this.protectedChars = Objects.requireNonNull(protectedChars);\n-\n-            if (this.chars.length != this.protectedChars.length) {\n-                throw new IllegalArgumentException(\"the chars and the protectedChars array must be of same length\");\n-            }\n-        }\n-\n-        /**\n-         * Only change letters of the word that are unprotected to upper case.\n-         */\n-        public void toUpperCase() {\n-            for (int i = 0; i < chars.length; i++) {\n-                if (protectedChars[i]) {\n-                    continue;\n-                }\n-\n-                chars[i] = Character.toUpperCase(chars[i]);\n-            }\n-        }\n-\n-        /**\n-         * Only change letters of the word that are unprotected to lower case.\n-         */\n-        public void toLowerCase() {\n-            for (int i = 0; i < chars.length; i++) {\n-                if (protectedChars[i]) {\n-                    continue;\n-                }\n-\n-                chars[i] = Character.toLowerCase(chars[i]);\n-            }\n-        }\n-\n-\n-        public void toUpperFirst() {\n-            for (int i = 0; i < chars.length; i++) {\n-                if (protectedChars[i]) {\n-                    continue;\n-                }\n-\n-                if (i == 0) {\n-                    chars[i] = Character.toUpperCase(chars[i]);\n-                } else {\n-                    chars[i] = Character.toLowerCase(chars[i]);\n-                }\n-            }\n-        }\n-\n-        public boolean isSmallerWord() {\n-            // \"word:\" is still a small \"word\"\n-            return SMALLER_WORDS.contains(this.toString().replaceAll(\"[:]\", \"\").toLowerCase());\n-        }\n-\n-        public boolean isLargerWord() {\n-            return !isSmallerWord();\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return new String(chars);\n-        }\n-\n-        public boolean endsWithColon() {\n-            return this.toString().endsWith(\":\");\n-        }\n-    }\n-\n-    /**\n-     * Parses a title to a list of words.\n-     */\n-    private static final class TitleParser {\n-\n-        private StringBuffer buffer;\n-        private int wordStart;\n-\n-        public List<Word> parse(String title) {\n-            List<Word> words = new LinkedList<>();\n-\n-            boolean[] isProtected = determineProtectedChars(title);\n-\n-            reset();\n-\n-            int index = 0;\n-            for (char c : title.toCharArray()) {\n-                if (!Character.isWhitespace(c)) {\n-                    if (wordStart == -1) {\n-                        wordStart = index;\n-                    }\n-\n-                    buffer.append(c);\n-                } else {\n-                    createWord(isProtected).ifPresent(words::add);\n-                }\n-\n-                index++;\n-            }\n-            createWord(isProtected).ifPresent(words::add);\n-\n-            return words;\n-        }\n-\n-        private Optional<Word> createWord(boolean[] isProtected) {\n-            if (buffer.length() <= 0) {\n-                return Optional.empty();\n-            }\n-\n-            char[] chars = buffer.toString().toCharArray();\n-            boolean[] protectedChars = new boolean[chars.length];\n-\n-            System.arraycopy(isProtected, wordStart, protectedChars, 0, chars.length);\n-\n-            reset();\n-\n-            return Optional.of(new Word(chars, protectedChars));\n-        }\n-\n-        private void reset() {\n-            wordStart = -1;\n-            buffer = new StringBuffer();\n-        }\n-\n-        private static boolean[] determineProtectedChars(String title) {\n-            boolean[] isProtected = new boolean[title.length()];\n-            char[] chars = title.toCharArray();\n-\n-            int brakets = 0;\n-            for (int i = 0; i < title.length(); i++) {\n-                if (chars[i] == '{') {\n-                    brakets++;\n-                } else if (chars[i] == '}') {\n-                    brakets--;\n-                } else {\n-                    isProtected[i] = brakets > 0;\n-                }\n-            }\n-\n-            return isProtected;\n-        }\n-\n-    }\n-\n-    /**\n-     * Represents a title of a bibtex entry.\n-     */\n-    private static final class Title {\n-\n-        private final List<Word> words = new LinkedList<>();\n-\n-        public Title(String title) {\n-            this.words.addAll(new TitleParser().parse(title));\n-        }\n-\n-        public List<Word> getWords() {\n-            return words;\n-        }\n-\n-        public Optional<Word> getFirstWord() {\n-            if (getWords().isEmpty()) {\n-                return Optional.empty();\n-            }\n-            return Optional.of(getWords().get(0));\n-        }\n-\n-        public Optional<Word> getLastWord() {\n-            if (getWords().isEmpty()) {\n-                return Optional.empty();\n-            }\n-            return Optional.of(getWords().get(getWords().size() - 1));\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return words.stream().map(Word::toString).collect(Collectors.joining(\" \"));\n-        }\n-\n-    }\n-\n-    public static class LowerCaseChanger implements Formatter {\n-\n-        @Override\n-        public String getName() {\n-            return \"lower\";\n-        }\n-\n-        /**\n-         * Converts all characters of the string to lower case, but does not change words starting with \"{\"\n-         */\n-        @Override\n-        public String format(String input) {\n-            Title title = new Title(input);\n-\n-            title.getWords().stream().forEach(Word::toLowerCase);\n-\n-            return title.toString();\n-        }\n-    }\n-\n-    public static class UpperCaseChanger implements Formatter {\n-\n-        @Override\n-        public String getName() {\n-            return \"UPPER\";\n-        }\n-\n-        /**\n-         * Converts all characters of the given string to upper case, but does not change words starting with \"{\"\n-         */\n-        @Override\n-        public String format(String input) {\n-            Title title = new Title(input);\n-\n-            title.getWords().stream().forEach(Word::toUpperCase);\n-\n-            return title.toString();\n-        }\n-    }\n-\n-    public static class UpperFirstCaseChanger implements Formatter {\n-\n-        @Override\n-        public String getName() {\n-            return \"Upper first\";\n-        }\n-\n-        /**\n-         * Converts the first character of the first word of the given string to a upper case (and the remaining characters of the first word to lower case), but does not change anything if word starts with \"{\"\n-         */\n-        @Override\n-        public String format(String input) {\n-            Title title = new Title(LOWER.format(input));\n-\n-            title.getWords().stream().findFirst().ifPresent(Word::toUpperFirst);\n-\n-            return title.toString();\n-        }\n-    }\n-\n-    public static class UpperEachFirstCaseChanger implements Formatter {\n-\n-        @Override\n-        public String getName() {\n-            return \"Upper Each First\";\n-        }\n-\n-        /**\n-         * Converts the first character of each word of the given string to a upper case (and all others to lower case), but does not change words starting with \"{\"\n-         */\n-        @Override\n-        public String format(String input) {\n-            Title title = new Title(input);\n-\n-            title.getWords().stream().forEach(Word::toUpperFirst);\n-\n-            return title.toString();\n-        }\n-    }\n-\n-    public static class TitleCaseChanger implements Formatter {\n-\n-        @Override\n-        public String getName() {\n-            return \"Title\";\n-        }\n-\n-        /**\n-         * Converts all words to upper case, but converts articles, prepositions, and conjunctions to lower case\n-         * Capitalizes first and last word\n-         * Does not change words starting with \"{\"\n-         */\n-        @Override\n-        public String format(String input) {\n-            Title title = new Title(input);\n-\n-            title.getWords().stream().filter(Word::isSmallerWord).forEach(Word::toLowerCase);\n-            title.getWords().stream().filter(Word::isLargerWord).forEach(Word::toUpperFirst);\n-\n-            title.getFirstWord().ifPresent(Word::toUpperFirst);\n-            title.getLastWord().ifPresent(Word::toUpperFirst);\n-\n-            for (int i = 0; i < (title.getWords().size() - 2); i++) {\n-                if (title.getWords().get(i).endsWithColon()) {\n-                    title.getWords().get(i + 1).toUpperFirst();\n-                }\n-            }\n-\n-            return title.toString();\n-        }\n-    }\n-\n     public static final LowerCaseChanger LOWER = new LowerCaseChanger();\n     public static final UpperCaseChanger UPPER = new UpperCaseChanger();\n     public static final UpperFirstCaseChanger UPPER_FIRST = new UpperFirstCaseChanger();\n     public static final UpperEachFirstCaseChanger UPPER_EACH_FIRST = new UpperEachFirstCaseChanger();\n     public static final TitleCaseChanger TITLE = new TitleCaseChanger();\n \n-    public static final List<Formatter> ALL = Arrays.asList(CaseChangers.LOWER, CaseChangers.UPPER, CaseChangers.UPPER_FIRST, CaseChangers.UPPER_EACH_FIRST, CaseChangers.TITLE);\n+    public static final List<Formatter> ALL = Arrays.asList(LOWER, UPPER, UPPER_FIRST, UPPER_EACH_FIRST, TITLE);\n }, @@ -1,4 +1,6 @@\n-package net.sf.jabref.logic.formatter;\n+package net.sf.jabref.logic.formatter.bibtexfields;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n \n import java.util.regex.Matcher;\n import java.util.regex.Pattern;, @@ -0,0 +1,23 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+public class LowerCaseChanger implements Formatter {\n+\n+    @Override\n+    public String getName() {\n+        return \"lower\";\n+    }\n+\n+    /**\n+     * Converts all characters of the string to lower case, but does not change words starting with \"{\"\n+     */\n+    @Override\n+    public String format(String input) {\n+        Title title = new Title(input);\n+\n+        title.getWords().stream().forEach(Word::toLowerCase);\n+\n+        return title.toString();\n+    }\n+}, @@ -0,0 +1,44 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.CaseChangers;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Represents a title of a bibtex entry.\n+ */\n+public final class Title {\n+\n+    private final List<Word> words = new LinkedList<>();\n+\n+    public Title(String title) {\n+        this.words.addAll(new TitleParser().parse(title));\n+    }\n+\n+    public List<Word> getWords() {\n+        return words;\n+    }\n+\n+    public Optional<Word> getFirstWord() {\n+        if (getWords().isEmpty()) {\n+            return Optional.empty();\n+        }\n+        return Optional.of(getWords().get(0));\n+    }\n+\n+    public Optional<Word> getLastWord() {\n+        if (getWords().isEmpty()) {\n+            return Optional.empty();\n+        }\n+        return Optional.of(getWords().get(getWords().size() - 1));\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return words.stream().map(Word::toString).collect(Collectors.joining(\" \"));\n+    }\n+\n+}, @@ -0,0 +1,35 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+public class TitleCaseChanger implements Formatter {\n+\n+    @Override\n+    public String getName() {\n+        return \"Title\";\n+    }\n+\n+    /**\n+     * Converts all words to upper case, but converts articles, prepositions, and conjunctions to lower case\n+     * Capitalizes first and last word\n+     * Does not change words starting with \"{\"\n+     */\n+    @Override\n+    public String format(String input) {\n+        Title title = new Title(input);\n+\n+        title.getWords().stream().filter(Word::isSmallerWord).forEach(Word::toLowerCase);\n+        title.getWords().stream().filter(Word::isLargerWord).forEach(Word::toUpperFirst);\n+\n+        title.getFirstWord().ifPresent(Word::toUpperFirst);\n+        title.getLastWord().ifPresent(Word::toUpperFirst);\n+\n+        for (int i = 0; i < (title.getWords().size() - 2); i++) {\n+            if (title.getWords().get(i).endsWithColon()) {\n+                title.getWords().get(i + 1).toUpperFirst();\n+            }\n+        }\n+\n+        return title.toString();\n+    }\n+}, @@ -0,0 +1,79 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Parses a title to a list of words.\n+ */\n+public final class TitleParser {\n+\n+    private StringBuffer buffer;\n+    private int wordStart;\n+\n+    public List<Word> parse(String title) {\n+        List<Word> words = new LinkedList<>();\n+\n+        boolean[] isProtected = determineProtectedChars(title);\n+\n+        reset();\n+\n+        int index = 0;\n+        for (char c : title.toCharArray()) {\n+            if (!Character.isWhitespace(c)) {\n+                if (wordStart == -1) {\n+                    wordStart = index;\n+                }\n+\n+                buffer.append(c);\n+            } else {\n+                createWord(isProtected).ifPresent(words::add);\n+            }\n+\n+            index++;\n+        }\n+        createWord(isProtected).ifPresent(words::add);\n+\n+        return words;\n+    }\n+\n+    private Optional<Word> createWord(boolean[] isProtected) {\n+        if (buffer.length() <= 0) {\n+            return Optional.empty();\n+        }\n+\n+        char[] chars = buffer.toString().toCharArray();\n+        boolean[] protectedChars = new boolean[chars.length];\n+\n+        System.arraycopy(isProtected, wordStart, protectedChars, 0, chars.length);\n+\n+        reset();\n+\n+        return Optional.of(new Word(chars, protectedChars));\n+    }\n+\n+    private void reset() {\n+        wordStart = -1;\n+        buffer = new StringBuffer();\n+    }\n+\n+    private static boolean[] determineProtectedChars(String title) {\n+        boolean[] isProtected = new boolean[title.length()];\n+        char[] chars = title.toCharArray();\n+\n+        int brakets = 0;\n+        for (int i = 0; i < title.length(); i++) {\n+            if (chars[i] == '{') {\n+                brakets++;\n+            } else if (chars[i] == '}') {\n+                brakets--;\n+            } else {\n+                isProtected[i] = brakets > 0;\n+            }\n+        }\n+\n+        return isProtected;\n+    }\n+\n+}, @@ -0,0 +1,23 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+public class UpperCaseChanger implements Formatter {\n+\n+    @Override\n+    public String getName() {\n+        return \"UPPER\";\n+    }\n+\n+    /**\n+     * Converts all characters of the given string to upper case, but does not change words starting with \"{\"\n+     */\n+    @Override\n+    public String format(String input) {\n+        Title title = new Title(input);\n+\n+        title.getWords().stream().forEach(Word::toUpperCase);\n+\n+        return title.toString();\n+    }\n+}, @@ -0,0 +1,23 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+public class UpperEachFirstCaseChanger implements Formatter {\n+\n+    @Override\n+    public String getName() {\n+        return \"Upper Each First\";\n+    }\n+\n+    /**\n+     * Converts the first character of each word of the given string to a upper case (and all others to lower case), but does not change words starting with \"{\"\n+     */\n+    @Override\n+    public String format(String input) {\n+        Title title = new Title(input);\n+\n+        title.getWords().stream().forEach(Word::toUpperFirst);\n+\n+        return title.toString();\n+    }\n+}, @@ -0,0 +1,24 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import net.sf.jabref.logic.formatter.CaseChangers;\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+public class UpperFirstCaseChanger implements Formatter {\n+\n+    @Override\n+    public String getName() {\n+        return \"Upper first\";\n+    }\n+\n+    /**\n+     * Converts the first character of the first word of the given string to a upper case (and the remaining characters of the first word to lower case), but does not change anything if word starts with \"{\"\n+     */\n+    @Override\n+    public String format(String input) {\n+        Title title = new Title(CaseChangers.LOWER.format(input));\n+\n+        title.getWords().stream().findFirst().ifPresent(Word::toUpperFirst);\n+\n+        return title.toString();\n+    }\n+}, @@ -0,0 +1,97 @@\n+package net.sf.jabref.logic.formatter.casechanger;\n+\n+import java.util.*;\n+\n+/**\n+ * Represents a word in a title of a bibtex entry.\n+ * <p>\n+ * A word can have protected chars (enclosed in '{' '}') and may be a small (a, an, the, ...) word.\n+ */\n+public final class Word {\n+    public static final Set<String> SMALLER_WORDS;\n+\n+    static {\n+        Set<String> smallerWords = new HashSet<>();\n+\n+        // Articles\n+        smallerWords.addAll(Arrays.asList(\"a\", \"an\", \"the\"));\n+        // Prepositions\n+        smallerWords.addAll(Arrays.asList(\"above\", \"about\", \"across\", \"against\", \"along\", \"among\", \"around\", \"at\", \"before\", \"behind\", \"below\", \"beneath\", \"beside\", \"between\", \"beyond\", \"by\", \"down\", \"during\", \"except\", \"for\", \"from\", \"in\", \"inside\", \"into\", \"like\", \"near\", \"of\", \"off\", \"on\", \"onto\", \"since\", \"to\", \"toward\", \"through\", \"under\", \"until\", \"up\", \"upon\", \"with\", \"within\", \"without\"));\n+        // Conjunctions\n+        smallerWords.addAll(Arrays.asList(\"and\", \"but\", \"for\", \"nor\", \"or\", \"so\", \"yet\"));\n+\n+        // unmodifiable for thread safety\n+        SMALLER_WORDS = Collections.unmodifiableSet(smallerWords);\n+    }\n+\n+    private final char[] chars;\n+    private final boolean[] protectedChars;\n+\n+    public Word(char[] chars, boolean[] protectedChars) {\n+        this.chars = Objects.requireNonNull(chars);\n+        this.protectedChars = Objects.requireNonNull(protectedChars);\n+\n+        if (this.chars.length != this.protectedChars.length) {\n+            throw new IllegalArgumentException(\"the chars and the protectedChars array must be of same length\");\n+        }\n+    }\n+\n+    /**\n+     * Only change letters of the word that are unprotected to upper case.\n+     */\n+    public void toUpperCase() {\n+        for (int i = 0; i < chars.length; i++) {\n+            if (protectedChars[i]) {\n+                continue;\n+            }\n+\n+            chars[i] = Character.toUpperCase(chars[i]);\n+        }\n+    }\n+\n+    /**\n+     * Only change letters of the word that are unprotected to lower case.\n+     */\n+    public void toLowerCase() {\n+        for (int i = 0; i < chars.length; i++) {\n+            if (protectedChars[i]) {\n+                continue;\n+            }\n+\n+            chars[i] = Character.toLowerCase(chars[i]);\n+        }\n+    }\n+\n+\n+    public void toUpperFirst() {\n+        for (int i = 0; i < chars.length; i++) {\n+            if (protectedChars[i]) {\n+                continue;\n+            }\n+\n+            if (i == 0) {\n+                chars[i] = Character.toUpperCase(chars[i]);\n+            } else {\n+                chars[i] = Character.toLowerCase(chars[i]);\n+            }\n+        }\n+    }\n+\n+    public boolean isSmallerWord() {\n+        // \"word:\" is still a small \"word\"\n+        return SMALLER_WORDS.contains(this.toString().replaceAll(\"[:]\", \"\").toLowerCase());\n+    }\n+\n+    public boolean isLargerWord() {\n+        return !isSmallerWord();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return new String(chars);\n+    }\n+\n+    public boolean endsWithColon() {\n+        return this.toString().endsWith(\":\");\n+    }\n+}, @@ -24,6 +24,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import net.sf.jabref.logic.formatter.casechanger.Word;\n import net.sf.jabref.model.entry.AuthorList;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -32,7 +33,6 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.exporter.layout.format.RemoveLatexCommands;\n-import net.sf.jabref.logic.formatter.CaseChangers;\n import net.sf.jabref.util.Util;\n \n /**\n@@ -830,15 +830,14 @@ static String getTitleWords(int number, String title) {\n                     && ss.charAt(piv) != '-') {\n                 current.append(ss.charAt(piv));\n                 piv++;\n-                //System.out.println(\".. \"+piv+\" '\"+current.toString()+\"'\");\n             }\n             piv++;\n             // Check if it is ok:\n             String word = current.toString().trim();\n             if (word.isEmpty()) {\n                 continue;\n             }\n-            for (String smallWord: CaseChangers.SMALLER_WORDS) {\n+            for (String smallWord: Word.SMALLER_WORDS) {\n                 if (word.equalsIgnoreCase(smallWord)) {\n                     continue mainl;\n                 }, @@ -1,12 +1,11 @@\n package net.sf.jabref.logic.formatter;\n \n import junit.framework.Assert;\n+import net.sf.jabref.logic.formatter.bibtexfields.PageNumbersFormatter;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n \n-import static org.junit.Assert.*;\n-\n public class PageNumbersFormatterTest {\n     private PageNumbersFormatter formatter;\n , ", 362, 332, "\"modified, modified, renamed, modified, renamed, added, added, added, added, added, added, added, added, modified, modified, \"", 694], ["Simon Harrer", "Removes option to disable renaming in FileChooser dialogs.", "10/29/15, 03:51:01 PM", "Stefan Kolb", "65eaa0670d659da2836cfc63e1a2b285bb090478", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java"], "@@ -1,5 +1,6 @@\n [master]\n     - Removes options to set PDF and PS directories per .bib database as the general options have also been deleted.\n+    - Removes option to disable renaming in FileChooser dialogs.\n     - Removes option to hide the BibTeX Code tab in the entry editor.\n     - Changes the old integrity check by improving the code base (+tests) and converting it to a simple issues table\n     - Removes option to set a custom icon for the external file types. This is not possible anymore with the new icon font., @@ -282,7 +282,6 @@\n     public static final String IMPORT_INSPECTION_DIALOG_WIDTH = \"importInspectionDialogWidth\";\n     public static final String SIDE_PANE_WIDTH = \"sidePaneWidth\";\n     public static final String LAST_USED_EXPORT = \"lastUsedExport\";\n-    public static final String FILECHOOSER_DISABLE_RENAME = \"filechooserDisableRename\";\n     public static final String USE_NATIVE_FILE_DIALOG_ON_MAC = \"useNativeFileDialogOnMac\";\n     public static final String FLOAT_MARKED_ENTRIES = \"floatMarkedEntries\";\n     public static final String CITE_COMMAND = \"citeCommand\";\n@@ -738,7 +737,6 @@ private JabRefPreferences() {\n         defaults.put(FLOAT_MARKED_ENTRIES, Boolean.TRUE);\n \n         defaults.put(USE_NATIVE_FILE_DIALOG_ON_MAC, Boolean.FALSE);\n-        defaults.put(FILECHOOSER_DISABLE_RENAME, Boolean.TRUE);\n \n         defaults.put(LAST_USED_EXPORT, null);\n         defaults.put(SIDE_PANE_WIDTH, -1);, @@ -544,8 +544,6 @@ public JabRefFrame(JabRef jabRef) {\n     private void init() {\n         tabbedPane = new DragDropPopupPane(manageSelectors, databaseProperties, bibtexKeyPattern);\n \n-        UIManager.put(\"FileChooser.readOnly\", Globals.prefs.getBoolean(JabRefPreferences.FILECHOOSER_DISABLE_RENAME));\n-\n         MyGlassPane glassPane = new MyGlassPane();\n         setGlassPane(glassPane);\n         // glassPane.setVisible(true);, @@ -50,7 +50,6 @@\n     private final JCheckBox useDefault;\n     private final JCheckBox useRemoteServer;\n     private final JCheckBox useNativeFileDialogOnMac;\n-    private final JCheckBox filechooserDisableRename;\n     private final JCheckBox useIEEEAbrv;\n     private final JCheckBox biblatexMode;\n     private final JComboBox<String> className;\n@@ -75,7 +74,6 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag, JabRef jabRef) {\n         useDefault = new JCheckBox(Localization.lang(\"Use other look and feel\"));\n         useRemoteServer = new JCheckBox(Localization.lang(\"Listen for remote operation on port\") + ':');\n         useNativeFileDialogOnMac = new JCheckBox(Localization.lang(\"Use native file dialog\"));\n-        filechooserDisableRename = new JCheckBox(Localization.lang(\"Disable file renaming in non-native file dialog\"));\n         useIEEEAbrv = new JCheckBox(Localization.lang(\"Use IEEE LaTeX abbreviations\"));\n         biblatexMode = new JCheckBox(Localization.lang(\"BibLaTeX mode\"));\n         remoteServerPort = new JTextField();\n@@ -164,9 +162,6 @@ public void stateChanged(ChangeEvent e) {\n         builder.nextLine();\n         builder.append(new JPanel());\n         builder.append(useNativeFileDialogOnMac);\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(filechooserDisableRename);\n         //}\n         // IEEE\n         builder.nextLine();\n@@ -210,7 +205,6 @@ public void setValues() {\n         oldPort = remotePreferences.getPort();\n         remoteServerPort.setText(String.valueOf(oldPort));\n         useNativeFileDialogOnMac.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC));\n-        filechooserDisableRename.setSelected(Globals.prefs.getBoolean(JabRefPreferences.FILECHOOSER_DISABLE_RENAME));\n         useIEEEAbrv.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV));\n         oldBiblMode = Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE);\n         biblatexMode.setSelected(oldBiblMode);\n@@ -224,8 +218,6 @@ public void storeSettings() {\n         preferences.putBoolean(JabRefPreferences.USE_DEFAULT_LOOK_AND_FEEL, !useDefault.isSelected());\n         preferences.put(JabRefPreferences.WIN_LOOK_AND_FEEL, className.getSelectedItem().toString());\n         preferences.putBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC, useNativeFileDialogOnMac.isSelected());\n-        preferences.putBoolean(JabRefPreferences.FILECHOOSER_DISABLE_RENAME, filechooserDisableRename.isSelected());\n-        UIManager.put(\"FileChooser.readOnly\", filechooserDisableRename.isSelected());\n \n         if(preferences.getBoolean(JabRefPreferences.USE_IEEE_ABRV) != useIEEEAbrv.isSelected()) {\n             preferences.putBoolean(JabRefPreferences.USE_IEEE_ABRV, useIEEEAbrv.isSelected());, ", 1, 12, "\"modified, modified, modified, modified, \"", 13], ["Stefan Kolb", "Forgot to remove old code :smile:", "10/30/15, 10:56:14 AM", "Stefan Kolb", "ecabcf293c21e6ad20193cd48cbd6d73c4c7ed71", ["src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java"], "@@ -410,20 +410,10 @@ private static void doCleanUpSuperscripts(BibtexEntry entry, NamedCompound ce) {\n             String newValue = BibtexFieldFormatters.SUPERSCRIPTS.format(oldValue);\n             // undo action\n             if(!oldValue.equals(newValue)) {\n+                entry.setField(name, newValue);\n                 ce.addEdit(new UndoableFieldChange(entry, name, oldValue, newValue));\n             }\n         }\n-\n-        final String field = \"booktitle\";\n-        String oldValue = entry.getField(field);\n-        if (oldValue == null) {\n-            return;\n-        }\n-        String newValue = oldValue.replaceAll(\" (\\\\d+)(st|nd|rd|th) \", \" $1\\\\\\\\textsuperscript{$2} \");\n-        if (!oldValue.equals(newValue)) {\n-            entry.setField(field, newValue);\n-            ce.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n-        }\n     }\n \n     /**, ", 1, 11, "\"modified, \"", 12], ["Oscar Gustafsson", "Added more exceptions to log messages", "11/04/15, 09:51:48 AM", "Oscar Gustafsson", "c0546e44abe227b389f63e29a3cf00ae9ed8345c", ["src/main/java/net/sf/jabref/collab/ChangeScanner.java", "src/main/java/net/sf/jabref/exporter/FileActions.java", "src/main/java/net/sf/jabref/exporter/SaveSession.java", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditor.java", "src/main/java/net/sf/jabref/gui/help/HelpContent.java", "src/main/java/net/sf/jabref/gui/mergeentries/MergeEntries.java", "src/main/java/net/sf/jabref/gui/worker/SendAsEMailAction.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java"], "@@ -166,7 +166,7 @@ public void run() {\n                             false, false, panel.getEncoding(), true);\n                     ss.commit();\n                 } catch (SaveException ex) {\n-                    LOGGER.warn(\"Problem updating tmp file after accepting external changes\");\n+                    LOGGER.warn(\"Problem updating tmp file after accepting external changes\", ex);\n                 }\n \n             }, @@ -183,13 +183,12 @@ public static SaveSession saveDatabase(BibtexDatabase database,\n             session = new SaveSession(file, encoding, backup);\n         } catch (Throwable e) {\n             if (encoding != null) {\n-                LOGGER.error(\"Error from encoding: '\" + encoding + \"' Len: \" + encoding.length());\n+                LOGGER.error(\"Error from encoding: '\" + encoding + \"' Len: \" + encoding.length(), e);\n             }\n             // we must catch all exceptions to be able notify users that\n             // saving failed, no matter what the reason was\n             // (and they won't just quit JabRef thinking\n             // everything worked and loosing data)\n-            e.printStackTrace();\n             throw new SaveException(e.getMessage());\n         }\n , @@ -111,7 +111,7 @@ public void commit() throws SaveException {\n \n                     }\n                 } catch (IOException ex) {\n-                    LOGGER.error(\"Error when creating lock file\");\n+                    LOGGER.error(\"Error when creating lock file.\", ex);\n                 }\n             }\n \n@@ -150,7 +150,7 @@ private boolean createLockFile() throws IOException {\n         try {\n             out.close();\n         } catch (IOException ex) {\n-            LOGGER.error(\"Error when creating lock file\");\n+            LOGGER.error(\"Error when creating lock file.\", ex);\n         }\n         lock.deleteOnExit();\n         return false;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -265,7 +265,7 @@ public void actionPerformed(ActionEvent e) {\n                 } catch (IOException ex) {\n                     JOptionPane.showMessageDialog(frame, Localization.lang(\"File permission error\"),\n                             Localization.lang(\"Cannot delete file\"), JOptionPane.ERROR_MESSAGE);\n-                    LOGGER.warn(\"File permission error while deleting: \" + file.toPath());\n+                    LOGGER.warn(\"File permission error while deleting: \" + file.toPath(), ex);\n                 }\n             }\n         });\n@@ -280,7 +280,7 @@ private void openSelectedFile() {\n                 JabRefDesktop.openExternalFileAnyFormat(metaData, entry.getLink(),\n                         type != null ? type : entry.getType());\n             } catch (IOException e) {\n-                LOGGER.warn(\"Cannot open selected file: \" + e.getMessage());\n+                LOGGER.warn(\"Cannot open selected file.\", e);\n             }\n         }\n     }\n@@ -466,7 +466,7 @@ private void downloadFile() {\n         try {\n             def.download(this);\n         } catch (IOException ex) {\n-            LOGGER.warn(\"Cannot download: \" + ex.getMessage());\n+            LOGGER.warn(\"Cannot download.\", ex);\n         }\n     }\n , @@ -152,7 +152,7 @@ public void setPage(String filename, Class resourceOwner) {\n             setPageOnly(new URL(resource.toString() + '#' + reference));\n \n         } catch (IOException ex) {\n-            LOGGER.warn(\"Problem when finding help files: \" + ex.getMessage());\n+            LOGGER.warn(\"Problem when finding help files.\", ex);\n         }\n \n         forw.removeAllElements();, @@ -340,7 +340,7 @@ public void stateChanged(ChangeEvent e) {\n         try {\n             new BibtexEntryWriter(new LatexFieldFormatter(), false).write(mergedEntry, sw);\n         } catch (IOException ex) {\n-            LOGGER.error(Localization.lang(\"Error in entry\" + \": \" + ex.getMessage()));\n+            LOGGER.error(\"Error in entry\" + \": \" + ex.getMessage(), ex);\n         }\n         jta.setText(sw.getBuffer().toString());\n         jta.setCaretPosition(0);\n@@ -423,7 +423,7 @@ private void updateAll() {\n         try {\n             new BibtexEntryWriter(new LatexFieldFormatter(), false).write(mergedEntry, sw);\n         } catch (IOException ex) {\n-            LOGGER.error(Localization.lang(\"Error in entry\" + \": \" + ex.getMessage()));\n+            LOGGER.error(\"Error in entry\" + \": \" + ex.getMessage(), ex);\n         }\n         jta.setText(sw.getBuffer().toString());\n         jta.setCaretPosition(0);, @@ -84,7 +84,7 @@ public void run() {\n             try {\n                 bibtexEntryWriter.write(entry, sw);\n             } catch (IOException e) {\n-                LOGGER.warn(\"Problem creating Bibtex file for mailing.\");\n+                LOGGER.warn(\"Problem creating Bibtex file for mailing.\", e);\n             }\n         }\n \n@@ -119,7 +119,7 @@ public void run() {\n             uriMailTo = new URI(\"mailto\", mailTo, null);\n         } catch (URISyntaxException e1) {\n             message = Localization.lang(\"Error creating email\");\n-            LOGGER.warn(message);\n+            LOGGER.warn(message, e1);\n             return;\n         }\n \n@@ -128,7 +128,7 @@ public void run() {\n             desktop.mail(uriMailTo);\n         } catch (IOException e) {\n             message = Localization.lang(\"Error creating email\");\n-            LOGGER.warn(message);\n+            LOGGER.warn(message, e);\n             return;\n         }\n , @@ -171,7 +171,7 @@ public boolean processQuery(String query, ImportInspector dialog, OutputPrinter\n             status.showMessage(Localization.lang(\"Connection to IEEEXplore failed\"), Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n         } catch (IOException e) {\n             status.showMessage(Localization.lang(e.getMessage()), Localization.lang(\"Search IEEEXplore\"), JOptionPane.ERROR_MESSAGE);\n-            LOGGER.warn(\"Search IEEEXplore: \" + e.getMessage());\n+            LOGGER.warn(\"Search IEEEXplore: \" + e.getMessage(), e);\n         }\n         return false;\n     }, ", 15, 16, "\"modified, modified, modified, modified, modified, modified, modified, modified, \"", 31], ["Oscar Gustafsson", "Changes as proposed by @matthiasgeiger", "11/04/15, 09:00:47 PM", "Oscar Gustafsson", "3f539b36ab26728a21551748e1fb8115c632e57d", ["src/main/java/net/sf/jabref/bst/VM.java", "src/main/java/net/sf/jabref/exporter/layout/LayoutHelper.java", "src/main/java/net/sf/jabref/groups/AutoGroupDialog.java", "src/main/java/net/sf/jabref/wizard/auximport/AuxSubGenerator.java"], "@@ -1186,8 +1186,6 @@ private void iterate(Tree child) {\n \n     /**\n      * Sorts the entry list using the values of the string entry variable sort.key$. It has no arguments.\n-     *\n-     * @param\n      */\n     private void sort() {\n         Collections.sort(entries, new Comparator<BstEntry>() {, @@ -282,9 +282,6 @@ private Object parse() throws IOException, StringIndexOutOfBoundsException {\n         return null;\n     }\n \n-    /**\n-     *\n-     */\n     private void parseField() throws IOException, StringIndexOutOfBoundsException {\n         int c;\n         StringBuffer buffer = null;, @@ -41,8 +41,7 @@\n import com.jgoodies.forms.layout.FormLayout;\n \n /**\n- * Dialog for creating or modifying groups. Operates directly on the Vector\n- * containing group information.\n+ * Dialog for creating or modifying groups. Operates directly on the Vector containing group information.\n  */\n class AutoGroupDialog extends JDialog implements CaretListener {\n \n@@ -51,31 +50,25 @@\n     private final JTextField deliminator = new JTextField(60);\n     JLabel nf = new JLabel(Localization.lang(\"Field to group by\") + \":\");\n     JLabel nr = new JLabel(Localization.lang(\"Characters to ignore\") + \":\");\n-    private final JRadioButton\n-    keywords = new JRadioButton(Localization.lang(\"Generate groups from keywords in a BibTeX field\"));\n+    private final JRadioButton keywords = new JRadioButton(\n+            Localization.lang(\"Generate groups from keywords in a BibTeX field\"));\n     private final JRadioButton authors = new JRadioButton(Localization.lang(\"Generate groups for author last names\"));\n     private final JRadioButton editors = new JRadioButton(Localization.lang(\"Generate groups for editor last names\"));\n     private final JCheckBox nd = new JCheckBox(Localization.lang(\"Use the following delimiter character(s):\"));\n     private final JButton ok = new JButton(Localization.lang(\"Ok\"));\n-    private boolean ok_pressed;\n     private final GroupTreeNode m_groupsRoot;\n     private final JabRefFrame frame;\n     private final BasePanel panel;\n     private final GroupSelector gs;\n-    private String oldRemove;\n-    private String oldField;\n     GridBagLayout gbl = new GridBagLayout();\n     GridBagConstraints con = new GridBagConstraints();\n \n \n     /**\n-     * @param groupsRoot\n-     *            The original set of groups, which is required as undo\n-     *            information when all groups are cleared.\n+     * @param groupsRoot The original set of groups, which is required as undo information when all groups are cleared.\n      */\n-    public AutoGroupDialog(JabRefFrame jabrefFrame, BasePanel basePanel,\n-            GroupSelector groupSelector, GroupTreeNode groupsRoot,\n-            String defaultField, String defaultRemove, String defaultDeliminator) {\n+    public AutoGroupDialog(JabRefFrame jabrefFrame, BasePanel basePanel, GroupSelector groupSelector,\n+            GroupTreeNode groupsRoot, String defaultField, String defaultRemove, String defaultDeliminator) {\n         super(jabrefFrame, Localization.lang(\"Automatically create groups\"), true);\n         frame = jabrefFrame;\n         gs = groupSelector;\n@@ -89,49 +82,42 @@ public AutoGroupDialog(JabRefFrame jabrefFrame, BasePanel basePanel,\n \n             @Override\n             public void actionPerformed(ActionEvent e) {\n-                ok_pressed = true;\n                 dispose();\n \n-                GroupTreeNode autoGroupsRoot = new GroupTreeNode(\n-                        new ExplicitGroup(Localization.lang(\"Automatically created groups\"),\n-                                GroupHierarchyType.INCLUDING));\n+                GroupTreeNode autoGroupsRoot = new GroupTreeNode(new ExplicitGroup(\n+                        Localization.lang(\"Automatically created groups\"), GroupHierarchyType.INCLUDING));\n                 Set<String> hs = null;\n-                String field1 = field();\n+                String fieldText = field.getText();\n                 if (keywords.isSelected()) {\n                     if (nd.isSelected()) {\n-                        hs = Util\n-                                .findDeliminatedWordsInField(panel.getDatabase(),\n-                                        field().toLowerCase().trim(), deliminator\n-                                        .getText());\n+                        hs = Util.findDeliminatedWordsInField(panel.getDatabase(), field.getText().toLowerCase().trim(),\n+                                deliminator.getText());\n                     } else {\n-                        hs = Util.findAllWordsInField(panel.getDatabase(),\n-                                field().toLowerCase().trim(), remove());\n+                        hs = Util.findAllWordsInField(panel.getDatabase(), field.getText().toLowerCase().trim(),\n+                                remove.getText());\n \n                     }\n-                }\n-                else if (authors.isSelected()) {\n+                } else if (authors.isSelected()) {\n                     List<String> fields = new ArrayList<>(2);\n                     fields.add(\"author\");\n                     hs = Util.findAuthorLastNames(panel.getDatabase(), fields);\n-                    field1 = \"author\";\n-                }\n-                else if (editors.isSelected()) {\n+                    fieldText = \"author\";\n+                } else if (editors.isSelected()) {\n                     List<String> fields = new ArrayList<>(2);\n                     fields.add(\"editor\");\n                     hs = Util.findAuthorLastNames(panel.getDatabase(), fields);\n-                    field1 = \"editor\";\n+                    fieldText = \"editor\";\n                 }\n \n                 for (String keyword : hs) {\n-                    KeywordGroup group = new KeywordGroup(keyword, field1,\n-                            keyword, false, false, GroupHierarchyType.INDEPENDENT);\n+                    KeywordGroup group = new KeywordGroup(keyword, fieldText, keyword, false, false,\n+                            GroupHierarchyType.INDEPENDENT);\n                     autoGroupsRoot.add(new GroupTreeNode(group));\n                 }\n \n                 m_groupsRoot.add(autoGroupsRoot);\n                 NamedCompound ce = new NamedCompound(Localization.lang(\"Autogenerate groups\"));\n-                UndoableAddOrRemoveGroup undo = new UndoableAddOrRemoveGroup(\n-                        gs, m_groupsRoot, autoGroupsRoot,\n+                UndoableAddOrRemoveGroup undo = new UndoableAddOrRemoveGroup(gs, m_groupsRoot, autoGroupsRoot,\n                         UndoableAddOrRemoveGroup.ADD_NODE);\n                 undo.setRevalidate(true);\n                 ce.addEdit(undo);\n@@ -170,8 +156,8 @@ public void actionPerformed(ActionEvent e) {\n         keywords.setSelected(true);\n \n         FormBuilder b = FormBuilder.create();\n-        b.layout(new FormLayout\n-                (\"left:20dlu, 4dlu, left:pref, 4dlu, fill:60dlu\", \"p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p\"));\n+        b.layout(new FormLayout(\"left:20dlu, 4dlu, left:pref, 4dlu, fill:60dlu\",\n+                \"p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p\"));\n         b.add(keywords).xyw(1, 1, 5);\n         b.add(Localization.lang(\"Field to group by\") + \":\").xy(3, 3);\n         b.add(field).xy(5, 3);\n@@ -191,85 +177,17 @@ public void actionPerformed(ActionEvent e) {\n         bb.addButton(cancel);\n         bb.addGlue();\n \n-        // Layout starts here.\n-        /*main.setLayout(gbl);\n-        opt.setLayout(gbl);\n-        main.setBorder(BorderFactory.createTitledBorder(BorderFactory\n-                .createEtchedBorder(), Globals.lang(\"Group properties\")));\n-        // Main panel:\n-        con.weightx = 0;\n-        con.gridwidth = 1;\n-        con.insets = new Insets(3, 5, 3, 5);\n-        con.anchor = GridBagConstraints.EAST;\n-        con.fill = GridBagConstraints.NONE;\n-        con.gridx = 0;\n-        con.gridy = 0;\n-        gbl.setConstraints(nf, con);\n-        main.add(nf);\n-        con.gridy = 1;\n-        gbl.setConstraints(nr, con);\n-        main.add(nr);\n-        con.gridy = 2;\n-        gbl.setConstraints(nd, con);\n-        main.add(nd);\n-        con.weightx = 1;\n-        con.anchor = GridBagConstraints.WEST;\n-        con.fill = GridBagConstraints.HORIZONTAL;\n-        con.gridy = 0;\n-        con.gridx = 1;\n-        gbl.setConstraints(field, con);\n-        main.add(field);\n-        con.gridy = 1;\n-        gbl.setConstraints(remove, con);\n-        main.add(remove);\n-        con.gridy = 2;\n-        gbl.setConstraints(deliminator, con);\n-        main.add(deliminator);\n-        // Option buttons:\n-        con.gridx = GridBagConstraints.RELATIVE;\n-        con.gridy = GridBagConstraints.RELATIVE;\n-        con.weightx = 1;\n-        con.gridwidth = 1;\n-        con.anchor = GridBagConstraints.EAST;\n-        con.fill = GridBagConstraints.NONE;\n-        gbl.setConstraints(ok, con);\n-        opt.add(ok);\n-        con.anchor = GridBagConstraints.WEST;\n-        con.gridwidth = GridBagConstraints.REMAINDER;\n-        gbl.setConstraints(cancel, con);\n-        opt.add(cancel);*/\n-\n         main.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         opt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         getContentPane().add(main, BorderLayout.CENTER);\n         getContentPane().add(b.getPanel(), BorderLayout.CENTER);\n         getContentPane().add(opt, BorderLayout.SOUTH);\n-        // pack();\n+\n         updateComponents();\n         pack();\n         Util.placeDialog(this, frame);\n     }\n \n-    public boolean okPressed() {\n-        return ok_pressed;\n-    }\n-\n-    public String oldField() {\n-        return oldField;\n-    }\n-\n-    public String oldRemove() {\n-        return oldRemove;\n-    }\n-\n-    private String field() {\n-        return field.getText();\n-    }\n-\n-    private String remove() {\n-        return remove.getText();\n-    }\n-\n     @Override\n     public void caretUpdate(CaretEvent e) {\n         updateComponents();, @@ -90,9 +90,8 @@ private void setReferenceDatabase(BibtexDatabase newRefDB) {\n     }\n \n     /**\n-     * parseAuxFile\n-     * read the Aux file and fill up some intern data structures.\n-     * Nested aux files (latex \\\\include) supported!\n+     * parseAuxFile read the Aux file and fill up some intern data structures. Nested aux files (latex \\\\include)\n+     * supported!\n      *\n      * @param filename String : Path to LatexAuxFile\n      * @return boolean, true = no error occurs\n@@ -132,12 +131,12 @@ private boolean parseAuxFile(String filename) {\n         Matcher matcher;\n \n         // while condition\n-        boolean weiter;\n+        boolean cont;\n \n         // return value -> default: no error\n         boolean back = true;\n \n-        // fileopen status\n+        // file open status\n         boolean loopFileOpen;\n \n         // the important tag\n@@ -146,7 +145,7 @@ private boolean parseAuxFile(String filename) {\n         // input-file-buffer\n         BufferedReader br = null;\n \n-        // filelist, used for nested aux files\n+        // file list, used for nested aux files\n         Vector<String> fileList = new Vector<>(5);\n         fileList.add(filename);\n \n@@ -169,23 +168,23 @@ private boolean parseAuxFile(String filename) {\n             try {\n                 //        System.out.println(\"read #\"+fName +\"#\") ;\n                 br = new BufferedReader(new FileReader(fName));\n-                weiter = true;\n+                cont = true;\n                 loopFileOpen = true;\n             } catch (FileNotFoundException fnfe) {\n                 System.out.println(\"Cannot locate input file! \" + fnfe.getMessage());\n                 // System.exit( 0 ) ;\n                 back = false;\n-                weiter = false;\n+                cont = false;\n                 loopFileOpen = false;\n             }\n \n-            while (weiter) {\n+            while (cont) {\n                 String line;\n                 try {\n                     line = br.readLine();\n                 } catch (IOException ioe) {\n                     line = null;\n-                    weiter = false;\n+                    cont = false;\n                 }\n \n                 if (line != null) {\n@@ -216,19 +215,19 @@ private boolean parseAuxFile(String filename) {\n                         if (end > start) {\n                             String str = path + line.substring(index + 8, end);\n \n-                            // if filename already in filelist\n+                            // if filename already in file list\n                             if (!fileList.contains(str)) {\n-                                fileList.add(str); // insert file into filelist\n+                                fileList.add(str); // insert file into file list\n                             }\n                         }\n                     }\n                 } else {\n                     // line != null\n-                    weiter = false;\n+                    cont = false;\n                 }\n             }\n \n-            if (loopFileOpen) // only close, if open sucessful\n+            if (loopFileOpen) // only close, if open successful\n             {\n                 try {\n                     br.close();\n@@ -245,15 +244,14 @@ private boolean parseAuxFile(String filename) {\n     }\n \n     /**\n-     * resolveTags\n-     * Try to find an equivalent bibtex entry into reference database for all keys\n-     * (found in aux file). This methode will fill up some intern data structures.....\n+     * resolveTags Try to find an equivalent bibtex entry into reference database for all keys (found in aux file). This\n+     * method will fill up some intern data structures.....\n      */\n     private void resolveTags() {\n         auxDB = new BibtexDatabase();\n         notFoundList.clear();\n \n-        // forall bibtex keys (found in aux-file) try to find an equivalent\n+        // for all bibtex keys (found in aux-file) try to find an equivalent\n         // entry into reference database\n         for (String str : mySet) {\n             BibtexEntry entry = db.getEntryByKey(str);\n@@ -296,7 +294,8 @@ private void resolveTags() {\n \n     /**\n      * Insert a clone of the given entry. The clone is given a new unique ID.\n-     * @param auxDB The database to insert into.\n+     *\n+     * @param bibDB The database to insert into.\n      * @param entry The entry to insert a copy of.\n      */\n     private void insertEntry(BibtexDatabase bibDB, BibtexEntry entry) {\n@@ -307,8 +306,7 @@ private void insertEntry(BibtexDatabase bibDB, BibtexEntry entry) {\n     }\n \n     /**\n-     * generate\n-     * Shortcut methode for easy generation.\n+     * generate Shortcut method for easy generation.\n      *\n      * @param auxFileName String\n      * @param bibDB BibtexDatabase - reference database\n@@ -343,29 +341,30 @@ public final int getNotResolvedKeysCount() {\n     }\n \n     /**\n-     * Query the number of extra entries pulled in due to crossrefs from other\n-     * entries.\n+     * Query the number of extra entries pulled in due to crossrefs from other entries.\n+     *\n      * @return The number of additional entries pulled in due to crossref\n      */\n     public final int getCrossreferencedEntriesCount() {\n         return crossreferencedEntriesCount;\n     }\n \n-    /** reset all used datastructures */\n+    /** reset all used data structures */\n     public final void clear() {\n         mySet.clear();\n         notFoundList.clear();\n         crossreferencedEntriesCount = 0;\n         // db = null ;  ???\n     }\n \n-    /** returns a vector off all not resolved bibtex entries found in auxfile */\n+    /** returns a vector off all not resolved bibtex entries found in aux file */\n     public Vector<String> getNotFoundList() {\n         return notFoundList;\n     }\n \n-    /** returns the number of nested aux files, read by the last call of\n-     *  generate method */\n+    /**\n+     * returns the number of nested aux files, read by the last call of generate method\n+     */\n     public int getNestedAuxCounter() {\n         return this.nestedAuxCounter;\n     }, ", 49, 137, "\"modified, modified, modified, modified, \"", 186], ["Oscar Gustafsson", "Only used abbreviation for name", "11/09/15, 11:25:40 PM", "Oscar Gustafsson", "96324b2ee55ee589418486bb2cf496b7c1020910", ["src/main/java/net/sf/jabref/importer/fetcher/DOAJFetcher.java"], "@@ -124,7 +124,7 @@ public boolean processQuery(String query, ImportInspector inspector, OutputPrint\n \n     @Override\n     public String getTitle() {\n-        return \"DOAJ (Directory of Open Access Journals)\";\n+        return \"DOAJ\";\n     }\n \n     @Override, ", 1, 1, "\"modified, \"", 2], ["Oscar Gustafsson", "Implemented suggested changes (and a few more improvements)", "11/27/15, 02:31:57 PM", "Oscar Gustafsson", "c5ec38f64d421ee6cdc6079570b31a20a19b54b1", ["src/main/java/net/sf/jabref/importer/fileformat/JSONEntryParser.java"], "@@ -16,6 +16,9 @@\n \n package net.sf.jabref.importer.fileformat;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.json.JSONArray;\n@@ -55,18 +58,15 @@ public BibtexEntry BibJSONtoBibtex(JSONObject bibJsonEntry) {\n         // Authors\n         if (bibJsonEntry.has(\"author\")) {\n             JSONArray authors = bibJsonEntry.getJSONArray(\"author\");\n-            StringBuffer sb = new StringBuffer();\n+            List<String> authorList = new ArrayList<>();\n             for (int i = 0; i < authors.length(); i++) {\n                 if (authors.getJSONObject(i).has(\"name\")) {\n-                    sb.append(authors.getJSONObject(i).getString(\"name\"));\n-                    if (i < (authors.length() - 1)) {\n-                        sb.append(\" and \");\n-                    }\n+                    authorList.add(authors.getJSONObject(i).getString(\"name\"));\n                 } else {\n                     LOGGER.info(\"Empty author name.\");\n                 }\n             }\n-            entry.setField(\"author\", sb.toString());\n+            entry.setField(\"author\", String.join(\" and \", authorList));\n         } else {\n             LOGGER.info(\"No author found.\");\n         }\n@@ -110,16 +110,13 @@ public BibtexEntry BibJSONtoBibtex(JSONObject bibJsonEntry) {\n         // Keywords\n         if (bibJsonEntry.has(\"keywords\")) {\n             JSONArray keywords = bibJsonEntry.getJSONArray(\"keywords\");\n-            StringBuffer sb = new StringBuffer();\n+            List<String> keywordList = new ArrayList<>();\n             for (int i = 0; i < keywords.length(); i++) {\n                 if (!keywords.isNull(i)) {\n-                    sb.append(keywords.getString(i));\n-                    if (i < (keywords.length() - 1)) {\n-                        sb.append(\", \");\n-                    }\n+                    keywordList.add(keywords.getString(i));\n                 }\n             }\n-            entry.setField(\"keywords\", sb.toString());\n+            entry.putKeywords(keywordList);\n         }\n \n         // Identifiers\n@@ -171,7 +168,7 @@ public static BibtexEntry SpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n \n         // Guess publication type\n         String isbn = springerJsonEntry.optString(\"isbn\");\n-        if ((isbn == null) || (isbn.length() == 0)) {\n+        if (com.google.common.base.Strings.isNullOrEmpty(isbn)) {\n             // Probably article\n             entry.setType(EntryTypes.getType(\"article\"));\n             nametype = \"journal\";\n@@ -185,18 +182,15 @@ public static BibtexEntry SpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n         // Authors\n         if (springerJsonEntry.has(\"creators\")) {\n             JSONArray authors = springerJsonEntry.getJSONArray(\"creators\");\n-            StringBuffer sb = new StringBuffer();\n+            List<String> authorList = new ArrayList<>();\n             for (int i = 0; i < authors.length(); i++) {\n                 if (authors.getJSONObject(i).has(\"creator\")) {\n-                    sb.append(authors.getJSONObject(i).getString(\"creator\"));\n-                    if (i < (authors.length() - 1)) {\n-                        sb.append(\" and \");\n-                    }\n+                    authorList.add(authors.getJSONObject(i).getString(\"creator\"));\n                 } else {\n                     LOGGER.info(\"Empty author name.\");\n                 }\n             }\n-            entry.setField(\"author\", sb.toString());\n+            entry.setField(\"author\", String.join(\" and \", authorList));\n         } else {\n             LOGGER.info(\"No author found.\");\n         }\n@@ -205,7 +199,7 @@ public static BibtexEntry SpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n         for (String field : singleFieldStrings) {\n             if (springerJsonEntry.has(field)) {\n                 String text = springerJsonEntry.getString(field);\n-                if (text.length() > 0) {\n+                if (!text.isEmpty()) {\n                     entry.setField(field, text);\n                 }\n             }, ", 14, 20, "\"modified, \"", 34], ["Oscar Gustafsson", "Warning removal", "11/04/15, 11:14:00 PM", "Oscar Gustafsson", "d169b1ca845a6a72a3d4752438ff9d825c8f6e5e", ["src/main/java/net/sf/jabref/exporter/ExportFormats.java", "src/main/java/net/sf/jabref/exporter/layout/LayoutEntry.java", "src/main/java/net/sf/jabref/groups/EntryTableTransferHandler.java", "src/main/java/net/sf/jabref/gui/ColorSetupPanel.java", "src/main/java/net/sf/jabref/gui/EntryMarker.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/main/java/net/sf/jabref/gui/MainTable.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/gui/help/HelpAction.java", "src/main/java/net/sf/jabref/gui/help/HelpDialog.java", "src/main/java/net/sf/jabref/gui/preftabs/EntryEditorPrefsTab.java", "src/main/java/net/sf/jabref/gui/preftabs/ExternalTab.java", "src/main/java/net/sf/jabref/gui/preftabs/LabelPatternPrefTab.java", "src/main/java/net/sf/jabref/importer/fetcher/DBLPHelper.java", "src/main/java/net/sf/jabref/importer/fetcher/GeneralFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/INSPIREFetcher.java", "src/main/java/net/sf/jabref/importer/fileformat/BibtexParser.java", "src/main/java/net/sf/jabref/importer/fileformat/MedlineHandler.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/Title.java", "src/main/java/net/sf/jabref/logic/labelPattern/LabelPatternUtil.java", "src/main/java/net/sf/jabref/logic/logging/Cache.java", "src/main/java/net/sf/jabref/logic/search/describer/ContainsAndRegexBasedSearchRuleDescriber.java", "src/main/java/net/sf/jabref/openoffice/OOBibBase.java", "src/main/java/net/sf/jabref/openoffice/OpenOfficePanel.java", "src/main/java/net/sf/jabref/wizard/text/gui/TextInputDialog.java", "src/test/java/net/sf/jabref/TestIconsProperties.java"], "@@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -34,14 +34,14 @@\n \n /**\n  * User: alver\n- * \n- * Date: Oct 18, 2006 \n- * \n- * Time: 9:35:08 PM \n+ *\n+ * Date: Oct 18, 2006\n+ *\n+ * Time: 9:35:08 PM\n  */\n public class ExportFormats {\n \n-    private static final Map<String, IExportFormat> exportFormats = new TreeMap<String, IExportFormat>();\n+    private static final Map<String, IExportFormat> exportFormats = new TreeMap<>();\n \n     // Global variable that is used for counting output entries when exporting:\n     public static int entryNumber;\n@@ -92,7 +92,7 @@ public static void initAllExports() {\n \n     /**\n      * Build a string listing of all available export formats.\n-     * \n+     *\n      * @param maxLineLength\n      *            The max line length before a line break must be added.\n      * @param linePrefix\n@@ -106,7 +106,7 @@ public static String getConsoleExportList(int maxLineLength, int firstLineSubtr,\n         int lastBreak = -firstLineSubtr;\n \n         for (String name : ExportFormats.exportFormats.keySet()) {\n-            if (sb.length() + 2 + name.length() - lastBreak > maxLineLength) {\n+            if (((sb.length() + 2 + name.length()) - lastBreak) > maxLineLength) {\n                 sb.append(\",\\n\");\n                 lastBreak = sb.length();\n                 sb.append(linePrefix);\n@@ -130,7 +130,7 @@ public static String getConsoleExportList(int maxLineLength, int firstLineSubtr,\n \n     /**\n      * Look up the named export format.\n-     * \n+     *\n      * @param consoleName\n      *            The export name given in the JabRef console help information.\n      * @return The ExportFormat, or null if no exportformat with that name is\n@@ -142,7 +142,7 @@ public static IExportFormat getExportFormat(String consoleName) {\n \n     /**\n      * Create an AbstractAction for performing an export operation.\n-     * \n+     *\n      * @param frame\n      *            The JabRefFrame of this JabRef instance.\n      * @param selectedOnly\n@@ -154,8 +154,6 @@ public static AbstractAction getExportAction(JabRefFrame frame, boolean selected\n \n         class ExportAction extends MnemonicAwareAction {\n \n-            private static final long serialVersionUID = 639463604530580554L;\n-\n             private final JabRefFrame frame;\n \n             private final boolean selectedOnly;\n@@ -198,7 +196,7 @@ public void actionPerformed(ActionEvent e) {\n                     Set<String> entryIds = null;\n                     if (selectedOnly) {\n                         BibtexEntry[] selected = frame.basePanel().getSelectedEntries();\n-                        entryIds = new HashSet<String>();\n+                        entryIds = new HashSet<>();\n                         for (BibtexEntry bibtexEntry : selected) {\n                             entryIds.add(bibtexEntry.getId());\n                         }\n@@ -274,7 +272,7 @@ private static JFileChooser createExportFileChooser(String currentDir) {\n         String lastUsedFormat = Globals.prefs.get(JabRefPreferences.LAST_USED_EXPORT);\n         FileFilter defaultFilter = null;\n         JFileChooser fc = new JFileChooser(currentDir);\n-        TreeSet<FileFilter> filters = new TreeSet<FileFilter>();\n+        TreeSet<FileFilter> filters = new TreeSet<>();\n         for (Map.Entry<String, IExportFormat> e : ExportFormats.exportFormats.entrySet()) {\n             String formatName = e.getKey();\n             IExportFormat format = e.getValue();, @@ -68,8 +68,9 @@ public LayoutEntry(StringInt si, String classPrefix_) throws Exception {\n         } else if (si.i == LayoutHelper.IS_SIMPLE_FIELD) {\n             text = si.s.trim();\n         } else if ((si.i == LayoutHelper.IS_FIELD_START) || (si.i == LayoutHelper.IS_FIELD_END)) {\n+            // Do nothing\n         } else if (si.i == LayoutHelper.IS_OPTION_FIELD) {\n-            Vector<String> v = new Vector<String>();\n+            Vector<String> v = new Vector<>();\n             WSITools.tokenize(v, si.s, \"\\n\");\n \n             if (v.size() == 1) {\n@@ -84,7 +85,7 @@ public LayoutEntry(StringInt si, String classPrefix_) throws Exception {\n                         String notFound = ((NotFoundFormatter) anOption).getNotFound();\n \n                         if (invalidFormatter == null) {\n-                            invalidFormatter = new ArrayList<String>();\n+                            invalidFormatter = new ArrayList<>();\n                         }\n                         invalidFormatter.add(notFound);\n                     }\n@@ -100,7 +101,7 @@ public LayoutEntry(Vector<StringInt> parsedEntries, String classPrefix_, int lay\n         String blockEnd;\n         StringInt si;\n         Vector<StringInt> blockEntries = null;\n-        Vector<LayoutEntry> tmpEntries = new Vector<LayoutEntry>();\n+        Vector<LayoutEntry> tmpEntries = new Vector<>();\n         LayoutEntry le;\n         si = parsedEntries.get(0);\n         blockStart = si.s;\n@@ -119,9 +120,10 @@ public LayoutEntry(Vector<StringInt> parsedEntries, String classPrefix_, int lay\n \n             // System.out.println(\"PARSED-ENTRY: \"+si.s+\"=\"+si.i);\n             if ((si.i == LayoutHelper.IS_LAYOUT_TEXT) || (si.i == LayoutHelper.IS_SIMPLE_FIELD)) {\n+                // Do nothing\n             } else if ((si.i == LayoutHelper.IS_FIELD_START)\n                     || (si.i == LayoutHelper.IS_GROUP_START)) {\n-                blockEntries = new Vector<StringInt>();\n+                blockEntries = new Vector<>();\n                 blockStart = si.s;\n             } else if ((si.i == LayoutHelper.IS_FIELD_END) || (si.i == LayoutHelper.IS_GROUP_END)) {\n                 if (blockStart.equals(si.s)) {\n@@ -137,6 +139,7 @@ public LayoutEntry(Vector<StringInt> parsedEntries, String classPrefix_, int lay\n                     LOGGER.warn(\"Nested field entries are not implemented !!!\");\n                 }\n             } else if (si.i == LayoutHelper.IS_OPTION_FIELD) {\n+                // Do nothing\n             }\n \n             // else if (si.i == LayoutHelper.IS_OPTION_FIELD_PARAM)\n@@ -158,7 +161,7 @@ public LayoutEntry(Vector<StringInt> parsedEntries, String classPrefix_, int lay\n             // Note if one of the entries has an invalid formatter:\n             if (layoutEntries[i].isInvalidFormatter()) {\n                 if (invalidFormatter == null) {\n-                    invalidFormatter = new ArrayList<String>(1);\n+                    invalidFormatter = new ArrayList<>(1);\n                 }\n                 invalidFormatter.addAll(layoutEntries[i].getInvalidFormatters());\n             }\n@@ -408,7 +411,7 @@ private static LayoutFormatter getLayoutFormatterByClassName(String className, S\n \n         ArrayList<String[]> formatterStrings = Util.parseMethodsCalls(formatterName);\n \n-        ArrayList<LayoutFormatter> results = new ArrayList<LayoutFormatter>(formatterStrings.size());\n+        ArrayList<LayoutFormatter> results = new ArrayList<>(formatterStrings.size());\n \n         Map<String, String> userNameFormatter = NameFormatterTab.getNameFormatters();\n \n@@ -440,6 +443,7 @@ private static LayoutFormatter getLayoutFormatterByClassName(String className, S\n                 results.add(f);\n                 continue;\n             } catch (Exception ignored) {\n+                // Ignored\n             }\n \n             // Then check whether this is a user defined formatter\n@@ -470,12 +474,10 @@ public boolean isInvalidFormatter() {\n     }\n \n     /**\n-     * Will return the text that was called by the method with HTML tags\n-     * to highlight each word the user has searched for and will skip\n-     * the highlight process if the first Char isn't a letter or a digit.\n+     * Will return the text that was called by the method with HTML tags to highlight each word the user has searched\n+     * for and will skip the highlight process if the first Char isn't a letter or a digit.\n      *\n-     * This check is a quick hack to avoid highlighting of HTML tags\n-     * It does not always work, but it does its job mostly\n+     * This check is a quick hack to avoid highlighting of HTML tags It does not always work, but it does its job mostly\n      *\n      * @param text This is a String in which we search for different words\n      * @param toHighlight List of all words which must be highlighted, @@ -287,9 +287,9 @@ private boolean handleDropTransfer(String dropStr, final int dropRow) throws IOE\n         }\n         File tmpfile = java.io.File.createTempFile(\"jabrefimport\", \"\");\n         tmpfile.deleteOnExit();\n-        FileWriter fw = new FileWriter(tmpfile);\n-        fw.write(dropStr);\n-        fw.close();\n+        try (FileWriter fw = new FileWriter(tmpfile)) {\n+            fw.write(dropStr);\n+        }\n \n         // System.out.println(\"importing from \" + tmpfile.getAbsolutePath());\n \n@@ -310,7 +310,7 @@ private boolean handleDropTransfer(String dropStr, final int dropRow) throws IOE\n     public static List<File> getFilesFromDraggedFilesString(String s) {\n         // Split into lines:\n         String[] lines = s.replaceAll(\"\\r\", \"\").split(\"\\n\");\n-        List<File> files = new ArrayList<File>();\n+        List<File> files = new ArrayList<>();\n         for (String line1 : lines) {\n             String line = line1;\n \n@@ -406,7 +406,7 @@ public void run() {\n     private void loadOrImportFiles(String[] fileNames, int dropRow) {\n \n         OpenDatabaseAction openAction = new OpenDatabaseAction(frame, false);\n-        ArrayList<String> notBibFiles = new ArrayList<String>();\n+        ArrayList<String> notBibFiles = new ArrayList<>();\n         String encoding = Globals.prefs.get(JabRefPreferences.DEFAULT_ENCODING);\n         for (String fileName : fileNames) {\n             // Find the file's extension, if any:, @@ -37,16 +37,15 @@\n  */\n public class ColorSetupPanel extends JPanel {\n \n-    private static final long serialVersionUID = -4634367444666144966L;\n     private static final int ICON_WIDTH = 30;\n     private static final int ICON_HEIGHT = 20;\n-    private final ArrayList<ColorButton> buttons = new ArrayList<ColorButton>();\n+    private final ArrayList<ColorButton> buttons = new ArrayList<>();\n \n \n     public ColorSetupPanel() {\n \n         FormLayout layout = new FormLayout\n-                (\"30dlu, 4dlu, fill:pref, 4dlu, fill:pref, 8dlu, 30dlu, 4dlu, fill:pref, 4dlu, fill:pref\", \n+                (\"30dlu, 4dlu, fill:pref, 4dlu, fill:pref, 8dlu, 30dlu, 4dlu, fill:pref, 4dlu, fill:pref\",\n                         \"pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref, 2dlu, pref\");\n         FormBuilder builder = FormBuilder.create().layout(layout);\n , @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+ */\n package net.sf.jabref.gui;\n \n import net.sf.jabref.Globals;\n@@ -81,7 +96,7 @@ public static void unmarkEntry(BibtexEntry be, boolean onlyMaxLevel, BibtexDatab\n                 if (m.find()) {\n                     try {\n                         int prevMarkLevel = Integer.parseInt(m.group(1));\n-                        if (!onlyMaxLevel || prevMarkLevel == MARK_COLOR_LEVELS) {\n+                        if (!onlyMaxLevel || (prevMarkLevel == MARK_COLOR_LEVELS)) {\n                             if (prevMarkLevel > 1) {\n                                 newValue = s.substring(0, m.start(1)) + s.substring(m.end(1));\n                             } else {\n@@ -129,7 +144,7 @@ public static void unmarkEntry(BibtexEntry be, boolean onlyMaxLevel, BibtexDatab\n      * @param ce\n      */\n     private static void unmarkOldStyle(BibtexEntry be, BibtexDatabase database, NamedCompound ce) {\n-        TreeSet<Object> owners = new TreeSet<Object>();\n+        TreeSet<Object> owners = new TreeSet<>();\n         for (BibtexEntry entry : database.getEntries()) {\n             Object o = entry.getField(BibtexFields.OWNER);\n             if (o != null), @@ -537,7 +537,7 @@ private void generateKeySelectedEntry() {\n      * one another, and, if they are destined for an existing database, with\n      * respect to existing keys in the database.\n      */\n-    private void generateKeys(boolean addColumn) {\n+    private void generateKeys() {\n         entries.getReadWriteLock().writeLock().lock();\n \n         BibtexDatabase database;\n@@ -713,7 +713,7 @@ public void actionPerformed(ActionEvent event) {\n             // If \"Generate keys\" is checked, generate keys unless it's already\n             // been done:\n             if (autoGenerate.isSelected() && !generatedKeys) {\n-                generateKeys(false);\n+                generateKeys();\n             }\n             // Remember the choice until next time:\n             Globals.prefs.putBoolean(JabRefPreferences.GENERATE_KEYS_AFTER_INSPECTION, autoGenerate.isSelected());\n@@ -764,7 +764,7 @@ public void actionPerformed(ActionEvent event) {\n                                             Localization.lang(\"Cannot add entries to group without generating keys. Generate keys now?\"),\n                                             Localization.lang(\"Add to group\"), JOptionPane.YES_NO_OPTION);\n                             if (answer == JOptionPane.YES_OPTION) {\n-                                generateKeys(false);\n+                                generateKeys();\n                             } else {\n                                 groupingCanceled = true;\n                             }\n@@ -872,7 +872,7 @@ public void actionPerformed(ActionEvent event) {\n             generate.setEnabled(false);\n             generatedKeys = true; // To prevent the button from getting\n             // enabled again.\n-            generateKeys(true); // Generate the keys.\n+            generateKeys(); // Generate the keys.\n         }\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -24,7 +24,13 @@\n import java.util.List;\n import java.util.ArrayList;\n \n-import javax.swing.*;\n+import javax.swing.BorderFactory;\n+import javax.swing.JLabel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.JViewport;\n+import javax.swing.TransferHandler;\n import javax.swing.plaf.TableUI;\n import javax.swing.table.DefaultTableCellRenderer;\n import javax.swing.table.TableCellRenderer;\n@@ -53,16 +59,16 @@\n \n /**\n  * The central table which displays the bibtex entries.\n- * \n+ *\n  * User: alver\n  * Date: Oct 12, 2005\n  * Time: 10:29:39 PM\n- * \n+ *\n  */\n public class MainTable extends JTable {\n \n     private static final long serialVersionUID = 1L;\n-    \n+\n     private final MainTableFormat tableFormat;\n     private final BasePanel panel;\n     private final SortedList<BibtexEntry> sortedForMarking;\n@@ -93,7 +99,7 @@\n     private static final int OTHER = 3;\n     private static final int BOOLEAN = 4;\n     public static final int ICON_COL = 8; // Constant to indicate that an icon cell renderer should be used.\n-    \n+\n     private static final Log LOGGER = LogFactory.getLog(MainTable.class);\n \n     static {\n@@ -112,13 +118,13 @@ public MainTable(MainTableFormat tableFormat, EventList<BibtexEntry> list, JabRe\n         this.panel = panel;\n         // This SortedList has a Comparator controlled by the TableComparatorChooser\n         // we are going to install, which responds to user sorting selctions:\n-        sortedForTable = new SortedList<BibtexEntry>(list, null);\n+        sortedForTable = new SortedList<>(list, null);\n         // This SortedList applies afterwards, and floats marked entries:\n-        sortedForMarking = new SortedList<BibtexEntry>(sortedForTable, null);\n+        sortedForMarking = new SortedList<>(sortedForTable, null);\n         // This SortedList applies afterwards, and can float search hits:\n-        sortedForSearch = new SortedList<BibtexEntry>(sortedForMarking, null);\n+        sortedForSearch = new SortedList<>(sortedForMarking, null);\n         // This SortedList applies afterwards, and can float grouping hits:\n-        sortedForGrouping = new SortedList<BibtexEntry>(sortedForSearch, null);\n+        sortedForGrouping = new SortedList<>(sortedForSearch, null);\n \n         searchMatcher = null;\n         groupMatcher = null;\n@@ -324,7 +330,7 @@ private void setWidths() {\n         cm.getColumn(0).setPreferredWidth(ncWidth);\n         for (int i = 1; i < tableFormat.padleft; i++) {\n \n-            // Check if the Column is an extended RankingColumn (and not a compact-ranking column) \n+            // Check if the Column is an extended RankingColumn (and not a compact-ranking column)\n             // If this is the case, set a certain Column-width,\n             // because the RankingIconColumn needs some more width\n             if (tableFormat.isRankingColumn(i)) {\n@@ -364,7 +370,7 @@ public BibtexEntry getEntryAt(int row) {\n     }\n \n     private List<Boolean> getCurrentSortOrder() {\n-        List<Boolean> order = new ArrayList<Boolean>();\n+        List<Boolean> order = new ArrayList<>();\n         List<Integer> sortCols = comparatorChooser.getSortingColumns();\n         for (Integer i : sortCols) {\n             order.add(comparatorChooser.isColumnReverse(i));\n@@ -374,7 +380,7 @@ public BibtexEntry getEntryAt(int row) {\n \n     private List<String> getCurrentSortFields() {\n         List<Integer> sortCols = comparatorChooser.getSortingColumns();\n-        List<String> fields = new ArrayList<String>();\n+        List<String> fields = new ArrayList<>();\n         for (Integer i : sortCols) {\n             String name = tableFormat.getColumnType(i);\n             if (name != null) {\n@@ -390,7 +396,6 @@ public BibtexEntry getEntryAt(int row) {\n      * columns, but this is where the Comparators are defined. Also, the ComparatorChooser\n      * is initialized with the sort order defined in Preferences.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private void setupComparatorChooser() {\n         // First column:\n         List<Comparator> comparators = comparatorChooser.getComparatorsForColumn(0);\n@@ -505,7 +510,7 @@ private int getCellStatus(int row, int col) {\n \n     /**\n      * Use with caution! If you modify an entry in the table, the selection changes\n-     * \n+     *\n      * You can avoid it with\n      *   <code>.getSelected().getReadWriteLock().writeLock().lock()</code>\n      *   and then <code>.unlock()</code>\n@@ -714,7 +719,6 @@ public void setUI(TableUI newUI) {\n      * @param index The column number.\n      * @return The Comparator, or null if none is set.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public Comparator<BibtexEntry> getComparatorForColumn(int index) {\n         List<Comparator> l = comparatorChooser.getComparatorsForColumn(index);\n         return l.isEmpty() ? null : l.get(0);, @@ -30,12 +30,6 @@\n import net.sf.jabref.specialfields.SpecialFieldsUtils;\n import ca.odell.glazedlists.gui.TableFormat;\n \n-import java.awt.Color;\n-import java.awt.Graphics;\n-import java.awt.image.BufferedImage;\n-\n-import javax.swing.Icon;\n-import javax.swing.ImageIcon;\n import javax.swing.JLabel;\n \n /**\n@@ -71,7 +65,7 @@\n     private String[][] columns; // Contains the current column names.\n     public int padleft = -1; // padleft indicates how many columns (starting from left) are\n     // special columns (number column or icon column).\n-    private final HashMap<Integer, String[]> iconCols = new HashMap<Integer, String[]>();\n+    private final HashMap<Integer, String[]> iconCols = new HashMap<>();\n     private int[][] nameCols;\n     private boolean namesAsIs;\n     private boolean abbr_names;\n@@ -309,7 +303,7 @@ private boolean hasField(BibtexEntry be, String field) {\n \n     private int[] hasField(BibtexEntry be, String[] field) {\n         // If the entry has a nonzero value in any of the\n-        // 'search' fields, returns the smallest index for which it does. \n+        // 'search' fields, returns the smallest index for which it does.\n         // Otherwise returns -1. When field indicates one or more file types,\n         // returns the index of the first present file type.\n         if ((be == null) || (field == null) || (field.length < 1)) {\n@@ -443,7 +437,7 @@ public void updateTableFormat() {\n         // of names as efficiently as possible.\n         // Each subarray contains the column number (before padding) and the\n         // subfield number in case a column has fallback fields.\n-        Vector<int[]> tmp = new Vector<int[]>(2, 1);\n+        Vector<int[]> tmp = new Vector<>(2, 1);\n         for (int i = 0; i < columns.length; i++) {\n             for (int j = 0; j < columns[i].length; j++) {\n                 if (columns[i][j].equals(\"author\"), @@ -43,7 +43,6 @@\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.cleanup.PageNumbersCleanup;\n import net.sf.jabref.logic.formatter.BibtexFieldFormatters;\n-import net.sf.jabref.logic.formatter.bibtexfields.SuperscriptFormatter;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.logic.util.DOI;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -32,7 +32,7 @@\n \n     private final HelpDialog diag;\n \n-    private Class resourceOwner;\n+    private Class<?> resourceOwner;\n \n     private String helpFile;\n \n@@ -74,7 +74,7 @@ public HelpAction(String title, HelpDialog diag, String helpFile, String tooltip\n         this.helpFile = helpFile;\n     }\n \n-    public void setResourceOwner(Class resourceOwner) {\n+    public void setResourceOwner(Class<?> resourceOwner) {\n         this.resourceOwner = resourceOwner;\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -30,7 +30,7 @@\n import net.sf.jabref.util.Util;\n \n /**\n- * \n+ *\n  * This is a non-modal help Dialog. The contents of the help is specified by\n  * calling showPage().\n  */\n@@ -89,7 +89,7 @@ public void showPage(String url) {\n         showPage(url, JabRef.class);\n     }\n \n-    public void showPage(String url, Class resourceOwner) {\n+    public void showPage(String url, Class<?> resourceOwner) {\n         if (!isVisible()) {\n             Util.placeDialog(this, frame);\n             content.reset();, @@ -18,9 +18,15 @@\n import java.awt.BorderLayout;\n import java.awt.Insets;\n \n-import javax.swing.*;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n+import javax.swing.BorderFactory;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JCheckBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JSpinner;\n+import javax.swing.JTextField;\n+import javax.swing.SpinnerNumberModel;\n \n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.JabRefFrame;\n@@ -113,7 +119,7 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n         // We need a listener on showSource to enable and disable the source panel-related choices:\n         emacsMode.addChangeListener(event -> emacsRebindCtrlF.setEnabled(emacsMode.isSelected()));\n \n-        \n+\n         autoCompFields = new JTextField(40);\n         // We need a listener on autoComplete to enable and disable the\n         // autoCompFields text field:\n@@ -137,10 +143,10 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n         builder.add(emacsMode, cc.xy(2, 9));\n         builder.add(emacsRebindCtrlA, cc.xy(2, 11));\n         builder.add(emacsRebindCtrlF, cc.xy(2, 13));\n-        \n+\n         builder.addSeparator(Localization.lang(\"Autocompletion options\"), cc.xyw(1, 15, 5));\n         builder.add(autoComplete, cc.xy(2, 19));\n-        \n+\n         DefaultFormBuilder builder3 = new DefaultFormBuilder(new FormLayout(\"left:pref, 4dlu, fill:150dlu\",\"\"));\n         JLabel label = new JLabel(Localization.lang(\"Use autocompletion for the following fields\")+\":\");\n \n@@ -155,12 +161,12 @@ public EntryEditorPrefsTab(JabRefFrame frame, JabRefPreferences prefs) {\n         builder.add(autoCompFF, cc.xy(2,24));\n         builder.add(autoCompLF, cc.xy(2,25));\n         builder.add(autoCompBoth, cc.xy(2,26));\n-        \n+\n         builder.addSeparator(Localization.lang(\"Treatment of first names\"), cc.xyw(2, 28, 4));\n         builder.add(firstNameModeAbbr, cc.xy(2,29));\n         builder.add(firstNameModeFull, cc.xy(2,30));\n         builder.add(firstNameModeBoth, cc.xy(2,31));\n-        \n+\n         JPanel pan = builder.getPanel();\n         pan.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         add(pan, BorderLayout.CENTER);\n@@ -260,17 +266,17 @@ else if (autoCompFF.isSelected()) {\n \n         // We need to remove all entry editors from cache if the source panel setting\n         // or the autocompletion settings have been changed:\n-        if (oldAutoComplete != autoComplete.isSelected()\n+        if ((oldAutoComplete != autoComplete.isSelected())\n                 || !oldAutoCompFields.equals(autoCompFields.getText()) ||\n-                oldAutoCompFF != autoCompFF.isSelected() || oldAutoCompLF != autoCompLF.isSelected() ||\n-                oldAutoCompFModeAbbr != firstNameModeAbbr.isSelected() ||\n-                oldAutoCompFModeFull != firstNameModeFull.isSelected()) {\n+                (oldAutoCompFF != autoCompFF.isSelected()) || (oldAutoCompLF != autoCompLF.isSelected()) ||\n+                (oldAutoCompFModeAbbr != firstNameModeAbbr.isSelected()) ||\n+                (oldAutoCompFModeFull != firstNameModeFull.isSelected())) {\n             for (int j = 0; j < frame.getTabbedPane().getTabCount(); j++) {\n                 BasePanel bp = (BasePanel) frame.getTabbedPane().getComponentAt(j);\n                 bp.entryEditors.clear();\n             }\n         }\n-        // the autocompleter has to be updated to the new min length to complete \n+        // the autocompleter has to be updated to the new min length to complete\n         AutoCompleterFactory.SHORTEST_TO_COMPLETE = (Integer) shortestToComplete.getValue();\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -15,21 +15,29 @@\n */\n package net.sf.jabref.gui.preftabs;\n \n-import java.awt.*;\n import java.awt.event.ItemEvent;\n import java.awt.event.ItemListener;\n import java.awt.event.ActionListener;\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n import java.awt.event.ActionEvent;\n \n-import javax.swing.*;\n+import javax.swing.BorderFactory;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JTextField;\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n \n-import net.sf.jabref.*;\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.external.ExternalFileTypeEditor;\n import net.sf.jabref.external.push.*;\n import net.sf.jabref.gui.GUIGlobals;\n-import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.BrowseAction;\n import net.sf.jabref.gui.help.HelpAction;\n@@ -87,7 +95,7 @@ public void stateChanged(ChangeEvent changeEvent) {\n         useRegExpComboBox = new JRadioButton(Localization.lang(\"Use Regular Expression Search\"));\n         ItemListener regExpListener = new ItemListener() {\n \n-            \n+\n             @Override\n             public void itemStateChanged(ItemEvent e) {\n                 regExpTextField.setEditable(useRegExpComboBox.isSelected());\n@@ -114,9 +122,9 @@ public void itemStateChanged(ItemEvent e) {\n         builder.append(pan);\n         /**\n          * Fix for [ 1749613 ] About translation\n-         * \n+         *\n          * https://sourceforge.net/tracker/index.php?func=detail&aid=1749613&group_id=92314&atid=600306\n-         * \n+         *\n          * Cannot really use %0 to refer to the file type, since this ruins translation.\n          */\n         JLabel lab = new JLabel(Localization.lang(\"Main file directory\") + ':');, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2012 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -30,7 +30,6 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.help.HelpDialog;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.labelPattern.AbstractLabelPattern;\n import net.sf.jabref.logic.labelPattern.GlobalLabelPattern;\n import net.sf.jabref.gui.labelPattern.LabelPatternPanel;\n import net.sf.jabref.logic.labelPattern.LabelPatternUtil;\n@@ -172,9 +171,9 @@ public void setValues() {\n         autoGenerateOnImport.setSelected(Globals.prefs.getBoolean(JabRefPreferences.GENERATE_KEYS_AFTER_INSPECTION));\n         warnBeforeOverwriting.setSelected(Globals.prefs.getBoolean(JabRefPreferences.WARN_BEFORE_OVERWRITING_KEY));\n \n-        boolean alwaysAddLetter = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER);\n+        boolean prefAlwaysAddLetter = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER);\n         boolean firstLetterA = Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A);\n-        if (alwaysAddLetter) {\n+        if (prefAlwaysAddLetter) {\n             this.alwaysAddLetter.setSelected(true);\n         } else if (firstLetterA) {\n             this.letterStartA.setSelected(true);, @@ -1,4 +1,5 @@\n /*  Copyright (C) 2011 Sascha Hunold.\n+ *  Copyright (C) 2015 JabRef Contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -68,7 +69,7 @@ public String cleanDBLPQuery(String query) {\n      * @return list of BibtexEntry\n      */\n     public List<BibtexEntry> getBibTexFromPage(final String page) {\n-        final List<BibtexEntry> bibtexList = new ArrayList<BibtexEntry>();\n+        final List<BibtexEntry> bibtexList = new ArrayList<>();\n         final String startPattern = \"<pre class=\\\"verbatim select-on-click\\\">\";\n         final String endPattern = \"</pre>\";\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -199,7 +199,7 @@ public void actionPerformed(ActionEvent event) {\n         tf.addActionListener(this);\n     }\n \n-    public void setHelpResourceOwner(Class c) {\n+    public void setHelpResourceOwner(Class<?> c) {\n         help.setResourceOwner(c);\n     }\n , @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -33,33 +33,32 @@\n import net.sf.jabref.logic.l10n.Localization;\n \n /**\n- * \n+ *\n  * This class allows to access the Slac INSPIRE database. It is just a port of\n  * the original SPIRES Fetcher.\n- * \n+ *\n  * It can either be a GeneralFetcher to pose requests to the database or fetch\n  * individual entries.\n- * \n+ *\n  * @author Fedor Bezrukov\n  * @author Sheer El-Showk\n- * \n+ *\n  * @version $Id$\n- * \n+ *\n  */\n public class INSPIREFetcher implements EntryFetcher {\n \n     private static final String INSPIRE_HOST = \"inspirehep.net\";\n \n+\n     /**\n      * Construct the query URL\n      *\n-     * NOTE: we truncate at 1000 returned entries but its likely INSPIRE returns\n-     * fewer anyway.  This shouldn't be a problem since users should probably do\n-     * more specific searches.\n-     * \n-     * @param key\n-     *            The key of the OAI2 entry that the url should poitn to.\n-     * \n+     * NOTE: we truncate at 1000 returned entries but its likely INSPIRE returns fewer anyway. This shouldn't be a\n+     * problem since users should probably do more specific searches.\n+     *\n+     * @param key The key of the OAI2 entry that the url should point to.\n+     *\n      * @return a String denoting the query URL\n      */\n     private String constructUrl(String key) {\n@@ -84,7 +83,7 @@ private String constructUrl(String key) {\n \n     /**\n      * Constructs a INSPIRE query url from slaccitation field\n-     * \n+     *\n      * @param slaccitation\n      * @return query string\n      *\n@@ -108,7 +107,7 @@ public static String constructUrlFromSlaccitation(String slaccitation) {\n \n     /**\n      * Construct an INSPIRE query url from eprint field\n-     * \n+     *\n      * @param eprint\n      * @return query string\n      *\n@@ -128,12 +127,11 @@ public static String constructUrlFromEprint(String eprint) {\n     }*/\n \n     /**\n-     * Import an entry from an OAI2 archive. The BibtexEntry provided has to\n-     * have the field OAI2_IDENTIFIER_FIELD set to the search string.\n-     * \n-     * @param key\n-     *            The OAI2 key to fetch from ArXiv.\n-     * @return The imnported BibtexEntry or null if none.\n+     * Import an entry from an OAI2 archive. The BibtexEntry provided has to have the field OAI2_IDENTIFIER_FIELD set to\n+     * the search string.\n+     *\n+     * @param key The OAI2 key to fetch from ArXiv.\n+     * @return The imported BibtexEntry or null if none.\n      */\n     private BibtexDatabase importInspireEntries(String key, OutputPrinter frame) {\n         String url = constructUrl(key);\n@@ -198,18 +196,9 @@ public JPanel getOptionsPanel() {\n     public String getTitle() {\n         return Localization.menuTitle(\"Fetch INSPIRE\");\n     }\n-\n-    /*\n-     * @see net.sf.jabref.gui.ImportInspectionDialog.CallBack\n-     */\n-    public void cancelled() {\n-    }\n-\n-    public void done(int entriesImported) {\n-    }\n-\n     @Override\n     public void stopFetching() {\n+        // Do nothing\n     }\n \n     /*, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.importer.fileformat;\n \n import java.io.BufferedReader;\n@@ -141,8 +156,8 @@ public ParserResult parse() throws IOException {\n         }\n         // Bibtex related contents.\n         database = new BibtexDatabase();\n-        HashMap<String, String> meta = new HashMap<String, String>();\n-        entryTypes = new HashMap<String, BibtexEntryType>(); // To store custem entry types parsed.\n+        HashMap<String, String> meta = new HashMap<>();\n+        entryTypes = new HashMap<>(); // To store custem entry types parsed.\n         parserResult = new ParserResult(database, null, entryTypes);\n \n         // First see if we can find the version number of the JabRef version that, @@ -32,7 +32,7 @@\n {\n \n     private static final HTMLConverter htmlConverter = new HTMLConverter();\n-    private final ArrayList<BibtexEntry> bibitems = new ArrayList<BibtexEntry>();\n+    private final ArrayList<BibtexEntry> bibitems = new ArrayList<>();\n     private boolean inTitle;\n     private boolean inYear;\n     private boolean inJournal;\n@@ -90,8 +90,8 @@\n     private String minorTopics = \"\";\n     private String language = \"\";\n     private String pst = \"\";\n-    private final ArrayList<String> authors = new ArrayList<String>();\n-    private final TreeSet<String> descriptors = new TreeSet<String>(); // To gather keywords\n+    private final ArrayList<String> authors = new ArrayList<>();\n+    private final TreeSet<String> descriptors = new TreeSet<>(); // To gather keywords\n     int rowNum;\n \n     private static final String KEYWORD_SEPARATOR = \"; \";\n@@ -402,7 +402,7 @@ else if (localName.equals(\"AuthorList\")) {\n         else if (localName.equals(\"Author\")) {\n             // forename sometimes has initials with \" \" in middle: is pattern [A-Z] [A-Z]\n             // when above is the case replace it with initials\n-            if (forename.length() == 3 && forename.charAt(1) == ' ') {\n+            if ((forename.length() == 3) && (forename.charAt(1) == ' ')) {\n                 forename = initials;\n             }\n \n@@ -569,9 +569,9 @@ else if (inAffiliation) {\n \n     // PENDING jeffrey.kuhn@yale.edu 2005-05-27 : added fixPageRange method\n     //   Convert medline page ranges from short form to full form.\n-    //   Medline reports page ranges in a shorthand format. \n+    //   Medline reports page ranges in a shorthand format.\n     //   The last page is reported using only the digits which\n-    //   differ from the first page. \n+    //   differ from the first page.\n     //      i.e. 12345-51 refers to the actual range 12345-12351\n     private String fixPageRange(String pageRange) {\n         int minusPos = pageRange.indexOf('-');, @@ -1,7 +1,20 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.formatter.casechanger;\n \n-import net.sf.jabref.logic.formatter.CaseChangers;\n-\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Optional;, @@ -273,7 +273,7 @@ private static String generateInstitutionKey(String content) {\n         String rest = null;\n \n         for (int index = 0; index < parts.length; index++) {\n-            List<String> part = new ArrayList<String>();\n+            List<String> part = new ArrayList<>();\n \n             // Cleanup: remove unnecessary words.\n             for (String k : parts[index].replaceAll(\"\\\\{[A-Z]+\\\\}\", \"\").split(\"[ \\\\-_]\")) {\n@@ -394,7 +394,7 @@ private static String generateInstitutionKey(String content) {\n      */\n     public static ArrayList<String> split(String labelPattern) {\n         // A holder for fields of the entry to be used for the key\n-        ArrayList<String> fieldList = new ArrayList<String>();\n+        ArrayList<String> fieldList = new ArrayList<>();\n \n         // Before we do anything, we add the parameter to the ArrayLIst\n         fieldList.add(labelPattern);\n@@ -413,12 +413,12 @@ private static String generateInstitutionKey(String content) {\n      *\n      * The given database is used to avoid duplicate keys.\n      *\n-     * @param database a <code>BibtexDatabase</code>\n+     * @param dBase a <code>BibtexDatabase</code>\n      * @param entry a <code>BibtexEntry</code>\n      * @return modified Bibtexentry\n      */\n-    public static BibtexEntry makeLabel(MetaData metaData, BibtexDatabase database, BibtexEntry entry) {\n-        LabelPatternUtil.database = database;\n+    public static BibtexEntry makeLabel(MetaData metaData, BibtexDatabase dBase, BibtexEntry entry) {\n+        LabelPatternUtil.database = dBase;\n         ArrayList<String> typeList;\n         String key;\n         StringBuilder stringBuilder = new StringBuilder();, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.logging;\n \n import java.util.LinkedList;\n@@ -10,7 +25,7 @@\n \n     public static final int DEFAULT_CAPACITY = 500;\n     private final int capacity;\n-    private final Queue<String> queue = new LinkedList<String>();\n+    private final Queue<String> queue = new LinkedList<>();\n \n     private String cache = \"\";\n     private boolean cacheRefreshNeeded = true;, @@ -1,3 +1,18 @@\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License along\n+    with this program; if not, write to the Free Software Foundation, Inc.,\n+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n+*/\n package net.sf.jabref.logic.search.describer;\n \n import net.sf.jabref.logic.l10n.Localization;\n@@ -32,7 +47,7 @@ public String getDescription() {\n \n         if(words.size() > 1) {\n             List<String> unprocessedWords = words.subList(1, words.size());\n-            List<String> unprocessedWordsInHtmlFormat = new LinkedList<String>();\n+            List<String> unprocessedWordsInHtmlFormat = new LinkedList<>();\n             for(String word : unprocessedWords) {\n                 unprocessedWordsInHtmlFormat.add(String.format(\"<b>%s</b>\", StringUtil.quoteForHTML(word)));\n             }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -73,7 +73,7 @@\n     private XMultiServiceFactory mxDocFactory;\n     private XTextDocument mxDoc;\n     private XText text;\n-    private XDesktop xDesktop;\n+    private final XDesktop xDesktop;\n     private XTextViewCursorSupplier xViewCursorSupplier;\n     private XComponent xCurrentComponent;\n     private XComponentLoader xComponentLoader;\n@@ -84,7 +84,7 @@\n     private final AuthorYearTitleComparator entryComparator = new AuthorYearTitleComparator();\n     private final YearAuthorTitleComparator yearAuthorTitleComparator = new YearAuthorTitleComparator();\n \n-    private final HashMap<String, String> uniquefiers = new HashMap<String, String>();\n+    private final HashMap<String, String> uniquefiers = new HashMap<>();\n \n     private String[] sortedReferenceMarks;\n \n@@ -192,7 +192,7 @@ private XDesktop simpleBootstrap(String pathToExecutable) throws Exception {\n     }\n \n     private List<XTextDocument> getTextDocuments() throws Exception {\n-        List<XTextDocument> res = new ArrayList<XTextDocument>();\n+        List<XTextDocument> res = new ArrayList<>();\n         XEnumerationAccess enumA = xDesktop.getComponents();\n         XEnumeration e = enumA.createEnumeration();\n \n@@ -247,7 +247,6 @@ public void updateSortedReferenceMarks() throws Exception {\n         XReferenceMarksSupplier supplier = UnoRuntime.queryInterface(\n                 XReferenceMarksSupplier.class, xCurrentComponent);\n         XNameAccess nameAccess = supplier.getReferenceMarks();\n-        String[] names;\n         sortedReferenceMarks = getSortedReferenceMarks(nameAccess);\n     }\n \n@@ -381,7 +380,7 @@ public XNameAccess getReferenceMarks() {\n     public String[] getJabRefReferenceMarks(XNameAccess nameAccess) {\n         String[] names = nameAccess.getElementNames();\n         // Remove all reference marks that don't look like JabRef citations:\n-        ArrayList<String> tmp = new ArrayList<String>();\n+        ArrayList<String> tmp = new ArrayList<>();\n         for (String name : names) {\n             if (citePattern.matcher(name).find()) {\n                 tmp.add(name);\n@@ -395,7 +394,7 @@ public XNameAccess getReferenceMarks() {\n             Exception {\n \n         List<String> cited = findCitedKeys();\n-        HashMap<String, BibtexDatabase> linkSourceBase = new HashMap<String, BibtexDatabase>();\n+        HashMap<String, BibtexDatabase> linkSourceBase = new HashMap<>();\n         Map<BibtexEntry, BibtexDatabase> entries = findCitedEntries(databases, cited, linkSourceBase);\n \n         XNameAccess nameAccess = getReferenceMarks();\n@@ -411,7 +410,7 @@ else if (style.isNumberEntries()) {\n             // We need to sort the reference marks according to the sorting of the bibliographic\n             // entries:\n             SortedMap<BibtexEntry, BibtexDatabase> newMap =\n-                    new TreeMap<BibtexEntry, BibtexDatabase>(entryComparator);\n+ new TreeMap<>(entryComparator);\n             for (Map.Entry<BibtexEntry, BibtexDatabase> bibtexEntryBibtexDatabaseEntry : entries.entrySet()) {\n                 newMap.put(bibtexEntryBibtexDatabaseEntry.getKey(), bibtexEntryBibtexDatabaseEntry.getValue());\n             }\n@@ -430,15 +429,15 @@ else if (style.isNumberEntries()) {\n         }\n \n         // Remove all reference marks that don't look like JabRef citations:\n-        ArrayList<String> tmp = new ArrayList<String>();\n+        ArrayList<String> tmp = new ArrayList<>();\n         for (String name : names) {\n             if (citePattern.matcher(name).find()) {\n                 tmp.add(name);\n             }\n         }\n         names = tmp.toArray(new String[tmp.size()]);\n \n-        HashMap<String, Integer> numbers = new HashMap<String, Integer>();\n+        HashMap<String, Integer> numbers = new HashMap<>();\n         //HashMap<S\n         int lastNum = 0;\n         // First compute citation markers for all citations:\n@@ -480,7 +479,7 @@ else if (style.isNumberEntries()) {\n                     for (int j = 0; j < keys.length; j++) {\n                         normCitMarkers[i][j] = cEntries[j].getCiteKey();\n                         sb.append(cEntries[j].getCiteKey());\n-                        if (j < keys.length - 1) {\n+                        if (j < (keys.length - 1)) {\n                             sb.append(',');\n                         }\n                     }\n@@ -563,17 +562,17 @@ else if (style.isNumberEntries()) {\n         if (!style.isBibtexKeyCiteMarkers() && !style.isNumberEntries()) {\n             // See if there are duplicate citations marks referring to different entries. If so, we need to\n             // use uniquefiers:\n-            HashMap<String, List<String>> refKeys = new HashMap<String, List<String>>();\n-            HashMap<String, List<Integer>> refNums = new HashMap<String, List<Integer>>();\n+            HashMap<String, List<String>> refKeys = new HashMap<>();\n+            HashMap<String, List<Integer>> refNums = new HashMap<>();\n             for (int i = 0; i < citMarkers.length; i++) {\n                 String[] markers = normCitMarkers[i]; // compare normalized markers, since the actual markers can be different\n                 for (int j = 0; j < markers.length; j++) {\n                     String marker = markers[j];\n                     if (!refKeys.containsKey(marker)) {\n-                        List<String> l = new ArrayList<String>(1);\n+                        List<String> l = new ArrayList<>(1);\n                         l.add(bibtexKeys[i][j]);\n                         refKeys.put(marker, l);\n-                        List<Integer> l2 = new ArrayList<Integer>(1);\n+                        List<Integer> l2 = new ArrayList<>(1);\n                         l2.add(i);\n                         refNums.put(marker, l2);\n                     }\n@@ -604,7 +603,7 @@ else if (style.isNumberEntries()) {\n \n             // Finally, go through all citation markers, and update those referring to entries in our current list:\n             int maxAuthorsFirst = style.getIntCitProperty(\"MaxAuthorsFirst\");\n-            HashSet<String> seenBefore = new HashSet<String>();\n+            HashSet<String> seenBefore = new HashSet<>();\n             for (int j = 0; j < bibtexKeys.length; j++) {\n                 boolean needsChange = false;\n                 int[] firstLimAuthors = new int[bibtexKeys[j].length];\n@@ -619,7 +618,7 @@ else if (style.isNumberEntries()) {\n                         seenBefore.add(bibtexKeys[j][k]);\n                     }\n                     String uniq = uniquefiers.get(bibtexKeys[j][k]);\n-                    if (uniq != null && uniq.length() >= 0) {\n+                    if ((uniq != null) && (uniq.length() >= 0)) {\n                         needsChange = true;\n                         BibtexDatabase database = linkSourceBase.get(bibtexKeys[j][k]);\n                         if (database != null) {\n@@ -680,15 +679,15 @@ else if (firstLimAuthors[k] > 0) {\n             text.removeTextContent(bm);\n \n             insertReferenceMark(names[i], citMarkers[i], cursor, types[i] != OOBibBase.INVISIBLE_CIT, style);\n-            if (hadBibSection && getBookmarkRange(OOBibBase.BIB_SECTION_NAME) == null) {\n+            if (hadBibSection && (getBookmarkRange(OOBibBase.BIB_SECTION_NAME) == null)) {\n                 // We have overwritten the marker for the start of the reference list.\n                 // We need to add it again.\n                 cursor.collapseToEnd();\n                 OOUtil.insertParagraphBreak(text, cursor);\n                 insertBookMark(OOBibBase.BIB_SECTION_NAME, cursor);\n                 /* The following is for resetting the paragraph format, but should probably\n                    not be done.\n-                   \n+\n                 XParagraphCursor parCursor =\n                     (XParagraphCursor)UnoRuntime.queryInterface(\n                     java.lang.Class.forName(\"com.sun.star.text.XParagraphCursor\"), cursor);\n@@ -708,7 +707,7 @@ else if (firstLimAuthors[k] > 0) {\n             }\n         }\n \n-        ArrayList<String> unresolvedKeys = new ArrayList<String>();\n+        ArrayList<String> unresolvedKeys = new ArrayList<>();\n         for (BibtexEntry entry : entries.keySet()) {\n             if (entry instanceof UndefinedBibtexEntry) {\n                 String key = ((UndefinedBibtexEntry) entry).getKey();\n@@ -775,7 +774,7 @@ else if (firstLimAuthors[k] > 0) {\n \n             positions[i] = findPosition(tvc, r);\n         }\n-        TreeSet<ComparableMark> set = new TreeSet<ComparableMark>();\n+        TreeSet<ComparableMark> set = new TreeSet<>();\n         for (int i = 0; i < positions.length; i++) {\n             set.add(new ComparableMark(names[i], positions[i]));\n         }\n@@ -818,7 +817,7 @@ public int compare(String o1, String o2) {\n     public void rebuildBibTextSection(List<BibtexDatabase> databases, OOBibStyle style)\n             throws Exception {\n         List<String> cited = findCitedKeys();\n-        HashMap<String, BibtexDatabase> linkSourceBase = new HashMap<String, BibtexDatabase>();\n+        HashMap<String, BibtexDatabase> linkSourceBase = new HashMap<>();\n         Map<BibtexEntry, BibtexDatabase> entries = findCitedEntries\n                 (databases, cited, linkSourceBase);\n \n@@ -830,7 +829,7 @@ public void rebuildBibTextSection(List<BibtexDatabase> databases, OOBibStyle sty\n         }\n         else {\n             SortedMap<BibtexEntry, BibtexDatabase> newMap =\n-                    new TreeMap<BibtexEntry, BibtexDatabase>(entryComparator);\n+ new TreeMap<>(entryComparator);\n             for (Map.Entry<BibtexEntry, BibtexDatabase> bibtexEntryBibtexDatabaseEntry : entries.entrySet()) {\n                 newMap.put(bibtexEntryBibtexDatabaseEntry.getKey(), bibtexEntryBibtexDatabaseEntry.getValue());\n             }\n@@ -856,7 +855,7 @@ private String getUniqueReferenceMarkName(String bibtexKey, int type) {\n     private LinkedHashMap<BibtexEntry, BibtexDatabase> findCitedEntries\n             (List<BibtexDatabase> databases, List<String> keys,\n              HashMap<String, BibtexDatabase> linkSourceBase) {\n-        LinkedHashMap<BibtexEntry, BibtexDatabase> entries = new LinkedHashMap<BibtexEntry, BibtexDatabase>();\n+        LinkedHashMap<BibtexEntry, BibtexDatabase> entries = new LinkedHashMap<>();\n         for (String key : keys) {\n             boolean found = false;\n             for (BibtexDatabase database : databases) {\n@@ -882,7 +881,7 @@ private String getUniqueReferenceMarkName(String bibtexKey, int type) {\n                 XReferenceMarksSupplier.class, xCurrentComponent);\n         XNameAccess xNamedMarks = supplier.getReferenceMarks();\n         String[] names = xNamedMarks.getElementNames();\n-        ArrayList<String> keys = new ArrayList<String>();\n+        ArrayList<String> keys = new ArrayList<>();\n         for (String name1 : names) {\n             Object bookmark = xNamedMarks.getByName(name1);\n             XTextContent xTextContent = UnoRuntime.queryInterface(\n@@ -905,8 +904,8 @@ private String getUniqueReferenceMarkName(String bibtexKey, int type) {\n              HashMap<String, BibtexDatabase> linkSourceBase)\n                     throws BibtexEntryNotFoundException {\n \n-        LinkedHashMap<BibtexEntry, BibtexDatabase> newList = new LinkedHashMap<BibtexEntry, BibtexDatabase>();\n-        HashMap<BibtexEntry, BibtexEntry> adaptedEntries = new HashMap<BibtexEntry, BibtexEntry>();\n+        LinkedHashMap<BibtexEntry, BibtexDatabase> newList = new LinkedHashMap<>();\n+        HashMap<BibtexEntry, BibtexEntry> adaptedEntries = new HashMap<>();\n         for (String name : names) {\n             Matcher m = citePattern.matcher(name);\n             if (m.find()) {\n@@ -950,7 +949,7 @@ private Point findPosition(XTextViewCursor cursor, XTextRange range) {\n      * @return The list of bibtex keys encoded in the name.\n      */\n     public List<String> parseRefMarkName(String name) {\n-        ArrayList<String> keys = new ArrayList<String>();\n+        ArrayList<String> keys = new ArrayList<>();\n         Matcher m = citePattern.matcher(name);\n         if (m.find()) {\n             String[] keystring = m.group(2).split(\",\");\n@@ -999,7 +998,7 @@ public String getCitationContext(XNameAccess nameAccess, String refMarkName,\n         for (int i = 0; i < charBefore; i++) {\n             try {\n                 cursor.goLeft((short) 1, true);\n-                if (i >= charBefore - flex && Character.isWhitespace(cursor.getString().charAt(0))) {\n+                if ((i >= (charBefore - flex)) && Character.isWhitespace(cursor.getString().charAt(0))) {\n                     break;\n                 }\n             } catch (Exception ex) {\n@@ -1009,10 +1008,10 @@ public String getCitationContext(XNameAccess nameAccess, String refMarkName,\n         int length = cursor.getString().length();\n         int added = length - citPart.length();\n         cursor.collapseToStart();\n-        for (int i = 0; i < charAfter + length; i++) {\n+        for (int i = 0; i < (charAfter + length); i++) {\n             try {\n                 cursor.goRight((short) 1, true);\n-                if (i >= charAfter + length - flex) {\n+                if (i >= ((charAfter + length) - flex)) {\n                     String strNow = cursor.getString();\n                     if (Character.isWhitespace(strNow.charAt(strNow.length() - 1))) {\n                         break;\n@@ -1036,7 +1035,7 @@ private void insertFullReferenceAtCursor(XTextCursor cursor, Map<BibtexEntry, Bi\n             throws UndefinedParagraphFormatException, Exception {\n         // If we don't have numbered entries, we need to sort the entries before adding them:\n         if (!style.isSortByPosition()) {\n-            Map<BibtexEntry, BibtexDatabase> newMap = new TreeMap<BibtexEntry, BibtexDatabase>(entryComparator);\n+            Map<BibtexEntry, BibtexDatabase> newMap = new TreeMap<>(entryComparator);\n             for (BibtexEntry entry : entries.keySet()) {\n                 newMap.put(entry, entries.get(entry));\n             }\n@@ -1058,7 +1057,7 @@ private void insertFullReferenceAtCursor(XTextCursor cursor, Map<BibtexEntry, Bi\n             try {\n                 layout.setPostFormatter(OOUtil.postformatter);\n             } catch (NoSuchMethodError ignore) {\n-\n+                // Ignored\n             }\n             OOUtil.insertFullReferenceAtCurrentLocation(text, cursor, layout, parFormat, entry,\n                     entries.get(entry), uniquefiers.get(entry.getCiteKey()));\n@@ -1126,7 +1125,6 @@ private void createBibTextSection2(boolean end) throws Exception {\n     private void clearBibTextSectionContent2() throws Exception {\n \n         // Check if the section exists:\n-        boolean exists = false;\n         XTextSectionsSupplier supp = UnoRuntime.queryInterface(\n                 XTextSectionsSupplier.class, mxDoc);\n         try {\n@@ -1161,7 +1159,7 @@ public void clearBibTextSectionContent() throws Exception {\n         XTextCursor mxDocCursor = text.createTextCursorByRange(range.getEnd());\n         mxDocCursor.goRight((short) 1, true);\n         boolean couldExpand = true;\n-        while (couldExpand && compare.compareRegionEnds(mxDocCursor, rangeEnd) > 0) {\n+        while (couldExpand && (compare.compareRegionEnds(mxDocCursor, rangeEnd) > 0)) {\n             couldExpand = mxDocCursor.goRight((short) 1, true);\n         }\n         // Finally, clear the bibliography:\n@@ -1208,7 +1206,7 @@ private void insertReferenceMark(String name, String citText, XTextCursor positi\n                                      OOBibStyle style)\n             throws Exception {\n \n-        // Check if there is \"page info\" stored for this citation. If so, insert it into \n+        // Check if there is \"page info\" stored for this citation. If so, insert it into\n         // the citation text before inserting the citation:\n         String pageInfo = getCustomProperty(name);\n         if (pageInfo != null) {\n@@ -1364,7 +1362,7 @@ public void combineCiteMarkers(List<BibtexDatabase> databases, OOBibStyle style)\n \n         int piv = 0;\n         boolean madeModifications = false;\n-        while (piv < names.length - 1) {\n+        while (piv < (names.length - 1)) {\n             XTextRange r1 = UnoRuntime.queryInterface\n                     (XTextContent.class, nameAccess.getByName(names[piv])).getAnchor().getEnd();\n             XTextRange r2 = UnoRuntime.queryInterface\n@@ -1377,12 +1375,12 @@ public void combineCiteMarkers(List<BibtexDatabase> databases, OOBibStyle style)\n             XTextCursor mxDocCursor = r1.getText().createTextCursorByRange(r1);\n             mxDocCursor.goRight((short) 1, true);\n             boolean couldExpand = true;\n-            while (couldExpand && compare.compareRegionEnds(mxDocCursor, r2) > 0) {\n+            while (couldExpand && (compare.compareRegionEnds(mxDocCursor, r2) > 0)) {\n                 couldExpand = mxDocCursor.goRight((short) 1, true);\n             }\n             String text = mxDocCursor.getString();\n             // Check if the string contains no line breaks and only whitespace:\n-            if (text.indexOf('\\n') == -1 && text.trim().isEmpty()) {\n+            if ((text.indexOf('\\n') == -1) && text.trim().isEmpty()) {\n \n                 // If we are supposed to set character format for citations, test this before\n                 // making any changes. This way we can throw an exception before any reference\n@@ -1404,7 +1402,7 @@ public void combineCiteMarkers(List<BibtexDatabase> databases, OOBibStyle style)\n                 keys.addAll(parseRefMarkName(names[piv + 1]));\n                 removeReferenceMark(names[piv]);\n                 removeReferenceMark(names[piv + 1]);\n-                ArrayList<BibtexEntry> entries = new ArrayList<BibtexEntry>();\n+                ArrayList<BibtexEntry> entries = new ArrayList<>();\n                 for (String key : keys) {\n                     for (BibtexDatabase database : databases) {\n                         BibtexEntry entry = database.getEntryByKey(key);, @@ -66,7 +66,7 @@\n         } catch (NoSuchMethodError ex) {\n             OpenOfficePanel.postLayoutSupported = false;\n         } catch (Exception ignore) {\n-\n+            // Ignored\n         }\n \n     }\n@@ -127,8 +127,6 @@ private OpenOfficePanel() {\n         OpenOfficePanel.selectDocument.setToolTipText(Localization.lang(\"Select Writer document\"));\n         OpenOfficePanel.update = new JButton(IconTheme.JabRefIcon.REFRESH.getSmallIcon());\n         OpenOfficePanel.update.setToolTipText(Localization.lang(\"Sync OO bibliography\"));\n-        String defExecutable;\n-        String defJarsDir;\n         if (OS.WINDOWS) {\n             Globals.prefs.putDefaultValue(\"ooPath\", \"C:\\\\Program Files\\\\OpenOffice.org 3\");\n             Globals.prefs.putDefaultValue(\"ooExecutablePath\", \"C:\\\\Program Files\\\\OpenOffice.org 2.3\\\\program\\\\soffice.exe\");\n@@ -165,13 +163,13 @@ public SidePaneComponent getSidePaneComponent() {\n         return comp;\n     }\n \n-    public void init(JabRefFrame frame, SidePaneManager manager) {\n-        OpenOfficePanel.frame = frame;\n-        this.manager = manager;\n-        comp = new OOPanel(manager, IconTheme.getImage(\"openoffice\"), Localization.lang(\"OpenOffice\"));\n+    public void init(JabRefFrame jrFrame, SidePaneManager spManager) {\n+        OpenOfficePanel.frame = jrFrame;\n+        this.manager = spManager;\n+        comp = new OOPanel(spManager, IconTheme.getImage(\"openoffice\"), Localization.lang(\"OpenOffice\"));\n         try {\n             initPanel();\n-            manager.register(getName(), comp);\n+            spManager.register(getName(), comp);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n@@ -469,7 +467,7 @@ public void actionPerformed(ActionEvent event) {\n     }\n \n     private java.util.List<BibtexDatabase> getBaseList() {\n-        java.util.List<BibtexDatabase> databases = new ArrayList<BibtexDatabase>();\n+        java.util.List<BibtexDatabase> databases = new ArrayList<>();\n         if (Globals.prefs.getBoolean(\"useAllOpenBases\")) {\n             for (int i = 0; i < OpenOfficePanel.frame.baseCount(); i++) {\n                 databases.add(OpenOfficePanel.frame.baseAt(i).database());\n@@ -653,22 +651,23 @@ else if (OpenOfficePanel.useDefaultNumericalStyle) {\n \n     // The methods addFile and associated final Class[] parameters were gratefully copied from\n     // anthony_miguel @ http://forum.java.sun.com/thread.jsp?forum=32&thread=300557&tstart=0&trange=15\n-    private static final Class[] parameters = new Class[] {URL.class};\n+    private static final Class<?>[] parameters = new Class[] {URL.class};\n \n \n     private static void addURL(URL[] u) throws IOException {\n-        URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader();\n-        Class<URLClassLoader> sysclass = URLClassLoader.class;\n+        try (URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader()) {\n+            Class<URLClassLoader> sysclass = URLClassLoader.class;\n \n-        try {\n-            Method method = sysclass.getDeclaredMethod(\"addURL\", OpenOfficePanel.parameters);\n-            method.setAccessible(true);\n-            for (URL anU : u) {\n-                method.invoke(sysloader, anU);\n+            try {\n+                Method method = sysclass.getDeclaredMethod(\"addURL\", OpenOfficePanel.parameters);\n+                method.setAccessible(true);\n+                for (URL anU : u) {\n+                    method.invoke(sysloader, anU);\n+                }\n+            } catch (Throwable t) {\n+                t.printStackTrace();\n+                throw new IOException(\"Error, could not add URL to system classloader\");\n             }\n-        } catch (Throwable t) {\n-            t.printStackTrace();\n-            throw new IOException(\"Error, could not add URL to system classloader\");\n         }\n     }\n \n@@ -681,7 +680,7 @@ private void updateConnectionParams(String ooPath, String ooExec, String ooJars,\n \n     private void showConnectDialog() {\n         dialogOkPressed = false;\n-        final JDialog diag = new JDialog(OpenOfficePanel.frame, Localization.lang(\"Set connection parameters\"), true);\n+        final JDialog cDiag = new JDialog(OpenOfficePanel.frame, Localization.lang(\"Set connection parameters\"), true);\n         final JTextField ooPath = new JTextField(30);\n         JButton browseOOPath = new JButton(Localization.lang(\"Browse\"));\n         ooPath.setText(Globals.prefs.get(\"ooPath\"));\n@@ -722,7 +721,7 @@ private void showConnectDialog() {\n             public void actionPerformed(ActionEvent event) {\n                 updateConnectionParams(ooPath.getText(), ooExec.getText(), ooJars.getText(),\n                         true);\n-                diag.dispose();\n+                cDiag.dispose();\n             }\n         };\n \n@@ -736,14 +735,14 @@ public void actionPerformed(ActionEvent event) {\n                 updateConnectionParams(ooPath.getText(), ooExec.getText(), ooJars.getText(),\n                         true);\n                 dialogOkPressed = true;\n-                diag.dispose();\n+                cDiag.dispose();\n             }\n         });\n         cancel.addActionListener(new ActionListener() {\n \n             @Override\n             public void actionPerformed(ActionEvent event) {\n-                diag.dispose();\n+                cDiag.dispose();\n             }\n         });\n         bb.addGlue();\n@@ -753,11 +752,11 @@ public void actionPerformed(ActionEvent event) {\n         bb.addGlue();\n         builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n         bb.getPanel().setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n-        diag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n-        diag.getContentPane().add(bb.getPanel(), BorderLayout.SOUTH);\n-        diag.pack();\n-        diag.setLocationRelativeTo(OpenOfficePanel.frame);\n-        diag.setVisible(true);\n+        cDiag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);\n+        cDiag.getContentPane().add(bb.getPanel(), BorderLayout.SOUTH);\n+        cDiag.pack();\n+        cDiag.setLocationRelativeTo(OpenOfficePanel.frame);\n+        cDiag.setVisible(true);\n \n     }\n \n@@ -827,10 +826,9 @@ private void insertFullRefs() {\n               */\n             BasePanel panel = OpenOfficePanel.frame.basePanel();\n             final BibtexDatabase database = panel.database();\n-            Map<BibtexEntry, BibtexDatabase> entries = new LinkedHashMap<BibtexEntry, BibtexDatabase>();\n+            Map<BibtexEntry, BibtexDatabase> entries = new LinkedHashMap<>();\n             if (panel != null) {\n                 BibtexEntry[] e = panel.getSelectedEntries();\n-                ArrayList<BibtexEntry> el = new ArrayList<BibtexEntry>();\n                 for (BibtexEntry anE : e) {\n                     entries.put(anE, database);\n                 }\n@@ -867,7 +865,7 @@ public void insertUsingBST() {\n             final BibtexDatabase database = panel.database();\n             if (panel != null) {\n                 BibtexEntry[] entries = panel.getSelectedEntries();\n-                ArrayList<BibtexEntry> el = new ArrayList<BibtexEntry>();\n+                ArrayList<BibtexEntry> el = new ArrayList<>();\n                 Collections.addAll(el, entries);\n \n                 BstWrapper wrapper = new BstWrapper();\n@@ -1051,7 +1049,7 @@ public void pushEntries(BibtexDatabase bibtexDatabase, BibtexEntry[] entries, St\n \n     @Override\n     public void operationCompleted(BasePanel basePanel) {\n-\n+        // Do nothing\n     }\n \n     @Override, @@ -1,5 +1,6 @@\n /*\n  Copyright (C) 2004 R. Nagel\n+ Copyright (C) 2015 JabRef Contributors.\n \n  All programs in this directory and\n  subdirectories are published under the GNU General Public License as\n@@ -75,8 +76,6 @@\n \n import javax.swing.*;\n import javax.swing.border.TitledBorder;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n import javax.swing.event.ListSelectionEvent;\n import javax.swing.event.ListSelectionListener;\n import javax.swing.text.EditorKit;\n@@ -197,6 +196,7 @@ private void initRawPanel() {\n         try {\n             doc.insertString(0, \"\", doc.getStyle(\"regular\"));\n         } catch (Exception ignored) {\n+            // Ignored\n         }\n \n         OverlayPanel testPanel = new OverlayPanel(textPane,\n@@ -363,30 +363,30 @@ private void initSourcePanel() {\n         sourcePanel.add(paneScrollPane, BorderLayout.CENTER);\n     }\n \n-    private void addStylesToDocument(StyledDocument doc) {\n+    private void addStylesToDocument(StyledDocument document) {\n         //Initialize some styles.\n         Style def = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);\n \n-        Style regular = doc.addStyle(\"regular\", def);\n+        Style regular = document.addStyle(\"regular\", def);\n         StyleConstants.setFontFamily(def, \"SansSerif\");\n         StyleConstants.setFontSize(def, 12);\n \n-        Style s = doc.addStyle(\"oldused\", regular);\n+        Style s = document.addStyle(\"oldused\", regular);\n         StyleConstants.setItalic(s, true);\n         StyleConstants.setForeground(s, Color.blue);\n \n-        s = doc.addStyle(\"used\", regular);\n+        s = document.addStyle(\"used\", regular);\n         StyleConstants.setBold(s, true);\n         StyleConstants.setForeground(s, Color.blue);\n \n-        s = doc.addStyle(\"marked\", regular);\n+        s = document.addStyle(\"marked\", regular);\n         StyleConstants.setBold(s, true);\n         StyleConstants.setForeground(s, Color.red);\n \n-        s = doc.addStyle(\"small\", regular);\n+        s = document.addStyle(\"small\", regular);\n         StyleConstants.setFontSize(s, 10);\n \n-        s = doc.addStyle(\"large\", regular);\n+        s = document.addStyle(\"large\", regular);\n         StyleConstants.setFontSize(s, 16);\n     }\n \n@@ -504,6 +504,7 @@ private void updateSourceView() {\n             String srcString = sw.getBuffer().toString();\n             preview.setText(srcString);\n         } catch (IOException ignored) {\n+            // Ignored\n         }\n \n         fieldList.clearSelection();\n@@ -535,13 +536,15 @@ public void actionPerformed(ActionEvent e) {\n             if (data != null) {\n                 int selStart = textPane.getSelectionStart();\n                 int selEnd = textPane.getSelectionEnd();\n-                if (selEnd - selStart > 0) {\n+                if ((selEnd - selStart) > 0) {\n                     textPane.replaceSelection(\"\");\n                 }\n                 int cPos = textPane.getCaretPosition();\n                 try {\n                     doc.insertString(cPos, data, doc.getStyle(\"regular\"));\n-                } catch (Exception ignored) {}\n+                } catch (Exception ignored) {\n+                    // Ignored\n+                }\n             }\n         }\n     }\n@@ -566,9 +569,11 @@ public void actionPerformed(ActionEvent e) {\n                             eKit.read(fis, doc, 0);\n                             doc.setLogicalStyle(0, doc.getStyle(\"regular\"));\n                         }\n-                    }   \n+                    }\n                 }\n-            } catch (Exception ignored) {}\n+            } catch (Exception ignored) {\n+                // Ignored\n+            }\n         }\n     }\n \n@@ -590,7 +595,9 @@ public MenuHeaderAction() {\n         }\n \n         @Override\n-        public void actionPerformed(ActionEvent e) {}\n+        public void actionPerformed(ActionEvent e) {\n+            // Do nothing\n+        }\n     }\n \n     class FieldListSelectionHandler implements ListSelectionListener {, @@ -1,12 +1,10 @@\n package net.sf.jabref;\n \n-import org.junit.Assert;\n import org.junit.Test;\n \n import java.io.IOException;\n import java.io.Reader;\n import java.nio.file.Files;\n-import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.List;, ", 309, 236, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 545], ["MLEP", "Continuation of partial translation in Farsi by Behrouz Javanmardi", "11/08/15, 04:54:44 PM", "MLEP", "49ed36f3e7b72423fc50f4b0fac3bc4fb457d44b", ["src/main/resources/l10n/JabRef_fa.properties"], "@@ -1,96 +1,53 @@\n-#! created/edited by Behrouz Javanmardi (javanmardy@live.com), last update: 20151105\n+#! created/edited by Behrouz Javanmardi (javanmardy@live.com), last update: 20151107\n+#! helped by AminAbedi\n #! \u0633\u0627\u062e\u062a\u0647/\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 \u0628\u0647\u0631\u0648\u0632 \u062c\u0648\u0627\u0646\u0645\u0631\u062f\u06cc\n #! encoding:UTF-8\n %0_contains_the_Regular_Expression_<b>%1</b>=0%_\u0634\u0627\u0645\u0644_\u0639\u0628\u0627\u0631\u062a_\u0639\u0627\u062f\u06cc_<b>%1</b>\n-\n %0_contains_the_term_<b>%1</b>=0%_\u0634\u0627\u0645\u0644_\u0642\u0627\u0639\u062f\u0647\u200c\u06cc_<b>%1</b>\n-\n %0_doesn't_contain_the_Regular_Expression_<b>%1</b>=0%_\u0639\u062f\u0645_\u0634\u0645\u0648\u0644_\u0639\u0628\u0627\u0631\u062a_\u0639\u0627\u062f\u06cc_<b>%1</b>\n-\n %0_doesn't_contain_the_term_<b>%1</b>=0%_\u0639\u062f\u0645_\u0634\u0645\u0648\u0644_\u0642\u0627\u0639\u062f\u0647\u200c\u06cc_<b>%1</b>\n-\n %0_doesn't_match_the_Regular_Expression_<b>%1</b>=0%_\u0639\u062f\u0645_\u0634\u0645\u0648\u0644_\u0639\u0628\u0627\u0631\u062a_\u0639\u0627\u062f\u06cc_<b>%1</b>\n-\n %0_doesn't_match_the_term_<b>%1</b>=0%_\u0639\u062f\u0645_\u062a\u0637\u0628\u06cc\u0642_\u0642\u0627\u0639\u062f\u0647\u200c\u06cc_<b>%1</b>\n-\n %0_export_successful=0%_\u0635\u062f\u0648\u0631_\u0645\u0648\u0641\u0642\u06cc\u062a\u200c\u0622\u0645\u06cc\u0632_\n-\n %0_field_set=0%_\u062a\u0646\u0638\u06cc\u0645_\u062d\u0648\u0632\u0647\n-\n %0_matches_the_Regular_Expression_<b>%1</b>=0%_\u062a\u0637\u0628\u06cc\u0642_\u0639\u0628\u0627\u0631\u062a_\u0639\u0627\u062f\u06cc_<b>%1</b>\n-\n %0_matches_the_term_<b>%1</b>=0%_\u062a\u0637\u0628\u06cc\u0642_\u0642\u0627\u0639\u062f\u0647\u200c\u06cc_<b>%1</b>\n-\n <field_name>=<\u0646\u0627\u0645_\u062d\u0648\u0632\u0647>\n-\n <HTML>Could_not_find_file_'%0'<BR>linked_from_entry_'%1'</HTML>=<HTML>\u0633\u0646\u062f_'%0'<BR>_\u0645\u062a\u0635\u0644_\u0634\u062f\u0647_\u0627\u0632_\u0648\u0631\u0648\u062f\u06cc_\u06cc\u0627\u0641\u062a_\u0646\u0634\u062f_'%1'</HTML>\n-\n <no_field>=<\u0628\u062f\u0648\u0646_\u062d\u0648\u0632\u0647>\n-\n <select>=<\u0627\u0646\u062a\u062e\u0627\u0628>\n-\n <select_word>=<\u0646\u0627\u0645_\u0648\u0627\u0698\u0647>\n-\n A_string_with_this_label_already_exists=\u0631\u0634\u062a\u0647\u200c\u0627\u06cc_\u0628\u0627_\u0627\u06cc\u0646_\u0646\u0627\u0645_\u062f\u0631_\u062d\u0627\u0644_\u062d\u0627\u0636\u0631_\u0645\u0648\u062c\u0648\u062f_\u0627\u0633\u062a\n-\n-Abbreviate_journal_names_of_the_selected_entries_(ISO_abbreviation)=\u0645\u062e\u062a\u0635\u0631_\u0633\u0627\u0632\u06cc_\u0646\u0627\u0645_\u0698\u0648\u0631\u0646\u0627\u0644\u200c\u0647\u0627\u06cc_\u0627\u0646\u062a\u062e\u0627\u0628_\u0634\u062f\u0647_\u0627\u0632_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627_(\u0645\u062e\u062a\u0635\u0631\u0633\u0627\u0632\u06cc_I\n-\n-Abbreviate_journal_names_of_the_selected_entries_(MEDLINE_abbreviation)=\n-\n-Abbreviate_names=\n-Abbreviated_%0_journal_names.=\n-\n-Abbreviation=\n-\n-About_JabRef=\n-\n-Abstract=\n-\n-Accept=\n-\n-Accept_change=\n-\n-Action=\n-\n-Add=\n-\n-Add_a_(compiled)_custom_ImportFormat_class_from_a_class_path._\\nThe_path_need_not_be_on_the_classpath_of_JabRef.=\n-\n-Add_a_(compiled)_custom_ImportFormat_class_from_a_Zip-archive.\\nThe_Zip-archive_need_not_be_on_the_classpath_of_JabRef.=\n-\n-add_entries_to_group=\n-\n-Add_entry_selection_to_this_group=\n-\n-Add_from_folder=\n-\n-Add_from_jar=\n-\n-add_group=\n-\n-Add_Group=\n-\n-Add_new=\n-\n-Add_Subgroup=\n-\n-Add_to_group=\n-\n-Added_group_\"%0\".=\n-\n-Added_new=\n-\n-Added_string=\n-\n-Additionally,_entries_whose_<b>%0</b>_field_does_not_contain_<b>%1</b>_can_be_assigned_manually_to_this_group_by_selecting_them_then_using_either_drag_and_drop_or_the_context_menu._This_process_adds_the_term_<b>%1</b>_to_each_entry's_<b>%0</b>_field._Entries_can_be_removed_manually_from_this_group_by_selecting_them_then_using_the_context_menu._This_process_removes_the_term_<b>%1</b>_from_each_entry's_<b>%0</b>_field.=\n-\n-Advanced=\n-All_custom_file_types_will_be_lost._Proceed?=\n-\n-All_Entries=\n-\n-All_entries=\n-All_entries_of_this_type_will_be_declared_typeless._Continue?=\n+Abbreviate_journal_names_of_the_selected_entries_(ISO_abbreviation)=\u0645\u062e\u062a\u0635\u0631_\u0633\u0627\u0632\u06cc_\u0646\u0627\u0645_\u0698\u0648\u0631\u0646\u0627\u0644\u200c\u0647\u0627\u06cc_\u0627\u0646\u062a\u062e\u0627\u0628_\u0634\u062f\u0647_\u0627\u0632_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627_(\u0645\u062e\u062a\u0635\u0631\u0633\u0627\u0632\u06cc_ISO)\n+Abbreviate_journal_names_of_the_selected_entries_(MEDLINE_abbreviation)=\u0645\u062e\u062a\u0635\u0631_\u0633\u0627\u0632\u06cc_\u0646\u0627\u0645_\u0645\u062c\u0644\u0647\u200c\u0647\u0627\u06cc_\u0627\u0646\u062a\u062e\u0627\u0628_\u0634\u062f\u0647_(\u0645\u062e\u062a\u0635\u0631\u0633\u0627\u0632\u06cc_MEDLINE)\n+Abbreviate_names=_\u0646\u0627\u0645\u200c\u0647\u0627\u06cc_\u0627\u062e\u062a\u0635\u0627\u0631\u06cc\n+Abbreviated_%0_journal_names.=\u0646\u0627\u0645_\u0698\u0648\u0631\u0646\u0627\u0644\u200c\u0647\u0627\u06cc_0%_\u0645\u062e\u062a\u0635\u0631_\u0634\u062f\u0647\n+Abbreviation=\u0645\u062e\u0641\u0641\u200c\u0633\u0627\u0632\u06cc\n+About_JabRef=\u062f\u0631\u0628\u0627\u0631\u0647_JabRef\n+Abstract=\u0686\u06a9\u06cc\u062f\u0647\n+Accept=\u067e\u0630\u06cc\u0631\u0641\u062a\u0646\n+Accept_change=\u067e\u0630\u06cc\u0631\u0634_\u062a\u063a\u06cc\u06cc\u0631\u0627\u062a\n+Action=\u0639\u0645\u0644\u06cc\u0627\u062a\n+Add=\u0627\u0641\u0632\u0648\u062f\u0646\n+Add_a_(compiled)_custom_ImportFormat_class_from_a_class_path._\\nThe_path_need_not_be_on_the_classpath_of_JabRef.=\u0627\u0641\u0632\u0648\u062f\u0646_(\u067e\u0631\u0648\u0646\u062f\u0647_\u0627\u062c\u0631\u0627_\u0634\u062f\u0647)_\u067e\u0631\u0648\u0646\u062f\u0647_\u0633\u0641\u0627\u0631\u0634\u06cc_\u0641\u0631\u0645\u062a_\u0648\u0627\u0631\u062f_\u0634\u062f\u0647_\u0627\u0632_\u0645\u0633\u06cc\u0631_\u06cc\u06a9_\u067e\u0631\u0648\u0646\u062f\u0647._\\n\u0627\u06cc\u0646_\u0645\u0633\u06cc\u0631_\u0644\u0627\u0632\u0645_\u0646\u06cc\u0633\u062a_\u062f\u0631_\u0645\u0633\u06cc\u0631_\u0631\u062f\u0647\u200c\u0647\u0627\u06cc_JabRef_\u0628\u0627\u0634\u062f.\n+Add_a_(compiled)_custom_ImportFormat_class_from_a_Zip-archive.\\nThe_Zip-archive_need_not_be_on_the_classpath_of_JabRef.=_\u0627\u0641\u0632\u0648\u062f\u0646_(\u0641\u0627\u06cc\u0644_\u0627\u062c\u0631\u0627_\u0634\u062f\u0647)_\u067e\u0631\u0648\u0646\u062f\u0647_\u0633\u0641\u0627\u0631\u0634\u06cc_\u0641\u0631\u0645\u062a_\u0648\u0627\u0631\u062f_\u0634\u062f\u0647_\u0627\u0632_\u0645\u0633\u06cc\u0631_\u06cc\u06a9_\u0641\u0627\u06cc\u0644_\u0641\u0634\u0631\u062f\u0647._\\n\u0627\u06cc\u0646_\u067e\u0631\u0648\u0646\u062f\u0647_\u0644\u0627\u0632\u0645_\u0646\u06cc\u0633\u062a_\u062f\u0631_\u0645\u0633\u06cc\u0631_\u0631\u062f\u0647\u200c\u0647\u0627\u06cc_JabRef_\u0648\u062c\u0648\u062f_\u062f\u0627\u0634\u062a\u0647_\u0628\u0627\u0634\u062f.\n+add_entries_to_group=\u0627\u0641\u0632\u0648\u062f\u0646_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627_\u0628\u0647_\u06af\u0631\u0648\u0647\n+Add_entry_selection_to_this_group=\u0627\u0641\u0632\u0648\u062f\u0646_\u06af\u0632\u06cc\u0646\u0634_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627_\u0628\u0647_\u0627\u06cc\u0646_\u06af\u0631\u0648\u0647\n+Add_from_folder=\u0627\u0641\u0632\u0648\u062f\u0646_\u0627\u0632_\u067e\u0648\u0634\u0647\n+Add_from_jar=\u0627\u0636\u0627\u0641\u0647_\u06a9\u0631\u062f\u0646_\u0627\u0632_jar\n+add_group=\u0627\u0641\u0632\u0648\u062f\u0646_\u06af\u0631\u0648\u0647\n+Add_Group=\u0627\u0641\u0632\u0648\u062f\u0646_\u06af\u0631\u0648\u0647\n+Add_new=\u0627\u0641\u0632\u0648\u062f\u0646_\u062c\u062f\u06cc\u062f\n+Add_Subgroup=\u0627\u0641\u0632\u0648\u062f\u0646_\u0632\u06cc\u0631\u06af\u0631\u0648\u0647\n+Add_to_group=\u0627\u0641\u0632\u0648\u062f\u0646_\u0628\u0647_\u06af\u0631\u0648\u0647\n+Added_group_\"%0\".=\u06af\u0631\u0648\u0647_\u0627\u0641\u0632\u0648\u062f\u0647_\u0634\u062f\u0647_\"%0\"\n+Added_new=\u062a\u0627\u0632\u0647_\u0627\u0641\u0631\u0648\u062f\u0647_\u0634\u062f\u0647\n+Added_string=\u0631\u0634\u062a\u0647\u200c\u06cc_\u0627\u0641\u0632\u0648\u062f\u0647_\u0634\u062f\u0647\n+Additionally,_entries_whose_<b>%0</b>_field_does_not_contain_<b>%1</b>_can_be_assigned_manually_to_this_group_by_selecting_them_then_using_either_drag_and_drop_or_the_context_menu._This_process_adds_the_term_<b>%1</b>_to_each_entry's_<b>%0</b>_field._Entries_can_be_removed_manually_from_this_group_by_selecting_them_then_using_the_context_menu._This_process_removes_the_term_<b>%1</b>_from_each_entry's_<b>%0</b>_field.=\u0636\u0645\u0646\u0627\u060c_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627\u06cc_<b>%0</b>_\u0634\u0627\u0645\u0644_<b>%1</b>_\u0646\u0634\u062f\u0647_\u0648_\u0628\u0627_\u0627\u0646\u062a\u062e\u0627\u0628_\u062f\u0633\u062a\u06cc_\u0648_\u0633\u067e\u0633_\u06a9\u0634\u06cc\u062f\u0646_\u0648_\u0631\u0647\u0627_\u06a9\u0631\u062f\u0646_\u06cc\u0627_\u0641\u0647\u0631\u0633\u062a_\u0645\u0636\u0645\u0648\u0646_\u0642\u0627\u062f\u0631_\u0628\u0647_\u0642\u0644\u0645\u062f\u0627\u062f_\u0634\u062f\u0646_\u0647\u0633\u062a\u0646\u062f._\u0627\u06cc\u0646_\u0641\u0631\u0622\u06cc\u0646\u062f_\u0634\u0631\u0637_<b>%1</b>_\u0631\u0627_\u0628\u0647_\u0647\u0631_\u062d\u0648\u0632\u0647\u200c\u06cc_\u0648\u0631\u0648\u062f\u06cc_<b>%0</b>_\u0645\u06cc\u200c\u0627\u0641\u0632\u0627\u06cc\u062f._\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627\u06cc_\u0627\u06cc\u0646_\u06af\u0631\u0648\u0647_\u0628\u0627_\u0627\u0646\u062a\u062e\u0627\u0628_\u062f\u0633\u062a\u06cc_\u0648_\u0633\u067e\u0633_\u0627\u0633\u062a\u0641\u0627\u062f\u0647_\u0627\u0632_\u0641\u0647\u0631\u0633\u062a_\u0645\u0636\u0645\u0648\u0646_\u0642\u0627\u0628\u0644_\u062d\u0630\u0641_\u0647\u0633\u062a\u0646\u062f._\u0627\u06cc\u0646_\u0641\u0631\u0622\u06cc\u0646\u062f_\u0634\u0631\u0637_<b>%1</b>_\u0631\u0627_\u0627\u0632_\u0647\u0631_\u062d\u0648\u0632\u0647\u200c\u06cc_\u0648\u0631\u0648\u062f\u06cc_<b>%0</b>_\u062d\u0630\u0641_\u0645\u06cc\u200c\u06a9\u0646\u062f.\n+Advanced=\u067e\u06cc\u0634\u0631\u0641\u062a\u0647\n+All_custom_file_types_will_be_lost._Proceed?=\u0647\u0645\u0647\u200c\u06cc_\u067e\u0631\u0648\u0646\u062f\u0647\u200c\u0647\u0627\u06cc_\u0645\u0631\u062a\u0628\u0637_\u0627\u0632_\u0628\u06cc\u0646_\u0645\u06cc\u200c\u0631\u0648\u0646\u062f._\u0627\u0642\u062f\u0627\u0645_\u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f\u061f\n+All_Entries=\u0647\u0645\u0647\u200c\u06cc_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627\n+All_entries=\u0647\u0645\u0647\u200c\u06cc_\u0648\u0631\u0648\u062f\u06cc\u200c\u0647\u0627\n \n All_fields=\n , ", 32, 75, "\"modified, \"", 107], ["Oscar Gustafsson", "Actually understood and fixed the comment from @simonharrer", "11/09/15, 09:52:32 AM", "Oscar Gustafsson", "6b2409b1e2bb7a2a92ce4945731a435cc91b0dae", ["src/main/java/net/sf/jabref/external/push/PushToApplicationButton.java"], "@@ -15,24 +15,40 @@\n  */\n package net.sf.jabref.external.push;\n \n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ActionMap;\n+import javax.swing.BorderFactory;\n+import javax.swing.Icon;\n+import javax.swing.InputMap;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPanel;\n+import javax.swing.JPopupMenu;\n+\n import com.jgoodies.forms.builder.ButtonBarBuilder;\n \n import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n import net.sf.jabref.logic.l10n.Localization;\n \n-import javax.swing.*;\n-\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-import java.util.HashMap;\n-import java.util.List;\n-\n /**\n  * Customized UI component for pushing to external applications. Has a selection popup menu to change the selected\n  * external application. This class implements the ActionListener interface. When actionPerformed() is invoked, the\n@@ -74,7 +90,7 @@ private void init() {\n         pushButton = new JButton();\n \n         // Set the last used external application\n-        String appSelected = Globals.prefs.get(Globals.prefs.PUSH_TO_APPLICATION);\n+        String appSelected = Globals.prefs.get(JabRefPreferences.PUSH_TO_APPLICATION);\n         for (int i = 0; i < pushActions.size(); i++) {\n             if (pushActions.get(i).getApplicationName().equals(appSelected)) {\n                 selected = i;\n@@ -137,7 +153,7 @@ private void setSelected(int i) {\n         pushButton.setPreferredSize(buttonDim);\n \n         // Store the last used application\n-        Globals.prefs.put(Globals.prefs.PUSH_TO_APPLICATION, toApp.getApplicationName());\n+        Globals.prefs.put(JabRefPreferences.PUSH_TO_APPLICATION, toApp.getApplicationName());\n \n         mAction.setTitle(toApp.getApplicationName());\n         mAction.setIcon(toApp.getIcon());, ", 28, 12, "\"modified, \"", 40], ["Oscar Gustafsson", "Reverted change that killed OpenOffice connection...", "11/10/15, 01:00:32 PM", "Oscar Gustafsson", "f846258097b854879c965d99e4a2d347ac9aa189", ["src/main/java/net/sf/jabref/openoffice/OpenOfficePanel.java"], "@@ -655,19 +655,18 @@ else if (OpenOfficePanel.useDefaultNumericalStyle) {\n \n \n     private static void addURL(URL[] u) throws IOException {\n-        try (URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader()) {\n-            Class<URLClassLoader> sysclass = URLClassLoader.class;\n+        URLClassLoader sysloader = (URLClassLoader) ClassLoader.getSystemClassLoader();\n+        Class<URLClassLoader> sysclass = URLClassLoader.class;\n \n-            try {\n-                Method method = sysclass.getDeclaredMethod(\"addURL\", OpenOfficePanel.parameters);\n-                method.setAccessible(true);\n-                for (URL anU : u) {\n-                    method.invoke(sysloader, anU);\n-                }\n-            } catch (Throwable t) {\n-                t.printStackTrace();\n-                throw new IOException(\"Error, could not add URL to system classloader\");\n+        try {\n+            Method method = sysclass.getDeclaredMethod(\"addURL\", OpenOfficePanel.parameters);\n+            method.setAccessible(true);\n+            for (URL anU : u) {\n+                method.invoke(sysloader, anU);\n             }\n+        } catch (Throwable t) {\n+            t.printStackTrace();\n+            throw new IOException(\"Error, could not add URL to system classloader\");\n         }\n     }\n , ", 10, 11, "\"modified, \"", 21], ["Oscar Gustafsson", "Removed translation of log messages and some related clean ups", "11/07/15, 10:12:15 AM", "Oscar Gustafsson", "9356b330b750aa62d2da09d37800dd437c57890c", ["src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/SearchManagerNoGUI.java", "src/main/java/net/sf/jabref/exporter/CustomExportList.java", "src/main/java/net/sf/jabref/exporter/layout/Layout.java", "src/main/java/net/sf/jabref/external/ExternalFilePanel.java", "src/main/java/net/sf/jabref/external/push/AbstractPushToApplication.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/RightClickMenu.java", "src/main/java/net/sf/jabref/gui/worker/SendAsEMailAction.java", "src/main/java/net/sf/jabref/importer/OpenDatabaseAction.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/importer/fileformat/PdfContentImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/RepecNepImporter.java", "src/main/java/net/sf/jabref/logic/journals/JournalAbbreviationRepository.java", "src/main/java/net/sf/jabref/pdfimport/PdfImporter.java", "src/main/java/net/sf/jabref/util/Util.java"], "@@ -787,7 +787,7 @@ else if (wrn.length() > 0) {\n \n     public static ParserResult openBibFile(String name, boolean ignoreAutosave) {\n         // String in OpenDatabaseAction.java\n-        LOGGER.info(Localization.lang(\"Opening\") + \": \" + name);\n+        LOGGER.info(\"Opening: \" + name);\n         File file = new File(name);\n         if (!file.exists()) {\n             ParserResult pr = new ParserResult(null, null, null);, @@ -22,7 +22,6 @@\n import org.apache.commons.logging.LogFactory;\n \n import net.sf.jabref.importer.*;\n-import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.SearchRules;\n import net.sf.jabref.logic.search.SearchRule;\n import net.sf.jabref.model.database.BibtexDatabase;\n@@ -55,8 +54,7 @@ public BibtexDatabase getDBfromMatches() {\n                 Globals.prefs.getBoolean(JabRefPreferences.REG_EXP_SEARCH));\n \n         if (!searchRule.validateSearchStrings(searchTerm)) {\n-            // String also in SearchManager.java\n-            LOGGER.warn(Localization.lang(\"Search failed: illegal search expression\"));\n+            LOGGER.warn(\"Search failed: illegal search expression\");\n             return base;\n         }\n , @@ -25,7 +25,6 @@\n import ca.odell.glazedlists.EventList;\n import ca.odell.glazedlists.SortedList;\n import ca.odell.glazedlists.BasicEventList;\n-import net.sf.jabref.logic.l10n.Localization;\n \n /**\n  * This class handles user defined custom export formats. They are initially\n@@ -76,8 +75,7 @@ private void readPrefs() {\n                 list.add(s);\n             } else {\n                 String customExportFormat = Globals.prefs.get(\"customExportFormat\" + i);\n-                LOGGER.error(Localization.lang(\"Error initializing custom export format from string '%0'\",\n-                        customExportFormat));\n+                LOGGER.error(\"Error initializing custom export format from string \" + customExportFormat);\n             }\n             i++;\n         }, @@ -61,7 +61,7 @@ public Layout(Vector<StringInt> parsedEntries, String classPrefix) throws Except\n                         blockEntries = null;\n                     } else {\n                         LOGGER.debug(blockStart + '\\n' + si.s);\n-                        LOGGER.warn(\"Nested field entries are not implemented !!!\");\n+                        LOGGER.warn(\"Nested field entries are not implemented!\");\n                         Thread.dumpStack();\n                     }\n                 }\n@@ -76,7 +76,7 @@ public Layout(Vector<StringInt> parsedEntries, String classPrefix) throws Except\n                         tmpEntries.add(le);\n                         blockEntries = null;\n                     } else {\n-                        LOGGER.warn(\"Nested field entries are not implemented !!!\");\n+                        LOGGER.warn(\"Nested field entries are not implemented!\");\n                         Thread.dumpStack();\n                     }\n                 }, @@ -210,8 +210,7 @@ public void run() {\n                             Localization.lang(\"Error writing XMP to file: %0\", e.getLocalizedMessage()),\n                             Localization.lang(\"Writing XMP\"), JOptionPane.ERROR_MESSAGE);\n                     // String above and below\n-                    LOGGER.info(Localization.lang(\"Error writing XMP to file: %0\", finalFile\n-                            .getAbsolutePath()), e);\n+                    LOGGER.info(\"Error writing XMP to file: \" + finalFile.getAbsolutePath(), e);\n                     output(Localization.lang(\"Error writing XMP to file: %0\", finalFile.getName()));\n \n                 } catch (TransformerException e) {, @@ -86,12 +86,7 @@ public void pushEntries(BibtexDatabase database, BibtexEntry[] entries, String k\n         catch (IOException excep) {\n             couldNotCall = true;\n \n-            // @formatter:off\n-            // Strings also a few lines below\n-            LOGGER.warn(Localization.lang(\"Error\") + \": \"\n-                    + Localization.lang(\"Could not call executable\") + \" '\"\n-                    + commandPath + \"'.\", excep);\n-            // @formatter:on\n+            LOGGER.warn(\"Error: Could not call executable '\" + commandPath + \"'.\", excep);\n         }\n     }\n , @@ -685,7 +685,7 @@ public void openBrowser(String url) {\n             output(Localization.lang(\"External viewer called\") + '.');\n         } catch (IOException ex) {\n             output(Localization.lang(\"Error\") + \": \" + ex.getMessage());\n-            LOGGER.debug(\"Could not open browser.\", ex);\n+            LOGGER.debug(\"Cannot open browser.\", ex);\n         }\n     }\n , @@ -412,7 +412,7 @@ public void actionPerformed(ActionEvent e) {\n             try {\n                 panel.runCommand(command);\n             } catch (Throwable ex) {\n-                LOGGER.debug(\"Could not execute command \" + command + \".\", ex);\n+                LOGGER.debug(\"Cannot execute command \" + command + \".\", ex);\n             }\n         }\n     }, @@ -101,7 +101,7 @@ public void run() {\n                 try {\n                     JabRefDesktop.openFolderAndSelectFile(f.getAbsolutePath());\n                 } catch (IOException e) {\n-                    LOGGER.debug(\"Could not open file\", e);\n+                    LOGGER.debug(\"Cannot open file\", e);\n                 }\n             }\n         }, @@ -396,7 +396,7 @@ public static ParserResult loadDatabase(File fileToOpen, String encoding)\n             for (BibtexEntry entry : pr.getDatabase().getEntries()) {\n                 SpecialFieldsUtils.syncSpecialFieldsFromKeywords(entry, null);\n             }\n-            LOGGER.info(Localization.lang(\"Synchronized special fields based on keywords\"));\n+            LOGGER.info(\"Synchronized special fields based on keywords\");\n         }\n \n         if (!pr.getMetaData().isGroupTreeValid()) {, @@ -622,14 +622,15 @@ private BibtexEntry parseNextEntry(String allText) {\n     private static int getNumberOfHits(String page, String marker, Pattern pattern) throws IOException {\n         int ind = page.indexOf(marker);\n         if (ind < 0) {\n-            IEEEXploreFetcher.LOGGER.debug(page);\n-            throw new IOException(Localization.lang(\"Could not parse number of hits\"));\n+            LOGGER.debug(page);\n+            throw new IOException(Localization.lang(\"Cannot parse number of hits\"));\n         }\n         String substring = page.substring(ind, page.length());\n         Matcher m = pattern.matcher(substring);\n         if (m.find()) {\n             return Integer.parseInt(m.group(1));\n         }\n-        throw new IOException(Localization.lang(\"Could not parse number of hits\"));\n+        LOGGER.debug(page);\n+        throw new IOException(Localization.lang(\"Cannot parse number of hits\"));\n     }\n }\n\\ No newline at end of file, @@ -228,7 +228,7 @@ private static boolean isYear(String yearStr) {\n \n         try {\n             if (document.isEncrypted()) {\n-                LOGGER.error(Localization.lang(\"Encrypted documents are not supported\"));\n+                LOGGER.error(\"Encrypted documents are not supported\");\n                 //return res;\n             }\n , @@ -475,7 +475,6 @@ private boolean isStartOfWorkingPaper() {\n             message += e.getMessage();\n             LOGGER.error(message, e);\n             if (!(e instanceof IOException)) {\n-                e.printStackTrace();\n                 e = new IOException(message);\n             }\n             throw (IOException) e;, @@ -15,7 +15,6 @@\n */\n package net.sf.jabref.logic.journals;\n \n-import net.sf.jabref.logic.l10n.Localization;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -59,15 +58,15 @@ public int size() {\n \n     public boolean isKnownName(String journalName) {\n         String nameKey = Objects.requireNonNull(journalName).trim().toLowerCase();\n-        return fullNameLowerCase2Abbreviation.get(nameKey) != null\n-                || isoLowerCase2Abbreviation.get(nameKey) != null\n-                || medlineLowerCase2Abbreviation.get(nameKey) != null;\n+        return (fullNameLowerCase2Abbreviation.get(nameKey) != null)\n+                || (isoLowerCase2Abbreviation.get(nameKey) != null)\n+                || (medlineLowerCase2Abbreviation.get(nameKey) != null);\n     }\n \n     public boolean isAbbreviatedName(String journalName) {\n         String nameKey = Objects.requireNonNull(journalName).trim().toLowerCase();\n-        return isoLowerCase2Abbreviation.get(nameKey) != null\n-                || medlineLowerCase2Abbreviation.get(nameKey) != null;\n+        return (isoLowerCase2Abbreviation.get(nameKey) != null)\n+                || (medlineLowerCase2Abbreviation.get(nameKey) != null);\n     }\n \n     /**\n@@ -96,7 +95,8 @@ public void addEntry(Abbreviation abbreviation) {\n         if (isKnownName(abbreviation.getName())) {\n             Abbreviation previous = getAbbreviation(abbreviation.getName()).get();\n             abbreviations.remove(previous);\n-            LOGGER.debug(Localization.lang(\"Duplicate Journal Abbreviation - old one will be overwritten by new one\\nOLD: %0\\nNEW: %1\", previous.toString(), abbreviation.toString()));\n+            LOGGER.info(\"Duplicate journal abbreviation - old one will be overwritten by new one\\nOLD: \"\n+                    + previous.toString() + \"\\nNEW: \" + abbreviation.toString());\n         }\n \n         abbreviations.add(abbreviation);, @@ -211,7 +211,7 @@ public ImportPdfFilesResult importPdfFiles(String[] fileNames, OutputPrinter sta\n \n                     if ((localRes == null) || localRes.isEmpty()) {\n                         // import failed -> generate default entry\n-                        LOGGER.info(Localization.lang(\"Import failed\"));\n+                        LOGGER.info(\"Import failed\");\n                         entry = createNewBlankEntry(fileName);\n                         res.add(entry);\n                         continue fileNameLoop;\n@@ -241,7 +241,7 @@ public ImportPdfFilesResult importPdfFiles(String[] fileNames, OutputPrinter sta\n                         in = new FileInputStream(file);\n                     } catch (Exception e) {\n                         // import failed -> generate default entry\n-                        LOGGER.info(Localization.lang(\"Import failed\"), e);\n+                        LOGGER.info(\"Import failed\", e);\n                         e.printStackTrace();\n                         entry = createNewBlankEntry(fileName);\n                         res.add(entry);\n@@ -251,7 +251,7 @@ public ImportPdfFilesResult importPdfFiles(String[] fileNames, OutputPrinter sta\n                         localRes = contentImporter.importEntries(in, status);\n                     } catch (Exception e) {\n                         // import failed -> generate default entry\n-                        LOGGER.info(Localization.lang(\"Import failed\"), e);\n+                        LOGGER.info(\"Import failed\", e);\n                         e.printStackTrace();\n                         entry = createNewBlankEntry(fileName);\n                         res.add(entry);, @@ -811,7 +811,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n         try {\n             layout = new LayoutHelper(sr).getLayoutFromText(Globals.FORMATTER_PACKAGE);\n         } catch (Exception e) {\n-            Util.LOGGER.info(Localization.lang(\"Wrong Format\").concat(\" \").concat(e.toString()), e);\n+            Util.LOGGER.info(\"Wrong format \" + e.getMessage(), e);\n         }\n         if (layout != null) {\n             targetName = layout.doLayout(entry, database);, ", 27, 37, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 64], ["Oscar Gustafsson", "Fix #290 by removing the suggested url and text as suggested by @matthiasgeiger", "11/06/15, 11:21:14 PM", "Oscar Gustafsson", "fd2eb46e635df7e4ead7cf5ac171bea5fc02a041", ["src/main/java/net/sf/jabref/gui/journals/ManageJournalsPanel.java", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties"], "@@ -432,8 +432,7 @@ public DownloadAction(JTextField tc) {\n         @Override\n         public void actionPerformed(ActionEvent e) {\n             String chosen;\n-            chosen = JOptionPane.showInputDialog(Localization.lang(\"Choose the URL to download. The default value points to a list provided by the JabRef developers.\"),\n-                    \"http://jabref.sf.net/journals/journal_abbreviations_general.txt\");\n+            chosen = JOptionPane.showInputDialog(Localization.lang(\"Choose the URL to download.\"), \"\");\n             if (chosen == null) {\n                 return;\n             }, @@ -263,7 +263,7 @@ Check_existing_%0_links=Check_existing_%0_links\n \n Check_links=Check_links\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.\n+Choose_the_URL_to_download.=Choose_the_URL_to_download.\n Cite_command=Cite_command\n \n Class_name=Class_name, @@ -143,7 +143,7 @@ Changed_type_to=Tipo_cambiado_a\n Characters_to_ignore=Caracteres_a_ignorar\n Check_existing_%0_links=Comprobar_%0_enlaces_existentes\n Check_links=Comprobar_enlaces\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Seleccionar_URL_a_descargar._El_valor_por_defecto_apunta_a_una_lista_facilitada_por_los_desarrolladores_de_JabRef.\n+Choose_the_URL_to_download.=Seleccionar_URL_a_descargar.\n Cite_command=Comando_Citar\n Class_name=Nombre_de_clase\n Clear=Limpiar, @@ -263,7 +263,7 @@ Check_existing_%0_links=\n \n Check_links=\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\n+Choose_the_URL_to_download.=\n Cite_command=\n \n Class_name=, @@ -144,7 +144,7 @@ Changed_type_to=Type_modifi\\u00e9_en\n Characters_to_ignore=Caract\\u00e8res_\\u00e0_ignorer_\n Check_existing_%0_links=V\\u00e9rifier_les_liens_%0_existants\n Check_links=V\\u00e9rifier_les_liens\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Choisir_l'URL_de_t\\u00e9l\\u00e9chargement._La_valeur_par_d\\u00e9faut_pointe_vers_une_liste_fournie_par_les_d\\u00e9veloppeurs_de_JabRef\n+Choose_the_URL_to_download.=Choisir_l'URL_de_t\\u00e9l\\u00e9chargement.\n Cite_command=Commande_Cite\n Class_name=Nom_de_classe\n Clear=Vider, @@ -143,7 +143,7 @@ Changed_type_to=Merubah_tipe_ke\n Characters_to_ignore=Karakter_diabaikan\n Check_existing_%0_links=Periksa_%0_tautan_yang_sudah_ada\n Check_links=Periksa_tautan\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Pilih_URL_untuk_dimuaturun._Daftar_bawaan_diberikan_oleh_pengembang_JabRef.\n+Choose_the_URL_to_download.=Pilih_URL_untuk_dimuaturun.\n Cite_command=Perintah_acuan\n Class_name=Nama_kelas\n Clear=Bersihkan, @@ -151,7 +151,7 @@ Characters_to_ignore=Caratteri_da_ignorare\n # Unsure. Is %0 the number of links?\n Check_existing_%0_links=Verificare_i_%0_collegamenti_esistenti\n Check_links=Verificare_i_collegamenti\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Scegliere_l'URL_da_scaricare._Il_valore_predefinito_punta_ad_una_lista_fornita_dagli_sviluppatori_di_JabRef\n+Choose_the_URL_to_download.=Scegliere_l'URL_da_scaricare.\n Cite_command=Comando_Cite\n Class_name=Nome_della_classe\n Clear=Svuota, @@ -263,7 +263,8 @@ Check_existing_%0_links=\\u65e2\\u5b58\\u306e%0\\u30ea\\u30f3\\u30af\\u3092\\u78ba\\u8a8d\n \n Check_links=\\u30ea\\u30f3\\u30af\\u3092\\u78ba\\u8a8d\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\\u30c0\\u30a6\\u30f3\\u30ed\\u30fc\\u30c9\\u3059\\u308bURL\\u3092\\u9078\\u629e\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\u65e2\\u5b9a\\u5024\\u306f\\u3001JabRef\\u958b\\u767a\\u8005\\u304c\\u63d0\\u4f9b\\u3059\\u308b\\u30ea\\u30b9\\u30c8\\u3092\\u6307\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002\n+Choose_the_URL_to_download.=\n+#!Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\\u30c0\\u30a6\\u30f3\\u30ed\\u30fc\\u30c9\\u3059\\u308bURL\\u3092\\u9078\\u629e\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\u65e2\\u5b9a\\u5024\\u306f\\u3001JabRef\\u958b\\u767a\\u8005\\u304c\\u63d0\\u4f9b\\u3059\\u308b\\u30ea\\u30b9\\u30c8\\u3092\\u6307\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002\n Cite_command=Cite\\u30b3\\u30de\\u30f3\\u30c9\n \n Class_name=\\u30af\\u30e9\\u30b9\\u540d, @@ -266,7 +266,7 @@ Check_existing_%0_links=Controleer_bestaande_%0_snelkoppelingen\n \n Check_links=Controleer_snelkoppelingen\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Kies_de_URL_om_te_downloaden._De_standaard_waarde_wijst_naar_een_lijst_voorzien_door_de_JabRef_ontwikkelaars.\n+Choose_the_URL_to_download.=Kies_de_URL_om_te_downloaden.\n Cite_command=\n \n Class_name=Klassenaam, @@ -283,7 +283,7 @@ Check_existing_%0_links=Sjekk_eksisterende_%0-linker\n \n Check_links=Sjekk_eksterne_linker\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Velg_URL_for_nedlasting._Den_forh\\u00e5ndsvalgte_adressen_peker_til_en_liste_gjort_tilgjengelig_av_JabRef-utviklerne.\n+Choose_the_URL_to_download.=Velg_URL_for_nedlasting.\n \n Cite_command=Siteringskommando\n , @@ -143,7 +143,7 @@ Changed_type_to=Tipo_modificado_para\n Characters_to_ignore=Caracteres_para_ignorar\n Check_existing_%0_links=Verificar_links_%0_existentes\n Check_links=Verificar_links\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Escolha_a_URL_para_baixar._O_valor_padr\\u00e3o_aponta_para_uma_lista_fornecida_pelos_desenvolvedores_do_JabRef.\n+Choose_the_URL_to_download.=Escolha_a_URL_para_baixar.\n Cite_command=Comando_citar\n Class_name=Nome_da_classe\n Clear=Limpar, @@ -263,7 +263,7 @@ Check_existing_%0_links=\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c_\u0442\u0435\u043a\u0443\u0449\u0438\u0435_\u0441\u0441\u044b\u043b\u043a\u0438_%0\n \n Check_links=\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c_\u0441\u0441\u044b\u043b\u043a\u0438\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\u0412\u044b\u0431\u0440\u0430\u0442\u044c_URL-\u0430\u0434\u0440\u0435\u0441_\u0434\u043b\u044f_\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438._\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f_\u043f\u043e_\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e_\u0434\u043b\u044f_\u0441\u043f\u0438\u0441\u043a\u0430_\u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u043e\u0433\u043e_\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\u0438_JabRef.\n+Choose_the_URL_to_download.=\u0412\u044b\u0431\u0440\u0430\u0442\u044c_URL-\u0430\u0434\u0440\u0435\u0441_\u0434\u043b\u044f_\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438.\n Cite_command=\u041a\u043e\u043c\u0430\u043d\u0434\u0430_\u0446\u0438\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n \n Class_name=\u0418\u043c\u044f_\u043a\u043b\u0430\u0441\u0441\u0430, @@ -143,7 +143,7 @@ Changed_type_to=T\\u00fcr_\\u015funa_de\\u011fi\\u015fti\n Characters_to_ignore=Yoksay\\u0131lacak_karakterler\n Check_existing_%0_links=Mevcut_%0_linki_kontrol_ediniz\n Check_links=Linkleri_kontrol_ediniz\n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\\u0130ndirilecek_URL'i_se\\u00e7iniz._\\u00d6ntan\\u0131ml\\u0131_de\\u011fer_JabRef_geli\\u015ftiricilerince_sa\\u011flanan_bir_listeye_i\\u015faret_eder.\n+Choose_the_URL_to_download.=\\u0130ndirilecek_URL'i_se\\u00e7iniz.\n Cite_command=Al\\u0131nt\\u0131_komutu\n Class_name=S\\u0131n\\u0131f_ad\\u0131\n Clear=Sil, @@ -263,7 +263,7 @@ Check_existing_%0_links=Ki\\u1ec3m_tra_%0_li\\u00ean_k\\u1ebft_hi\\u1ec7n_c\\u00f3\n \n Check_links=Ki\\u1ec3m_tra_c\\u00e1c_li\\u00ean_k\\u1ebft\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=Ch\\u1ecdn_URL_\\u0111\\u1ec3_t\\u1ea3i_v\\u1ec1._Gi\\u00e1_tr\\u1ecb_hi\\u1ec7n_t\\u1ea1i_tr\\u1ecf_\\u0111\\u1ebfn_m\\u1ed9t_danh_s\\u00e1ch_do_c\\u00e1c_nh\\u00e0_ph\\u00e1t_tri\\u1ec3n_JabRef_cung_c\\u1ea5p.\n+Choose_the_URL_to_download.=Ch\\u1ecdn_URL_\\u0111\\u1ec3_t\\u1ea3i_v\\u1ec1.\n Cite_command=L\\u1ec7nh_tr\\u00edch_d\\u1eabn\n \n Class_name=T\\u00ean_l\\u1edbp, @@ -263,7 +263,8 @@ Check_existing_%0_links=\\u68c0\\u67e5\\u5b58\\u5728\\u7684%0\\u94fe\\u63a5\n \n Check_links=\\u6838\\u5bf9\\u94fe\\u63a5\n \n-Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\\u9009\\u62e9_URL_\\u4e0b\\u8f7d\\uff0c\\u9ed8\\u8ba4\\u503c\\u6307\\u5411_JabRef_\\u5f00\\u53d1\\u8005\\u63d0\\u4f9b\\u7684\\u4e00\\u4e2a\\u5217\\u8868\\u3002\n+Choose_the_URL_to_download.=\n+#!Choose_the_URL_to_download._The_default_value_points_to_a_list_provided_by_the_JabRef_developers.=\\u9009\\u62e9_URL_\\u4e0b\\u8f7d\\uff0c\\u9ed8\\u8ba4\\u503c\\u6307\\u5411_JabRef_\\u5f00\\u53d1\\u8005\\u63d0\\u4f9b\\u7684\\u4e00\\u4e2a\\u5217\\u8868\\u3002\n Cite_command=\\u5f15\\u7528\\u547d\\u4ee4\n \n Class_name=\\u7c7b\\u540d, ", 17, 16, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 33], ["Oscar Gustafsson", "Added localized message to SaveException", "11/10/15, 10:45:02 PM", "Oscar Gustafsson", "1338137cff12a943b9e71888039d4e399bf46cee", ["src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/exporter/FileActions.java", "src/main/java/net/sf/jabref/exporter/SaveException.java", "src/main/java/net/sf/jabref/exporter/SaveSession.java", "src/main/java/net/sf/jabref/importer/fetcher/INSPIREFetcher.java"], "@@ -359,7 +359,7 @@ private void setupLogHandlerForErrorConsole() {\n                                 session.commit();\n                             } catch (SaveException ex) {\n                                 System.err.println(Localization.lang(\"Could not save file\") + \" '\" + data[0] + \"': \"\n-                                        + ex.getMessage());\n+                                        + ex.getLocalizedMessage());\n                             }\n                         }\n                     } else {\n@@ -446,7 +446,7 @@ private void setupLogHandlerForErrorConsole() {\n                                 session.commit();\n                             } catch (SaveException ex) {\n                                 System.err.println(Localization.lang(\"Could not save file\") + \" '\" + subName + \"': \"\n-                                        + ex.getMessage());\n+                                        + ex.getLocalizedMessage());\n                             }\n \n                             notSavedMsg = true;, @@ -188,7 +188,7 @@ public static SaveSession saveDatabase(BibtexDatabase database,\n             // saving failed, no matter what the reason was\n             // (and they won't just quit JabRef thinking\n             // everything worked and loosing data)\n-            throw new SaveException(e.getMessage());\n+            throw new SaveException(e.getMessage(), e.getLocalizedMessage());\n         }\n \n         // Get our data stream. This stream writes only to a temporary file,\n@@ -262,7 +262,7 @@ public static SaveSession saveDatabase(BibtexDatabase database,\n             ex.printStackTrace();\n             session.cancel();\n             // repairAfterError(file, backup, INIT_OK);\n-            throw new SaveException(ex.getMessage(), exceptionCause);\n+            throw new SaveException(ex.getMessage(), ex.getLocalizedMessage(), exceptionCause);\n         }\n \n         return session;\n@@ -373,7 +373,7 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n         try {\n             session = new SaveSession(file, encoding, backup);\n         } catch (IOException e) {\n-            throw new SaveException(e.getMessage());\n+            throw new SaveException(e.getMessage(), e.getLocalizedMessage());\n         }\n \n         // Define our data stream.\n@@ -435,7 +435,7 @@ public static SaveSession savePartOfDatabase(BibtexDatabase database, MetaData m\n         } catch (Throwable ex) {\n             session.cancel();\n             //repairAfterError(file, backup, status);\n-            throw new SaveException(ex.getMessage(), be);\n+            throw new SaveException(ex.getMessage(), ex.getLocalizedMessage(), be);\n         }\n \n         return session;, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -15,6 +15,7 @@\n */\n package net.sf.jabref.exporter;\n \n+import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n \n /**\n@@ -24,18 +25,26 @@\n public class SaveException extends Exception {\n \n     public static final SaveException FILE_LOCKED = new SaveException(\n-            \"Could not save, file locked by another JabRef instance.\");\n-    public static final SaveException BACKUP_CREATION = new SaveException(\"Unable to create backup\");\n+            \"Could not save, file locked by another JabRef instance.\",\n+            Localization.lang(\"Could not save, file locked by another JabRef instance.\"));\n+    public static final SaveException BACKUP_CREATION = new SaveException(\"Unable to create backup\",\n+            Localization.lang(\"Unable to create backup\"));\n \n     private final BibtexEntry entry;\n     private int status;\n-\n+    private String localizedMessage;\n \n     public SaveException(String message) {\n         super(message);\n         entry = null;\n     }\n \n+    public SaveException(String message, String localizedMessage) {\n+        super(message);\n+        this.localizedMessage = localizedMessage;\n+        entry = null;\n+    }\n+\n     public SaveException(String message, int status) {\n         super(message);\n         entry = null;\n@@ -47,6 +56,12 @@ public SaveException(String message, BibtexEntry entry) {\n         this.entry = entry;\n     }\n \n+    public SaveException(String message, String localizedMessage, BibtexEntry entry) {\n+        super(message);\n+        this.localizedMessage = localizedMessage;\n+        this.entry = entry;\n+    }\n+\n     public int getStatus() {\n         return status;\n     }\n@@ -58,4 +73,13 @@ public BibtexEntry getEntry() {\n     public boolean specificEntry() {\n         return entry != null;\n     }\n+\n+    @Override\n+    public String getLocalizedMessage() {\n+        if (localizedMessage == null) {\n+            return getMessage();\n+        } else {\n+            return localizedMessage;\n+        }\n+    }\n }, @@ -16,6 +16,7 @@\n package net.sf.jabref.exporter;\n \n import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.io.FileBasedLock;\n import net.sf.jabref.logic.util.io.FileUtil;\n import net.sf.jabref.Globals;\n@@ -68,11 +69,11 @@ public SaveSession(File file, String encoding, boolean backup) throws IOExceptio\n         useLockFile = Globals.prefs.getBoolean(JabRefPreferences.USE_LOCK_FILES);\n         this.backup = backup;\n         this.encoding = encoding;\n-\t/* Using \n+\t/* Using\n \t   try (FileOutputStream fos = new FileOutputStream(tmp)) {\n \t       writer = new VerifyingWriter(fos, encoding);\n \t   }\n-\t   doesn't work since fos is closed after assigning write, \n+\t   doesn't work since fos is closed after assigning write,\n \t   leading to that fos may never be closed at all\n \t */\n         writer = new VerifyingWriter(new FileOutputStream(tmp), encoding);\n@@ -103,7 +104,6 @@ public void commit() throws SaveException {\n             } catch (IOException ex) {\n                 ex.printStackTrace();\n                 throw SaveException.BACKUP_CREATION;\n-                //throw new SaveException(Globals.lang(\"Save failed during backup creation\")+\": \"+ex.getMessage());\n             }\n         }\n         try {\n@@ -127,7 +127,8 @@ public void commit() throws SaveException {\n             // have a clean copy in tmp. However, we just failed to copy tmp to file, so it's not likely that\n             // repeating the action will have a different result.\n             // On the other hand, our temporary file should still be clean, and won't be deleted.\n-            throw new SaveException(\"Save failed while committing changes: \" + ex2.getMessage());\n+            throw new SaveException(\"Save failed while committing changes: \" + ex2.getMessage(),\n+                    Localization.lang(\"Save failed while committing changes: %0\", ex2.getMessage()));\n         } finally {\n             if (useLockFile) {\n                 deleteLockFile();, @@ -125,7 +125,7 @@ private BibtexDatabase importInspireEntries(String key, OutputPrinter frame) {\n             }\n         } catch (RuntimeException | IOException e) {\n             frame.showMessage(Localization.lang(\"An Exception ocurred while accessing '%0'\", url) + \"\\n\\n\" + e,\n-                    Localization.lang(getTitle()), JOptionPane.ERROR_MESSAGE);\n+                    getTitle(), JOptionPane.ERROR_MESSAGE);\n         }\n         return null;\n     }, ", 40, 15, "\"modified, modified, modified, modified, modified, \"", 55], ["Oscar Gustafsson", "Replaced some of the GetKey arguments with constants from KeyBinds", "11/07/15, 02:54:01 PM", "Oscar Gustafsson", "d861728be8833defcf84d1491cb37c15bcbbaf48", ["src/main/java/net/sf/jabref/exporter/CustomExportDialog.java", "src/main/java/net/sf/jabref/exporter/ExportCustomizationDialog.java", "src/main/java/net/sf/jabref/exporter/SaveAllAction.java", "src/main/java/net/sf/jabref/external/ExternalFileTypeEditor.java", "src/main/java/net/sf/jabref/external/SynchronizeFileField.java", "src/main/java/net/sf/jabref/external/WriteXMPAction.java", "src/main/java/net/sf/jabref/external/push/PushToApplicationButton.java", "src/main/java/net/sf/jabref/groups/AutoGroupDialog.java", "src/main/java/net/sf/jabref/groups/GroupDialog.java", "src/main/java/net/sf/jabref/gui/AttachFileDialog.java", "src/main/java/net/sf/jabref/gui/DatabasePropertiesDialog.java", "src/main/java/net/sf/jabref/gui/EntryCustomizationDialog2.java", "src/main/java/net/sf/jabref/gui/EntryTypeDialog.java", "src/main/java/net/sf/jabref/gui/FetcherPreviewDialog.java", "src/main/java/net/sf/jabref/gui/FileListEntryEditor.java", "src/main/java/net/sf/jabref/gui/GenFieldsCustomizer.java", "src/main/java/net/sf/jabref/gui/GroupAddRemoveDialog.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/MergeDialog.java", "src/main/java/net/sf/jabref/gui/PreambleEditor.java", "src/main/java/net/sf/jabref/gui/PreviewPanel.java", "src/main/java/net/sf/jabref/gui/ReplaceStringDialog.java", "src/main/java/net/sf/jabref/gui/SearchManager.java", "src/main/java/net/sf/jabref/gui/SearchResultsDialog.java", "src/main/java/net/sf/jabref/gui/StringDialog.java", "src/main/java/net/sf/jabref/gui/actions/AutoLinkFilesAction.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditorTab.java", "src/main/java/net/sf/jabref/gui/fieldeditors/TextField.java", "src/main/java/net/sf/jabref/gui/help/HelpDialog.java", "src/main/java/net/sf/jabref/gui/journals/ManageJournalsPanel.java", "src/main/java/net/sf/jabref/gui/keyboard/KeyBinds.java", "src/main/java/net/sf/jabref/gui/labelPattern/ResolveDuplicateLabelDialog.java", "src/main/java/net/sf/jabref/importer/ImportCustomizationDialog.java", "src/main/java/net/sf/jabref/importer/ImportFormats.java", "src/main/java/net/sf/jabref/importer/OpenDatabaseAction.java", "src/main/java/net/sf/jabref/importer/ZipFileChooser.java", "src/main/java/net/sf/jabref/openoffice/AdvancedCiteDialog.java", "src/main/java/net/sf/jabref/openoffice/CitationManager.java", "src/main/java/net/sf/jabref/openoffice/OpenOfficePanel.java", "src/main/java/net/sf/jabref/openoffice/StyleSelectDialog.java", "src/main/java/net/sf/jabref/sql/DBConnectDialog.java", "src/main/java/net/sf/jabref/util/ManageKeywordsAction.java", "src/main/java/net/sf/jabref/util/MassSetFieldAction.java", "src/main/java/net/sf/jabref/util/Util.java", "src/main/java/net/sf/jabref/wizard/auximport/gui/FromAuxDialog.java", "src/main/java/net/sf/jabref/wizard/text/gui/TextInputDialog.java"], "@@ -27,6 +27,7 @@\n \n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n@@ -126,7 +127,7 @@ public void actionPerformed(ActionEvent e) {\n         JPanel main = new JPanel();\n         ActionMap am = main.getActionMap();\n         InputMap im = main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(parent.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(parent.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         // Layout starts here., @@ -29,6 +29,7 @@\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import ca.odell.glazedlists.gui.TableFormat;\n@@ -146,11 +147,11 @@ public void actionPerformed(ActionEvent e) {\n         JPanel main = new JPanel();\n         ActionMap am = main.getActionMap();\n         InputMap im = main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(frame.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(frame.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n         //am = table.getActionMap();\n         //im = table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        //im.put(frame.prefs().getKey(\"Close dialog\"), \"close\");\n+        //im.put(frame.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         //am.put(\"close\", closeAction);\n         main.setLayout(new BorderLayout());\n         main.add(sp, BorderLayout.CENTER);, @@ -23,6 +23,7 @@\n import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.actions.Actions;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.worker.Worker;\n import net.sf.jabref.logic.l10n.Localization;\n import spin.Spin;\n@@ -42,7 +43,7 @@\n     public SaveAllAction(JabRefFrame frame) {\n         super(IconTheme.JabRefIcon.SAVE_ALL.getIcon());\n         this.frame = frame;\n-        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Save all\"));\n+        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.SAVE_ALL));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Save all open databases\"));\n         putValue(Action.NAME, Localization.menuTitle(\"Save all\"));\n     }, @@ -32,6 +32,7 @@\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.ButtonStackBuilder;\n@@ -177,11 +178,11 @@ public void actionPerformed(ActionEvent e) {\n         // Key bindings:\n         ActionMap am = upper.getActionMap();\n         InputMap im = upper.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n         am = bb.getPanel().getActionMap();\n         im = bb.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         if (frame != null) {, @@ -20,6 +20,7 @@\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.gui.worker.AbstractWorker;\n@@ -298,7 +299,6 @@ public void update() {\n \n     static class OptionsDialog extends JDialog {\n \n-        private static final long serialVersionUID = 1909919286125256934L;\n         final JRadioButton autoSetUnset;\n         final JRadioButton autoSetAll;\n         final JRadioButton autoSetNone;\n@@ -325,8 +325,6 @@ public void actionPerformed(ActionEvent e) {\n \n             Action closeAction = new AbstractAction() {\n \n-                private static final long serialVersionUID = -8834440705768095070L;\n-\n                 @Override\n                 public void actionPerformed(ActionEvent e) {\n                     dispose();\n@@ -337,7 +335,7 @@ public void actionPerformed(ActionEvent e) {\n \n             InputMap im = cancel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n             ActionMap am = cancel.getActionMap();\n-            im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+            im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n             am.put(\"close\", closeAction);\n \n             autoSetUnset = new JRadioButton(Localization.lang(\"Autoset %0 links. Do not overwrite existing links.\", fn), true);, @@ -29,6 +29,7 @@\n \n import net.sf.jabref.*;\n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n@@ -234,7 +235,7 @@ public void actionPerformed(ActionEvent e) {\n \n             InputMap im = cancelButton.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n             ActionMap am = cancelButton.getActionMap();\n-            im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+            im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n             am.put(\"close\", cancel);\n \n             progressArea = new JTextArea(15, 60);, @@ -21,6 +21,7 @@\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;\n@@ -220,7 +221,7 @@ public void actionPerformed(ActionEvent event) {\n         // Key bindings:\n         ActionMap am = bb.getPanel().getActionMap();\n         InputMap im = bb.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n             private static final long serialVersionUID = -4839826710086306753L;\n@@ -281,10 +282,8 @@ public void actionPerformed(ActionEvent e) {\n \n     class MenuAction extends MnemonicAwareAction {\n \n-        private static final long serialVersionUID = -4339280220347418559L;\n-\n         public MenuAction() {\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Push to application\"));\n+            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.PUSH_TO_APPLICATION));\n         }\n \n         public void setTitle(String appName) {, @@ -30,6 +30,7 @@\n \n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.groups.structure.ExplicitGroup;\n import net.sf.jabref.groups.structure.GroupHierarchyType;\n import net.sf.jabref.groups.structure.KeywordGroup;\n@@ -146,7 +147,7 @@ public void actionPerformed(ActionEvent e) {\n         JPanel main = new JPanel();\n         ActionMap am = main.getActionMap();\n         InputMap im = main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(frame.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(frame.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         ButtonGroup bg = new ButtonGroup();, @@ -25,6 +25,7 @@\n import net.sf.jabref.gui.FieldContentSelector;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.fieldeditors.TextField;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.SearchRules;\n import net.sf.jabref.logic.search.describer.SearchDescribers;\n@@ -277,7 +278,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         m_cancel.addActionListener(cancelAction);\n         builderAll.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)\n-                .put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+                .put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         builderAll.getPanel().getActionMap().put(\"close\", cancelAction);\n \n         m_ok.addActionListener(new ActionListener() {, @@ -31,6 +31,7 @@\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.fieldeditors.TextField;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -137,7 +138,7 @@ public void actionPerformed(ActionEvent event) {\n         };\n \n         cancel.addActionListener(cancelListener);\n-        editor.getTextComponent().getInputMap().put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        editor.getTextComponent().getInputMap().put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         editor.getTextComponent().getActionMap().put(\"close\", cancelListener);\n \n         FormLayout layout = new FormLayout(\"fill:160dlu, 4dlu, fill:pref\", \"\");, @@ -38,6 +38,7 @@\n import javax.swing.JTextField;\n \n import net.sf.jabref.gui.actions.BrowseAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n@@ -175,7 +176,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = builder.getPanel().getActionMap();\n         InputMap im = builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n         ok.addActionListener(new ActionListener() {, @@ -27,6 +27,7 @@\n import javax.swing.event.ListSelectionListener;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -142,7 +143,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = main.getActionMap();\n         InputMap im = main.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n         //con.fill = GridBagConstraints.BOTH;, @@ -28,6 +28,7 @@\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.model.entry.BibtexEntryType;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.strings.StringUtil;\n \n@@ -84,7 +85,7 @@ public void windowClosing(WindowEvent e) {\n \n         // Make ESC close dialog, equivalent to clicking Cancel.\n         cancel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)\n-                .put(baseFrame_.prefs.getKey(\"Close dialog\"), \"close\");\n+                .put(baseFrame_.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         cancel.getActionMap().put(\"close\", cancelAction);\n \n         //buttons.add(ok);, @@ -23,6 +23,7 @@\n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.ButtonStackBuilder;\n import net.sf.jabref.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -128,7 +129,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = centerPan.getActionMap();\n         InputMap im = centerPan.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n         pack();, @@ -36,6 +36,7 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.util.Util;\n import net.sf.jabref.external.ConfirmCloseFileListEntryEditor;\n import net.sf.jabref.external.ExternalFileType;\n@@ -175,7 +176,7 @@ public void actionPerformed(ActionEvent e) {\n         // Key bindings:\n         ActionMap am = builder.getPanel().getActionMap();\n         InputMap im = builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         link.getDocument().addDocumentListener(new DocumentListener() {, @@ -25,6 +25,7 @@\n import net.sf.jabref.*;\n import net.sf.jabref.gui.entryeditor.EntryEditorTabList;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.layout.Sizes;\n@@ -115,7 +116,7 @@ private void jbInit() {\n         // Key bindings:\n         ActionMap am = buttons.getActionMap();\n         InputMap im = buttons.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n             @Override, @@ -2,6 +2,7 @@\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.gui.actions.BaseAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.groups.*;\n@@ -31,7 +32,7 @@\n \n     private final BasePanel panel;\n     private final boolean add;\n-    private boolean move;\n+    private final boolean move;\n     private BibtexEntry[] selection;\n     private JTree tree;\n     private JButton ok;\n@@ -62,7 +63,7 @@ public void action() throws Throwable {\n         tree.setVisibleRowCount(22);\n \n         //        tree.setPreferredSize(new Dimension(200, tree.getPreferredSize().height));\n-        //      The scrollbar appears when the preferred size of a component is greater than the size of the viewport. If one hard coded the preferred size, it will never change according to the expansion/collapse. Thus the scrollbar cannot appear accordingly. \n+        //      The scrollbar appears when the preferred size of a component is greater than the size of the viewport. If one hard coded the preferred size, it will never change according to the expansion/collapse. Thus the scrollbar cannot appear accordingly.\n         //tree.setSelectionModel(new VetoableTreeSelectionModel());\n         tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n         tree.addTreeSelectionListener(new SelectionListener());\n@@ -123,7 +124,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n         // Key bindings:\n         ActionMap am = sp.getActionMap();\n         InputMap im = sp.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n             @Override, @@ -79,6 +79,7 @@\n import net.sf.jabref.groups.GroupTreeNode;\n import net.sf.jabref.groups.UndoableChangeAssignment;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.importer.ImportInspector;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.labelPattern.LabelPatternUtil;\n@@ -250,7 +251,7 @@ public ImportInspectionDialog(JabRefFrame frame, BasePanel panel, String[] field\n         GeneralRenderer renderer = new GeneralRenderer(Color.white);\n         glTable.setDefaultRenderer(JLabel.class, renderer);\n         glTable.setDefaultRenderer(String.class, renderer);\n-        glTable.getInputMap().put(Globals.prefs.getKey(\"Delete\"), \"delete\");\n+        glTable.getInputMap().put(Globals.prefs.getKey(KeyBinds.DELETE), \"delete\");\n         DeleteListener deleteListener = new DeleteListener();\n         glTable.getActionMap().put(\"delete\", deleteListener);\n \n@@ -362,7 +363,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = contentPane.getActionMap();\n         InputMap im = contentPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n     }, @@ -253,7 +253,7 @@ void addJToogleButton(JToggleButton button) {\n     private final AbstractAction donationAction = new DonateAction();\n     private final AbstractAction help = new HelpAction(Localization.menuTitle(\"JabRef help\"), helpDiag,\n             GUIGlobals.baseFrameHelp, Localization.lang(\"JabRef help\"),\n-            prefs.getKey(\"Help\"));\n+ prefs.getKey(KeyBinds.HELP));\n     private final AbstractAction contents = new HelpAction(Localization.menuTitle(\"Help contents\"), helpDiag,\n             GUIGlobals.helpContents, Localization.lang(\"Help contents\"),\n             IconTheme.JabRefIcon.HELP_CONTENTS.getIcon());\n@@ -512,26 +512,25 @@ public void actionPerformed(ActionEvent e) {\n     public GroupSelector groupSelector;\n \n     // The action for adding a new entry of unspecified type.\n-    private final NewEntryAction newEntryAction = new NewEntryAction(this, prefs.getKey(\"New entry\"));\n-    private final NewEntryAction[] newSpecificEntryAction = new NewEntryAction[]\n-            {\n-                    new NewEntryAction(this, \"article\", prefs.getKey(\"New article\")),\n-                    new NewEntryAction(this, \"book\", prefs.getKey(\"New book\")),\n-                    new NewEntryAction(this, \"phdthesis\", prefs.getKey(\"New phdthesis\")),\n-                    new NewEntryAction(this, \"inbook\", prefs.getKey(\"New inbook\")),\n-                    new NewEntryAction(this, \"mastersthesis\", prefs.getKey(\"New mastersthesis\")),\n-                    new NewEntryAction(this, \"proceedings\", prefs.getKey(\"New proceedings\")),\n-                    new NewEntryAction(this, \"inproceedings\"),\n-                    new NewEntryAction(this, \"conference\"),\n-                    new NewEntryAction(this, \"incollection\"),\n-                    new NewEntryAction(this, \"booklet\"),\n-                    new NewEntryAction(this, \"manual\"),\n-                    new NewEntryAction(this, \"techreport\"),\n-                    new NewEntryAction(this, \"unpublished\",\n-                            prefs.getKey(\"New unpublished\")),\n-                    new NewEntryAction(this, \"misc\"),\n-                    new NewEntryAction(this, \"other\")\n-            };\n+    private final NewEntryAction newEntryAction = new NewEntryAction(this, prefs.getKey(KeyBinds.NEW_ENTRY));\n+    // @formatter:off\n+    private final NewEntryAction[] newSpecificEntryAction = new NewEntryAction[] {\n+            new NewEntryAction(this, \"article\", prefs.getKey(KeyBinds.NEW_ARTICLE)),\n+            new NewEntryAction(this, \"book\", prefs.getKey(KeyBinds.NEW_BOOK)),\n+            new NewEntryAction(this, \"phdthesis\", prefs.getKey(KeyBinds.NEW_PHDTHESIS)),\n+            new NewEntryAction(this, \"inbook\", prefs.getKey(KeyBinds.NEW_INBOOK)),\n+            new NewEntryAction(this, \"mastersthesis\", prefs.getKey(KeyBinds.NEW_MASTERSTHESIS)),\n+            new NewEntryAction(this, \"proceedings\", prefs.getKey(KeyBinds.NEW_PROCEEDINGS)),\n+            new NewEntryAction(this, \"inproceedings\"),\n+            new NewEntryAction(this, \"conference\"),\n+            new NewEntryAction(this, \"incollection\"),\n+            new NewEntryAction(this, \"booklet\"),\n+            new NewEntryAction(this, \"manual\"),\n+            new NewEntryAction(this, \"techreport\"),\n+            new NewEntryAction(this, \"unpublished\", prefs.getKey(KeyBinds.NEW_UNPUBLISHED)),\n+            new NewEntryAction(this, \"misc\"),\n+            new NewEntryAction(this, \"other\")};\n+    // @formatter:on\n \n \n     public JabRefFrame(JabRef jabRef) {\n@@ -1749,7 +1748,7 @@ public void actionPerformed(ActionEvent e) {\n         public CloseAction() {\n             putValue(Action.NAME, Localization.menuTitle(\"Quit\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Quit JabRef\"));\n-            putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Quit JabRef\"));\n+            putValue(Action.ACCELERATOR_KEY, prefs.getKey(KeyBinds.QUIT_JAB_REF));\n         }\n \n         @Override\n@@ -1766,7 +1765,7 @@ public CloseDatabaseAction() {\n             super(IconTheme.JabRefIcon.CLOSE.getSmallIcon());\n             putValue(Action.NAME, Localization.menuTitle(\"Close database\"));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Close the current database\"));\n-            putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Close database\"));\n+            putValue(Action.ACCELERATOR_KEY, prefs.getKey(KeyBinds.CLOSE_DATABASE));\n         }\n \n         @Override\n@@ -2003,7 +2002,7 @@ public void run() {\n         public SaveSessionAction() {\n             super();\n             putValue(Action.NAME, Localization.menuTitle(\"Save session\"));\n-            putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Save session\"));\n+            putValue(Action.ACCELERATOR_KEY, prefs.getKey(KeyBinds.SAVE_SESSION));\n         }\n \n         @Override\n@@ -2058,7 +2057,7 @@ public void actionPerformed(ActionEvent e) {\n         public LoadSessionAction() {\n             super();\n             putValue(Action.NAME, Localization.menuTitle(\"Load session\"));\n-            putValue(Action.ACCELERATOR_KEY, prefs.getKey(\"Load session\"));\n+            putValue(Action.ACCELERATOR_KEY, prefs.getKey(KeyBinds.LOAD_SESSION));\n         }\n \n         @Override\n@@ -2117,7 +2116,7 @@ public ChangeTabAction(boolean next) {\n             this.next = next;\n             //Util.pr(\"\"+prefs.getKey(\"Next tab\"));\n             putValue(Action.ACCELERATOR_KEY,\n-                    next ? prefs.getKey(\"Next tab\") : prefs.getKey(\"Previous tab\"));\n+                    next ? prefs.getKey(KeyBinds.NEXT_TAB) : prefs.getKey(KeyBinds.PREVIOUS_TAB));\n         }\n \n         @Override\n@@ -2150,7 +2149,7 @@ public EditAction(String command, Icon icon) {\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(nName));\n             putValue(Action.SHORT_DESCRIPTION, Localization.lang(nName));\n             //putValue(ACCELERATOR_KEY,\n-            //         (next?prefs.getKey(\"Next tab\"):prefs.getKey(\"Previous tab\")));\n+            //         (next?prefs.getKey(KeyBinds.NEXT_TAB):prefs.getKey(KeyBinds.PREVIOUS_TAB)));\n         }\n \n         @Override\n@@ -2271,7 +2270,7 @@ public void actionPerformed(ActionEvent e) {\n \n         public IncreaseTableFontSizeAction() {\n             putValue(Action.NAME, Localization.menuTitle(\"Increase table font size\"));\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Increase table font size\"));\n+            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.INCREASE_TABLE_FONT_SIZE));\n         }\n \n         @Override\n@@ -2290,7 +2289,7 @@ public void actionPerformed(ActionEvent event) {\n \n         public DecreaseTableFontSizeAction() {\n             putValue(Action.NAME, Localization.menuTitle(\"Decrease table font size\"));\n-            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Decrease table font size\"));\n+            putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.DECREASE_TABLE_FONT_SIZE));\n         }\n \n         @Override, @@ -15,6 +15,7 @@\n */\n package net.sf.jabref.gui;\n \n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n \n import java.awt.BorderLayout;\n@@ -99,7 +100,7 @@ private void jbInit(JabRefFrame parent) {\n         // Key bindings:\n         ActionMap am = jPanel1.getActionMap();\n         InputMap im = jPanel1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(parent.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(parent.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n             @Override, @@ -25,6 +25,7 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.fieldeditors.TextArea;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.undo.UndoablePreambleChange;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -101,16 +102,14 @@ protected boolean accept(Component c) {\n \n     private void setupJTextComponent(javax.swing.text.JTextComponent ta) {\n         // Set up key bindings and focus listener for the FieldEditor.\n-        ta.getInputMap().put(prefs.getKey(\"Close preamble editor\"), \"close\");\n+        ta.getInputMap().put(prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         ta.getActionMap().put(\"close\", closeAction);\n         ta.getInputMap().put(prefs.getKey(\"Preamble editor, store changes\"), \"store\");\n         ta.getActionMap().put(\"store\", storeFieldAction);\n-        ta.getInputMap().put(prefs.getKey(\"Close preamble editor\"), \"close\");\n-        ta.getActionMap().put(\"close\", closeAction);\n \n-        ta.getInputMap().put(prefs.getKey(\"Undo\"), \"undo\");\n+        ta.getInputMap().put(prefs.getKey(KeyBinds.UNDO), \"undo\");\n         ta.getActionMap().put(Actions.UNDO, undoAction);\n-        ta.getInputMap().put(prefs.getKey(\"Redo\"), \"redo\");\n+        ta.getInputMap().put(prefs.getKey(KeyBinds.REDO), \"redo\");\n         ta.getActionMap().put(Actions.REDO, redoAction);\n \n         ta.addFocusListener(new FieldListener());, @@ -37,6 +37,7 @@\n import net.sf.jabref.exporter.layout.LayoutHelper;\n import net.sf.jabref.exporter.ExportFormats;\n import net.sf.jabref.gui.fieldeditors.PreviewPanelTransferHandler;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -116,7 +117,7 @@ public PreviewPanel(BibtexDatabase database, BibtexEntry entry,\n     }\n \n     /**\n-     * \n+     *\n      * @param panel\n      *            (may be null) If not given no toolbar is shown on the right\n      *            hand side.\n@@ -130,15 +131,15 @@ public PreviewPanel(BasePanel panel, MetaData metaData, String layoutFile) {\n     }\n \n     /**\n-     * \n+     *\n      * @param panel\n      *            (may be null) If not given no toolbar is shown on the right\n      *            hand side.\n      * @param metaData\n      *            (must be given) Used for resolving pdf directories for links.\n      * @param layoutFile\n      *            (must be given) Used for layout\n-     * @param withPDFPreview if true, a PDF preview is included in the PreviewPanel. \n+     * @param withPDFPreview if true, a PDF preview is included in the PreviewPanel.\n      * The user can override this setting by setting the config setting JabRefPreferences.PDF_PREVIEW to false.\n      */\n     private PreviewPanel(BasePanel panel, MetaData metaData, String layoutFile, boolean withPDFPreview) {\n@@ -171,7 +172,7 @@ private PreviewPanel(BasePanel panel, MetaData metaData, String layoutFile, bool\n          * If we have been given a panel and the preference option\n          * previewPrintButton is set, show the tool bar\n          */\n-        if (panel != null\n+        if ((panel != null)\n                 && JabRefPreferences.getInstance().getBoolean(JabRefPreferences.PREVIEW_PRINT_BUTTON)) {\n             add(createToolBar(), BorderLayout.LINE_START);\n         }\n@@ -300,7 +301,7 @@ private JToolBar createToolBar() {\n         ActionMap am = tlb.getActionMap();\n         InputMap im = tlb.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n \n-        im.put(prefs.getKey(\"Close entry preview\"), \"close\");\n+        im.put(prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n         im.put(prefs.getKey(\"Print entry preview\"), \"print\");, @@ -25,6 +25,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.model.entry.BibtexEntry;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -88,7 +89,7 @@ public void actionPerformed(ActionEvent e) {\n         JPanel settings = new JPanel();\n         ActionMap am = settings.getActionMap();\n         InputMap im = settings.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(parent_.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(parent_.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         // Layout starts here., @@ -20,6 +20,7 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.search.SearchRule;\n import net.sf.jabref.logic.search.SearchRules;\n@@ -299,7 +300,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n \n         setContentContainer(main);\n \n-        searchField.getInputMap().put(Globals.prefs.getKey(\"Repeat incremental search\"),\n+        searchField.getInputMap().put(Globals.prefs.getKey(KeyBinds.REPEAT_INCREMENTAL_SEARCH),\n                 \"repeat\");\n \n         searchField.getActionMap().put(\"repeat\", new AbstractAction() {\n@@ -311,7 +312,7 @@ public void actionPerformed(ActionEvent e) {\n                 }\n             }\n         });\n-        searchField.getInputMap().put(Globals.prefs.getKey(\"Clear search\"), \"escape\");\n+        searchField.getInputMap().put(Globals.prefs.getKey(KeyBinds.CLEAR_SEARCH), \"escape\");\n         searchField.getActionMap().put(\"escape\", new AbstractAction() {\n \n             @Override, @@ -53,6 +53,7 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import ca.odell.glazedlists.BasicEventList;\n import ca.odell.glazedlists.EventList;\n import ca.odell.glazedlists.SortedList;\n@@ -141,7 +142,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = contentPane.getActionMap();\n         InputMap im = contentPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n \n         entryTable.getActionMap().put(\"copy\", new AbstractAction() {, @@ -50,6 +50,7 @@\n import net.sf.jabref.exporter.LatexFieldFormatter;\n import net.sf.jabref.gui.actions.Actions;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.model.database.KeyCollisionException;\n import net.sf.jabref.gui.undo.UndoableInsertString;\n import net.sf.jabref.gui.undo.UndoableRemoveString;\n@@ -126,22 +127,22 @@ protected boolean accept(Component c) {\n         JToolBar tlb = new JToolBar();\n         InputMap im = tlb.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n         ActionMap am = tlb.getActionMap();\n-        im.put(prefs.getKey(\"String dialog, add string\"), \"add\");\n+        im.put(prefs.getKey(KeyBinds.STRING_DIALOG_ADD_STRING), \"add\");\n         NewStringAction newStringAction = new NewStringAction(this);\n         am.put(\"add\", newStringAction);\n-        im.put(prefs.getKey(\"String dialog, remove string\"), \"remove\");\n+        im.put(prefs.getKey(KeyBinds.STRING_DIALOG_REMOVE_STRING), \"remove\");\n         RemoveStringAction removeStringAction = new RemoveStringAction(this);\n         am.put(\"remove\", removeStringAction);\n-        im.put(prefs.getKey(\"Save database\"), \"save\");\n+        im.put(prefs.getKey(KeyBinds.SAVE_DATABASE), \"save\");\n         am.put(\"save\", saveAction);\n-        im.put(prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n-        im.put(prefs.getKey(\"Help\"), \"help\");\n+        im.put(prefs.getKey(KeyBinds.HELP), \"help\");\n         am.put(\"help\", helpAction);\n-        im.put(prefs.getKey(\"Undo\"), \"undo\");\n+        im.put(prefs.getKey(KeyBinds.UNDO), \"undo\");\n         UndoAction undoAction = new UndoAction();\n         am.put(\"undo\", undoAction);\n-        im.put(prefs.getKey(\"Redo\"), \"redo\");\n+        im.put(prefs.getKey(KeyBinds.REDO), \"redo\");\n         RedoAction redoAction = new RedoAction();\n         am.put(\"redo\", redoAction);\n \n@@ -181,9 +182,9 @@ public StringTable(StringTableModel stm) {\n             cm.getColumn(0).setPreferredWidth(800);\n             cm.getColumn(1).setPreferredWidth(2000);\n             sp.getViewport().setBackground(Globals.prefs.getColor(JabRefPreferences.TABLE_BACKGROUND));\n-            getInputMap().put(frame.prefs.getKey(\"Close dialog\"), \"close\");\n+            getInputMap().put(frame.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n             getActionMap().put(\"close\", closeAction);\n-            getInputMap().put(frame.prefs.getKey(\"Help\"), \"help\");\n+            getInputMap().put(frame.prefs.getKey(KeyBinds.HELP), \"help\");\n             getActionMap().put(\"help\", helpAction);\n         }\n , @@ -10,6 +10,7 @@\n import javax.swing.JDialog;\n \n import net.sf.jabref.gui.IconTheme;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRef;\n@@ -28,7 +29,7 @@ public AutoLinkFilesAction() {\n         putValue(Action.SMALL_ICON, IconTheme.JabRefIcon.AUTO_FILE_LINK.getSmallIcon());\n         putValue(Action.LARGE_ICON_KEY, IconTheme.JabRefIcon.AUTO_FILE_LINK.getIcon());\n         putValue(Action.NAME, Localization.lang(\"Automatically set file links\"));\n-        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Automatically link files\"));\n+        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.AUTOMATICALLY_LINK_FILES));\n     }\n \n     @Override, @@ -217,7 +217,7 @@ private void setupFieldPanels() {\n                 .getPane(), Localization.lang(\"Show required fields\"));\n         tabs.add(reqPan);\n \n-        if (entry.getOptionalFields() != null && entry.getOptionalFields().size() >= 1) {\n+        if ((entry.getOptionalFields() != null) && (entry.getOptionalFields().size() >= 1)) {\n             EntryEditorTab optPan;\n             if (!prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n                 optPan = new EntryEditorTab(frame, panel, entry.getOptionalFields(), this,\n@@ -427,7 +427,7 @@ public JComponent getExtra(String string, final FieldEditor editor) {\n \n         // timestamp or a other field with datepicker command\n         if (fieldName.equals(Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD))\n-                || fieldExtras != null && fieldExtras.equals(\"datepicker\")) {\n+                || ((fieldExtras != null) && fieldExtras.equals(\"datepicker\"))) {\n             // double click AND datefield => insert the current date (today)\n             ((JTextArea) editor).addMouseListener(new MouseAdapter() {\n \n@@ -442,19 +442,19 @@ public void mouseClicked(MouseEvent e) {\n             });\n \n             // insert a datepicker, if the extras field contains this command\n-            if (fieldExtras != null && fieldExtras.equals(\"datepicker\")) {\n+            if ((fieldExtras != null) && fieldExtras.equals(\"datepicker\")) {\n                 DatePickerButton datePicker = new DatePickerButton(editor);\n                 return datePicker.getDatePicker();\n             }\n         }\n \n-        if (fieldExtras != null && fieldExtras.equals(\"external\")) {\n+        if ((fieldExtras != null) && fieldExtras.equals(\"external\")) {\n \n             // Add external viewer listener for \"pdf\" and \"url\" fields.\n             ((JComponent) editor).addMouseListener(new ExternalViewerListener());\n \n             return null;\n-        } else if (fieldExtras != null && fieldExtras.equals(\"journalNames\")) {\n+        } else if ((fieldExtras != null) && fieldExtras.equals(\"journalNames\")) {\n             // Add controls for switching between abbreviated and full journal\n             // names.\n             // If this field also has a FieldContentSelector, we need to combine\n@@ -479,7 +479,7 @@ public void mouseClicked(MouseEvent e) {\n \n                 return ws;\n             } else {\n-                if (fieldExtras != null && fieldExtras.equals(\"browse\")) {\n+                if ((fieldExtras != null) && fieldExtras.equals(\"browse\")) {\n                     JButton but = new JButton(Localization.lang(\"Browse\"));\n                     ((JComponent) editor).addMouseListener(new ExternalViewerListener());\n \n@@ -507,7 +507,7 @@ public void actionPerformed(ActionEvent e) {\n \n                     return but;\n \n-                } else if (fieldExtras != null && (fieldExtras.equals(\"browseDoc\") || fieldExtras.equals(\"browseDocZip\"))) {\n+                } else if ((fieldExtras != null) && (fieldExtras.equals(\"browseDoc\") || fieldExtras.equals(\"browseDocZip\"))) {\n \n                     final String ext = '.' + fieldName.toLowerCase();\n                     final OpenFileFilter off;\n@@ -519,12 +519,12 @@ public void actionPerformed(ActionEvent e) {\n \n                     return new ExternalFilePanel(frame, panel.metaData(), this, fieldName,\n                             off, editor);\n-                } else if (fieldExtras != null && fieldExtras.equals(\"url\")) {\n+                } else if ((fieldExtras != null) && fieldExtras.equals(\"url\")) {\n                     ((JComponent) editor).setDropTarget(new DropTarget((Component) editor,\n                             DnDConstants.ACTION_NONE, new SimpleUrlDragDrop(editor, storeFieldAction)));\n \n                     return null;\n-                } else if (fieldExtras != null && fieldExtras.equals(\"setOwner\")) {\n+                } else if ((fieldExtras != null) && fieldExtras.equals(\"setOwner\")) {\n                     JButton button = new JButton(Localization.lang(\"Auto\"));\n                     button.addActionListener(new ActionListener() {\n \n@@ -631,14 +631,14 @@ private void setupJTextComponent(JTextComponent textComponent) {\n         inputMap.put(prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n         actionMap.put(\"left\", switchLeftAction);\n \n-        inputMap.put(prefs.getKey(\"Help\"), \"help\");\n+        inputMap.put(prefs.getKey(KeyBinds.HELP), \"help\");\n         actionMap.put(\"help\", helpAction);\n-        inputMap.put(prefs.getKey(\"Save database\"), \"save\");\n+        inputMap.put(prefs.getKey(KeyBinds.SAVE_DATABASE), \"save\");\n         actionMap.put(\"save\", saveDatabaseAction);\n \n-        inputMap.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.NEXT_TAB), \"nexttab\");\n         actionMap.put(\"nexttab\", frame.nextTab);\n-        inputMap.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.PREVIOUS_TAB), \"prevtab\");\n         actionMap.put(\"prevtab\", frame.prevTab);\n \n \n@@ -709,7 +709,7 @@ private void scrollTo(int row) {\n      */\n     public void storeCurrentEdit() {\n         Component comp = Globals.focusListener.getFocused();\n-        if (comp == source || comp instanceof FieldEditor && this.isAncestorOf(comp)) {\n+        if ((comp == source) || ((comp instanceof FieldEditor) && this.isAncestorOf(comp))) {\n             if (comp instanceof FieldEditor) {\n                 ((FieldEditor) comp).clearAutoCompleteSuggestion();\n             }\n@@ -847,7 +847,7 @@ private boolean storeSource(boolean showError) {\n             boolean anyChanged = false;\n             boolean changedType = false;\n             boolean duplicateWarning = false;\n-            boolean emptyWarning = newKey == null || newKey.isEmpty();\n+            boolean emptyWarning = (newKey == null) || newKey.isEmpty();\n \n             if (panel.database.setCiteKeyForEntry(id, newKey)) {\n                 duplicateWarning = true;\n@@ -870,7 +870,7 @@ private boolean storeSource(boolean showError) {\n             for (String field : newEntry.getFieldNames()) {\n                 String oldValue = entry.getField(field);\n                 String newValue = newEntry.getField(field);\n-                if (oldValue == null || !oldValue.equals(newValue)) {\n+                if ((oldValue == null) || !oldValue.equals(newValue)) {\n                     // Test if the field is legally set.\n                     new LatexFieldFormatter().format(newValue, field);\n \n@@ -1052,14 +1052,14 @@ public TypeLabel(String type) {\n \n                 @Override\n                 public void mouseReleased(MouseEvent e) {\n-                    if (e.isPopupTrigger() || e.getButton() == MouseEvent.BUTTON3) {\n+                    if (e.isPopupTrigger() || (e.getButton() == MouseEvent.BUTTON3)) {\n                         handleTypeChange();\n                     }\n                 }\n \n                 @Override\n                 public void mouseClicked(MouseEvent e) {\n-                    if (e.isPopupTrigger() || e.getButton() == MouseEvent.BUTTON3) {\n+                    if (e.isPopupTrigger() || (e.getButton() == MouseEvent.BUTTON3)) {\n                         handleTypeChange();\n                     }\n                 }\n@@ -1204,14 +1204,14 @@ public void actionPerformed(ActionEvent event) {\n                     newValue = null;\n                 }\n \n-                if (oldValue == null && newValue == null\n-                        || oldValue != null && newValue != null && oldValue.equals(newValue)) {\n+                if (((oldValue == null) && (newValue == null))\n+                        || ((oldValue != null) && (newValue != null) && oldValue.equals(newValue))) {\n                     return; // No change.\n                 }\n \n                 // Make sure the key is legal:\n                 String cleaned = Util.checkLegalKey(newValue);\n-                if (cleaned != null && !cleaned.equals(newValue)) {\n+                if ((cleaned != null) && !cleaned.equals(newValue)) {\n                     JOptionPane.showMessageDialog(frame, Localization.lang(\"Invalid BibTeX key\"),\n                             Localization.lang(\"Error setting field\"), JOptionPane.ERROR_MESSAGE);\n                     textField.setInvalidBackgroundColor();\n@@ -1264,7 +1264,7 @@ public void actionPerformed(ActionEvent event) {\n                 if (toSet == null) {\n                     set = entry.getField(fieldEditor.getFieldName()) != null;\n                 } else {\n-                    set = !(entry.getField(fieldEditor.getFieldName()) != null\n+                    set = !((entry.getField(fieldEditor.getFieldName()) != null)\n                             && toSet.equals(entry.getField(fieldEditor.getFieldName())));\n                 }\n \n@@ -1373,7 +1373,7 @@ public SwitchRightAction() {\n         @Override\n         public void actionPerformed(ActionEvent e) {\n             int i = tabbed.getSelectedIndex();\n-            tabbed.setSelectedIndex(i < tabbed.getTabCount() - 1 ? i + 1 : 0);\n+            tabbed.setSelectedIndex(i < (tabbed.getTabCount() - 1) ? i + 1 : 0);\n             activateVisible();\n \n         }\n@@ -1395,7 +1395,7 @@ public void actionPerformed(ActionEvent e) {\n             int thisRow = panel.mainTable.findEntry(entry);\n             int newRow;\n \n-            if (thisRow + 1 < panel.database.getEntryCount()) {\n+            if ((thisRow + 1) < panel.database.getEntryCount()) {\n                 newRow = thisRow + 1;\n             } else if (thisRow > 0) {\n                 newRow = 0;\n@@ -1425,9 +1425,9 @@ public void actionPerformed(ActionEvent e) {\n             int thisRow = panel.mainTable.findEntry(entry);\n             int newRow;\n \n-            if (thisRow - 1 >= 0) {\n+            if ((thisRow - 1) >= 0) {\n                 newRow = thisRow - 1;\n-            } else if (thisRow != panel.database.getEntryCount() - 1) {\n+            } else if (thisRow != (panel.database.getEntryCount() - 1)) {\n                 newRow = panel.database.getEntryCount() - 1;\n             } else {\n                 return; // newRow is still -1, so we can assume the database has, @@ -34,6 +34,7 @@\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.gui.fieldeditors.TextArea;\n import net.sf.jabref.gui.fieldeditors.TextField;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.autocompleter.AutoCompleter;\n import net.sf.jabref.gui.fieldeditors.FileListEditor;\n \n@@ -107,13 +108,13 @@ private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField\n         inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n         inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n         actionMap.put(\"right\", parent.switchRightAction);\n-        inputMap.put(Globals.prefs.getKey(\"Help\"), \"help\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.HELP), \"help\");\n         actionMap.put(\"help\", parent.helpAction);\n-        inputMap.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.SAVE_DATABASE), \"save\");\n         actionMap.put(\"save\", parent.saveDatabaseAction);\n-        inputMap.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.NEXT_TAB), \"nexttab\");\n         actionMap.put(\"nexttab\", parent.frame.nextTab);\n-        inputMap.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.PREVIOUS_TAB), \"prevtab\");\n         actionMap.put(\"prevtab\", parent.frame.prevTab);\n \n         panel.setName(title);\n@@ -189,7 +190,7 @@ private void setupPanel(JabRefFrame frame, BasePanel bPanel, boolean addKeyField\n                 pan.add(extra, BorderLayout.NORTH);\n                 builder.append(pan);\n             }\n-            if ((i + 1) % fieldsPerRow == 0) {\n+            if (((i + 1) % fieldsPerRow) == 0) {\n                 builder.nextLine();\n             }\n         }\n@@ -226,7 +227,7 @@ private boolean isFieldModified(FieldEditor fieldEditor) {\n             return getEntry().getField(fieldEditor.getFieldName()) != null;\n         } else {\n             Object entryValue = getEntry().getField(fieldEditor.getFieldName());\n-            return entryValue == null || !entryValue.toString().equals(text);\n+            return (entryValue == null) || !entryValue.toString().equals(text);\n         }\n     }\n \n@@ -394,13 +395,13 @@ private void setupJTextComponent(final JComponent component, final AutoCompleteL\n         inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel\"), \"left\");\n         inputMap.put(Globals.prefs.getKey(\"Entry editor, previous panel 2\"), \"left\");\n         actionMap.put(\"right\", parent.switchRightAction);\n-        inputMap.put(Globals.prefs.getKey(\"Help\"), \"help\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.HELP), \"help\");\n         actionMap.put(\"help\", parent.helpAction);\n-        inputMap.put(Globals.prefs.getKey(\"Save database\"), \"save\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.SAVE_DATABASE), \"save\");\n         actionMap.put(\"save\", parent.saveDatabaseAction);\n-        inputMap.put(Globals.prefs.getKey(\"Next tab\"), \"nexttab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.NEXT_TAB), \"nexttab\");\n         actionMap.put(\"nexttab\", parent.frame.nextTab);\n-        inputMap.put(Globals.prefs.getKey(\"Previous tab\"), \"prevtab\");\n+        inputMap.put(Globals.prefs.getKey(KeyBinds.PREVIOUS_TAB), \"prevtab\");\n         actionMap.put(\"prevtab\", parent.frame.prevTab);\n \n , @@ -201,7 +201,7 @@ public void actionPerformed(ActionEvent evt) {\n         });\n \n         // Bind the undo action to ctl-Z\n-        getInputMap().put(Globals.prefs.getKey(\"Undo\"), \"Undo\");\n+        getInputMap().put(Globals.prefs.getKey(KeyBinds.UNDO), \"Undo\");\n \n         // Create a redo action and add it to the text component\n         getActionMap().put(\"Redo\", new AbstractAction(\"Redo\") {\n@@ -219,6 +219,6 @@ public void actionPerformed(ActionEvent evt) {\n         });\n \n         // Bind the redo action to ctl-Y\n-        getInputMap().put(Globals.prefs.getKey(\"Redo\"), \"Redo\");\n+        getInputMap().put(Globals.prefs.getKey(KeyBinds.REDO), \"Redo\");\n     }\n }, @@ -26,6 +26,7 @@\n import net.sf.jabref.JabRef;\n import net.sf.jabref.gui.IconTheme;\n import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n \n@@ -64,7 +65,7 @@ public HelpDialog(JabRefFrame bf) {\n         // Make ESC close dialog, and set shortkeys for back and forward.\n         InputMap im = tlb.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n         ActionMap am = tlb.getActionMap();\n-        im.put(bf.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(bf.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new CloseAction());\n         im.put(bf.prefs().getKey(\"Back, help dialog\"), \"left\");\n         am.put(\"left\", back);, @@ -35,6 +35,7 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.journals.Abbreviation;\n import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.journals.JournalAbbreviationRepository;\n@@ -248,7 +249,7 @@ public void actionPerformed(ActionEvent e) {\n         // Key bindings:\n         ActionMap am = getActionMap();\n         InputMap im = getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         //dialog.pack();, @@ -33,7 +33,6 @@\n     public static final String CLOSE_DATABASE = \"Close database\";\n     public static final String CLOSE_DIALOG = \"Close dialog\";\n     public static final String CLOSE_ENTRY_EDITOR = \"Close entry editor\";\n-    public static final String CLOSE_PREAMBLE_EDITOR = \"Close preamble editor\";\n     public static final String COPY = \"Copy\";\n     public static final String COPY_BIB_TE_X_KEY = \"Copy BibTeX key\";\n     public static final String COPY_BIB_TE_X_KEY_AND_TITLE = \"Copy BibTeX key and title\";\n@@ -107,8 +106,6 @@\n     public static final String SEARCH_SCIENCE_DIRECT = \"Search ScienceDirect\";\n     public static final String SELECT_ALL = \"Select all\";\n     public static final String STRING_DIALOG_ADD_STRING = \"String dialog, add string\";\n-    public static final String STRING_DIALOG_MOVE_STRING_DOWN = \"String dialog, move string down\";\n-    public static final String STRING_DIALOG_MOVE_STRING_UP = \"String dialog, move string up\";\n     public static final String STRING_DIALOG_REMOVE_STRING = \"String dialog, remove string\";\n     public static final String SWITCH_PREVIEW_LAYOUT = \"Switch preview layout\";\n     public static final String SYNCHRONIZE_FILES = \"Synchronize files\";\n@@ -153,12 +150,11 @@ public KeyBinds() {\n         keyBindMap.put(INCREMENTAL_SEARCH, \"ctrl shift F\");\n         keyBindMap.put(REPEAT_INCREMENTAL_SEARCH, \"ctrl shift F\");\n         keyBindMap.put(CLOSE_DIALOG, \"ESCAPE\");\n-        keyBindMap.put(CLOSE_ENTRY_EDITOR, \"ESCAPE\");\n-        keyBindMap.put(CLOSE_PREAMBLE_EDITOR, \"ESCAPE\");\n         keyBindMap.put(BACK_HELP_DIALOG, \"LEFT\");\n         keyBindMap.put(FORWARD_HELP_DIALOG, \"RIGHT\");\n         keyBindMap.put(PREAMBLE_EDITOR_STORE_CHANGES, \"alt S\");\n         keyBindMap.put(CLEAR_SEARCH, \"ESCAPE\");\n+        keyBindMap.put(CLOSE_ENTRY_EDITOR, \"ESCAPE\");\n         keyBindMap.put(ENTRY_EDITOR_NEXT_PANEL, \"ctrl TAB\");//\"ctrl PLUS\");//\"shift Right\");\n         keyBindMap.put(ENTRY_EDITOR_PREVIOUS_PANEL, \"ctrl shift TAB\");//\"ctrl MINUS\");\n         keyBindMap.put(ENTRY_EDITOR_NEXT_PANEL_2, \"ctrl PLUS\");//\"ctrl PLUS\");//\"shift Right\");\n@@ -168,8 +164,6 @@ public KeyBinds() {\n         keyBindMap.put(ENTRY_EDITOR_STORE_FIELD, \"alt S\");\n         keyBindMap.put(STRING_DIALOG_ADD_STRING, \"ctrl N\");\n         keyBindMap.put(STRING_DIALOG_REMOVE_STRING, \"shift DELETE\");\n-        keyBindMap.put(STRING_DIALOG_MOVE_STRING_UP, \"ctrl UP\");\n-        keyBindMap.put(STRING_DIALOG_MOVE_STRING_DOWN, \"ctrl DOWN\");\n         keyBindMap.put(SAVE_SESSION, \"F11\");\n         keyBindMap.put(LOAD_SESSION, \"F12\");\n         keyBindMap.put(COPY_CITE_BIB_TE_X_KEY, \"ctrl K\");, @@ -21,6 +21,7 @@\n import net.sf.jabref.*;\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.PreviewPanel;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n \n@@ -121,7 +122,7 @@ public void actionPerformed(ActionEvent e) {\n         };\n         ActionMap am = b.getPanel().getActionMap();\n         InputMap im = b.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n     }\n , @@ -41,6 +41,7 @@\n import net.sf.jabref.*;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n \n@@ -250,7 +251,7 @@ public void actionPerformed(ActionEvent e) {\n         JPanel mainPanel = new JPanel();\n         ActionMap am = mainPanel.getActionMap();\n         InputMap im = mainPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(frame.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(frame.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", closeAction);\n         mainPanel.setLayout(new BorderLayout());\n         mainPanel.add(sp, BorderLayout.CENTER);, @@ -30,6 +30,7 @@\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.importer.fileformat.ImportFormat;\n import net.sf.jabref.logic.l10n.Localization;\n \n@@ -88,10 +89,11 @@ public ImportAction(JabRefFrame frame, boolean openInNew) {\n                 this.frame = frame;\n                 this.openInNew = openInNew;\n \n-                putValue(Action.NAME, openInNew ? Localization.menuTitle(\"Import into new database\") :\n-                        Localization.menuTitle(\"Import into current database\"));\n-                putValue(Action.ACCELERATOR_KEY, openInNew ? Globals.prefs.getKey(\"Import into new database\") :\n-                        Globals.prefs.getKey(\"Import into current database\"));\n+                putValue(Action.NAME, openInNew ? Localization.menuTitle(\"Import into new database\") : Localization\n+                        .menuTitle(\"Import into current database\"));\n+                putValue(Action.ACCELERATOR_KEY,\n+                        openInNew ? Globals.prefs.getKey(KeyBinds.IMPORT_INTO_NEW_DATABASE) : Globals.prefs\n+                                .getKey(KeyBinds.IMPORT_INTO_CURRENT_DATABASE));\n             }\n \n             @Override, @@ -33,6 +33,7 @@\n import net.sf.jabref.exporter.SaveSession;\n import net.sf.jabref.gui.*;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.migrations.FileLinksUpgradeWarning;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -74,7 +75,7 @@ public OpenDatabaseAction(JabRefFrame frame, boolean showDialog) {\n         this.frame = frame;\n         this.showDialog = showDialog;\n         putValue(Action.NAME, Localization.menuTitle(\"Open database\"));\n-        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(\"Open database\"));\n+        putValue(Action.ACCELERATOR_KEY, Globals.prefs.getKey(KeyBinds.OPEN_DATABASE));\n         putValue(Action.SHORT_DESCRIPTION, Localization.lang(\"Open BibTeX database\"));\n     }\n , @@ -270,7 +270,7 @@ public void actionPerformed(ActionEvent e) {\n         JPanel mainPanel = new JPanel();\n         //ActionMap am = mainPanel.getActionMap();\n         //InputMap im = mainPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        //im.put(prefs.getKey(\"Close dialog\"), \"close\");\n+        //im.put(prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         //am.put(\"close\", closeAction);\n         mainPanel.setLayout(new BorderLayout());\n         mainPanel.add(sp, BorderLayout.CENTER);, @@ -20,6 +20,7 @@\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;\n@@ -106,7 +107,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n         };\n         cancel.addActionListener(cancelAction);\n         b.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)\n-                .put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+                .put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         b.getPanel().getActionMap().put(\"close\", cancelAction);\n \n     }, @@ -25,6 +25,7 @@\n import com.sun.star.container.XNameAccess;\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.JabRefFrame;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n \n import javax.swing.*;\n@@ -42,8 +43,8 @@\n     private final OOBibBase ooBase;\n     private final JDialog diag;\n     private final EventList<CitEntry> list;\n-    private JTable table;\n-    private EventTableModel<CitEntry> tableModel;\n+    private final JTable table;\n+    private final EventTableModel<CitEntry> tableModel;\n     private final JButton ok = new JButton(Localization.lang(\"Ok\"));\n     private final JButton cancel = new JButton(Localization.lang(\"Cancel\"));\n \n@@ -101,7 +102,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n         cancel.addActionListener(cancelAction);\n \n         bb.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put\n-                (Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+                (Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         bb.getPanel().getActionMap().put(\"close\", cancelAction);\n \n         table.getColumnModel().getColumn(0).setPreferredWidth(600);\n@@ -143,16 +144,16 @@ public CitEntry(String refMarkName, List<String> keys, String context, String pa\n             StringBuilder sb = new StringBuilder();\n             for (int j = 0; j < keys.size(); j++) {\n                 sb.append(keys.get(j));\n-                if (j < keys.size() - 1) {\n+                if (j < (keys.size() - 1)) {\n                     sb.append(\", \");\n                 }\n             }\n             keyString = sb.toString();\n         }\n \n         public boolean pageInfoChanged() {\n-            if (pageInfo != null && origPageInfo == null\n-                    || pageInfo == null && origPageInfo != null) {\n+            if (((pageInfo != null) && (origPageInfo == null))\n+                    || ((pageInfo == null) && (origPageInfo != null))) {\n                 return true;\n             }\n             if (pageInfo != null) {\n@@ -202,7 +203,7 @@ public Object getColumnValue(CitEntry citEntry, int i) {\n \n         @Override\n         public void mouseClicked(MouseEvent e) {\n-            if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {\n+            if ((e.getButton() == MouseEvent.BUTTON1) && (e.getClickCount() == 2)) {\n                 int row = table.rowAtPoint(e.getPoint());\n                 if (row >= 0) {\n                     SingleCitDialog scd = new SingleCitDialog(list.get(row));\n@@ -273,7 +274,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n             cancel.addActionListener(cancelAction);\n \n             b.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put\n-                    (Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+                    (Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n             b.getPanel().getActionMap().put(\"close\", cancelAction);\n \n         }, @@ -26,6 +26,7 @@\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.gui.actions.BrowseAction;\n import net.sf.jabref.gui.help.HelpAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n import net.sf.jabref.model.database.BibtexDatabase;\n@@ -459,7 +460,7 @@ public void actionPerformed(ActionEvent event) {\n         content.add(b.getPanel(), BorderLayout.CENTER);\n \n         OpenOfficePanel.frame.getTabbedPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW)\n-                .put(Globals.prefs.getKey(\"Refresh OO\"), \"Refresh OO\");\n+                .put(Globals.prefs.getKey(KeyBinds.REFRESH_OO), \"Refresh OO\");\n         OpenOfficePanel.frame.getTabbedPane().getActionMap().put(\"Refresh OO\", updateAction);\n \n         //diag.pack();, @@ -68,6 +68,7 @@\n import net.sf.jabref.external.UnknownExternalFileType;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import ca.odell.glazedlists.BasicEventList;\n import ca.odell.glazedlists.EventList;\n import ca.odell.glazedlists.SortedList;\n@@ -352,7 +353,7 @@ public void actionPerformed(ActionEvent event) {\n \n         ActionMap am = bb.getPanel().getActionMap();\n         InputMap im = bb.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelListener);\n         im.put(KeyStroke.getKeyStroke(\"ENTER\"), \"enterOk\");\n         am.put(\"enterOk\", okListener);, @@ -24,6 +24,7 @@\n import javax.swing.*;\n \n import net.sf.jabref.Globals;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import com.jgoodies.forms.builder.FormBuilder;\n@@ -183,7 +184,7 @@ public void actionPerformed(ActionEvent e) {\n         // Key bindings:\n         ActionMap am = builder.getPanel().getActionMap();\n         InputMap im = builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n     }\n , @@ -46,6 +46,7 @@\n import net.sf.jabref.JabRef;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.autocompleter.AutoCompleter;\n import net.sf.jabref.gui.AutoCompleteListener;\n import net.sf.jabref.logic.l10n.Localization;\n@@ -259,7 +260,7 @@ public void keyPressed(KeyEvent e) {\n         // Key bindings:\n         ActionMap am = builder.getPanel().getActionMap();\n         InputMap im = builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n \n         diag.getContentPane().add(builder.getPanel(), BorderLayout.CENTER);, @@ -30,6 +30,7 @@\n import net.sf.jabref.gui.BasePanel;\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.actions.MnemonicAwareAction;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.undo.NamedCompound;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n@@ -184,7 +185,7 @@ public void actionPerformed(ActionEvent e) {\n         // Key bindings:\n         ActionMap am = builder.getPanel().getActionMap();\n         InputMap im = builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n     }\n , @@ -69,6 +69,7 @@\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.MetaData;\n import net.sf.jabref.gui.OpenFileFilter;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.gui.worker.Worker;\n import net.sf.jabref.exporter.layout.Layout;\n import net.sf.jabref.exporter.layout.LayoutHelper;\n@@ -909,7 +910,7 @@ public static void updateField(BibtexEntry be, String field, String newValue, Na\n     public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane, Action cancelAction) {\n         InputMap im = rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n         ActionMap am = rootPane.getActionMap();\n-        im.put(Globals.prefs.getKey(\"Close dialog\"), \"close\");\n+        im.put(Globals.prefs.getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", cancelAction);\n     }\n , @@ -63,6 +63,7 @@\n import net.sf.jabref.gui.JabRefFrame;\n import net.sf.jabref.gui.FileDialogs;\n import net.sf.jabref.gui.MainTable;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.wizard.auximport.AuxSubGenerator;\n \n@@ -169,7 +170,7 @@ public void actionPerformed(ActionEvent arg0) {\n         // Key bindings:\n         ActionMap am = statusPanel.getActionMap();\n         InputMap im = statusPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(parent.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(parent.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n \n             private static final long serialVersionUID = -4511569209048851343L;, @@ -86,6 +86,7 @@\n \n import net.sf.jabref.exporter.LatexFieldFormatter;\n import net.sf.jabref.gui.*;\n+import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.bibtex.BibtexEntryWriter;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n@@ -172,7 +173,7 @@ private void jbInit(JabRefFrame parent) {\n         // Key bindings:\n         ActionMap am = buttons.getActionMap();\n         InputMap im = buttons.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);\n-        im.put(parent.prefs().getKey(\"Close dialog\"), \"close\");\n+        im.put(parent.prefs().getKey(KeyBinds.CLOSE_DIALOG), \"close\");\n         am.put(\"close\", new AbstractAction() {\n             @Override\n             public void actionPerformed(ActionEvent e) {, ", 185, 155, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 340], ["Oscar Gustafsson", "Some changes related to rebasing", "11/10/15, 01:08:52 PM", "Oscar Gustafsson", "ead35cc98f349fc6f7ec58f53ada46f091fdebe1", ["src/main/java/net/sf/jabref/importer/fetcher/ADSFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/DOAJFetcher.java"], "@@ -109,9 +109,9 @@ private BibtexDatabase importADSEntries(String key, OutputPrinter status) {\n                 return pr.getDatabase();\n             }\n         } catch (FileNotFoundException e) {\n-            status.showMessage(Localization.lang(\"'%0' is not a valid ADS bibcode.\", key) + \"\\n\\n\" +\n-                            Localization.lang(\"Note: A full text search is currently not supported for %0\",\n- getTitle()),\n+            status.showMessage(\n+                    Localization.lang(\"'%0' is not a valid ADS bibcode.\", key) + \"\\n\\n\" + Localization\n+                            .lang(\"Note: A full text search is currently not supported for %0\", getTitle()),\n                     getTitle(), JOptionPane.ERROR_MESSAGE);\n         } catch (IOException e) {\n             status.showMessage(Localization.lang(\"An Exception ocurred while accessing '%0'\", url) + \"\\n\\n\" + e,, @@ -127,11 +127,6 @@ public String getTitle() {\n         return \"DOAJ\";\n     }\n \n-    @Override\n-    public String getKeyName() {\n-        return \"DOAJ\";\n-    }\n-\n     @Override\n     public String getHelpPage() {\n         return \"DOAJHelp.html\";, ", 3, 8, "\"modified, modified, \"", 11], ["Oscar Gustafsson", "Replaced System.*.println with LOGGER in VM.java (including the warn function)", "11/08/15, 04:20:45 PM", "Oscar Gustafsson", "148d6f1f49addac03afb86c491bcc3586d6778ad", ["src/main/java/net/sf/jabref/bst/VM.java"], "@@ -17,7 +17,6 @@\n \n import java.io.File;\n import java.io.IOException;\n-import java.io.PrintStream;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n@@ -40,6 +39,8 @@\n import org.antlr.runtime.RecognitionException;\n import org.antlr.runtime.tree.CommonTree;\n import org.antlr.runtime.tree.Tree;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n /**\n  *\n@@ -53,7 +54,7 @@\n \n public class VM implements Warn {\n \n-    private final PrintStream out = System.out;\n+    private static final Log LOGGER = LogFactory.getLog(VM.class);\n \n \n     public class Identifier {\n@@ -652,7 +653,7 @@ public void execute(BstEntry context) {\n             @Override\n             public void execute(BstEntry context) {\n                 while (!stack.empty()) {\n-                    System.out.println(stack.pop());\n+                    LOGGER.debug(stack.pop());\n                 }\n             }\n         });\n@@ -847,12 +848,11 @@ else if (c[i - 1] == '}') {\n         buildInFunctions.put(\"top$\", new BstFunction() {\n \n             /**\n-             * Pops and prints the top of the stack on the terminal and log\n-             * file. It's useful for debugging.\n+             * Pops and prints the top of the stack to the log file. It's useful for debugging.\n              */\n             @Override\n             public void execute(BstEntry context) {\n-                System.out.println(stack.pop());\n+                LOGGER.debug(stack.pop());\n             }\n         });\n \n@@ -880,7 +880,7 @@ public void execute(BstEntry context) {\n \n             @Override\n             public void execute(BstEntry context) {\n-                out.println(\"Warning (#\" + (warning++) + \"): \" + stack.pop());\n+                LOGGER.warn(\"Warning (#\" + (warning++) + \"): \" + stack.pop());\n             }\n         });\n \n@@ -1253,10 +1253,10 @@ public void execute(BstEntry context) {\n                     }\n                 } catch (VMException e) {\n                     if (file != null) {\n-                        System.err.println(\"ERROR \" + e.getMessage() + \" (\" + file.getPath() + \":\"\n+                        LOGGER.error(\"ERROR \" + e.getMessage() + \" (\" + file.getPath() + \":\"\n                                 + c.getLine() + \")\");\n                     } else {\n-                        System.err.println(\"ERROR \" + e.getMessage() + \" (\" + c.getLine() + \")\");\n+                        LOGGER.error(\"ERROR \" + e.getMessage() + \" (\" + c.getLine() + \")\");\n                     }\n                     throw e;\n                 }\n@@ -1419,7 +1419,7 @@ private void push(Identifier identifier) {\n \n     @Override\n     public void warn(String string) {\n-        System.out.println(string);\n+        LOGGER.warn(string);\n     }\n \n }, ", 10, 10, "\"modified, \"", 20], ["Tobias Diez", "Add ability to format/cleanup the date field\n\nAdd ability to format/cleanup the date field\nRefactor cleanup and formatters code", "12/01/15, 04:16:48 PM", "Tobias Diez", "f32c21dee7cdbd0afdb0fc431a3aedb358f01673", ["CHANGELOG.md", "src/main/java/net/sf/jabref/gui/actions/CleanUpAction.java", "src/main/java/net/sf/jabref/importer/fetcher/ACMPortalFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/DOItoBibTeXFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/DiVAtoBibTeXFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/ISBNtoBibTeXFetcher.java", "src/main/java/net/sf/jabref/importer/fetcher/LengthComparator.java", "src/main/java/net/sf/jabref/logic/cleanup/FieldFormatterCleanup.java", "src/main/java/net/sf/jabref/logic/cleanup/PageNumbersCleanup.java", "src/main/java/net/sf/jabref/logic/formatter/BibtexFieldFormatters.java", "src/main/java/net/sf/jabref/logic/formatter/Formatter.java", "src/main/java/net/sf/jabref/logic/formatter/bibtexfields/DateFormatter.java", "src/main/java/net/sf/jabref/logic/formatter/bibtexfields/UnitFormatter.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/CaseKeeper.java", "src/main/java/net/sf/jabref/logic/formatter/casechanger/CaseKeeperList.java", "src/test/java/net/sf/jabref/logic/cleanup/PageNumbersCleanupTest.java", "src/test/java/net/sf/jabref/logic/formatter/bibtexfields/DateFormatterTest.java", "src/test/java/net/sf/jabref/logic/formatter/bibtexfields/PageNumbersFormatterTest.java"], "@@ -13,6 +13,7 @@ to [sourceforge feature requests](https://sourceforge.net/p/jabref/features/) by\n ## [Unreleased]\n \n ### Changed\n+- Add ability to format/cleanup the date field\n - Add support for proxy authentication via VM args and GUI settings, this implements Feature Request #388\n - Move Bibtex and Biblatex mode switcher to File menu\n - Display active edit mode (BibTeX or Biblatex) at window title, @@ -34,14 +34,13 @@\n import net.sf.jabref.gui.preftabs.ImportSettingsTab;\n import net.sf.jabref.gui.worker.AbstractWorker;\n import net.sf.jabref.importer.HTMLConverter;\n-import net.sf.jabref.importer.fetcher.CaseKeeper;\n-import net.sf.jabref.importer.fetcher.UnitFormatter;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n \n import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n-import net.sf.jabref.logic.cleanup.PageNumbersCleanup;\n+\n+import net.sf.jabref.logic.cleanup.FieldFormatterCleanup;\n import net.sf.jabref.logic.formatter.BibtexFieldFormatters;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n@@ -57,6 +56,7 @@\n     private static final String CLEANUP_DOI = \"CleanUpDOI\";\n     private static final String CLEANUP_MONTH = \"CleanUpMonth\";\n     private static final String CLEANUP_PAGENUMBERS = \"CleanUpPageNumbers\";\n+    private static final String CLEANUP_DATE = \"CleanUpDate\";\n     private static final String CLEANUP_MAKEPATHSRELATIVE = \"CleanUpMakePathsRelative\";\n     private static final String CLEANUP_RENAMEPDF = \"CleanUpRenamePDF\";\n     private static final String CLEANUP_RENAMEPDF_ONLYRELATIVE_PATHS = \"CleanUpRenamePDFonlyRelativePaths\";\n@@ -75,6 +75,7 @@ public static void putDefaults(HashMap<String, Object> defaults) {\n         defaults.put(CLEANUP_DOI, Boolean.TRUE);\n         defaults.put(CLEANUP_MONTH, Boolean.TRUE);\n         defaults.put(CLEANUP_PAGENUMBERS, Boolean.TRUE);\n+        defaults.put(CLEANUP_DATE, Boolean.TRUE);\n         defaults.put(CLEANUP_MAKEPATHSRELATIVE, Boolean.TRUE);\n         defaults.put(CLEANUP_RENAMEPDF, Boolean.TRUE);\n         defaults.put(CLEANUP_RENAMEPDF_ONLYRELATIVE_PATHS, Boolean.FALSE);\n@@ -92,6 +93,7 @@ public static void putDefaults(HashMap<String, Object> defaults) {\n     private JCheckBox cleanUpDOI;\n     private JCheckBox cleanUpMonth;\n     private JCheckBox cleanUpPageNumbers;\n+    private JCheckBox cleanUpDate;\n     private JCheckBox cleanUpMakePathsRelative;\n     private JCheckBox cleanUpRenamePDF;\n     private JCheckBox cleanUpRenamePDFonlyRelativePaths;\n@@ -162,6 +164,7 @@ private void initOptionsPanel() {\n         cleanUpDOI = new JCheckBox(Localization.lang(\"Move DOIs from note and URL field to DOI field and remove http prefix\"));\n         cleanUpMonth = new JCheckBox(Localization.lang(\"Format content of month field to #mon#\"));\n         cleanUpPageNumbers = new JCheckBox(Localization.lang(\"Ensure that page ranges are of the form num1--num2\"));\n+        cleanUpDate = new JCheckBox(Localization.lang(\"Format date field in the form yyyy-mm or yyyy-mm-dd\"));\n         cleanUpMakePathsRelative = new JCheckBox(Localization.lang(\"Make paths of linked files relative (if possible)\"));\n         cleanUpRenamePDF = new JCheckBox(Localization.lang(\"Rename PDFs to given filename format pattern\"));\n         cleanUpRenamePDF.addChangeListener(new ChangeListener() {\n@@ -181,7 +184,8 @@ public void stateChanged(ChangeEvent arg0) {\n         cleanUpBibLatex = new JCheckBox(Localization.lang(\"Convert to BibLatex format (for example, move the value of the 'journal' field to 'journaltitle')\"));\n         retrieveSettings();\n \n-        FormLayout layout = new FormLayout(\"left:15dlu,pref:grow\", \"pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref\");\n+        FormLayout layout = new FormLayout(\"left:15dlu,pref:grow\",\n+                \"pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref, pref\");\n         FormBuilder builder = FormBuilder.create().layout(layout);\n         builder.add(cleanUpHTML).xyw(1, 1, 2);\n         builder.add(cleanUpUnicode).xyw(1, 2, 2);\n@@ -192,13 +196,14 @@ public void stateChanged(ChangeEvent arg0) {\n         builder.add(cleanUpDOI).xyw(1, 7, 2);\n         builder.add(cleanUpMonth).xyw(1, 8, 2);\n         builder.add(cleanUpPageNumbers).xyw(1, 9, 2);\n-        builder.add(cleanUpUpgradeExternalLinks).xyw(1, 10, 2);\n-        builder.add(cleanUpMakePathsRelative).xyw(1, 11, 2);\n-        builder.add(cleanUpRenamePDF).xyw(1, 12, 2);\n+        builder.add(cleanUpDate).xyw(1, 10, 2);\n+        builder.add(cleanUpUpgradeExternalLinks).xyw(1, 11, 2);\n+        builder.add(cleanUpMakePathsRelative).xyw(1, 12, 2);\n+        builder.add(cleanUpRenamePDF).xyw(1, 13, 2);\n         String currentPattern = Localization.lang(\"Filename format pattern\").concat(\": \").concat(Globals.prefs.get(ImportSettingsTab.PREF_IMPORT_FILENAMEPATTERN));\n-        builder.add(new JLabel(currentPattern)).xy(2, 13);\n-        builder.add(cleanUpRenamePDFonlyRelativePaths).xy(2, 14);\n-        builder.add(cleanUpBibLatex).xyw(1, 15, 2);\n+        builder.add(new JLabel(currentPattern)).xy(2, 14);\n+        builder.add(cleanUpRenamePDFonlyRelativePaths).xy(2, 15);\n+        builder.add(cleanUpBibLatex).xyw(1, 16, 2);\n         optionsPanel = builder.build();\n \n     }\n@@ -208,6 +213,7 @@ private void retrieveSettings() {\n         cleanUpDOI.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_DOI));\n         cleanUpMonth.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_MONTH));\n         cleanUpPageNumbers.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_PAGENUMBERS));\n+        cleanUpDate.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_DATE));\n         cleanUpMakePathsRelative.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_MAKEPATHSRELATIVE));\n         cleanUpRenamePDF.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_RENAMEPDF));\n         cleanUpRenamePDFonlyRelativePaths.setSelected(Globals.prefs.getBoolean(CleanUpAction.CLEANUP_RENAMEPDF_ONLYRELATIVE_PATHS));\n@@ -226,6 +232,7 @@ private void storeSettings() {\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_DOI, cleanUpDOI.isSelected());\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_MONTH, cleanUpMonth.isSelected());\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_PAGENUMBERS, cleanUpPageNumbers.isSelected());\n+        Globals.prefs.putBoolean(CleanUpAction.CLEANUP_DATE, cleanUpDate.isSelected());\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_MAKEPATHSRELATIVE, cleanUpMakePathsRelative.isSelected());\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_RENAMEPDF, cleanUpRenamePDF.isSelected());\n         Globals.prefs.putBoolean(CleanUpAction.CLEANUP_RENAMEPDF_ONLYRELATIVE_PATHS, cleanUpRenamePDFonlyRelativePaths.isSelected());\n@@ -281,6 +288,7 @@ public void run() {\n         boolean choiceCleanUpDOI = cleanUpDOI.isSelected();\n         boolean choiceCleanUpMonth = cleanUpMonth.isSelected();\n         boolean choiceCleanUpPageNumbers = cleanUpPageNumbers.isSelected();\n+        boolean choiceCleanUpDate = cleanUpDate.isSelected();\n         boolean choiceCleanUpUpgradeExternalLinks = cleanUpUpgradeExternalLinks.isSelected();\n         boolean choiceMakePathsRelative = cleanUpMakePathsRelative.isSelected();\n         boolean choiceRenamePDF = cleanUpRenamePDF.isSelected();\n@@ -333,6 +341,10 @@ public void run() {\n             if (choiceCleanUpPageNumbers) {\n                 doCleanUpPageNumbers(entry, ce);\n             }\n+            if (choiceCleanUpDate) {\n+                doCleanUpDate(entry, ce);\n+            }\n+\n             fixWrongFileEntries(entry, ce);\n             if (choiceMakePathsRelative) {\n                 doMakePathsRelative(entry, ce);\n@@ -480,19 +492,7 @@ private static void doCleanUpMonth(BibtexEntry entry, NamedCompound ce) {\n     }\n \n     private static void doCleanUpPageNumbers(BibtexEntry entry, NamedCompound ce) {\n-        String oldValue = entry.getField(\"pages\");\n-        // not set\n-        if (oldValue == null) {\n-            return;\n-        }\n-        // run formatter\n-        new PageNumbersCleanup(entry).cleanup();\n-        // new value\n-        String newValue = entry.getField(\"pages\");\n-        // undo action\n-        if (!oldValue.equals(newValue)) {\n-            ce.addEdit(new UndoableFieldChange(entry, \"pages\", oldValue, newValue));\n-        }\n+        doFieldFormatterCleanup(entry, FieldFormatterCleanup.PAGE_NUMBERS, ce);\n     }\n \n     private static void fixWrongFileEntries(BibtexEntry entry, NamedCompound ce) {\n@@ -671,31 +671,11 @@ private static void doConvertUnicode(BibtexEntry entry, NamedCompound ce) {\n      * Adds curly brackets {} around keywords\n      */\n     private static void doConvertCase(BibtexEntry entry, NamedCompound ce) {\n-        final String field = \"title\";\n-        String oldValue = entry.getField(field);\n-        if (oldValue == null) {\n-            return;\n-        }\n-        final CaseKeeper caseKeeper = new CaseKeeper();\n-        String newValue = caseKeeper.format(oldValue);\n-        if (!oldValue.equals(newValue)) {\n-            entry.setField(field, newValue);\n-            ce.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n-        }\n+        doFieldFormatterCleanup(entry, FieldFormatterCleanup.TITLE_CASE, ce);\n     }\n \n     private static void doConvertUnits(BibtexEntry entry, NamedCompound ce) {\n-        final String field = \"title\";\n-        String oldValue = entry.getField(field);\n-        if (oldValue == null) {\n-            return;\n-        }\n-        final UnitFormatter unitFormatter = new UnitFormatter();\n-        String newValue = unitFormatter.format(oldValue);\n-        if (!oldValue.equals(newValue)) {\n-            entry.setField(field, newValue);\n-            ce.addEdit(new UndoableFieldChange(entry, field, oldValue, newValue));\n-        }\n+        doFieldFormatterCleanup(entry, FieldFormatterCleanup.TITLE_UNITS, ce);\n     }\n \n     private static void doConvertLaTeX(BibtexEntry entry, NamedCompound ce) {\n@@ -725,4 +705,30 @@ private static void doConvertLaTeX(BibtexEntry entry, NamedCompound ce) {\n         }\n     }\n \n+    /**\n+     * Format dates correctly (yyyy-mm-dd or yyyy-mm)\n+     */\n+    private static void doCleanUpDate(BibtexEntry entry, NamedCompound ce) {\n+        doFieldFormatterCleanup(entry, FieldFormatterCleanup.DATES, ce);\n+    }\n+\n+    /**\n+     * Runs the field formatter on the entry and records the change.\n+     */\n+    private static void doFieldFormatterCleanup(BibtexEntry entry, FieldFormatterCleanup cleaner, NamedCompound ce) {\n+        String oldValue = entry.getField(cleaner.getField());\n+        if (oldValue == null) {\n+            return;\n+        }\n+\n+        // run formatter\n+        cleaner.cleanup(entry);\n+\n+        String newValue = entry.getField(cleaner.getField());\n+\n+        // undo action\n+        if (!oldValue.equals(newValue)) {\n+            ce.addEdit(new UndoableFieldChange(entry, cleaner.getField(), oldValue, newValue));\n+        }\n+    }\n }, @@ -47,6 +47,8 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.gui.FetcherPreviewDialog;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n , @@ -31,6 +31,8 @@\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.DOI;\n import net.sf.jabref.util.Util;, @@ -30,6 +30,8 @@\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.util.Util;\n , @@ -42,6 +42,9 @@\n import net.sf.jabref.*;\n import net.sf.jabref.importer.*;\n import net.sf.jabref.model.entry.IdGenerator;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeperList;\n import net.sf.jabref.logic.journals.Abbreviations;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;, @@ -31,6 +31,8 @@\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.importer.ImportInspector;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n import net.sf.jabref.logic.l10n.Localization;\n \n /**, @@ -2,7 +2,7 @@\n \n import java.util.Comparator;\n \n-class LengthComparator implements Comparator<String> {\n+public class LengthComparator implements Comparator<String> {\n \n     @Override\n     public int compare(String o1, String o2) {, @@ -0,0 +1,46 @@\n+package net.sf.jabref.logic.cleanup;\n+\n+import net.sf.jabref.logic.formatter.BibtexFieldFormatters;\n+import net.sf.jabref.logic.formatter.Formatter;\n+import net.sf.jabref.logic.formatter.bibtexfields.UnitFormatter;\n+import net.sf.jabref.logic.formatter.casechanger.CaseKeeper;\n+import net.sf.jabref.model.entry.BibtexEntry;\n+\n+/**\n+ * This class formats a given entry field with the specified formatter.\n+ */\n+public class FieldFormatterCleanup {\n+    private final String field;\n+    private final Formatter formatter;\n+\n+    public static FieldFormatterCleanup PAGE_NUMBERS = new FieldFormatterCleanup(\"pages\",\n+            BibtexFieldFormatters.PAGE_NUMBERS);\n+    public static FieldFormatterCleanup DATES = new FieldFormatterCleanup(\"date\", BibtexFieldFormatters.DATE);\n+    public static FieldFormatterCleanup TITLE_CASE = new FieldFormatterCleanup(\"title\", new CaseKeeper());\n+    public static FieldFormatterCleanup TITLE_UNITS = new FieldFormatterCleanup(\"title\", new UnitFormatter());\n+\n+    public FieldFormatterCleanup(String field, Formatter formatter) {\n+        this.field = field;\n+        this.formatter = formatter;\n+    }\n+\n+    /**\n+     * Cleanup the entry by applying the formatter to the specified field.\n+     */\n+    public void cleanup(BibtexEntry entry) {\n+        String oldValue = entry.getField(field);\n+        if (oldValue == null) {\n+            // not set\n+            return;\n+        }\n+\n+        // run formatter\n+        String newValue = formatter.format(oldValue);\n+\n+        entry.setField(field, newValue);\n+    }\n+\n+    public String getField() {\n+        return field;\n+    }\n+}, @@ -1,29 +0,0 @@\n-package net.sf.jabref.logic.cleanup;\n-\n-import net.sf.jabref.logic.formatter.BibtexFieldFormatters;\n-import net.sf.jabref.model.entry.BibtexEntry;\n-\n-/**\n- * This class includes sensible defaults for consistent formatting of BibTex page numbers.\n- */\n-public class PageNumbersCleanup {\n-    private BibtexEntry entry;\n-\n-    public PageNumbersCleanup(BibtexEntry entry) {\n-        this.entry = entry;\n-    }\n-\n-    /**\n-     * Format page numbers, separated either by commas or double-hyphens.\n-     * Converts the range number format of the <code>pages</code> field to page_number--page_number.\n-     *\n-     * @see{PageNumbersFormatter}\n-     */\n-    public void cleanup() {\n-        final String field = \"pages\";\n-\n-        String value = entry.getField(field);\n-        String newValue = BibtexFieldFormatters.PAGE_NUMBERS.format(value);\n-        entry.setField(field, newValue);\n-    }\n-}, @@ -1,5 +1,6 @@\n package net.sf.jabref.logic.formatter;\n \n+import net.sf.jabref.logic.formatter.bibtexfields.DateFormatter;\n import net.sf.jabref.logic.formatter.bibtexfields.PageNumbersFormatter;\n import net.sf.jabref.logic.formatter.bibtexfields.SuperscriptFormatter;\n \n@@ -9,6 +10,7 @@\n public class BibtexFieldFormatters {\n     public static final PageNumbersFormatter PAGE_NUMBERS = new PageNumbersFormatter();\n     public static final SuperscriptFormatter SUPERSCRIPTS = new SuperscriptFormatter();\n+    public static final DateFormatter DATE = new DateFormatter();\n \n-    public static final List<Formatter> ALL = Arrays.asList(PAGE_NUMBERS, SUPERSCRIPTS);\n+    public static final List<Formatter> ALL = Arrays.asList(PAGE_NUMBERS, SUPERSCRIPTS, DATE);\n }, @@ -1,7 +1,13 @@\n package net.sf.jabref.logic.formatter;\n \n /**\n- * Formatter Interface\n+ * The Formatter is used for a Filter design-pattern. Implementing classes have to accept a String and returned a\n+ * formatted version of it.\n+ *\n+ * Example:\n+ *\n+ * \"John von Neumann\" => \"von Neumann, John\"\n+ *\n  */\n public interface Formatter {\n     /**, @@ -0,0 +1,62 @@\n+package net.sf.jabref.logic.formatter.bibtexfields;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.time.temporal.TemporalAccessor;\n+\n+/**\n+ * This class transforms date to the format yyyy-mm-dd or yyyy-mm..\n+ */\n+public class DateFormatter implements Formatter {\n+    @Override\n+    public String getName() {\n+        return \"Date\";\n+    }\n+\n+    /**\n+     * Format date string to yyyy-mm-dd or yyyy-mm. Keeps the existing String if it does not match one of the following\n+     * formats:\n+     *  \"M/y\" (covers 9/15, 9/2015, and 09/2015)\n+     *  \"MMMM (dd), yyyy\" (covers September 1, 2015 and September, 2015)\n+     *  \"yyyy-MM-dd\" (covers 2009-1-15)\n+     *  \"d.M.uuuu\" (covers 15.1.2015)\n+     */\n+    @Override\n+    public String format(String value) {\n+        TemporalAccessor parsedDate = tryParseDate(value);\n+        if (parsedDate == null) {\n+            return value;\n+        }\n+\n+        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"uuuu-MM[-dd]\");\n+        return dateFormatter.format(parsedDate);\n+    }\n+\n+    /*\n+     * Try to parse the following formats\n+     *  \"M/y\" (covers 9/15, 9/2015, and 09/2015)\n+     *  \"MMMM (dd), yyyy\" (covers September 1, 2015 and September, 2015)\n+     *  \"yyyy-MM-dd\" (covers 2009-1-15)\n+     *  \"d.M.uuuu\" (covers 15.1.2015)\n+     * The code is essentially taken from http://stackoverflow.com/questions/4024544/how-to-parse-dates-in-multiple-formats-using-simpledateformat.\n+     */\n+    private TemporalAccessor tryParseDate(String dateString) {\n+        //@formatter:off\n+        String[] formatStrings = {\n+                \"uuuu-M-d\", \"uuuu-M\",\n+                \"M/uu\", \"M/uuuu\",\n+                \"MMMM d, uuuu\", \"MMMM, uuuu\",\n+                \"d.M.uuuu\"};\n+        //@formatter:on\n+        for (String formatString : formatStrings) {\n+            try {\n+                return DateTimeFormatter.ofPattern(formatString).parse(dateString);\n+            } catch (DateTimeParseException e) {\n+            }\n+        }\n+\n+        return null;\n+    }\n+}, @@ -13,13 +13,15 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n  */\n-package net.sf.jabref.importer.fetcher;\n+package net.sf.jabref.logic.formatter.bibtexfields;\n \n import java.util.Arrays;\n \n-import net.sf.jabref.exporter.layout.LayoutFormatter;\n+import net.sf.jabref.importer.fetcher.LengthComparator;\n+import net.sf.jabref.logic.formatter.Formatter;\n+import net.sf.jabref.logic.l10n.Localization;\n \n-public class UnitFormatter implements LayoutFormatter {\n+public class UnitFormatter implements Formatter {\n \n     private static final String[] unitList = new String[] {\n             \"A\", // Ampere\n@@ -137,4 +139,9 @@ public String format(String text) {\n         return format(text, UnitFormatter.unitCombinations);\n     }\n \n+    @Override\n+    public String getName() {\n+        return Localization.lang(\"UnitFormatter\");\n+    }\n+\n }, @@ -13,13 +13,15 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.importer.fetcher;\n+package net.sf.jabref.logic.formatter.casechanger;\n \n import java.util.Arrays;\n \n-import net.sf.jabref.exporter.layout.LayoutFormatter;\n+import net.sf.jabref.importer.fetcher.LengthComparator;\n+import net.sf.jabref.logic.formatter.Formatter;\n+import net.sf.jabref.logic.l10n.Localization;\n \n-public class CaseKeeper implements LayoutFormatter {\n+public class CaseKeeper implements Formatter {\n \n     private String format(String text, String[] listOfWords) {\n         if (text == null) {\n@@ -43,4 +45,9 @@ public String format(String text) {\n         return this.format(text, list.getAll());\n     }\n \n+    @Override\n+    public String getName() {\n+        return Localization.lang(\"CaseKepper\");\n+    }\n+\n }, @@ -14,13 +14,13 @@\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n \n-package net.sf.jabref.importer.fetcher;\n+package net.sf.jabref.logic.formatter.casechanger;\n \n /**\n  * Container class for lists with keywords where the case should be kept independent of bibstyle\n- * \n+ *\n  */\n-class CaseKeeperList {\n+public class CaseKeeperList {\n \n     // @formatter:off\n     // Common words in IEEE Xplore that should always be in the given case, @@ -1,37 +0,0 @@\n-package net.sf.jabref.logic.cleanup;\n-\n-import net.sf.jabref.model.entry.BibtexEntry;\n-import org.junit.After;\n-import org.junit.Assert;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class PageNumbersCleanupTest {\n-    private BibtexEntry entry;\n-\n-    @Before\n-    public void setUp() {\n-        entry = new BibtexEntry();\n-    }\n-\n-    @After\n-    public void teardown() {\n-        entry = null;\n-    }\n-\n-    @Test\n-    public void formatPageNumbers() {\n-        entry.setField(\"pages\", \"1-2\");\n-        new PageNumbersCleanup(entry).cleanup();\n-\n-        Assert.assertEquals(\"1--2\", entry.getField(\"pages\"));\n-    }\n-\n-    @Test\n-    public void onlyFormatPageNumbersField() {\n-        entry.setField(\"otherfield\", \"1-2\");\n-        new PageNumbersCleanup(entry).cleanup();\n-\n-        Assert.assertEquals(\"1-2\", entry.getField(\"otherfield\"));\n-    }\n-}\n\\ No newline at end of file, @@ -0,0 +1,145 @@\n+package net.sf.jabref.logic.formatter.bibtexfields;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class DateFormatterTest {\n+\n+    @Test\n+    public void formatDateYYYYMM0D() {\n+        String formatted = new DateFormatter().format(\"2015-11-08\");\n+        Assert.assertEquals(\"2015-11-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateYYYYM0D() {\n+        String formatted = new DateFormatter().format(\"2015-1-08\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateYYYYMD() {\n+        String formatted = new DateFormatter().format(\"2015-1-8\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateYYYYMM() {\n+        String formatted = new DateFormatter().format(\"2015-11\");\n+        Assert.assertEquals(\"2015-11\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateYYYYM() {\n+        String formatted = new DateFormatter().format(\"2015-1\");\n+        Assert.assertEquals(\"2015-01\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMMYY() {\n+        String formatted = new DateFormatter().format(\"11/15\");\n+        Assert.assertEquals(\"2015-11\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMYY() {\n+        String formatted = new DateFormatter().format(\"1/15\");\n+        Assert.assertEquals(\"2015-01\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDate0MYY() {\n+        String formatted = new DateFormatter().format(\"01/15\");\n+        Assert.assertEquals(\"2015-01\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMMYYYY() {\n+        String formatted = new DateFormatter().format(\"11/2015\");\n+        Assert.assertEquals(\"2015-11\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMYYYY() {\n+        String formatted = new DateFormatter().format(\"1/2015\");\n+        Assert.assertEquals(\"2015-01\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDate0MYYYY() {\n+        String formatted = new DateFormatter().format(\"01/2015\");\n+        Assert.assertEquals(\"2015-01\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMMMDDCommaYYYY() {\n+        String formatted = new DateFormatter().format(\"November 08, 2015\");\n+        Assert.assertEquals(\"2015-11-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMMMDCommaYYYY() {\n+        String formatted = new DateFormatter().format(\"November 8, 2015\");\n+        Assert.assertEquals(\"2015-11-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateMMMCommaYYYY() {\n+        String formatted = new DateFormatter().format(\"November, 2015\");\n+        Assert.assertEquals(\"2015-11\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDate0DdotMMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"08.11.2015\");\n+        Assert.assertEquals(\"2015-11-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDdotMMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"8.11.2015\");\n+        Assert.assertEquals(\"2015-11-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDDdotMMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"15.11.2015\");\n+        Assert.assertEquals(\"2015-11-15\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDate0Ddot0MdotYYYY() {\n+        String formatted = new DateFormatter().format(\"08.01.2015\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDdot0MdotYYYY() {\n+        String formatted = new DateFormatter().format(\"8.01.2015\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDDdot0MdotYYYY() {\n+        String formatted = new DateFormatter().format(\"15.01.2015\");\n+        Assert.assertEquals(\"2015-01-15\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDate0DdotMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"08.1.2015\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDdotMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"8.1.2015\");\n+        Assert.assertEquals(\"2015-01-08\", formatted);\n+    }\n+\n+    @Test\n+    public void formatDateDDdotMdotYYYY() {\n+        String formatted = new DateFormatter().format(\"15.1.2015\");\n+        Assert.assertEquals(\"2015-01-15\", formatted);\n+    }\n+}\n\\ No newline at end of file, @@ -0,0 +1,13 @@\n+package net.sf.jabref.logic.formatter.bibtexfields;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class PageNumbersFormatterTest {\n+\n+    @Test\n+    public void formatPageNumbers() {\n+        String formatted = new PageNumbersFormatter().format(\"1-2\");\n+        Assert.assertEquals(\"1--2\", formatted);\n+    }\n+}\n\\ No newline at end of file, ", 363, 123, "\"modified, modified, modified, modified, modified, modified, modified, modified, added, removed, modified, modified, added, renamed, renamed, renamed, removed, added, added, \"", 486], ["Sascha Zeller", "Added Testcase for DT\n\nEdited Tests", "11/09/15, 07:47:31 PM", "Sascha Zeller", "1349582667554bdd153a2bc1a6d654af6900276a", ["src/test/java/net/sf/jabref/importer/fileformat/CopacImporterTest.java", "src/test/resources/net/sf/jabref/importer/fileformat/CopacImporterTest1.txt", "src/test/resources/net/sf/jabref/importer/fileformat/CopacImporterTest2.txt"], "@@ -23,6 +23,7 @@ public void setUp() throws Exception {\n         }\n     }\n \n+\n     @Rule\n     public ExpectedException thrown = ExpectedException.none();\n \n@@ -32,50 +33,47 @@ public void testImportEntriesException() throws IOException {\n         thrown.expect(IOException.class);\n \n         CopacImporter importer = new CopacImporter();\n-\n-        @SuppressWarnings(\"unused\")\n-        List<BibtexEntry> entries = importer.importEntries(null, new OutputPrinterToNull());\n+        importer.importEntries(null, new OutputPrinterToNull());\n     }\n \n     @Test\n-    public void testGetFormatName(){\n+    public void testGetFormatName() {\n         CopacImporter importer = new CopacImporter();\n-        Assert.assertEquals(\"Copac\",importer.getFormatName());\n+        Assert.assertEquals(\"Copac\", importer.getFormatName());\n     }\n \n     @Test\n-    public void testGetCLIId(){\n+    public void testGetCLIId() {\n         CopacImporter importer = new CopacImporter();\n-        Assert.assertEquals(\"cpc\",importer.getCLIId());\n+        Assert.assertEquals(\"cpc\", importer.getCLIId());\n     }\n \n     @Test\n     public void testIsRecognizedFormat() throws IOException {\n \n         CopacImporter importer = new CopacImporter();\n-        Assert.assertTrue(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"CopacImporterTest1.txt\")));\n+        Assert.assertTrue(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"CopacImporterTest1.txt\")));\n \n-        Assert.assertTrue(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"CopacImporterTest2.txt\")));\n+        Assert.assertTrue(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"CopacImporterTest2.txt\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"IEEEImport1.txt\")));\n+        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"IEEEImport1.txt\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"IsiImporterTest1.isi\")));\n+        Assert.assertFalse(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"IsiImporterTest1.isi\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"IsiImporterTestInspec.isi\")));\n+        Assert.assertFalse(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"IsiImporterTestInspec.isi\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"IsiImporterTestWOS.isi\")));\n+        Assert.assertFalse(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"IsiImporterTestWOS.isi\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"IsiImporterTestMedline.isi\")));\n+        Assert.assertFalse(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"IsiImporterTestMedline.isi\")));\n \n-        Assert.assertFalse(importer.isRecognizedFormat(CopacImporterTest.class\n-                .getResourceAsStream(\"RisImporterTest1.ris\")));\n+        Assert.assertFalse(\n+                importer.isRecognizedFormat(CopacImporterTest.class.getResourceAsStream(\"RisImporterTest1.ris\")));\n     }\n \n     @Test\n@@ -84,28 +82,29 @@ public void testImportEntries() throws IOException {\n \n         CopacImporter importer = new CopacImporter();\n \n-        List<BibtexEntry> entries = importer.importEntries(CopacImporterTest.class\n-                .getResourceAsStream(\"CopacImporterTest1.txt\"), new OutputPrinterToNull());\n+        List<BibtexEntry> entries = importer.importEntries(\n+                CopacImporterTest.class.getResourceAsStream(\"CopacImporterTest1.txt\"), new OutputPrinterToNull());\n         Assert.assertEquals(1, entries.size());\n         BibtexEntry entry = entries.get(0);\n \n-        Assert.assertEquals(\"The SIS project : software reuse with a natural language approach\", entry.getField(\"title\"));\n-        Assert.assertEquals(\n-                \"Prechelt, Lutz and Universit\u00e4t Karlsruhe. Fakult\u00e4t f\u00fcr Informatik\",\n+        Assert.assertEquals(\"The SIS project : software reuse with a natural language approach\",\n+                entry.getField(\"title\"));\n+        Assert.assertEquals(\"Prechelt, Lutz and Universit\u00e4t Karlsruhe. Fakult\u00e4t f\u00fcr Informatik\",\n                 entry.getField(\"author\"));\n         Assert.assertEquals(\"Interner Bericht ; Nr.2/92\", entry.getField(\"series\"));\n         Assert.assertEquals(\"1992\", entry.getField(\"year\"));\n         Assert.assertEquals(\"Karlsruhe :  Universitat Karlsruhe, Fakultat fur Informatik\", entry.getField(\"publisher\"));\n         Assert.assertEquals(\"Edinburgh\", entry.getField(\"HL\"));\n+        Assert.assertEquals(\"TXT\", entry.getField(\"documenttype\"));\n         Assert.assertEquals(BibtexEntryTypes.BOOK, entry.getType());\n     }\n \n     @Test\n     public void testImportEntries2() throws IOException {\n         CopacImporter importer = new CopacImporter();\n \n-        List<BibtexEntry> entries = importer.importEntries(CopacImporterTest.class\n-                .getResourceAsStream(\"CopacImporterTest2.txt\"), new OutputPrinterToNull());\n+        List<BibtexEntry> entries = importer.importEntries(\n+                CopacImporterTest.class.getResourceAsStream(\"CopacImporterTest2.txt\"), new OutputPrinterToNull());\n         Assert.assertEquals(2, entries.size());\n \n         BibtexEntry one = entries.get(0);\n@@ -117,12 +116,16 @@ public void testImportEntries2() throws IOException {\n         Assert.assertEquals(\"x, 102p, leaf : ill., form, port ; 22cm\", one.getField(\"physicaldimensions\"));\n         Assert.assertEquals(\"0407517006 (Pbk)\", one.getField(\"isbn\"));\n         Assert.assertEquals(\"Bibl.p.94-97. - Index\", one.getField(\"note\"));\n-        Assert.assertEquals(\"London Hospital and Medical College, Electronic data processing - Medicine, Computers - Hospital administration, Hospital planning, Operations research, Hospital equipment and supplies, Electronic data processing - Hospitals - Administration, Hospitals, London, London Hospital and Medical College, Records management, Applications of computer systems, to 1971\", one.getField(\"keywords\"));\n-        Assert.assertEquals(\"Aberdeen ; Birmingham ; Edinburgh ; Trinity College Dublin ; UCL (University College London)\", one.getField(\"HL\"));\n+        Assert.assertEquals(\n+                \"London Hospital and Medical College, Electronic data processing - Medicine, Computers - Hospital administration, Hospital planning, Operations research, Hospital equipment and supplies, Electronic data processing - Hospitals - Administration, Hospitals, London, London Hospital and Medical College, Records management, Applications of computer systems, to 1971\",\n+                one.getField(\"keywords\"));\n+        Assert.assertEquals(\"TXT, PDF\", one.getField(\"documenttype\"));\n+        Assert.assertEquals(\n+                \"Aberdeen ; Birmingham ; Edinburgh ; Trinity College Dublin ; UCL (University College London)\",\n+                one.getField(\"HL\"));\n \n         Assert.assertEquals(BibtexEntryTypes.BOOK, one.getType());\n \n-\n         BibtexEntry two = entries.get(1);\n \n         Assert.assertEquals(\"Real time systems : management and design\", two.getField(\"title\"));\n@@ -132,8 +135,12 @@ public void testImportEntries2() throws IOException {\n         Assert.assertEquals(\"ix, 357p : ill., forms ; 24cm\", two.getField(\"physicaldimensions\"));\n         Assert.assertEquals(\"0070844828\", two.getField(\"isbn\"));\n         Assert.assertEquals(\"Index\", two.getField(\"note\"));\n-        Assert.assertEquals(\"Real-time data processing - Management, Real time computer systems, Design\", two.getField(\"keywords\"));\n-        Assert.assertEquals(\"Aberdeen ; Birmingham ; Edinburgh ; Imperial College ; Liverpool ; Manchester ; Oxford ; Trinity College Dublin\", two.getField(\"HL\"));\n+        Assert.assertEquals(\"Real-time data processing - Management, Real time computer systems, Design\",\n+                two.getField(\"keywords\"));\n+        Assert.assertEquals(\"TXT, PDF\", two.getField(\"documenttype\"));\n+        Assert.assertEquals(\n+                \"Aberdeen ; Birmingham ; Edinburgh ; Imperial College ; Liverpool ; Manchester ; Oxford ; Trinity College Dublin\",\n+                two.getField(\"HL\"));\n \n         Assert.assertEquals(BibtexEntryTypes.BOOK, two.getType());\n     }, @@ -6,4 +6,5 @@ SE- Interner Bericht ; Nr.2/92\n PU- Karlsruhe :  Universitat Karlsruhe, Fakultat fur Informatik\n PY- 1992\n HL- Edinburgh\n+DT- TXT\n , @@ -18,6 +18,8 @@ KW- Hospitals, London, London Hospital and Medical College, Records\n     management, Applications of computer systems, to 1971\n HL- Aberdeen ; Birmingham ; Edinburgh ; Trinity College Dublin ;\n     UCL (University College London)\n+DT- TXT\n+DT- PDF\n \n \n TI- Real time systems : management and design\n@@ -32,3 +34,4 @@ KW- Real-time data processing - Management\n KW- Real time computer systems, Design\n HL- Aberdeen ; Birmingham ; Edinburgh ; Imperial College ;\n     Liverpool ; Manchester ; Oxford ; Trinity College Dublin\n+ DT- TXT, PDF, ", 46, 35, "\"modified, modified, modified, \"", 81], ["Tobias Diez", "Remove 'DONE' in comments", "11/10/15, 09:53:25 PM", "Tobias Diez", "54ca7e330682fbd5753662c040767a4fd967679e", ["src/main/java/net/sf/jabref/gui/search/SearchWorker.java"], "@@ -30,31 +30,29 @@ public SearchWorker(JabRefFrame frame) {\n \n     /**\n      * Resets the information and display of the previous search.\n-     * DONE\n      */\n     public void restart() {\n \n         incSearchPos = -1;\n-        \n+\n         if (frame.basePanel() == null) {\n             return;\n         }\n \n         if (frame.basePanel().isShowingFloatSearch()) {\n             frame.basePanel().mainTable.stopShowingFloatSearch();\n-        } \n+        }\n         if (frame.basePanel().isShowingFilterSearch()) {\n             frame.basePanel().stopShowingSearchResults();\n         }\n     }\n \n     /**\n-     * DONE\n      * Initializes a new search.\n      */\n-    public void initSearch(SearchRule rule, String query, SearchMode mode) { \n+    public void initSearch(SearchRule rule, String query, SearchMode mode) {\n         this.rule = rule;\n-        if(this.query.equals(query) && this.mode == SearchMode.Incremental) {\n+        if(this.query.equals(query) && (this.mode == SearchMode.Incremental)) {\n             // The query stayed the same and we are in incremental mode\n             // So we do not want to start the search at the next item\n             incSearchPos ++;\n@@ -66,14 +64,13 @@ public void initSearch(SearchRule rule, String query, SearchMode mode) {\n             // We changed search mode so reset information\n             restart();\n         }\n-        \n+\n         LogFactory.getLog(SearchWorker.class).debug(\"Search (\" +  this.mode.getDisplayName() + \"): \" + this.query + \" at \" + incSearchPos);\n-        \n+\n     }\n \n     /* (non-Javadoc)\n      * @see net.sf.jabref.Worker#run()\n-     * DONE\n      */\n     @Override\n     public void run() {\n@@ -95,7 +92,7 @@ public void run() {\n     }\n \n     /**\n-     * Searches for matches in all open databases. Saves the number of matches in hits. DONE\n+     * Searches for matches in all open databases. Saves the number of matches in hits.\n      */\n     private void runGlobal() {\n         // Search all databases\n@@ -113,7 +110,7 @@ private void runGlobal() {\n     }\n \n     /**\n-     * Searches for matches in the current database. Saves the number of matches in hits. DONE\n+     * Searches for matches in the current database. Saves the number of matches in hits.\n      */\n     private void runNormal() {\n         // Search the current database\n@@ -128,7 +125,7 @@ private void runNormal() {\n     }\n \n     /**\n-     * DONE Searches for the next match, beginning at incSearchPos. The index of the first match is then saved in\n+     * Searches for the next match, beginning at incSearchPos. The index of the first match is then saved in\n      * incSearchPos. Sets it to -1 if no further match was found.\n      */\n     private void runIncremental() {\n@@ -141,7 +138,7 @@ private void runIncremental() {\n             incSearchPos = -1;\n             return;\n         }\n-        \n+\n         for (int i = incSearchPos; i < entryCount; i++) {\n             BibtexEntry entry = frame.basePanel().mainTable.getEntryAt(i);\n             boolean hit = rule.applyRule(query, entry);\n@@ -157,7 +154,7 @@ private void runIncremental() {\n     }\n \n     /**\n-     * DONE Selects the next match in the entry table based on the position saved in incSearchPos.\n+     * Selects the next match in the entry table based on the position saved in incSearchPos.\n      */\n     private void updateIncremental() {\n         int entryCount = frame.basePanel().getDatabase().getEntryCount();\n@@ -172,7 +169,6 @@ private void updateIncremental() {\n \n     /* (non-Javadoc)\n      * @see net.sf.jabref.AbstractWorker#update()\n-     * DONE\n      */\n     @Override\n     public void update() {\n@@ -203,7 +199,7 @@ public void update() {\n     }\n \n     /**\n-     * Floats matches to the top of the entry table. DONE\n+     * Floats matches to the top of the entry table.\n      */\n     private void updateFloat() {\n         // TODO: Rename these things in mainTable, they are not search specific\n@@ -214,7 +210,7 @@ private void updateFloat() {\n     }\n \n     /**\n-     * Shows only matches in the entry table by removing non-hits. DONE\n+     * Shows only matches in the entry table by removing non-hits.\n      */\n     private void updateFilter() {\n         // TODO: Rename these things in basePanel, they are not search specific\n@@ -225,7 +221,7 @@ private void updateFilter() {\n     }\n \n     /**\n-     * Displays search results in a dialog window. DONE\n+     * Displays search results in a dialog window.\n      */\n     private void updateResultsInDialog() {\n         // Make sure the search dialog is instantiated and cleared:\n@@ -241,7 +237,7 @@ private void updateResultsInDialog() {\n     }\n \n     /**\n-     * Displays search results in a dialog window. DONE\n+     * Displays search results in a dialog window.\n      */\n     private void updateGlobal() {\n         // Make sure the search dialog is instantiated and cleared:\n@@ -260,7 +256,7 @@ private void updateGlobal() {\n     }\n \n     /**\n-     * Initializes the search dialog, unless it has already been instantiated. DONE \n+     * Initializes the search dialog, unless it has already been instantiated.\n      */\n     private void initSearchDialog() {\n         // TODO: Move search dialog to main table and make it non-search specific (similar to filter/float by SearchMatcher, ", 16, 20, "\"modified, \"", 36], ["Simon Harrer", "Removes option to toggle native file dialog on mac by making JabRef always use native file dialogs on mac", "11/10/15, 02:25:50 PM", "Simon Harrer", "2b04f4654eeb4b881631ec9e64983af87e5b3640", ["CHANGELOG", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/FileDialogs.java", "src/main/java/net/sf/jabref/gui/preftabs/AdvancedTab.java"], "@@ -1,5 +1,6 @@\n [master]\n     - Feature: Search DOAJ, Directory of Open Access Journals\n+    - Removes option to toggle native file dialog on mac by making JabRef always use native file dialogs on mac\n     - Removes options to set PDF and PS directories per .bib database as the general options have also been deleted.\n     - Removes option to disable renaming in FileChooser dialogs.\n     - Removes option to hide the BibTeX Code tab in the entry editor., @@ -282,7 +282,6 @@\n     public static final String IMPORT_INSPECTION_DIALOG_WIDTH = \"importInspectionDialogWidth\";\n     public static final String SIDE_PANE_WIDTH = \"sidePaneWidth\";\n     public static final String LAST_USED_EXPORT = \"lastUsedExport\";\n-    public static final String USE_NATIVE_FILE_DIALOG_ON_MAC = \"useNativeFileDialogOnMac\";\n     public static final String FLOAT_MARKED_ENTRIES = \"floatMarkedEntries\";\n     public static final String CITE_COMMAND = \"citeCommand\";\n     public static final String EXTERNAL_JOURNAL_LISTS = \"externalJournalLists\";\n@@ -739,8 +738,6 @@ private JabRefPreferences() {\n         defaults.put(CITE_COMMAND, \"\\\\cite\"); // obsoleted by the app-specific ones (not any more?)\n         defaults.put(FLOAT_MARKED_ENTRIES, Boolean.TRUE);\n \n-        defaults.put(USE_NATIVE_FILE_DIALOG_ON_MAC, Boolean.FALSE);\n-\n         defaults.put(LAST_USED_EXPORT, null);\n         defaults.put(SIDE_PANE_WIDTH, -1);\n , @@ -24,6 +24,7 @@\n \n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.logic.util.OS;\n \n /**\n  * Created by IntelliJ IDEA.\n@@ -105,8 +106,7 @@ private static Object getNewFileImpl(JFrame owner, File directory, String extens\n \n         // Added the !dirOnly condition below as a workaround to the native file dialog\n         // not supporting directory selection:\n-        if (!dirOnly && Globals.prefs.getBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC)) {\n-\n+        if (!dirOnly && OS.OS_X) {\n             return FileDialogs.getNewFileForMac(owner, directory, extension, dialogType, updateWorkingDirectory, dirOnly, off);\n         }\n \n@@ -127,7 +127,6 @@ private static Object getNewFileImpl(JFrame owner, File directory, String extens\n \n         if (dirOnly) {\n             fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n-\n         }\n \n         fc.setMultiSelectionEnabled(multipleSelection);, @@ -49,7 +49,6 @@\n     private final JabRefPreferences preferences;\n     private final JCheckBox useDefault;\n     private final JCheckBox useRemoteServer;\n-    private final JCheckBox useNativeFileDialogOnMac;\n     private final JCheckBox useIEEEAbrv;\n     private final JCheckBox biblatexMode;\n     private final JComboBox<String> className;\n@@ -73,7 +72,6 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag, JabRef jabRef) {\n \n         useDefault = new JCheckBox(Localization.lang(\"Use other look and feel\"));\n         useRemoteServer = new JCheckBox(Localization.lang(\"Listen for remote operation on port\") + ':');\n-        useNativeFileDialogOnMac = new JCheckBox(Localization.lang(\"Use native file dialog\"));\n         useIEEEAbrv = new JCheckBox(Localization.lang(\"Use IEEE LaTeX abbreviations\"));\n         biblatexMode = new JCheckBox(Localization.lang(\"BibLaTeX mode\"));\n         remoteServerPort = new JTextField();\n@@ -97,13 +95,7 @@ public AdvancedTab(JabRefPreferences prefs, HelpDialog diag, JabRef jabRef) {\n         className = new JComboBox<>(lookAndFeels.toArray(new String[lookAndFeels.size()]));\n         className.setEditable(true);\n         final JComboBox<String> clName = className;\n-        useDefault.addChangeListener(new ChangeListener() {\n-\n-            @Override\n-            public void stateChanged(ChangeEvent e) {\n-                clName.setEnabled(((JCheckBox) e.getSource()).isSelected());\n-            }\n-        });\n+        useDefault.addChangeListener(e -> clName.setEnabled(((JCheckBox) e.getSource()).isSelected()));\n         useConvertToEquation = new JCheckBox(Localization.lang(\"Prefer converting subscripts and superscripts to equations rather than text\"));\n         useCaseKeeperOnSearch = new JCheckBox(Localization.lang(\"Add {} to specified title words on search to keep the correct case\"));\n         useUnitFormatterOnSearch = new JCheckBox(Localization.lang(\"Format units by adding non-breaking separators and keeping the correct case on search\"));\n@@ -156,13 +148,6 @@ public void stateChanged(ChangeEvent e) {\n         p.add(new HelpAction(diag, GUIGlobals.remoteHelp).getIconButton());\n         builder.append(p);\n \n-        //if (Globals.OS_X) {\n-        builder.nextLine();\n-        builder.appendSeparator(Localization.lang(\"File dialog\"));\n-        builder.nextLine();\n-        builder.append(new JPanel());\n-        builder.append(useNativeFileDialogOnMac);\n-        //}\n         // IEEE\n         builder.nextLine();\n         builder.appendSeparator(Localization.lang(\"Search IEEEXplore\"));\n@@ -204,7 +189,6 @@ public void setValues() {\n         useRemoteServer.setSelected(remotePreferences.useRemoteServer());\n         oldPort = remotePreferences.getPort();\n         remoteServerPort.setText(String.valueOf(oldPort));\n-        useNativeFileDialogOnMac.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC));\n         useIEEEAbrv.setSelected(Globals.prefs.getBoolean(JabRefPreferences.USE_IEEE_ABRV));\n         oldBiblMode = Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE);\n         biblatexMode.setSelected(oldBiblMode);\n@@ -217,7 +201,6 @@ public void setValues() {\n     public void storeSettings() {\n         preferences.putBoolean(JabRefPreferences.USE_DEFAULT_LOOK_AND_FEEL, !useDefault.isSelected());\n         preferences.put(JabRefPreferences.WIN_LOOK_AND_FEEL, className.getSelectedItem().toString());\n-        preferences.putBoolean(JabRefPreferences.USE_NATIVE_FILE_DIALOG_ON_MAC, useNativeFileDialogOnMac.isSelected());\n \n         if(preferences.getBoolean(JabRefPreferences.USE_IEEE_ABRV) != useIEEEAbrv.isSelected()) {\n             preferences.putBoolean(JabRefPreferences.USE_IEEE_ABRV, useIEEEAbrv.isSelected());, ", 4, 24, "\"modified, modified, modified, modified, \"", 28], ["Oliver Kopp", "Remove translation string \"An Error occurred while fetching from INSPIRE source (%0):\"", "11/10/15, 06:02:11 PM", "Oliver Kopp", "b556423d940313659bf5a3170c0b02658bb81e72", ["src/main/java/net/sf/jabref/importer/fetcher/INSPIREFetcher.java", "src/main/resources/l10n/JabRef_da.properties", "src/main/resources/l10n/JabRef_de.properties", "src/main/resources/l10n/JabRef_en.properties", "src/main/resources/l10n/JabRef_es.properties", "src/main/resources/l10n/JabRef_fa.properties", "src/main/resources/l10n/JabRef_fr.properties", "src/main/resources/l10n/JabRef_in.properties", "src/main/resources/l10n/JabRef_it.properties", "src/main/resources/l10n/JabRef_ja.properties", "src/main/resources/l10n/JabRef_nl.properties", "src/main/resources/l10n/JabRef_no.properties", "src/main/resources/l10n/JabRef_pt_BR.properties", "src/main/resources/l10n/JabRef_ru.properties", "src/main/resources/l10n/JabRef_tr.properties", "src/main/resources/l10n/JabRef_vi.properties", "src/main/resources/l10n/JabRef_zh.properties"], "@@ -123,14 +123,9 @@ private BibtexDatabase importInspireEntries(String key, OutputPrinter frame) {\n \n                 return pr.getDatabase();\n             }\n-        } catch (IOException e) {\n+        } catch (RuntimeException | IOException e) {\n             frame.showMessage(Localization.lang(\"An Exception ocurred while accessing '%0'\", url) + \"\\n\\n\" + e,\n                     Localization.lang(getTitle()), JOptionPane.ERROR_MESSAGE);\n-        } catch (RuntimeException e) {\n-            frame.showMessage(\n-                    Localization.lang(\"An Error occurred while fetching from INSPIRE source (%0):\", new String[] {url})\n-                            + \"\\n\\n\" + e.getMessage(),\n-                    Localization.lang(getTitle()), JOptionPane.ERROR_MESSAGE);\n         }\n         return null;\n     }, @@ -1374,7 +1374,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=Kunne_ikke_\\u00e5bne_%0\n Unknown_import_format=Ukendt_importformat\n Open_INSPIRE_entry=\\u00c5bn_INSPIRE-post\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Der_skete_en_fejl_ved_hentning_fra_INSPIRE-kilde_(%0):\n Error_while_fetching_from_Inspire\\:_=Feil_ved_hentning_fra_INSPIRE:\n Web_search=Webs\\u00f8gning\n Autocomplete_names=Autofuldf\\u00f8r_navn, @@ -2126,7 +2126,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=%0_konnte_nicht_ge\\u00f6ffnet_werden\n Unknown_import_format=Unbekanntes_Import-Format\n Open_INSPIRE_entry=INSPIRE-Eintrag_\\u00f6ffnen\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Beim_Abrufen_von_INSPIRE_ist_ein_Fehler_aufgetreten_(%0)\\:\n Error_while_fetching_from_Inspire\\:_=Fehler_beim_Abrufen_von_INSPIRE\\:\n Web_search=Internetrecherche\n Autocomplete_names=Namen_automatisch_vervollst\\u00e4ndigen, @@ -2112,7 +2112,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=Could_not_open_%0\n Unknown_import_format=Unknown_import_format\n Open_INSPIRE_entry=Open_INSPIRE_entry\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:\n Error_while_fetching_from_Inspire\\:_=Error_while_fetching_from_Inspire\\:_\n Web_search=Web_search\n Autocomplete_names=Autocomplete_names, @@ -1279,7 +1279,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=No_se_puede_abrir_%0\n Unknown_import_format=Formato_de_importaci\\u00f3n_desconocido\n Open_INSPIRE_entry=Abrir_entrada_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Ocurri\\u00f3_un_error_al_recuperar_desde_fuente_INSPIRE_(%0)\\:\n Error_while_fetching_from_Inspire\\:_=Error_al_recuperar_desde_Inspire\\:\n Web_search=B\\u00fasqueda_web\n Autocomplete_names=Autocompletar_nombres, @@ -2108,7 +2108,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=\n Unknown_import_format=\n Open_INSPIRE_entry=\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\n Error_while_fetching_from_Inspire\\:_=\n Web_search=\n Autocomplete_names=, @@ -1308,7 +1308,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=%0_n'a_pas_pu_\\u00eatre_ouvert\n Unknown_import_format=Format_d'importation_inconnu\n Open_INSPIRE_entry=Ouvrir_l'entr\\u00e9e_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Une_erreur_est_survenue_lors_de_la_recherche_\\u00e0_partir_de_la_source_INSPIRE_(%0)_:\n Error_while_fetching_from_Inspire\\:_=Erreur_lors_d'une_recherche_sur_INSPIRE_:_\n Web_search=Recherche_web\n Autocomplete_names=Compl\\u00e9tion_automatique_des_noms, @@ -1281,7 +1281,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=Tidak_bisa_membuka_%0\n Unknown_import_format=Format_impor_tidak_dikenal\n Open_INSPIRE_entry=Buka_entri_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Terjadi_kesalahan_ketika_mengambik_sumber_INSPIRE_(%0)\\:\n Error_while_fetching_from_Inspire\\:_=Terjadi_kesalahan_ketika_mengambil_dari_Inspire\\:_\n Web_search=Pencarian_Web\n Autocomplete_names=Pengisian_otomatis_nama, @@ -1390,7 +1390,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=Impossiblie_aprire_%0\n Unknown_import_format=Formato_di_importazione_sconosciuto\n Open_INSPIRE_entry=Apri_la_voce_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Si_\\u00e8_verificato_un_errore_durante_il_recupero_dalla_fonte_INSPIRE_(%0):\n Error_while_fetching_from_Inspire\\:_=Errore_nel_recupero_dei_dati_da_INSPIRE:\n Web_search=Ricerca_sul_Web\n Autocomplete_names=Autocompletamento_dei_nomi, @@ -2111,7 +2111,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=%0\\u3092\\u958b\\u304f\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u305b\\u3093\\u3067\\u3057\\u305f\n Unknown_import_format=\\u672a\\u77e5\\u306e\\u8aad\\u307f\\u8fbc\\u307f\\u578b\\u3067\\u3059\n Open_INSPIRE_entry=INSPIRE\\u9805\\u76ee\\u3092\\u958b\\u304d\\u307e\\u3059\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=INSPIRE\\u30bd\\u30fc\\u30b9(%0)\\u304b\\u3089\\u306e\\u53d6\\u5f97\\u6642\\u306b\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f:\n Error_while_fetching_from_Inspire\\:_=Inspire\\u304b\\u3089\\u306e\\u53d6\\u5f97\\u6642\\u306b\\u30a8\\u30e9\\u30fc\\u767a\\u751f:\n Web_search=\\u30a6\\u30a7\\u30d6\\u691c\\u7d22\n Autocomplete_names=\\u540d\\u524d\\u3092\\u81ea\\u52d5\\u88dc\\u5b8c, @@ -2109,7 +2109,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=\n Unknown_import_format=\n Open_INSPIRE_entry=\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\n Error_while_fetching_from_Inspire\\:_=\n Web_search=\n Autocomplete_names=, @@ -2543,9 +2543,6 @@ Unknown_import_format=Ukjent_importformat\n \n Open_INSPIRE_entry=\\u00c5pne_INSPIRE-enhet\n \n-\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=En_feil_inntraff_ved_nedlasting_fra_INSPIRE_source_(%0):\n-\n Error_while_fetching_from_Inspire\\:_=Feil_ved_nedlasting_fra_INSPIRE:\n \n Web_search=Webs\\u00f8k, @@ -1280,7 +1280,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=N\\u00e3o_foi_poss\\u00edvel_abrir_%0\n Unknown_import_format=Formato_de_importa\\u00e7\\u00e3o_desconhecido\n Open_INSPIRE_entry=Abrir_refer\\u00eancia_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=Um_erro_ocorreu_ao_pesquisar_na_fonte_INSPIRE_(%0)\\:\n Error_while_fetching_from_Inspire\\:_=Erro_ao_buscar_no_Inspire\\:\n Web_search=Pesquisa_na_Web\n Autocomplete_names=Autocompletar_nomes, @@ -2108,7 +2108,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=\u041d\u0435_\u0443\u0434\u0430\u043b\u043e\u0441\u044c_\u043e\u0442\u043a\u0440\u044b\u0442\u044c_%0\n Unknown_import_format=\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439_\u0444\u043e\u0440\u043c\u0430\u0442_\u0438\u043c\u043f\u043e\u0440\u0442\u0430\n Open_INSPIRE_entry=\u041e\u0442\u043a\u0440\u044b\u0442\u044c_\u0437\u0430\u043f\u0438\u0441\u044c_INSPIRE\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\u041e\u0448\u0438\u0431\u043a\u0430_\u0432\u044b\u0431\u043e\u0440\u043a\u0438_\u0438\u0437_\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430_INSPIRE_(%0):\n Error_while_fetching_from_Inspire\\:_=\u041e\u0448\u0438\u0431\u043a\u0430_\u0432\u044b\u0431\u043e\u0440\u043a\u0438_Inspire:_\n Web_search=\u0412\u0435\u0431-\u043f\u043e\u0438\u0441\u043a\n Autocomplete_names=\u0410\u0432\u0442\u043e\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435_\u0438\u043c\u0435\u043d, @@ -1303,7 +1303,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=%0_a\\u00e7\\u0131lam\\u0131yor\n Unknown_import_format=Bilinmeyen_i\\u00e7e_aktar\\u0131m_bi\\u00e7imi\n Open_INSPIRE_entry=INSPIRE_girdisini_a\\u00e7\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=INSPIRE_kayna\\u011f\\u0131ndan_(%0)_al\\u0131n\\u0131rken_bir_hata_olu\\u015ftu\\:\n Error_while_fetching_from_Inspire\\:_=Inspire'dan_al\\u0131n\\u0131rken_hata\\:\n Web_search=A\\u011f_aramas\\u0131\n Autocomplete_names=\\u0130simeri_otomatikman_tamamla, @@ -2105,7 +2105,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=\n Unknown_import_format=\n Open_INSPIRE_entry=\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\n Error_while_fetching_from_Inspire\\:_=\n Web_search=\n Autocomplete_names=, @@ -2099,7 +2099,6 @@ If_possible,_normalize_this_list_of_names_to_conform_to_standard_BibTeX_name_for\n Could_not_open_%0=\\u65e0\\u6cd5\\u6253\\u5f00_%0\n Unknown_import_format=\\u672a\\u77e5\\u7684\\u5bfc\\u5165\\u683c\\u5f0f\n Open_INSPIRE_entry=\\u6253\\u5f00_INSPIRE_\\u8bb0\\u5f55\n-An_Error_occurred_while_fetching_from_INSPIRE_source_(%0)\\:=\n Error_while_fetching_from_Inspire\\:_=\n Web_search=\\u7f51\\u9875\\u641c\\u7d22\n Autocomplete_names=\\u81ea\\u52a8\\u8865\\u5168\\u59d3\\u540d, ", 1, 24, "\"modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 25], ["Sascha Zeller", "use try-with-ressource", "04/14/16, 03:34:26 PM", "Sascha Zeller", "07b24c5f7af485efac63338de55e5dc3349d27ec", ["src/test/java/net/sf/jabref/importer/fileformat/CopacImporterTest.java", "src/test/java/net/sf/jabref/importer/fileformat/CopacImporterTestFiles.java"], "@@ -3,12 +3,13 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.Paths;\n+import java.nio.file.DirectoryStream;\n import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.importer.OutputPrinterToNull;\n@@ -30,8 +31,9 @@\n      */\n     public List<String> getTestFiles() throws IOException {\n         List<String> files = new ArrayList<>();\n-        Files.newDirectoryStream(Paths.get(FILEFORMAT_PATH)).forEach(n -> files.add(n.getFileName().toString()));\n-\n+        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(FILEFORMAT_PATH))) {\n+            stream.forEach(n -> files.add(n.getFileName().toString()));\n+        }\n         return files;\n     }\n , @@ -2,7 +2,9 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.file.DirectoryStream;\n import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -40,8 +42,9 @@ public void setUp() {\n     @Parameters(name = \"{0}\")\n     public static Collection<String> fileNames() throws IOException {\n         List<String> files = new ArrayList<>();\n-        Files.newDirectoryStream(Paths.get(FILEFORMAT_PATH)).forEach(n -> files.add(n.getFileName().toString()));\n-\n+        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(FILEFORMAT_PATH))) {\n+            stream.forEach(n -> files.add(n.getFileName().toString()));\n+        }\n         return files.stream().filter(n -> n.startsWith(\"CopacImporterTest\")).filter(n -> n.endsWith(\".txt\"))\n                 .collect(Collectors.toList());\n     }, ", 10, 5, "\"modified, modified, \"", 15], ["Oscar Gustafsson", "Changed default file names and added support for having both OpenOffice.org and LibreOffice installed (sort of)", "11/10/15, 10:06:55 PM", "Oscar Gustafsson", "722c29e617b9e240b722fbcffe2673df2a199a70", ["CHANGELOG.md", "src/main/java/net/sf/jabref/openoffice/AutoDetectPaths.java", "src/main/java/net/sf/jabref/openoffice/OpenOfficePanel.java"], "@@ -13,6 +13,7 @@ to [sourceforge feature requests](https://sourceforge.net/p/jabref/features/) by\n ## [Unreleased]\n \n ### Changed\n+ - Updated to support OpenOffice 4 and LibreOffice 5\n  - Better support for IEEEtranBSTCTL entries\n  - Quick selection of month in entry editor\n  - Unknown entry types will be converted to 'Misc' (was 'Other' before)., @@ -27,13 +27,13 @@\n import java.util.*;\n import java.util.List;\n \n-import com.jgoodies.forms.builder.DefaultFormBuilder;\n+import com.jgoodies.forms.builder.FormBuilder;\n import com.jgoodies.forms.layout.FormLayout;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.OS;\n \n /**\n- * Tools for automatically detecting jar and executable paths to OpenOffice.\n+ * Tools for automatically detecting jar and executable paths to OpenOffice and/or LibreOffice.\n  */\n public class AutoDetectPaths extends AbstractWorker {\n \n@@ -94,15 +94,19 @@ private boolean autoDetectPaths() {\n             if (fileSearchCancelled) {\n                 return false;\n             }\n+            List<File> sofficeFiles = new ArrayList<>();\n             for (File dir : progFiles) {\n                 sOffice = findFileDir(dir, \"soffice.exe\");\n                 if (sOffice != null) {\n-                    break;\n+                    sofficeFiles.add(sOffice);\n                 }\n             }\n             if (sOffice == null) {\n-                JOptionPane.showMessageDialog(parent, Localization.lang(\"Unable to autodetect OpenOffice installation. Please choose the installation directory manually.\"),\n-                        Localization.lang(\"Could not find OpenOffice installation\"), JOptionPane.INFORMATION_MESSAGE);\n+                JOptionPane.showMessageDialog(parent,\n+                        Localization\n+                                .lang(\"Unable to autodetect OpenOffice/LibreOffice installation. Please choose the installation directory manually.\"),\n+                        Localization.lang(\"Could not find OpenOffice/LibreOffice installation\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n                 JFileChooser jfc = new JFileChooser(new File(\"C:\\\\\"));\n                 jfc.setDialogType(JFileChooser.OPEN_DIALOG);\n                 jfc.setFileFilter(new javax.swing.filechooser.FileFilter() {\n@@ -127,6 +131,32 @@ public String getDescription() {\n                 return false;\n             }\n \n+            if (sofficeFiles.size() > 1) {\n+                // More than one file found\n+                DefaultListModel<File> mod = new DefaultListModel<>();\n+                for (File tmpfile : sofficeFiles) {\n+                    mod.addElement(tmpfile);\n+                }\n+                JList<File> fileList = new JList<>(mod);\n+                fileList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n+                fileList.setSelectedIndex(0);\n+                FormBuilder b = FormBuilder.create()\n+                        .layout(new FormLayout(\"left:pref\", \"pref, 2dlu, pref, 4dlu, pref\"));\n+                b.add(Localization.lang(\"Found more than one OpenOffice/LibreOffice executable.\")).xy(1, 1);\n+                b.add(Localization.lang(\"Please choose which one to connect to:\")).xy(1, 3);\n+                b.add(fileList).xy(1, 5);\n+                int answer = JOptionPane.showConfirmDialog(null, b.getPanel(),\n+                        Localization.lang(\"Choose OpenOffice/LibreOffice executable\"),\n+                        JOptionPane.OK_CANCEL_OPTION);\n+                if (answer == JOptionPane.CANCEL_OPTION) {\n+                    return false;\n+                } else {\n+                    sOffice = fileList.getSelectedValue();\n+                }\n+\n+            } else {\n+                sOffice = sofficeFiles.get(0);\n+            }\n             Globals.prefs.put(\"ooExecutablePath\", new File(sOffice, \"soffice.exe\").getPath());\n             File unoil = findFileDir(sOffice.getParentFile(), \"unoil.jar\");\n             if (fileSearchCancelled) {\n@@ -228,11 +258,15 @@ else if (inOpt != null) { // Found both\n                 ButtonGroup bg = new ButtonGroup();\n                 bg.add(optRB);\n                 bg.add(usrRB);\n-                DefaultFormBuilder b = new DefaultFormBuilder(new FormLayout(\"left:pref\", \"\"));\n-                b.append(Localization.lang(\"Found more than one OpenOffice executable. Please choose which one to connect to:\"));\n-                b.append(optRB);\n-                b.append(usrRB);\n-                int answer = JOptionPane.showConfirmDialog(null, b.getPanel(), Localization.lang(\"Choose OpenOffice executable\"),\n+                FormBuilder b = FormBuilder.create()\n+                        .layout(new FormLayout(\"left:pref\", \"pref, 2dlu, pref, 2dlu, pref \"));\n+                b.add(Localization\n+                        .lang(\"Found more than one OpenOffice/LibreOffice executable. Please choose which one to connect to:\"))\n+                        .xy(1, 1);\n+                b.add(optRB).xy(1, 3);\n+                b.add(usrRB).xy(1, 5);\n+                int answer = JOptionPane.showConfirmDialog(null, b.getPanel(),\n+                        Localization.lang(\"Choose OpenOffice/LibreOffice executable\"),\n                         JOptionPane.OK_CANCEL_OPTION);\n                 if (answer == JOptionPane.CANCEL_OPTION) {\n                     return false;\n@@ -278,17 +312,31 @@ private boolean setupPreferencesForOO(String usrRoot, File inUsr) {\n      *   find the Program files dir in localized Windows installations.\n      */\n     private static java.util.List<File> findProgramFilesDir() {\n+        List<String> sourceList = new ArrayList<>();\n         List<File> dirList = new ArrayList<>();\n-        File root = new File(\"C:\\\\\");\n-        File[] dirs = root.listFiles(new FileFilter() {\n \n-            @Override\n-            public boolean accept(File file) {\n-                return file.isDirectory();\n-            }\n-        });\n-        for (File dir : dirs) {\n-            if (dir.getName().toLowerCase().equals(\"program files\") || dir.getName().toLowerCase().equals(\"program files (x86)\")) {\n+         // 64-bits first\n+        String progFiles = System.getenv(\"ProgramFiles\");\n+        if (progFiles != null) {\n+            sourceList.add(progFiles);\n+        }\n+\n+        // Then 32-bits\n+        progFiles = System.getenv(\"ProgramFiles(x86)\");\n+        if (progFiles != null) {\n+            sourceList.add(progFiles);\n+        }\n+\n+        for (String rootPath : sourceList) {\n+            File root = new File(rootPath);\n+            File[] dirs = root.listFiles(new FileFilter() {\n+\n+                @Override\n+                public boolean accept(File file) {\n+                    return file.isDirectory();\n+                }\n+            });\n+            for (File dir : dirs) {\n                 dirList.add(dir);\n             }\n         }, @@ -1,4 +1,4 @@\n-/*  Copyright (C) 2003-2011 JabRef contributors.\n+/*  Copyright (C) 2003-2015 JabRef contributors.\n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation; either version 2 of the License, or\n@@ -129,9 +129,10 @@ private OpenOfficePanel() {\n         OpenOfficePanel.update = new JButton(IconTheme.JabRefIcon.REFRESH.getSmallIcon());\n         OpenOfficePanel.update.setToolTipText(Localization.lang(\"Sync OO bibliography\"));\n         if (OS.WINDOWS) {\n-            Globals.prefs.putDefaultValue(\"ooPath\", \"C:\\\\Program Files\\\\OpenOffice.org 3\");\n-            Globals.prefs.putDefaultValue(\"ooExecutablePath\", \"C:\\\\Program Files\\\\OpenOffice.org 2.3\\\\program\\\\soffice.exe\");\n-            Globals.prefs.putDefaultValue(\"ooJarsPath\", \"C:\\\\Program Files\\\\OpenOffice.org 2.3\\\\program\\\\classes\");\n+            Globals.prefs.putDefaultValue(\"ooPath\", \"C:\\\\Program Files\\\\OpenOffice.org 4\");\n+            Globals.prefs.putDefaultValue(\"ooExecutablePath\",\n+                    \"C:\\\\Program Files\\\\OpenOffice.org 4\\\\program\\\\soffice.exe\");\n+            Globals.prefs.putDefaultValue(\"ooJarsPath\", \"C:\\\\Program Files\\\\OpenOffice.org 4\\\\program\\\\classes\");\n         } else if (OS.OS_X) {\n             Globals.prefs.putDefaultValue(\"ooExecutablePath\", \"/Applications/OpenOffice.org.app/Contents/MacOS/soffice.bin\");\n             Globals.prefs.putDefaultValue(\"ooPath\", \"/Applications/OpenOffice.org.app\");\n@@ -180,7 +181,8 @@ public JMenuItem getMenuItem() {\n         if (Globals.prefs.getBoolean(\"showOOPanel\")) {\n             manager.show(getName());\n         }\n-        JMenuItem item = new JMenuItem(Localization.lang(\"OpenOffice/LibreOffice connection\"), IconTheme.getImage(\"openoffice\"));\n+        JMenuItem item = new JMenuItem(Localization.lang(\"OpenOffice/LibreOffice connection\"),\n+                IconTheme.getImage(\"openoffice\"));\n         item.addActionListener(new ActionListener() {\n \n             @Override\n@@ -495,7 +497,6 @@ private void connect(boolean auto) {\n         String ooBaseDirectory;\n         if (auto) {\n             AutoDetectPaths adp = new AutoDetectPaths(diag);\n-\n             if (adp.runAutodetection()) {\n                 autoDetected = true;\n                 dialogOkPressed = true;\n@@ -531,31 +532,20 @@ private void connect(boolean auto) {\n             String ooJars = Globals.prefs.get(\"ooJarsPath\");\n             sOffice = Globals.prefs.get(\"ooExecutablePath\");\n \n-            boolean openOffice3 = true;//Globals.prefs.getBoolean(\"connectToOO3\");\n             if (OS.WINDOWS) {\n-                //if (openOffice3) {\n-                unoilDir = ooPath + \"\\\\Basis\\\\program\\\\classes\";\n-                ooBaseDirectory = ooPath + \"\\\\URE\\\\java\";\n+                unoilDir = ooPath + \"\\\\program\\\\classes\";\n+                ooBaseDirectory = ooPath + \"\\\\program\\\\classes\";\n                 sOffice = ooPath + \"\\\\program\\\\soffice.exe\";\n-                //}\n-\n             }\n             else if (OS.OS_X) {\n-                //if (openOffice3) {\n                 sOffice = ooPath + \"/Contents/MacOS/soffice.bin\";\n                 ooBaseDirectory = ooPath + \"/Contents/basis-link/ure-link/share/java\";\n                 unoilDir = ooPath + \"/Contents/basis-link/program/classes\";\n-                //}\n-\n             }\n             else {\n                 // Linux:\n-                //if (openOffice3) {\n                 unoilDir = ooJars + \"/program/classes\";\n                 ooBaseDirectory = ooJars + \"/ure-link/share/java\";\n-                //sOffice = ooPath+\"/program/soffice\";\n-                //}\n-\n             }\n         }\n , ", 77, 38, "\"modified, modified, modified, \"", 115], ["Stefan Kolb", "Initial author minimizer impl from textools project", "11/11/15, 04:54:43 PM", "Stefan Kolb", "48f5cd4906b93a4324bed6ec0f11dd2af2bd7cab", ["src/main/java/net/sf/jabref/logic/formatter/minifier/AuthorsMinifier.java", "src/test/java/net/sf/jabref/logic/formatter/minifier/AuthorsMinifierTest.java"], "@@ -0,0 +1,62 @@\n+package net.sf.jabref.logic.formatter.minifier;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * Replaces three or more authors with and others\n+ */\n+public class AuthorsMinifier implements Formatter {\n+    @Override\n+    public String getName() {\n+        return \"Minify authors\";\n+    }\n+\n+    /**\n+     * Replaces three or more authors with and others.\n+     *\n+     * <example>\n+     *     Stefan Kolb -> Stefan Kolb\n+     *     Stefan Kolb and Simon Harrer -> Stefan Kolb and Simon Harrer\n+     *     Stefan Kolb and Simon Harrer and J\ufffdrg Lenhard -> Stefan Kolb and others\n+     * </example>\n+     */\n+    public String format(String value) {\n+        // nothing to do\n+        if (value == null || value.isEmpty()) {\n+            return value;\n+        }\n+\n+        return abbreviateAuthor(value);\n+    }\n+\n+    private String abbreviateAuthor(String authorField) {\n+        // single author\n+        String authorSeparator = \" and \";\n+\n+        if (!authorField.contains(authorSeparator)) {\n+            return authorField;\n+        }\n+\n+        String[] authors = authorField.split(authorSeparator);\n+\n+        // trim authors\n+        for (int i = 0; i < authors.length; i++) {\n+            authors[i] = authors[i].trim();\n+        }\n+\n+        // already abbreviated\n+        if (\"others\".equals(authors[authors.length - 1]) && authors.length == 2) {\n+            return authorField;\n+        }\n+\n+        // abbreviate\n+        if (authors.length < 3) {\n+            return authorField;\n+        }\n+\n+        return authors[0] + authorSeparator + \"others\";\n+    }\n+}, @@ -0,0 +1,39 @@\n+package net.sf.jabref.logic.formatter.minifier;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AuthorsMinifierTest {\n+    private AuthorsMinifier formatter;\n+\n+    @Before\n+    public void setUp() {\n+        formatter = new AuthorsMinifier();\n+    }\n+\n+    @After\n+    public void teardown() {\n+        formatter = null;\n+    }\n+\n+    @Test\n+    public void minifyAuthorNames() {\n+        expectCorrect(\"Simon Harrer\", \"Simon Harrer\");\n+        expectCorrect(\"Simon Harrer and others\", \"Simon Harrer and others\");\n+        expectCorrect(\"Simon Harrer and J\ufffdrg Lenhard\", \"Simon Harrer and J\ufffdrg Lenhard\");\n+        expectCorrect(\"Simon Harrer and J\ufffdrg Lenhard and Guido Wirtz\", \"Simon Harrer and others\");\n+        expectCorrect(\"Simon Harrer and J\ufffdrg Lenhard and Guido Wirtz and others\", \"Simon Harrer and others\");\n+    }\n+\n+    @Test\n+    public void formatEmptyFields() {\n+        expectCorrect(\"\", \"\");\n+        expectCorrect(null, null);\n+    }\n+\n+    private void expectCorrect(String input, String expected) {\n+        Assert.assertEquals(expected, formatter.format(input));\n+    }\n+}\n\\ No newline at end of file, ", 101, 0, "\"added, added, \"", 101], ["Stefan Kolb", "Transform NameListNormalizer to a Formatter", "11/11/15, 06:59:07 PM", "Stefan Kolb", "99c758f04f1295f734da7086af62a49ea93bd9bc", ["src/main/java/net/sf/jabref/gui/fieldeditors/contextmenu/FieldTextMenu.java", "src/main/java/net/sf/jabref/importer/fetcher/CiteSeerXFetcher.java", "src/main/java/net/sf/jabref/logic/formatter/bibtexfields/AuthorsFormatter.java", "src/test/java/net/sf/jabref/logic/formatter/AuthorsFormatterTest.java", "src/test/java/net/sf/jabref/util/NameListNormalizerTest.java"], "@@ -12,7 +12,7 @@\n import net.sf.jabref.gui.actions.PasteAction;\n import net.sf.jabref.gui.fieldeditors.FieldEditor;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.NameListNormalizer;\n+import net.sf.jabref.logic.formatter.bibtexfields.AuthorsFormatter;\n \n public class FieldTextMenu implements MouseListener {\n     private final FieldEditor field;\n@@ -91,7 +91,7 @@ public void actionPerformed(ActionEvent evt) {\n                 return;\n             }\n             String input = field.getText();\n-            field.setText(NameListNormalizer.normalizeAuthorList(input));\n+            field.setText(new AuthorsFormatter().format(input));\n         }\n     }\n }, @@ -19,7 +19,7 @@\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.logic.id.IdGenerator;\n import net.sf.jabref.logic.net.URLDownload;\n-import net.sf.jabref.logic.util.strings.NameListNormalizer;\n+import net.sf.jabref.logic.formatter.bibtexfields.AuthorsFormatter;\n import net.sf.jabref.model.entry.BibtexEntry;\n \n import javax.swing.*;\n@@ -152,7 +152,7 @@ private static BibtexEntry getSingleCitation(String urlString) throws IOExceptio\n             m = CiteSeerXFetcher.authorPattern.matcher(cont);\n             if (m.find()) {\n                 String authors = m.group(1);\n-                entry.setField(\"author\", NameListNormalizer.normalizeAuthorList(authors));\n+                entry.setField(\"author\", new AuthorsFormatter().format(authors));\n             }\n \n             // Find year:, @@ -13,28 +13,36 @@\n     with this program; if not, write to the Free Software Foundation, Inc.,\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n-package net.sf.jabref.logic.util.strings;\n+package net.sf.jabref.logic.formatter.bibtexfields;\n+\n+import net.sf.jabref.logic.formatter.Formatter;\n \n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n- * Class containing method(s) for normalizing author lists to BibTeX format.\n+ * Class for normalizing author lists to BibTeX format.\n  */\n-public class NameListNormalizer {\n-\n+public class AuthorsFormatter implements Formatter {\n     private static final Pattern lastFF = Pattern.compile(\"(\\\\p{javaUpperCase}[\\\\p{javaLowerCase}]+) (\\\\p{javaUpperCase}+)\");\n     private static final Pattern lastFdotF = Pattern.compile(\"(\\\\p{javaUpperCase}[\\\\p{javaLowerCase}]+) ([\\\\. \\\\p{javaUpperCase}]+)\");\n     private static final Pattern FFlast = Pattern.compile(\"(\\\\p{javaUpperCase}+) (\\\\p{javaUpperCase}[\\\\p{javaLowerCase}]+)\");\n     private static final Pattern FdotFlast = Pattern.compile(\"([\\\\. \\\\p{javaUpperCase}]+) (\\\\p{javaUpperCase}[\\\\p{javaLowerCase}]+)\");\n     private static final Pattern SINGLE_NAME = Pattern.compile(\"(\\\\p{javaUpperCase}[\\\\p{javaLowerCase}]*)\");\n \n+    @Override\n+    public String getName() {\n+        return \"BibTex authors format\";\n+    }\n \n-    public static String normalizeAuthorList(String in) {\n+    /**\n+     *\n+     */\n+    public String format(String value) {\n         boolean andSep = false;\n         // String can contain newlines. Convert each to a space\n-        in = in.replaceAll(\"\\n\", \" \");\n-        String[] authors = in.split(\"( |,)and \", -1);\n+        value = value.replaceAll(\"\\n\", \" \");\n+        String[] authors = value.split(\"( |,)and \", -1);\n         if (authors.length > 1) {\n             andSep = true;\n         } else {\n@@ -44,11 +52,11 @@ public static String normalizeAuthorList(String in) {\n             If there is a semicolon, we go by that. If not, we assume commas, and count the parts\n             separated by commas to determine which it is.\n             */\n-            String[] authors2 = in.split(\"; \");\n+            String[] authors2 = value.split(\"; \");\n             if (authors2.length > 1) {\n                 authors = authors2;\n             } else {\n-                authors2 = in.split(\", \");\n+                authors2 = value.split(\", \");\n                 if (authors2.length > 3) { // Probably more than a single author, so we split by commas.\n                     authors = authors2;\n                 } else {\n@@ -109,7 +117,7 @@ public static String normalizeAuthorList(String in) {\n \n         StringBuilder stringBuilder = new StringBuilder();\n         for (int i = 0; i < authors.length; i++) {\n-            String norm = NameListNormalizer.normalizeName(authors[i]);\n+            String norm = AuthorsFormatter.normalizeName(authors[i]);\n             stringBuilder.append(norm);\n             if (i < authors.length - 1) {\n                 stringBuilder.append(\" and \");\n@@ -119,7 +127,7 @@ public static String normalizeAuthorList(String in) {\n     }\n \n     private static String normalizeName(String name) {\n-        Matcher matcher = NameListNormalizer.lastFF.matcher(name);\n+        Matcher matcher = AuthorsFormatter.lastFF.matcher(name);\n         if (matcher.matches()) {\n             String initials = matcher.group(2);\n             StringBuilder stringBuilder = new StringBuilder(matcher.group(1));\n@@ -133,7 +141,7 @@ private static String normalizeName(String name) {\n             }\n             return stringBuilder.toString();\n         }\n-        matcher = NameListNormalizer.lastFdotF.matcher(name);\n+        matcher = AuthorsFormatter.lastFdotF.matcher(name);\n         if (matcher.matches()) {\n             String initials = matcher.group(2).replaceAll(\"[\\\\. ]+\", \"\");\n             StringBuilder stringBuilder = new StringBuilder(matcher.group(1));\n@@ -148,7 +156,7 @@ private static String normalizeName(String name) {\n             return stringBuilder.toString();\n         }\n \n-        matcher = NameListNormalizer.FFlast.matcher(name);\n+        matcher = AuthorsFormatter.FFlast.matcher(name);\n         if (matcher.matches()) {\n             String initials = matcher.group(1);\n             StringBuilder stringBuilder = new StringBuilder(matcher.group(2));\n@@ -162,7 +170,7 @@ private static String normalizeName(String name) {\n             }\n             return stringBuilder.toString();\n         }\n-        matcher = NameListNormalizer.FdotFlast.matcher(name);\n+        matcher = AuthorsFormatter.FdotFlast.matcher(name);\n         if (matcher.matches()) {\n             String initials = matcher.group(1).replaceAll(\"[\\\\. ]+\", \"\");\n             StringBuilder stringBuilder = new StringBuilder(matcher.group(2));\n@@ -204,7 +212,7 @@ private static String normalizeName(String name) {\n                 }\n             } else {\n                 // Only a single part. Check if it looks like a name or initials:\n-                Matcher nameMatcher = NameListNormalizer.SINGLE_NAME.matcher(firstNameParts[0]);\n+                Matcher nameMatcher = AuthorsFormatter.SINGLE_NAME.matcher(firstNameParts[0]);\n                 if (nameMatcher.matches()) {\n                     stringBuilder.append(firstNameParts[0]);\n                 } else {\n@@ -226,7 +234,7 @@ private static String normalizeName(String name) {\n             String[] parts = name.split(\" +\");\n             boolean allNames = true;\n             for (String part : parts) {\n-                matcher = NameListNormalizer.SINGLE_NAME.matcher(part);\n+                matcher = AuthorsFormatter.SINGLE_NAME.matcher(part);\n                 if (!matcher.matches()) {\n                     allNames = false;\n                     break;, @@ -0,0 +1,47 @@\n+package net.sf.jabref.logic.formatter;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import net.sf.jabref.logic.formatter.bibtexfields.AuthorsFormatter;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AuthorsFormatterTest {\n+    private AuthorsFormatter formatter;\n+\n+    @Before\n+    public void setUp() {\n+        formatter = new AuthorsFormatter();\n+    }\n+\n+    @After\n+    public void teardown() {\n+        formatter = null;\n+    }\n+\n+    @Test\n+    public void testNormalizeAuthorList() {\n+        expectCorrect(\"Staci D Bilbo\", \"Bilbo, Staci D.\");\n+        expectCorrect(\"Staci D. Bilbo\", \"Staci D. Bilbo\"); // TODO strange behaviour\n+\n+        expectCorrect(\"Staci D Bilbo and Smith SH and Jaclyn M Schwarz\", \"Bilbo, Staci D. and Smith, S. H. and Schwarz, Jaclyn M.\");\n+\n+        expectCorrect(\"\u00d8lver MA\", \"\u00d8lver, M. A.\");\n+\n+        expectCorrect(\"\u00d8lver MA, GG \u00d8ie, \u00d8ie GG, Alfredsen J\u00c5\u00c5, Jo Alfredsen, Olsen Y.Y. and Olsen Y. Y.\", \"\u00d8lver, M. A. and \u00d8ie, G. G. and \u00d8ie, G. G. and Alfredsen, J. \u00c5. \u00c5. and Alfredsen, Jo and Olsen, Y. Y. and Olsen, Y. Y.\");\n+\n+        expectCorrect(\"\u00d8lver MA, GG \u00d8ie, \u00d8ie GG, Alfredsen J\u00c5\u00c5, Jo Alfredsen, Olsen Y.Y., Olsen Y. Y.\", \"\u00d8lver, M. A. and \u00d8ie, G. G. and \u00d8ie, G. G. and Alfredsen, J. \u00c5. \u00c5. and Alfredsen, Jo and Olsen, Y. Y. and Olsen, Y. Y.\");\n+\n+        expectCorrect(\"Alver, Morten and Alver, Morten O and Alfredsen, JA and Olsen, Y.Y.\", \"Alver, Morten and Alver, Morten O. and Alfredsen, J. A. and Olsen, Y. Y.\");\n+\n+        expectCorrect(\"Alver, MA; Alfredsen, JA; Olsen Y.Y.\", \"Alver, M. A. and Alfredsen, J. A. and Olsen, Y. Y.\");\n+\n+        // TODO: expectCorrect(\"Kolb, Stefan and J{\\\\\\\"o}rg Lenhard and Wirtz, Guido\", \"Kolb, Stefan and Lenhard, J{\\\\\\\"o}rg and Wirtz, Guido\");\n+    }\n+\n+    private void expectCorrect(String input, String expected) {\n+        Assert.assertEquals(expected, formatter.format(input));\n+    }\n+}\n\\ No newline at end of file, @@ -1,32 +0,0 @@\n-package net.sf.jabref.util;\n-\n-import static org.junit.Assert.assertEquals;\n-\n-import net.sf.jabref.logic.util.strings.NameListNormalizer;\n-import org.junit.Test;\n-\n-public class NameListNormalizerTest {\n-\n-    @Test\n-    public void testNormalizeAuthorList() {\n-        assertEquals(\"Bilbo, Staci D.\", NameListNormalizer.normalizeAuthorList(\"Staci D Bilbo\"));\n-        assertEquals(\"Staci D. Bilbo\", NameListNormalizer.normalizeAuthorList(\"Staci D. Bilbo\")); // TODO strange behaviour\n-\n-        assertEquals(\"Bilbo, Staci D. and Smith, S. H. and Schwarz, Jaclyn M.\", NameListNormalizer.normalizeAuthorList(\"Staci D Bilbo and Smith SH and Jaclyn M Schwarz\"));\n-\n-        assertEquals(\"\u00d8lver, M. A.\", NameListNormalizer.normalizeAuthorList(\"\u00d8lver MA\"));\n-\n-        assertEquals(\"\u00d8lver, M. A. and \u00d8ie, G. G. and \u00d8ie, G. G. and Alfredsen, J. \u00c5. \u00c5. and Alfredsen, Jo and Olsen, Y. Y. and Olsen, Y. Y.\",\n-                NameListNormalizer.normalizeAuthorList(\"\u00d8lver MA, GG \u00d8ie, \u00d8ie GG, Alfredsen J\u00c5\u00c5, Jo Alfredsen, Olsen Y.Y. and Olsen Y. Y.\"));\n-\n-        assertEquals(\"\u00d8lver, M. A. and \u00d8ie, G. G. and \u00d8ie, G. G. and Alfredsen, J. \u00c5. \u00c5. and Alfredsen, Jo and Olsen, Y. Y. and Olsen, Y. Y.\",\n-                NameListNormalizer.normalizeAuthorList(\"\u00d8lver MA, GG \u00d8ie, \u00d8ie GG, Alfredsen J\u00c5\u00c5, Jo Alfredsen, Olsen Y.Y., Olsen Y. Y.\"));\n-\n-        assertEquals(\"Alver, Morten and Alver, Morten O. and Alfredsen, J. A. and Olsen, Y. Y.\",\n-                NameListNormalizer.normalizeAuthorList(\"Alver, Morten and Alver, Morten O and Alfredsen, JA and Olsen, Y.Y.\"));\n-\n-        assertEquals(\"Alver, M. A. and Alfredsen, J. A. and Olsen, Y. Y.\",\n-                NameListNormalizer.normalizeAuthorList(\"Alver, MA; Alfredsen, JA; Olsen Y.Y.\"));\n-    }\n-\n-}\n\\ No newline at end of file, ", 75, 52, "\"modified, modified, renamed, added, removed, \"", 127], ["matthiasgeiger", "use JabRefException for prefs export", "11/12/15, 04:09:36 PM", "matthiasgeiger", "8a554b3f7b547571dab830747fec0e85b3acb677", ["src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefException.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/gui/preftabs/PreferencesDialog.java"], "@@ -400,7 +400,7 @@ private void setupLogHandlerForErrorConsole() {\n         if (cli.isPreferencesExport()) {\n             try {\n                 Globals.prefs.exportPreferences(cli.getPreferencesExport());\n-            } catch (IOException ex) {\n+            } catch (JabRefException ex) {\n                 LOGGER.error(\"Cannot export preferences\", ex);\n             }\n         }, @@ -3,7 +3,6 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-\n public class JabRefException extends Exception {\n \n     private String localizedMessage;\n@@ -30,7 +29,7 @@ public JabRefException(String message, String localizedMessage, Throwable cause)\n \n     @Override\n     public String getLocalizedMessage() {\n-        if(localizedMessage==null) {\n+        if (localizedMessage == null) {\n             LOGGER.warn(\"No localized message exception message defined. Falling back to getMessage().\");\n             return getMessage();\n         } else {, @@ -1169,8 +1169,8 @@ public void flush() {\n         if (getBoolean(MEMORY_STICK_MODE)) {\n             try {\n                 exportPreferences(\"jabref.xml\");\n-            } catch (IOException e) {\n-                LOGGER.info(\"Could not save preferences for memory stick mode: \" + e.getLocalizedMessage(), e);\n+            } catch (JabRefException e) {\n+                LOGGER.warn(\"Could not export preferences for memory stick mode: \" + e.getMessage(), e);\n             }\n         }\n         try {\n@@ -1634,12 +1634,12 @@ public void updateEntryEditorTabList() {\n      *\n      * @param filename String File to export to\n      */\n-    public void exportPreferences(String filename) throws IOException {\n+    public void exportPreferences(String filename) throws JabRefException {\n         File f = new File(filename);\n         try (OutputStream os = new FileOutputStream(f)) {\n             prefs.exportSubtree(os);\n-        } catch (BackingStoreException ex) {\n-            throw new IOException(ex);\n+        } catch (BackingStoreException | IOException ex) {\n+            throw new JabRefException(\"Could not export preferences\", Localization.lang(\"Could not export preferences\"), ex);\n         }\n     }\n , @@ -193,11 +193,10 @@ public void actionPerformed(ActionEvent e) {\n \n                     try {\n                         prefs.exportPreferences(filename);\n-                    } catch (IOException ex) {\n-                        JOptionPane.showMessageDialog(PreferencesDialog.this,\n-                                Localization.lang(\"Could not export preferences\")\n-                                + \": \" + ex.getMessage(), Localization.lang(\"Export preferences\"),\n-                                JOptionPane.ERROR_MESSAGE);\n+                    } catch (JabRefException ex) {\n+                        LOGGER.warn(ex.getMessage(), ex);\n+                        JOptionPane.showMessageDialog(PreferencesDialog.this, ex.getLocalizedMessage(),\n+                                Localization.lang(\"Export preferences\"), JOptionPane.ERROR_MESSAGE);\n                     }\n                 }\n \n@@ -222,9 +221,9 @@ public void actionPerformed(ActionEvent e) {\n                     frame.removeCachedEntryEditors();\n                     Globals.prefs.updateEntryEditorTabList();\n                 } catch (JabRefException ex) {\n+                    LOGGER.warn(ex.getMessage(), ex);\n                     JOptionPane.showMessageDialog(PreferencesDialog.this, ex.getLocalizedMessage(),\n                             Localization.lang(\"Import preferences\"), JOptionPane.ERROR_MESSAGE);\n-                    LOGGER.warn(ex.getMessage(), ex);\n                 }\n             }\n , ", 12, 14, "\"modified, modified, modified, modified, \"", 26], ["Christian Bartsch", "test EndnoteImporter", "11/11/15, 08:21:24 PM", "Christian Bartsch", "e5ae354f73552ad442125e3cd538ddd20777586e", ["src/test/java/net/sf/jabref/importer/fileformat/EndnoteImporterTest.java", "src/test/resources/net/sf/jabref/importer/fileformat/Endnote.book.example.enw", "src/test/resources/net/sf/jabref/importer/fileformat/Endnote.entries.enw", "src/test/resources/net/sf/jabref/importer/fileformat/Endnote.pattern.A.enw", "src/test/resources/net/sf/jabref/importer/fileformat/Endnote.pattern.E.enw", "src/test/resources/net/sf/jabref/importer/fileformat/Endnote.pattern.no_enw"], "@@ -0,0 +1,145 @@\n+package net.sf.jabref.importer.fileformat;\n+\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.importer.OutputPrinterToNull;\n+import net.sf.jabref.model.entry.BibEntry;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.junit.Assert.*;\n+\n+\n+public class EndnoteImporterTest {\n+\n+    EndnoteImporter importer;\n+\n+    @Before\n+    public void setUp() {\n+        Globals.prefs = JabRefPreferences.getInstance();\n+        importer = new EndnoteImporter();\n+    }\n+\n+    @Test\n+    public void testGetFormatName() {\n+        assertEquals(\"Refer/Endnote\", importer.getFormatName());\n+    }\n+\n+    @Test\n+    public void testGetCLIId() {\n+        assertEquals(\"refer\", importer.getCLIId());\n+    }\n+\n+    @Test\n+    public void testIsRecognizedFormat() throws IOException {\n+        List<String> list = Arrays.asList(\"Endnote.pattern.A.enw\", \"Endnote.pattern.E.enw\", \"Endnote.book.example.enw\");\n+\n+        for (String str : list) {\n+            try (InputStream is = EndnoteImporterTest.class.getResourceAsStream(str)) {\n+                assertTrue(importer.isRecognizedFormat(is));\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testIsRecognizedFormatReject() throws IOException {\n+        List<String> list = Arrays.asList(\"IEEEImport1.txt\", \"IsiImporterTest1.isi\", \"IsiImporterTestInspec.isi\",\n+                \"IsiImporterTestWOS.isi\", \"IsiImporterTestMedline.isi\", \"RisImporterTest1.ris\",\n+                \"Endnote.pattern.no_enw\", \"empty.pdf\", \"annotated.pdf\");\n+\n+        for (String str : list) {\n+            try (InputStream is = EndnoteImporterTest.class.getResourceAsStream(str)) {\n+                assertFalse(importer.isRecognizedFormat(is));\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testImportEntries0() throws IOException {\n+        try (InputStream is = EndnoteImporterTest.class.getResourceAsStream(\"Endnote.entries.enw\")) {\n+            List<BibEntry> bibEntries = importer.importEntries(is, new OutputPrinterToNull());\n+\n+            assertEquals(5, bibEntries.size());\n+\n+            BibEntry be0 = bibEntries.get(0);\n+            assertEquals(\"Misc\", be0.getType().getName());\n+            assertEquals(\"testA0 and testA1\", be0.getField(\"author\"));\n+            assertEquals(\"testE0 and testE1\", be0.getField(\"editor\"));\n+            assertEquals(\"testT\", be0.getField(\"title\"));\n+\n+            BibEntry be1 = bibEntries.get(1);\n+            assertEquals(\"Misc\", be1.getType().getName());\n+            assertEquals(\"testC\", be1.getField(\"address\"));\n+            assertEquals(\"testB2\", be1.getField(\"booktitle\"));\n+            assertEquals(\"test8\", be1.getField(\"date\"));\n+            assertEquals(\"test7\", be1.getField(\"edition\"));\n+            assertEquals(\"testJ\", be1.getField(\"journal\"));\n+            assertEquals(\"testD\", be1.getField(\"year\"));\n+\n+            BibEntry be2 = bibEntries.get(2);\n+            assertEquals(\"Article\", be2.getType().getName());\n+            assertEquals(\"testB0\", be2.getField(\"journal\"));\n+\n+            BibEntry be3 = bibEntries.get(3);\n+            assertEquals(\"Book\", be3.getType().getName());\n+            assertEquals(\"testI0\", be3.getField(\"publisher\"));\n+            assertEquals(\"testB1\", be3.getField(\"series\"));\n+\n+            BibEntry be4 = bibEntries.get(4);\n+            assertEquals(\"MastersThesis\", be4.getType().getName());\n+            assertEquals(\"testX\", be4.getField(\"abstract\"));\n+            assertEquals(\"testF\", be4.getField(\"bibtexkey\"));\n+            assertEquals(\"testR\", be4.getField(\"doi\"));\n+            assertEquals(\"testK\", be4.getField(\"keywords\"));\n+            assertEquals(\"testO1\", be4.getField(\"note\"));\n+            assertEquals(\"testN\", be4.getField(\"number\"));\n+            assertEquals(\"testP\", be4.getField(\"pages\"));\n+            assertEquals(\"testI1\", be4.getField(\"school\"));\n+            assertEquals(\"testU\", be4.getField(\"url\"));\n+            assertEquals(\"testV\", be4.getField(\"volume\"));\n+        }\n+    }\n+\n+    @Test\n+    public void testImportEntries1() throws IOException {\n+        String s = \"%O Artn\\\\\\\\s testO\\n%A testA,\\n%E testE0, testE1\";\n+        InputStream is = new ByteArrayInputStream(s.getBytes(StandardCharsets.UTF_8));\n+        List<BibEntry> bibEntries = importer.importEntries(is, new OutputPrinterToNull());\n+\n+        assertEquals(1, bibEntries.size());\n+\n+        BibEntry be = bibEntries.get(0);\n+        assertEquals(\"Misc\", be.getType().getName());\n+        assertEquals(\"testA\", be.getField(\"author\"));\n+        assertEquals(\"testE0, testE1\", be.getField(\"editor\"));\n+        assertEquals(\"testO\", be.getField(\"pages\"));\n+    }\n+\n+    @Test\n+    public void testImportEntriesBookExample() throws IOException {\n+        try (InputStream is = EndnoteImporterTest.class.getResourceAsStream(\"Endnote.book.example.enw\")) {\n+            List<BibEntry> bibEntries = importer.importEntries(is, new OutputPrinterToNull());\n+\n+            assertEquals(1, bibEntries.size());\n+\n+            BibEntry be = bibEntries.get(0);\n+            assertEquals(\"Book\", be.getType().getName());\n+            assertEquals(\"Heidelberg\", be.getField(\"address\"));\n+            assertEquals(\"Prei\u00dfel, Ren\u00e9 and Stachmann, Bj\u00f8rn\", be.getField(\"author\"));\n+            assertEquals(\"3., aktualisierte und erweiterte Auflage\", be.getField(\"edition\"));\n+            assertEquals(\"Versionsverwaltung\", be.getField(\"keywords\"));\n+            assertEquals(\"XX, 327\", be.getField(\"pages\"));\n+            assertEquals(\"dpunkt.verlag\", be.getField(\"publisher\"));\n+            assertEquals(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\", be.getField(\"title\"));\n+            assertEquals(\"http://d-nb.info/107601965X\", be.getField(\"url\"));\n+            assertEquals(\"2016\", be.getField(\"year\"));\n+        }\n+    }\n+}, @@ -0,0 +1,16 @@\n+%0 Book\n+%A Prei\u00dfel, Ren\u00e9\n+%A Stachmann, Bj\u00f8rn\n+%C Heidelberg\n+%D 2016\n+%I dpunkt.verlag\n+%K Versionsverwaltung\n+%L 6H 1249(3)\n+%P XX, 327 \n+%T Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\n+%U http://d-nb.info/107601965X\n+%7 3., aktualisierte und erweiterte Auflage\n+%@ 978-3-86490-311-3\n+%[ 20151028\n+%= 20151125\n+%1 UB Vaihingen (geschlossen: 24.12.15 - 3.1.16)\n\\ No newline at end of file, @@ -0,0 +1,42 @@\n+%0\n+%A testA0\n+%A testA1\n+%E testE0\n+%E testE1\n+%T testT\n+%0 Journal\n+%0 Book Section\n+%0 Book\n+%0 Edited Book\n+%0 Conference\n+%0 Report\n+%0 Review\n+%0 Thesis\n+%0 Test0\n+%7 test7\n+%C testC\n+%D testD\n+%8 test8\n+%J testJ\n+%J testJ1\n+%B testB2\n+%0 Journal\n+%B testB0\n+%0 Book\n+%B testB1\n+%I testI0\n+%0 Thesis\n+%I testI1\n+%P testP\n+%V testV\n+%N testN\n+%U testU\n+%R testRw\n+%R doi:testR\n+%O Artn \\\\s testO0\n+%O testO1\n+%K testK\n+%X testX\n+%9 Ph.D.\n+%9 Masters\n+%F testF\n\\ No newline at end of file, @@ -0,0 +1 @@\n+%A testA\n\\ No newline at end of file, @@ -0,0 +1 @@\n+%E testE\n\\ No newline at end of file, @@ -0,0 +1 @@\n+%0\n\\ No newline at end of file, ", 206, 0, "\"added, added, added, added, added, added, \"", 206], ["Oscar Gustafsson", "Moved YearUtilTest to tests", "11/11/15, 09:46:48 PM", "Oscar Gustafsson", "28877381471bfb4b34d607696799f4cc73edbd7d", ["src/test/java/net/sf/jabref/logic/util/date/YearUtilTest.java"], "None, ", 0, 0, "\"renamed, \"", 0], ["Oliver Kopp", "Replace CHANGELOG by CHANGELOG.md\n\nTryining to follow convention by keepachangelog.com", "11/12/15, 04:09:14 PM", "Oliver Kopp", "5a956182474824ad113b126bfe9a4a2fac71fa44", ["CHANGELOG", "CHANGELOG.md", "CONTRIBUTING.md"], "@@ -1,1421 +0,0 @@\n-[master]\n-    - Feature: Search DOAJ, Directory of Open Access Journals\n-    - The key bindings for searching specific databases are removed\n-    - Removes option to toggle native file dialog on mac by making JabRef always use native file dialogs on mac\n-    - Removes options to set PDF and PS directories per .bib database as the general options have also been deleted.\n-    - Removes option to disable renaming in FileChooser dialogs.\n-    - Removes option to hide the BibTeX Code tab in the entry editor.\n-    - Changes the old integrity check by improving the code base (+tests) and converting it to a simple issues table\n-    - Removes option to set a custom icon for the external file types. This is not possible anymore with the new icon font.\n-    - Added combo box in MassSetFieldAction to simplify selecting the correct field name\n-    - Fixes bug when having added and then removed a personal journal list, an exception is always shown on startup\n-    - Removes legacy options to sync files in the \"pdf\" or \"ps\" field\n-    - Removes button to merge entries and keep the old ones.\n-    - Removes non-compact rank symbols in favor of compact rank\n-    - Feature: Merge information from both entries on duplication detection\n-    - Always use import inspection dialog on import from file\n-    - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n-    - Fixed a bug in the IEEEXploreFetcher\n-    - Feature: Merge information from a DOI generated BibTex entry to an entry\n-    - Added more characters to HTML/Unicode converter\n-    - Feature: Push citations to Texmaker (SF: #318, #582)\n-    - Case changers improved to honor words (not yet more than single words) within {}\n-    - Feature: Added converters from HTML and Unicode to LaTeX on right click in text fields (#191)\n-    - Fixed bug 1282 (SourceForge) related to backslashes duplication.\n-    - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n-    - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n-    - The default language is now automatically set to the system's locale.\n-    - Use correct encoding names (#155) and replace old encoding names in bibtex files. This changes the file header.\n-    - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n-    - No longer write JabRef version to BibTex file header.\n-    - No longer add blank lines inside a bibtex entry\n-    - Feature: PDF auto download from ACS, arXiv, ScienceDirect, SpringerLink, and Google Scholar\n-    - List of authors is now auto generated `scripts/generate-authors.sh` and inserted into L10N About.html\n-    - Remove Mr.DLib support as MR.DLib will be shut down in 2015\n-    - Streamline logging API: Replace usages of java.util.logging with commons.logging\n-    - BREAKING: Remove plugin functionality.\n-    - Fixes Bug#1297: No console message on closing.\n-    - Fix bug #1285: Editing position is not lost on saving\n-    - Fix bug #194: JabRef starts again on Win XP and Win Vista\n-    - Remove support for custom icon themes. The user has to use the default one.\n-    - Bugfix: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n-    - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n-    - Fixes GH Bug #173: Personal journal abbreviation list is not loaded twice\n-    - Bugfix: Preview of external journal abbreviation list now displays the correct list\n-    - Feature: DOItoBibTeX fetcher now also handles HTTP URLs\n-    - Feature: \"Normalize to BibTeX name format\" also removes newlines\n-    - Tweak of preference defaults\n-      - Autolink requires that the filename starts with the given BibTeX key and the default filename patterns is key followed by title\n-      - Default sorting changed\n-      - Default label pattern changed from [auth][year] to [authors3][year]\n-    - Remove support to the move-to-SysTray action\n-    - Feature: case changers now leave protected areas (enclosed with curly brakets) alone\n-    - Fix #223: Window is displayed in visible area even when having multiple screens\n-    - Localization tweaks: \"can not\" -> \"cannot\" and \"file name\" -> \"filename\"\n-    - Bugfix: When reconfiguring the BibTeX key generator, changes are applied instantly without requiring a restart of JabRef\n-    - BREAKING: The BibTeX key generator settings from previous versions are lost\n-    - BREAKING: LabelPatterns [auth.etal], [authEtAl], [authors], [authorsN], [authorLast] and more to omit spaces and commas (and work as described at http://jabref.sourceforge.net/help/LabelPatterns.php)\n-    - BREAKING: [keywordN] returns the Nth keyword (as described in the help) and not the first N keywords\n-    - BREAKING: If field consists of blanks only or an emtpy string, it is not written at all\n-    - Feature: new LabelPattern [authFirstFull] returning the last name of the first author and also a \"van\" or \"von\" if it exists\n-    - Feature: all new lines when writing an entry are obeying the globally configured new line (File -> newline separator). Affects fields: abstract and review\n-    - Feature: [veryShortTitle] and [shortTitle] also skip words like \"in\", \"among\", \"before\", ...\n-    - Feature: New LabelPattern [keywordsN], where N is optional. Returns the first N keywords. If no N is specified (\"[keywords]\"), all keywords are returned. Spaces are removed.\n-    - Removes support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.\n-    - Removes \"edit preamble\" from toolbar\n-    - Fix #250: No hard line breaks after 70 chars in serialized JabRef meta data\n-    - Update supported LookAndFeels\n-    - Fix sourceforge bug 1296: External links in the help open in the standard browser\n-    - Show replaced journal abbreviations on console\n-2.11\n-    - Backports from 2.80: Bug fix in #193: sometimes IEEEXplore stalls during fetch\n-    - Backports from 2.80: Fixes #194 and #244: JabRef starts again on Win XP and Win Vista\n-    - Backports from 2.80: Fixes #103: JDialog for auto set links is opened and closed correctly\n-    - Backports from 2.80: Define a default lookAndFeel for Mac OS X\n-    - Do not show replaced journal abbreviations on console\n-2.11 beta 4\n-    - Add of Persian localization (by Behrouz Javanmardi)\n-    - Backport from 2.80: Fixes #115: Remove whitespaces in serialization\n-    - Backport from 2.80: Fixes Bug#1297: No console message on closing.\n-    - Backport from 2.80: Fixes Bug#1290: Spanish localization was not displayed correctly.\n-    - Backport from 2.80: Fixes #144: Unreadable text in Russian installer\n-    - Fix for bugs #1221 and #1261 (also partly #1243): order of fields in customized entry types no longer gets destroyed by the entry editor \n-    - \"ISBN to BibTeX\" fetcher now uses eBook.de's API (fixes bug #1241)\n-    - BREAKING: Search groups now use same search logic as UI --> avoids confusion when converting a UI search into a search group. Behaviour before: contains/regex check of whole search string; behaviour after: contains/regex check of every word of the search string. The new search is more powerful and con simulate the old behaviour: enclose everything in double quotes, e.g., process language --> \"process language\".\n-    - Fix for bug #1276: OO styles do not consider editor fields anymore for sorting\n-    - Fix for bug #1288: Emacs keybindings: Rebinding of C-f can now be configured\n-    - Special fields: .bib files edited with 2.11 beta 3 are not compatible with this release. Other versions are not affected.\n-    - JabRef metadata (\"jabref-meta\") @comments are now always written in alphabetical order\n-    - Changed HTML description of search expressions, expressing the conditional logic more explicitly with brackets.\n-    - Fixed INSPIRE searches compatibility problem (by Stefano Gariazzo).\n-    - Change default of \"use IEEE abbreviations\" from TRUE to FALSE\n-    - Fix for bug #1293: \"Star\" for modified database is correctly shown again.\n-    - Journal abbreviation lists: In case entries are defined more than once, a message is output on the console\n-    - Antialiasing is now enabled and set to LCD\n-    - Update dependencies: jersey, commons.logging, pdfbox, JGoodies, glazedlists, JDBC connectors\n-    - Remove local JGoodies dependency: replace SimpleInteralFrame with SwingX JXTitledPanel and UIFSplitPane by JSplitPane\n-    - Switch from antlr2 grammar to antlr4 for capturing the search expressions. Should be backwards compatible.\n-    - Streamline logging API: Replace usages of java.util.logging with commons.logging\n-    - Refactored preferences\n-    - Fix several FindBugs warnings\n-2.11 beta 3\n-    - New MacOSX integration\n-    - Two releases for MacOSX: OSX-Java6 for Apple Java 1.6 and OSX for Oracle Java 1.7+\n-    - Fix for bug #1278 Crash after changing LookAndFeel (showing a proper error message if L&F is not available)\n-    - Adds some predefined look and feels in preference window (lists only available L&Fs)\n-    - Fixes #1131: MacOSX: JabRef minimizes when clicking on x\n-    - Dropped jayatana version 1.2.4 as version 2.x superseeds it\n-    - Feature: Trim journal names before looking up the abbreviation\n-    - Minor fixes regarding the status output of marking/unmarking entries\n-    - Internal default key bindings are honored again\n-    - Default key bindings for \"Find unlinked files\" (shift F7), \"Open folder\" (ctrl shift O), and \"Hide/show toolbar\" (ctrl alt t)\n-    - Opening a file using the CLI works again. Just use the filename as parameter, without any command.\n-    - Emacs keybindings: CTRL+f is not rebound as CTRL+f is more often used for \"search\"\n-    - Performance Improvement: Saving of large databases is dramatically faster\n-    - When a syntax error in the BibTeX source panel is made, the error cause is now always output\n-    - Jars that are available in maven are now downloaded and used in both ant and gradle\n-    - Replaced option parsing library ritopt with apache commons-cli which is in maven repository\n-    - BREAKING passing an option file to the cli command no longer works due to change of internal cli library!\n-    - Fix for bug #1283: Month fields like {8,} no longer cause exceptions\n-    - Disabled ISBNtoBibTeX fetcher (see bug #1241)\n-2.11 beta 2\n-    - Feature: Option to clean URLs generated by Google (patch #204)\n-    - Fix for bug #1272: JabRef now launches on Mac OS X\n-    - Updated DBLPfetcher to new DBLP functionality\n-    - Feature: Ability to reorder the panels in the side pane\n-    - Feature: Option to save selected entries as plain BibTex without JabRef metadata\n-2.11 beta\n-    - Some UI updates (mainly removing unnecessary boundaries)\n-    - Feature: Gridlines are now optional (and disabled by default)\n-    - Fix for bug #1248: Key bindings not modified\n-    - Fix for bug #876: Windows 7/8/10 - Pinning Jabref to the taskbar\n-    - Feature: Option to change the table row height padding\n-    - Feature: Make it possible to hide the toolbar\n-    - Fix for bug #1270: Cleanup entries error 3\n-    - Fix for bug #919: Accents don't export to RTF (by ruy.takata)\n-    - Change the CrossRef content negotiation for bibtex DOI import (by sheffien)\n-    - Fix for bug #1253: Cleanup entries error 2 (by ruy.takata)\n-    - Fix for bug 1213 (sourceforge): Fix encoding for DOI import\n-    - Feature #809: import pubmed central id (pmc) field from medline\n-    - Fix undoing Cleanup/Convert to Biblatex\n-    - Adapted pattern to parse DBLP entries\n-    - Partial fix for bug 913: fixed export for .ods and .sxc (by yaragg)\n-    - Fix for bug 1240: Accepting string with length of one character (by lhaddad).\n-    - Fix for bug 958: ArrayIndexOutOfBoundsException on \"Content Selector Dialog\"\n-    - Fix for bug 949: Exception properly logged\n-    - Fix for bug 950: NullPointerException on \"Manage custom imports\"\n-    - Feature 850: Keyboard shortcut for 'Cleanup entries' (by eduardogreco)\n-    - Change default behaviour to be more non-invasive: timestamps and owners are NOT set by default per entry.\n-    - \"Open Folder\" works again\n-    - newline separator can now be configured globally\n-    - Feature 847: Adds title case as a case changer\n-    - Feature 841: Support for multiple file columns (by noravanq)\n-    - Fix for bug 1176: automatic bibtexkey generation for authors containing/ending with and in their name\n-    - Saving order of entries can now be configured per database\n-    - Improved XMP Privacy (pull request #8)\n-    - Support FindFullText with ACS DOIs (pull request #9)\n-    - Fixes groups and adds optional 2.9.2 save ordering (pull request #10)\n-    - Fixes bug 880 \"PubMed Import broken\" (pull request #11 by vegeziel)\n-    - Fixes bug #959 \"StringIndexOutOfBoundsException with invalid Preview text\" (pull request #13 by IngvarJackal)\n-    - Fixes bug #960 \"FileNotFoundException in Journal abbreviations window\" (pull request #13 by IngvarJackal)\n-    - Make (un)abbreviating journal titles also work on the journaltitle field\n-    - Fix edits getting lost in Biblatex mode\n-    - Fix error when setting a previously unset field via the source panel of the entry editor\n-    - Improved BibLatex support (alias fields, option to convert old entries to the new format via the cleanup menu)\n-        - Fixes bug #1087 \"jabref does not follow biblatex specification\"\n-        - Fixes bug #1014 'journal' not recognized as alias for 'journaltitle''\n-        - Fixes bug #874 Support of biblatex \"date\" field\n-        - Fixes bug that prevented the secondary optional fields to update properly in the \"Customize entry fields\" dialog (in BibLatex mode)\n-    - Added special fields 'Printed' and 'Read status', thereby implementing (at least partially):\n-        - Feature #762 Printed attribute\n-        - Feature #692 Marking of new entries and often read entries\n-        - Feature #685 Highlight new entries that were \"forgotten\"\n-        - Feature #602 could add the mark as read feature\n-        - Feature #225 read? checkbox\n-    - Take aliased fields into account when sorting entries\n-2.10\n-    - Made IEEEXploreFetcher author parsing work again.\n-    - Added a few more characters in the HTML/Unicode to LaTeX conversion.\n-    - Find unlinked files tool doesn't always use PDF content importer any more,\n-      but the dialog opened when a file is dropped into JabRef\n-    - Uninstaller doesn't delete whole directory any more. Fixes bugs 1142, 1175, 1212.\n-2.10 beta 3\n-    - Fix GoogleScholarFetcher (patch 207)\n-    - Line breaks in BibTeX fields (e.g., abstract and review) are now kept.\n-    - Fixed completeness indicator in main table for entries with crossrefs and either/or required fields.\n-    - Fixed [shorttitle] and [veryshorttitle] key generator markers, so they remove punctuation as described\n-      in the documentation.\n-2.10 beta 2\n-    - Patched Windows install script to avoid wrong placement of Start menu items.\n-    - Reintroduced right-click on type label in entry editor to change entry type.\n-    - Fixed compatibility issue with OpenOffice plugin\n-    - Added Russian as language\n-    - Fix for bug 1160: Certain DOI references with \"<\" characters are not processed correctly (by Jonathan Powell)\n-    - Fix for bug 1153: Bug in user-specific file paths stored in @comment (by  Thomas Arildsen)\n-2.10 beta\n-    - Applied fix for JStor fetcher (patch 202 by Nicolas Brouard)\n-    - Added Settings menu item \"Clear connection settings\" in OpenOffice/LibreOffice panel.\n-    - Added support for specifying a BibTeX file at \"--importToOpen\". This allows a usage in browsers\n-      to directly append downloaded entries to the currently opened database.\n-    - Added Unicode to LaTeX conversion for Medline imports (feature 721)\n-    - Added Unicode to LaTeX conversion cleanup action (feature 721)\n-    - Added countries, weekdays and months to the case keeper\n-    - Added support for Emacs key bindings at the entry editor.\n-      To avoid collisions of common key bindings, Page up and page down (C-v) are not supported as C-v is \"paste\" in Windows key bindings.\n-    - Added a formatter for units which keeps the case and adds non-breaking separators\n-    - Added a Merge entries functionality\n-    - Added a setting to choose either a DOI link or a URL to be standard (feature 710)\n-    - Added button to change entry type. Removed this functionality from the type label, and\n-      reduced the font size.\n-    - Added Iso690 export including two new formatters: Iso690FormatDate and Iso690NamesAuthors\n-      (patch 123 by Laura Hern\u00e1ndez G\u00f3mez)\n-    - Added menu option \"Automatically set file links for selected entries\".\n-    - Added new BibTeX label pattern authEtAl\n-    - Added new BibTeX label pattern authForeIne, authorLastForeIni, edtrForeIni, and editorLastForeIni\n-      (patch 199)\n-    - The folder of attachments can now be opened (feature 726, patch by Douglas Nassif Roma Junior).\n-    - New translation: Spanish. By Jorge Tornero et al.\n-    - Adapted the required and optional fields of entry types according to\n-      http://en.wikipedia.org/wiki/BibTeX#Entry_types\n-    - After a search has been done, the first entry of the entry table is selected (feature 656).\n-    - Entries contained in an .aux file can now be selected (feature 644).\n-    - Number of entries in a group is now displayed in brackets (patch 124).\n-      Feature has to be enabled at the group settings as calculating the numbers takes a long time at huge databases.\n-    - New entries are now always be added to a group. Fixes bug 1093.\n-    - Configurable: Timestamp is now automatically updated on a change of an entry (feature 799)\n-    - Re-enabled customization of shortcut keys\n-    - Changed serialization of BibTeX entries:\n-      * First, the required, then the optional and then all other fields are written.\n-        Thereby, fields are now ordered by name. Except the title, which is written first.\n-      * The second word in of the BibTeX type is capitalized. E.g., Inproceedings got InProceedings\n-      * Configurable: Start field contents in same column. Enabled by default.\n-      * Configurable: Use camel case for field names (e.g., \"HowPublished\" instead of \"howpublished\"). Enabled by default.\n-      * If no field name is given, then \"UNKNOWN\" is used. For instance, \" = {X}\" gets \" UNKNOWN = {X}\".\n-    - Saving a part of the database now also writes entries with a crossref field first.\n-    - Author field is now resolved using @String data.\n-    - A custom proxy can be specified (patch 198 by Michael).\n-    - Default key binding for Write XMP is now \"CTRL+F7\" instead of \"CTRL+F4\"\n-      as the latter conflicts with \"Synchronize files\" (by Adrian Daerr)\n-    - WriteXMPAction now uses database to resolve strings even for selected entries (by Adrian Daerr)\n-    - Extend XMP privacy filtering to Dublin Core Schema (by Adrian Daerr)\n-    - IEEE search should include author field again (patch 201 by Christopher S. Lester, fixes bug 1137)\n-2.9.2\n-    - Fixed handling of empty author parts in rare cases. Fixes bug 1124.\n-    - Fetchers work again: Import inspection dialog is not modal any more.\n-2.9.1\n-    - Command line option --importToOpen now also adds to an open tab when JabRef is launched.\n-    - Importing of entries works again. Fixes bug 1121.\n-    - Import inspection dialog is now modal.\n-    - Replaced Java launcher by launch4j. Fixes bugs 1100, 1103, 1123.\n-    - Menu font size can now be changed again. Help contents are also enlarged accordingly. Fixes bug 1122.\n-2.9\n-    - Fixed bug: in OO/LO reference lists, entries may fall out when multiple entries with same\n-      author and year are cited.\n-    - Added support for converting HTML combining accents to LaTeX\n-    - When generating subdatabase from AUX file, preamble and strings are now included from\n-      the source database.\n-    - Added cleanup action for removing redundant $, {, and }\n-    - Fix for removing starting and ending spaces in the page number cleanup action\n-    - Fix for a more liberal detection in the month cleanup action\n-2.9 beta 2\n-    - Added DiVA fetcher\n-    - Can control if the HTML converter should create subscripts and superscripts\n-      as text or an equation via the preferences\n-    - Added initial support for adding curly brackets {} for certain\n-      key words to keep the character case independent of .bst, e.g., for\n-      names and abbreviations (use via \"Cleanup entries\") and can be controlled\n-      via preferences if it should be used at searches\n-    - Fixed author and DOI import from IEEE Xplore\n-    - Improved import of equations in IEEE Xplore titles handling images, (sub) and /spl / representations\n-    - Rewrote the HTML import in a more general way. A few characters need to be added.\n-    - IEEE Xplore abstract fetching should now be working again.\n-    - Added DOI to BibTex entry fetcher.\n-    - Added ADS (The SAO/NASA Astrophysics Data System) fetcher by Ryo Igarashi (patch #120).\n-    - Reintroduced Google Scholar and ACM portal fetcher with entry preview to reduce server load.\n-    - Added alternate entry fetcher type where a preview can be displayed so the user can choose\n-      which entries to download. This can reduce server load significantly and prevent users from\n-      getting locked out of search services.\n-    - Fix for exception and minor bugs in HTML import parsing (patch 3575998 by Daniel Sv\u00e4rd)\n-    - HTML import handles more characters. Cleanup can also do HTML cleanup. (Patch 3582375 by Oscar Gustafsson)\n-    - During file renaming: More illegal characters are removed (idea by Sarel Botha)\n-    - Rudimentary support for IEEEtranBSTCTL added (patch 3582376 by Oscar Gustafsson)\n-    - \":\" is not filtered from the BibTeX keys any more (patch 3582376 by Oscar Gustafsson)\n-    - Changed internal look&feel setting (based on patch 3580605)\n-    - Custom importers nested in jars should be supported now (bug 3582838)\n-    - PDFContentImporter uses the DOI fetcher to fetch the BibTeX for the entry (if a DOI exists at the first page).\n-    - Moved migration of legacy PDF/PS fields from legacy tools to clean up dialog.\n-    - MHT files can now also be linked by drag'n'drop without the need to configure \"external file types\".\n-    - Adds support for Ubunut's global menu and HUD integration by using java-swing-ayatana (feature #796).\n-    - Updates PostgreSQL support to PostgreSQL 9.2\n-    - New Mac OS X icon (patch #61)\n-2.9 beta\n-    - Replaced notification dialog after moving/renaming linked file by status message.\n-    - Replaced dialog warnings about empty/duplicate key in entry editor by status line messages,\n-      to prevent lockup if Save button is pressed directly.\n-    - Replaced window icon with 48x48 image.\n-    - [experimental] Added local undo/redo handling for entry editor text fields.\n-    - Added special field functionality for ranking, marking as relevant,\n-      marking as quality assured, and prioritizing. Can be enabled by \"Entry table columns\".\n-      Based on the work by Igor Chernyavsky, Florian Stra\u00dfer, and Marius Kleiner.\n-    - Added PDF preview functionality to the preview panel. Configurable via \"Entry preview\" settings.\n-    - Group edit dialog now closes when Escape is pressed.\n-    - Fixed MS bib import, month was lost on import.\n-    - Generate key action in entry editor now honors key overwrite settings.\n-    - Fixed bug when importing XMP data from PDF, file will now be linked from the new entry.\n-    - Fixed bug in layout processing - quoted formatter argments are now handled correctly.\n-    - Fixed bug 3545394: null and curly brackets in custom export filter.\n-    - Added \"Manage keywords\" popup menu to manage common keywords of selected entries.\n-    - Added support for pushing citations to TeXstudio (requires TeXstudio >=2.4)\n-    - Text-based citations can now be imported using FreeCite by Brown University\n-      (http://freecite.library.brown.edu). By Kai Mindermann and Daniel Maurer.\n-    - JabRef supports synchronization of unlinked PDFs. Feature request \"[2163626] Scan database - find unlinked files\".\n-      Based on patch 3122104.\n-    - Added command line argument -d/-prdef for resetting preferences to default values. Can\n-      reset a comma-separated list of preference values, or all values.\n-    - Added small right-click popup menu at each tab\n-    - A PDF can also be dropped to the preview panel to trigger linking it\n-    - Drag'n'drop of text from the preview panel to other applications is now working\n-    - Added highlighting in preview area for search text (based on patch 3121914 by\n-      Maximilian Lengsfeld).\n-    - New context menu option \"Switch preview layout\" in the preview panel.\n-    - BibTeX key generator patterns can now be stored in per database (implements feature 3495993)\n-    - Braces around author names are now dropped internally. They remain in the .bib though\n-      Effects (incomplete list): Authors in the main window are shown without braces,\n-      autocompletion does not show these braces\n-    - Autocompletion: \";\" is now also a delimiter allowing \"keyword1; keyword2\" in the keyword fields\n-    - Autocompletion: the amount of characters to trigger autocompletion may now be configured\n-      (default is 2)\n-    - Autocompletion: in case lower case letters are used, the search is case-insenstive,\n-      otherwise the search is case sensitive.\n-    - Autocompletion: new preference to choose how to deal with first names\n-      (always full/always abbreviated/both full and abbreviated)\n-    - Added functionality \"clean up entries\"\n-      - Includes clean up DOI functionality by Florian Stra\u00dfer and Marius Kleiner\n-        (move of DOIs from ee, note, and url field is supported)\n-      - Option to rename PDF of entry according to configured PDF-naming-scheme\n-        (by Florian Stra\u00dfer and Marius Kleiner)\n-      - make file paths relative\n-      - clean up month (functionality based on patch 3470076 by Mathias Walter)\n-      - clean up pages\n-      - fix superscripts\n-    - New \"ISBN to BibTeX\" fetcher. Uses the online \"ISBN to BibTeX Converter\" service by Manas Tungare.\n-    - Added support for drag'n'drop of tabs by Florian Stra\u00dfer and Marius Kleiner.\n-    - PDF import dialog now always stores settings: checkbox removed\n-    - float search now also jumps to first entry if entry editor is opened\n-    - usability improvements of \"content selectors\"\n-2.8.1\n-    - New DBLP fetcher. Patch 3462232 by Sascha Hunold.\n-    - Disabled ACM portal fetcher to avoid users of getting banned.\n-    - Fixed bug in PostgreSQL export/import.\n-    - Improved handling of file fields written in the style exported from Zotero.\n-2.8\n-    - Applied Oscar Gustafsson's fix for IEEEXplore fetcher.\n-    - Added capability to remove databases from SQL database.\n-    - Fixed customization of entries in Biblatex mode.\n-2.8 beta 2\n-    - Improvements to SQL export and import. Fixed bug where subsequent exports to same\n-      database would fail. Can now save multiple bib bases to a single SQL database.\n-    - \"abbr\" modifier in BibTeX key generator now skips parentheses.\n-    - Minor change to FirstPage formatter. Now splits at spaces as well as hyphens,\n-      and returns original field content if only one page number is found.\n-    - When using the preferences import command line option, preferences are now imported\n-      before load/import/export operations are handled.\n-    - Applied Nicolas Pavillon's patch for proper keystroke handling on Mac OS X.\n-    - Applied Ivanilton Polato's patch for handling multi-line fields in CSV export.\n-    - Fixed bug: \"Send as Email\" did not handle absolute paths correctly.\n-    - Fixed bug 3472991: Search: \"Highlight Words\" inconsistent\n-    - Fixed bug 2933201: Exporting InProceedings to Word 2007\n-    - Fixed bug 3146059: Error in translating author field to MS Office\n-    - Fixed bug: entering field names containing capital letters in table columns tab\n-      in Preferences makes the columns empty.\n-2.8 beta\n-    - Fixed issues with ACM portal fetcher using Benjamin Langmann's patch, plus an\n-      additional minor fix.\n-    - A large list of journal abbreviations is now loaded by default.\n-    - Added global option to allow file links relative to the bib file location, in addition\n-      to the global or database- or user-specific file directory.\n-    - Fixed bug 3434674: Reviewing changes overwrites groups.\n-    - Integrated the plugin for interaction with OpenOffice/LibreOffice as a standard part\n-      of JabRef.\n-    - Added keyboard shortcuts Ctrl-Up and Ctrl-Down to move file links up and down in a list\n-      of external links in the entry editor.\n-    - Applied \"bjoerntm\"'s patch for making the loading of group information less sensitive\n-      to white space, in order to prevent trouble loading files written by other tools.\n-    - Added optional autocompletion of author/editor last names in search field.\n-    - Changed entry fetcher system so all fetchers are accessed from a single side pane\n-      component with a selector.\n-    - Added INSPIRE fetcher by Sheer El-Showk.\n-    - Improved error handling when importing in specific format.\n-    - Prevented crash when calling invalid import format on startup.\n-    - Improved duplicate detection.\n-    - Added markers \\filename and \\filepath for \".begin.layout\" and \".end.layout\" files\n-      in order to output the name or full path of the bib file of the exported database.\n-    - Fixed possible array index exception in LastPage formatter.\n-    - Improved author/editor normalization in entry editor.\n-    - Added metadata extraction from text when PDFs are dragged into JabRef.\n-    - The filename pattern for renaming a file when dropping a PDF can now be\n-      configured at \"Options\"/\"Preferences\"/\"Import\"/\"File name format pattern\".\n-    - The defaults of the ImportDialog shown when PDFs are dragged into JabRef\n-      can now be configured at \"Options\"/\"Preferences\"/\"Import\". It is possible to\n-      override showing the ImportDialog.\n-    - An entry can be sent by a right click on an entry and select \"Send as Email\"\n-      (patch 3306271).\n-    - Added option to \"copy BibTeX key and title\" (patch 3370471).\n-    - The command for pushing to emacs can be configured now. New command for Emacs 23.\n-      New default for Windows: emacsclient.\n-    - Added export support for DIN1505 style (based on patch 1874662).\n-    - Added support for PostgreSQL import/export (patch 3368760 by Fred Stevens).\n-    - Added formatter \"JournalAbbreviator\" (patch 3013311 by Meigel).\n-    - RTFExport: Replaces ligatures `` and '' with RTF control sequences {\\ldblquote} and {\\rdblquote}.\n-      (patch 2905383 by Russell Almond).\n-    - Bugfix for NullPointerException in Biblatex mode (patch 3222388 by Matthias Erll).\n-    - ToggleButton added to GroupSelector to ease adding/removing references to/from groups\n-      (based on patch 3313564 updated by Andreas Schlicker).\n-    - Export filter \"tablerefsandbib\" updated to contain links to files and notes\n-      (patch 2787096 by Thomas Arildsen).\n-    - \"of\" added to the list of skip words (patch 2781830).\n-    - Added cli-function for exporting entries filtered by a search term\n-      (patch 1817093 by Silberer, Zirn)\n-    - Added highlighting in textarea for search text (patch 3117881 by Ben).\n-      Slightly modified to cope with words[]={\"\"}, support for \"BibTeX source\" tab, and that\n-      \"Clear\" also clears the highlighting.\n-    - Switched from PDFBox 0.7.3 to PDFBox 1.6.0.\n-2.7.2\n-    - Fixed bug that prevented search functions from working under Java 7.\n-2.7.1\n-    - Fixed problem with search function under Java 7.\n-    - Made Database properties dialog modal to prevent database from being closed\n-      while properties window is open.\n-    - Fixed error handling in custom import dialog when invalid jar files or class\n-      files are specified.\n-    - Added OR operator for conditional export formatting.\n-    - DocBook export format switched to 4.4 (based on patch 3313898).\n-    - Fixed bug that made the key generator combination [shorttitle:abbr] return\n-      only a single letter.\n-    - \"of\" added to the list of skip words (patch 2781830).\n-    - Bugfix for NullPointerException in Biblatex mode (patch 3222388 by Matthias Erll).\n-    - RTFExport: Replaces ligatures `` and '' with RTF control sequences {\\ldblquote} and {\\rdblquote}.\n-      (patch 2905383 by Russell Almond).\n-    - Fixed bug that made menu items for marking in specific colors invisible\n-      under Windows 7.\n-    - In case a new entry is added, this entry is highlighted and the editor is opened\n-      if configured in the settings (patch 3370466). The UI behavior of adding an entry\n-      at \"new entry from plain text\" is now similar to \"new entry\".\n-    - Fixed bug in focus handling that affected some actions.\n-    - Running JabRef under the Oracle JVM will no longer give a warning.\n-2.7\n-    - Medline importer now wraps multipart last names in braces.\n-    - RIS importer now handles multiple title fields by concatenation.\n-    - Disallowed \"comment\" as entry type name, since this conflicts with the BibTeX format.\n-    - Fixed handling of suffix name parts (Jr, etc.) in Medline importer.\n-    - Added optional second numeric argument to Authors formatter, which determines\n-      how many authors are shown if the maximum number is exceeded.\n-    - Added content selector for \"review\" field in entry editor.\n-    - Improved detection of file type when adding new link. Can now recognize double\n-      extensions such as \".ps.gz\".\n-    - Improved autocompletion of author names. Added options to complete either in\n-      'Firstname Lastname' or 'Lastname, Firstname' formats, or in both.\n-    - Fixed bug in import function if no suitable import filter is found.\n-2.7 beta 2\n-    - Added support for MrdLib lookup or metadata extraction when PDFs are dragged into\n-      JabRef.\n-    - Added option under \"External programs\" for disabling the automatic opening of the\n-      Browse dialog when creating a new file link.\n-    - Fixed shortcut key collision. Shortcut for Import to new database is now Ctrl-Alt-I.\n-    - The \"Open URL or DOI\" action now uses URL links in the \"file\" field as fallback if\n-      no links are found in the \"url\" or \"doi\" fields.\n-    - Restricted remote listener port numbers to interval 1025-65535.\n-    - Added Japanese translation by Koji Yokota.\n-    - Added scrollbar to entry editor when it is too high to fit in its panel. Patch\n-      by Matthias Erll\n-    - Made it possible to copy entries from the search dialog.\n-    - Added proper error message when trying to search with invalid regular expression.\n-    - Added error dialog on startup if custom look and feel cannot be loaded.\n-    - Applied Alexander Hug's patch for correctly importing doi from ScienceDirect RIS files.\n-    - Removed potential NullPointerException in SearchExpressionTreeParser.\n-2.7 beta\n-    - Some improvements to MS Office export filter.\n-    - Introduced three choices for ensuring unique generated keys. The default one (marking\n-      with a, b, etc.), a modified one (marking with b, c, etc.) and always adding a letter\n-      (a, b, etc.).\n-    - Font and background colors are now customizable in the entry editor (Options ->\n-      Preferences -> Appearance).\n-    - Window title now includes the full path to the current file.\n-    - Entries can now be marked in a series of different colors. Automarking of imported\n-      entries is now done in separate color without affecting other marked entries.\n-    - Added new feature (Tools -> Scan database... -> Resolve duplicate BibTeX keys) to\n-      search for duplicate keys and offer to generate new keys to resolve the duplicates.\n-      Instead of being listed in a warning dialog after opening a bib file, duplicate keys\n-      now trigger a dialog asking whether the user wants to resolve the duplicates.\n-    - Added check that ensures that application doesn't quit while a large save operation\n-      is still in progress. Shows wait message with cancel button.\n-    - Added apostrophe (') as illegal character in BibTeX keys.\n-    - BibTeX strings that refer each other are now sorted correctly when saving bib file.\n-    - Fixed bug in merging external changes - file would still be reported as modified\n-      externally after merging changes.\n-    - Fixed bug in Move/rename file link feature that could cause the wrong link to be\n-      stored for certain directory structures.\n-    - Fixed bug: curly braces can now be used in arguments to formatters.\n-    - Fixed lockup bug when generating key for entries with crossref fields.\n-    - BibTeX strings are now resolved before attempting to (un)abbreviate journal names.\n-    - Modified [shorttitle] and [veryshorttitle] key generator markers so they consider\n-      a hyphen a word boundary, and remove punctuation characters (keep only numbers and\n-      letters).\n-    - deprecate various export formatters with new Authors formatter, which provides flexible\n-      formatting options.\n-2.6\n-    - Fixed IEEExplorer and ACM fetchers to adapt to web site changes.\n-    - Active preview (1 or 2) is now remembered.\n-    - Applied patch by Igor L. Chernyavsky. to prevent loss of entry selection after\n-      generating key.\n-    - Changed OpenDocument Spreadsheet export so the mimetype file is written correctly\n-      at the start of the zip file.\n-    - Fixed bug when importing preferences: custom export filters would not be updated\n-      after import.\n-    - Changed help page loading procedure so help pages can be loaded for plugin entry\n-      fetchers.\n-    - Made it possible to define customized entry types with either-or conditions on\n-      required fields, e.g. using a pseudo-field called \"author/editor\" will indicate\n-      that the entry requires either the \"author\" or the \"editor\" field set.\n-    - Fixed bug: entries of a customized type could be indicated as complete even if\n-      BibTeX key was not set.\n-    - Changed deletion process for some temporary files to avoid leftover files.\n-2.6b3\n-    - Added ScienceDirect entry fetcher that utilizes the BibSonomy scraper.\n-    - Changed non-native file dialog setting so files cannot be renamed. This prevents\n-      accidentally entering rename mode when trying to enter directory. Can be enabled\n-      again in Options -> Preferences -> Advanced.\n-    - Added new JStor fetcher that utilizes the BibSonomy scraper to obtain BibTeX data.\n-    - Fixed bug in CookieHandlerImpl.\n-    - Fixed bug; when dragging a file into JabRef and asking to move it to the file\n-      directory, warning will now be given if the destination file already exists. Patch\n-      by Alastair Mailer.\n-    - When dragging a file into JabRef and asking to copy or move it to the file directory,\n-      it is now possible to rename to an arbitrary name. Patch by Alastair Mailer.\n-    - Added \"review\" field to BibTeXML export.\n-    - Added Reset button to entry fetchers. Patch by Dennis Hartrampf and Ines Moosdorf.\n-    - Changed Microsoft Office XML export so \"number\" rather than \"issue\" is exported\n-      as <b:Issue>, which conforms with import format.\n-    - Added confirmation dialog that allows saving without backup in cases when\n-      backup creation fails.\n-    - Fixed bug 2938562: using the move/rename feature on a file link could give an\n-      absolute link even if the file was put below the main file directory.\n-    - Fixed bug 2931293: error generating key with [authorsAlpha] for short names.\n-    - When checking for external modifications, file size is now checked in addition\n-      to the time stamp.\n-    - Fixed handling of maximised state when shutting down and starting up JabRef.\n-      Patch by Igor L. Chernyavsky.\n-    - Fixed bug that prevented correct handling of DOS short file names. Patch\n-      by Igor L. Chernyavsky.\n-    - Added support for KOI8_R character set.\n-    - Removed DocumentPrinter class, using standard API functions instead. Patch by\n-      Tony Mancill.\n-    - Removed HightlightFilter class, using standard API functions instead. Patch by\n-      Tony Mancill.\n-    - Changed keyboard shortcut for IEEXplorer search to Alt-F8.\n-    - Disabled JStor search, which doesn't work due to API changes.\n-    - External file type manager now removes \".\" prefix in file type extension if the user\n-      has typed it that way.\n-    - Preview panel now defaults to preview layout 1 instead of 2. Switched default layouts.\n-    - Added IfPlural formatter by Russell Almond. The formatter outputs its first argument\n-      if the input field contains \" and \" and the second one otherwise.\n-    - Applied patch by Philipp Cordes and Bj\u00f6rn Kahlert for improved handling of names by\n-      autocompleter. The patch also reorganizes the autocompleter classes.\n-    - Table will now scroll to keep the currently edited entry visible if an edit leads to\n-      the entry getting sorted to a different position.\n-    - Reworked author and editor handling in Docbook export. Added Docbook XML header.\n-    - Database will no longer be marked as changed after accepting external changes, unless one or\n-      more changes were not accepted before merging, and unless database was already marked as\n-      changed.\n-    - Fixed bug: undesired autocompletion when saving file.\n-    - Fixed bug: entry editor doesn't appear when new entry is added while a filtering search or\n-      group selection is active.\n-    - Fixed bug in writing of metadata on Windows. For certain metadata lengths newlines would be\n-      messed up after the metadata comment in a bib file.\n-    - Search dialog now automatically previews first hit, and hides preview if there are no hits.\n-2.6b2\n-    - Added export formatter \"Default\" which takes a single argument. Outputs the string to format\n-      unchanged if it is non-empty, otherwise outputs the argument.\n-    - Added option under Options -> Preferences -> General for disabling the strict enforcing of\n-      correct BibTeX keys. Disabling this makes it possible to use e.g. umlaut characters in keys.\n-    - Modified launcher script for Windows installer to give higher heap size limit.\n-    - Improved autocompletion. All fields with autocompletion which have content selectors will now\n-      autocomplete on content selector values. For the \"journal\" field, the autocompleter will now\n-      additionally use entries from the current journal abbreviations list, and will also complete\n-      on the entire field up to the cursor rather than just looking at the last word only.\n-    - Added support for postformatter in Layout. The postformatter will be run after\n-      the formatters called from a layout.\n-    - Improved group autogeneration. Added option to generate groups based on author or editor\n-      last names. Autogenerated groups are now alphabetized.\n-    - Modified Endnote export filter so \"--\" gets converted to \"-\" in the \"pages\" field.\n-    - Changed keyword groups so they will match on whole words only. E.g. a keyword group for the\n-      keyword \"can\" will no longer match the keyword \"scanner\".\n-    - Improved entry type determination and author parsing for some varieties of CSA files.\n-    - Minor change to Harvard RTF export. Added space after \"ed.\", and added editor to output for\n-      inbook entries.\n-    - Set limit to the number of displayed characters in group names in groups tree in order to\n-      avoid group panel width problems.\n-    - Changed file link handling so all remote links classified as URL can be opened through\n-      the browser. Setting a different file type manually makes JabRef call a remote link using\n-      the handler application instead.\n-    - Modified Endnote/refer import filter to strip \"doi:\" from the %R field.\n-    - Modified HTML conversion so single newline is displayed in the preview (and HTML exports) as\n-      <br>, while multiple newlines are displayed as <p>.\n-    - Fixed bug: switching entry editor between entries of different type may result in switching\n-      of entry editor tabs.\n-    - Fixed bug: adding external file link leads to relative path from root directory if file\n-      directory is set to an empty string.\n-    - Fixed error message when a # in a BibTeX string prevents saving. No longer states that the\n-      problem is in an entry, but specifies that it is in a string.\n-    - Fixed bug: ODS export doesn't resolve BibTeX strings.\n-    - Fixed bug: content selector for \"editor\" field uses \",\" instead of \" and \" as delimiter.\n-    - Fixed bug: editing source doesn't allow change of entry type.\n-    - RTFChars formatter now converts --- to \\emdash and -- to \\endash.\n-\n-2.6b\n-    - Added pages information to several entry types in Endnote export.\n-    - Modified LastPage formatter so it returns the number when only the number of pages is given.\n-    - Modified search algorithms so LaTeX commands are removed before search. For instance, this\n-      means that the value \"test \\textit{case}\" now matches the search string \"test case\".\n-    - Changed default table font family to \"SansSerif\".\n-    - Can now create lock file while writing a bib file. The lock file is checked before\n-      saving, and before scanning an externally changed file, in order to avoid reading an\n-      unfinished file.\n-    - Added support for dragging a file link from the file column to another application.\n-    - Added toolbar button and shortcut (Alt-F) in entry editor for autosetting file links.\n-    - Improved ISI import filter so DOI information is included.\n-    - Fixed bug: metadata changes would not be detected as external changes to a database.\n-    - Fixed bug: when accepting external changes and not saving before new changes are\n-      detected, the previously accepted changes would also be listed.\n-    - Fixed bug in Scifinder import where an empty Inventor field could overwrite the\n-      author field.\n-    - Fixed bug in autocompleter. Current suggested completion would be added to the field\n-      if the user closed the entry editor or mouse clicked on another field.\n-    - Fixed problem with exporting to some MySql versions. Patch by Fran\u00e7ois Dorin.\n-    - Fixed bug in handling of LaTeX character sequences - now sequences with = as command\n-      character (e.g. \"\\={A}\") are recognized.\n-    - Fixed bug: gray out / hide setting in groups panel is overridden on startup\n-      by search mode selection. Added separate prefs key for the groups setting.\n-      Fix suggested by Igor L. Chernyavsky.\n-    - Fixed bug: cookie manager installed by Download button in file field editor throws\n-      an exception when trying to fetch from Medline.\n-    - Fixed bug: temporary files don't get deleted on shutdown.\n-    - Disabled table column reordering in import inspection window, since a user reported\n-      problems when using this.\n-    - Changed years from 2008 to 2009 in splash image.\n-2.5\n-    - Modified export layout procedure so missing formatters can be reported in the error\n-      output. Export now succeeds with warnings added where formatters are missing.\n-    - Conditional blocks (\\begin{field}...\\end{field}) in layout files can now be given a\n-      semicolon-separated list of fields as argument. All fields must then be set for output\n-      to be given.\n-    - Changed RIS import so multiple abstract fields in an entry are concatenated.\n-    - Added quoting of some special characters in SQL export, based on Kyle Crabtree's patch.\n-    - Fixed bug in MS Office 2007 XML export - editor names missing.\n-    - Fixed bug in plugin manager that prevented the \"Download plugin\" button from working.\n-    - Fixed bug in plugin manager routine that checks for installed versions of a plugin.\n-    - Fixed bug in startup that could show warnings multiple times when loading\n-      from autosave files.\n-2.5b2\n-    - Plugin manager now handles plugin versions correctly based on the version number in their\n-      plugin.xml file.\n-    - Added formatter \"Number\" that outputs a sequence number for the current entry in the current\n-      export operation. This formatter can be used to produce a numbered list of entries.\n-    - Added autosave feature.\n-    - Fixed bug in file link handling in BibTeXML export.\n-    - Improved handling of patents in Scifinder import.\n-2.5b\n-    - Added Simplified Chinese translation.\n-    - Added simple plugin manager.\n-    - Added ~/.jabref/plugins as user-specific plugin directory.\n-    - Added \\r marker to WrapFileLinks formatter that outputs file links without expanding\n-      relative links.\n-    - Added [authorsAlpha] key marker that formats authors according to the \"alpha\" BibTeX style.\n-      Patch submitted by Oliver Kopp.\n-    - Table sort order set by clicking and Ctrl-clicking table columns is now immediately set\n-      as default sort order in preferences.\n-    - Changed LyX pipe setting so it works whether \".in\" is included or omitted.\n-    - Modified ISI importer so the words \"of\", \"and\" and \"the\" will not be capitalized in the title,\n-      journal or publisher fields.\n-    - When adding new local file link, browse dialog now appears immediately when opening file link\n-      editor, saving one mouse click.\n-    - Added \"Remove all broken links\" option in the resolver dialog for broken links when\n-      synchronizing file links.\n-    - Added rename option to Set/clear field dialog, to move contents from one field to another.\n-    - Added Back and Forward actions, for switching between recently edited BibTeX entries.\n-    - Added option under \"Entry table\" to designate fields as numeric for sorting purposes.\n-    - Added possibility for custom export filters to define their own name formatters.\n-      This is done by adding a file named \"<filtername>.formatters\". This file defines\n-      one formatter on each line, with each line containing the name of the formatter and\n-      the formatter definition, separated by a colon (:).\n-    - Added menu items for increasing/decreasing table font size, with shortcut keys Ctrl-plus and\n-      Ctrl-minus.\n-    - Added options to automatically mark entries imported into an existing database, and to unmark\n-      previously marked entries when importing.\n-    - Added \":(x)\" modifier to key generator, specifying that the arbitrary string x\n-      should be used as a fallback value if the value returned by the field marker is empty.\n-    - Added \":upper\" modifier to key generator, to force uppercase for a field marker.\n-    - Added buttons in External programs tab in Preferences for modifying settings for\n-      \"Push to\"-features, and removed obsolete fields.\n-    - Added support for DOI field in Endnote importer.\n-    - Added support for language and publication status fields in Medline import (publication status\n-      stored in \"medline-pst\" field).\n-    - Enabled cookie handling for downloading full-text articles.\n-    - Improved handling of invalid BibTeX keys containing white space. Parser will now try to\n-      piece together the key and avoid disturbing the continued parsing. Patch submitted by\n-      Stephan Lau.\n-    - Cosmetic change to the entry type label to the left in the entry editor.\n-    - Changed name handling so a single-entry name without a capital initial letter, such as\n-      \"unknown\", will be treated as a solitary last name rather than a von particle.\n-    - Changed table selection coloring so entries that are grayed out or marked can be\n-      distinguished from normal entries when selected.\n-    - Changed handling of \"affiliation\" in Medline import - now makes sure to escape\n-      # characters before storing.\n-    - Modified ACM portal fetcher due to web site changes.\n-    - Improvements to IEEEXplore fetcher - better handling of month and page fields.\n-    - Changed behaviour of source panel when an entry contains imbalanced # characters -\n-      the panel can now show the entry in its invalid form, allowing the user to fix the problem.\n-    - Improved handling of PDF files without XMP metadata - other metadata will now be retained.\n-      Patch submitted by Felix Langner.\n-    - Fixed bug in parsing file field - double spaces in file names would be reduced to single\n-      spaces, breaking the file link. Fix submitted by Uwe Kuehn.\n-    - Fixed NullPointerException when downloading external file and file directory is undefined.\n-    - Fixed bug in HTMLConverter.\n-    - Fixed NullPointerException in key generator for incomplete names.\n-    - Fixed bug in removing custom export filters.\n-    - Fixed bug 2225371: restart is no longer required after adding a new custom export filter.\n-    - Fixed bug in \"Move/rename file\" feature in file field editor with regard to undefined\n-      file directory.\n-    - Fixed bug in Ris importer.\n-    - Fixed NullPointerException in Endnote importer.\n-2.4.2\n-    - Added missing layout formatters FirstPage and LastPage.\n-    - Fixed a bug regarding ParamLayoutFormatter loaded from plugin.\n-    - Fixed crash during initalization of journal abbreviation list.\n-    - Added option to have JabRef search for external file when \"Open file\" function is chosen\n-      for an entry without any linked files. This is similar to what was always done in\n-      JabRef 2.3.1 and earlier.\n-    - Improved regular expression file search, so the regular expression can contain field\n-      markers as used for BibTeX key generation in addition to just regular fields. It is\n-      no longer possible to call arbitrary layout formatters, but the modifiers \"upper\",\n-      \"lower\" and \"abbr\" (for case conversion and abbreviation) can be used.\n-    - Ris importer now imports PB as \"school\" instead of \"publisher\" for THES entries.\n-    - Fixed bug 2157664: Current edit is now treated as an undoable edit in itself.\n-2.4.1\n-    - Fixed bug: layout formatter arguments were not set when using a ParamLayoutFormatter\n-      loaded from plugin.\n-    - Fixed bug: when abbreviating first names, for authors with first names connected\n-      with \"-\", only the first letter is shown.\n-    - Enhanced ExportFormatTemplate plugins with an optional property \"encoding\" which\n-      overrides the default encoding with the given one.\n-    - Fixed menu colors under Windows Vista.\n-    - Fixed bug 2137771: Missing file extension when downloading.\n-    - Fixed bug 2105329: Ensure that newly added entry is visible in table.\n-    - Fixed bug 1908222: Preference \"Fit table horizontally on screen\" doesn't work\n-    - Fixed bug 2119059: Handling of the A1 tag in the RIS format.\n-    - Added missing help file for ACM digital library fetcher.\n-    - Added option for whether to use IEEE LaTeX journal abbreviation list.\n-    - Added tooltip to menu items in push-to-application popup menu.\n-2.4\n-    - Added mappings for some special characters that need to be sanitized when generating\n-      BibTeX keys.\n-    - Added ACM Digital Library fetcher by Aaron Chen.\n-    - Added new entry types (conference, patent, standard, electronic).\n-    - Improvements to IEEEXplore fetcher.\n-    - Added explanatory text to indicate that \"ps\" and \"pdf\" files are legacy features.\n-    - Fixed unexpected behaviour of \"Open PDF or PS\" menu item - now looks in \"file\" field,\n-      and does not launch search for external files.\n-    - Fixed bug 1827568: 'Save database' might not store current edit in entry editor.\n-    - Fixed bug 2027944: updating custom export definitions requires restart.\n-2.4b2\n-    - Opening external files on Linux now uses \"xdg-open\" as application if no other is specified\n-      for the file type. xdg-open should be available to call the appropriate application according\n-      to the user's settings on all freedesktop compliant Linux distributions.\n-    - Download external file now attempts to determine file type based on MIME type, using\n-      file extension as fallback.\n-    - Changed the way names are handled under autocompletion. Last and first names are\n-      now indexed separately.\n-    - A table column can now be set up with fallback fields used if the main field is\n-      empty. Fallback fields are set in Options -> Preferences -> Main table columns by\n-      setting a column to \"field1/field2/...\". The fields will be checked in succession\n-      until a non-empty value has been found or al fields have been checked. For instance,\n-      specifying \"author/editor\" will result in a column displaying the author field where,\n-      set, and the editor field for entries with an empty author field.\n-    - Added special handling of autocompletion for the \"crossref\" field - now indexes\n-      words from the BibTeX key field instead of the \"crossref\" field. Added crossref\n-      to the default fields using autocompletion.\n-    - Added menu item and shortcut (ctrl shift E) to shift focus to the entry table.\n-    - Main window now remembers maximisation state from last time.\n-    - Improved SQL export feature so the complete information about groups, strings and preamble\n-      is included. Added SQL import feature supporting the same database schema.\n-    - Added new implementation of regular expression file search that can handler multiple files\n-      and file types. Added regexp search as a third option for autolink feature.\n-    - Added support for BibO RDF format, contributed by Egon Willighagen.\n-    - Fixed bug in autocompletion; continuing writing the suggested word after cycling\n-      through alternatives would give wrong result in editor.\n-    - Fixed bug where selection would jump back if an entry of different type was selected\n-      by mouse click while editing a field of the current entry.\n-    - Fixed missing name formatting in search dialog. Now uses same formatting as main table.\n-2.4b\n-    - Added Export to SQL database feature. Supports MySQL.\n-    - Added \"protection\" flag in Database properties. When this flag is set, JabRef will\n-      refuse to save the database when the file has been externally modified, until the\n-      changes have been reviewed and partly or completely accepted.\n-    - Fixed bug where the external update notification in the side pane would remain\n-      even if the referred database was closed.\n-    - Added two new search modes - display search results in a dialog, and global search.\n-    - Support for fetching from the command line using --fetch (contributed by\n-      Jan F. Boldt and David Kaltschmidt).\n-    - Support for fetching from Spires (contributed by Fedor Bezrukov).\n-    - Support for fetching from JSTOR (contributed by Tobias Langner, Juliane\n-      Doege, Sebastian de Hoog and Christoph Jacob)\n-    - Added context menu for file list editor with options to move/rename linked file\n-      as well as to automatically move the file to file directory and optionally rename\n-      after BibTeX key.\n-    - JabRef can now be extended by plugins (using the Java Plugin Framework\n-      JPF as the underlying technology). Currently extension points exist for:\n-        - ImportFormat\n-        - ExportFormat based on Templates\n-        - ExportFormat based on IExportFormat (contributed by Kariem Hussein)\n-        - LayoutFormatter\n-        - EntryFetcher\n-        - PushToApplication\n-      JabRef uses JPFCodeGenerator (which was written just for JabRef) to\n-      generate helper classes for making JPF easier. Current version used: 0.4\n-      http://forge.spline.inf.fu-berlin.de/projects/jpfcodegen/\n-    - Print warnings if insufficient Java version is used or if JRE is not from Sun.\n-    - Memory Stick Mode: JabRef automatically loads configuration settings from\n-      jabref.xml and also writes them there if enabled.\n-    - Improved handling of crossrefs. Fields are now resolved in preview and export.\n-    - Updated dependencies, now using: JempBox-0.2\n-    - Improved handling of ArXiv URIs.\n-    - Changed default preference value: now using import inspection dialog also\n-      when just a single entry is imported.\n-    - Parsing of field lists for non-wrappable fields and fields for which to automatically\n-      add braces around capitals now ignores whitespace between entries.\n-    - [ 1620792 ] Fixed: JabRef randomly hangs during Medline fetch\n-    - [ 1738920 ] Fixed: Windows Position in Multi-Monitor environment\n-    - [ 1795355 ] Fixed: LatexFieldFormatter omits \"{\" on beginning of optional field\n-    - [ 1297576 ] New feature: Printing of entry preview (use right-click menu)\n-    - [ 1717849 ] Fixed: Bug in aux import (contributed by Kai Eckert)\n-    - [ 1749613 ] Fixed: About translation\n-    - [ 1709449 ] Fixed: Clicking a DOI from context menu fails\n-    - [ 1869331 ] Fixed: Uninstall after silent install removes Windows start menu\n-    - [ 1723219 ] Fixed: Strange message (LyX) while installing\n-2.3\n-    - Added handling of unknown file types when synchronizing the file field.\n-    - Changed the way customized external file types are stored. Types are now stored in a\n-      way analogous to a diff from the default types. This allows default types added in later\n-      versions to appear immediately, even if the user has customized the list.\n-    - Moved file preferences from General tab to new File tab.\n-    - Reduced horizontal size of preferences dialog.\n-    - Fixed handling of quotes when using the \"abbr\" modifier for key generator (Debian bug\n-      #448917).\n-    - Download file procedure now strips query string in order to find correct file extension\n-      (Debian bug #448027).\n-2.3b3\n-    - Export formats that output the character encoding now use common names for encodings\n-      instead of Java-specific names.\n-    - Added \"Open\" button in external link dialog box to test or use the link.\n-    - Added formatter WrapFileLinks which iterates over file links, producing a formatted\n-      string for each containing any desired information about the file link.\n-    - Applied Fedor Bezrukov patch (setting User-Agent in URLDownload to solve ArXiv problem).\n-    - Applied Aaron Chen's patch for fixing bugs in IEEExplore fetcher.\n-    - Applied Edward Valeev's patch for handling article numbers replacing pages in Refer/Endnote\n-      import.\n-    - Added toolbar button to entry editor for writing XMP-metadata.\n-    - Added paste and drag & drop support to file list editor.\n-    - Added \"authorLast\" and \"editorLast\" markers for using last author's last name in BibTeX keys.\n-    - Added support for file field in Write XMP action.\n-    - Numeric fields (year, volume, number, pmid, citeseercitationcount) are now sorted as numbers\n-      when possible.\n-    - Improvements to the Ovid import filter.\n-    - Modified AuthorLastFirstAbbreviator and AuthorAbbreviator to accept names in both last-first\n-      and first-first format, but always return in last-first format. These two formatters are\n-      identical.\n-    - [ 1648789 ] Fixed: Problem on writing XMP when option to leave out some fields was active.\n-    - [ 1561990 ] Fixed: Exporting to WinEdt - apostrophe.\n-    - Fixed bug in entry editor: source panel edits were not properly stored when clicking a\n-      different entry in the main table.\n-    - Fixed problem with \"Synchronize file links\" not honouring database specific file directory.\n-    - Fixed problem with file type selection in external file link editor not being up-to-date.\n-    - Fixed problem with wrong enable/disable behaviour of Clear search button when switching\n-      between tabs.\n-    - Fixed argument parsing in AbstractParamLayoutFormatter so \\t and \\n can be used for\n-      tabs and newlines.\n-2.3b2\n-    - Added % at start of signature text in BibTeX output. Parser now reads both\n-      old and new style.\n-    - When user chooses to save to an existing file, and answers that the file should not be\n-      overwritten, a new file dialog now appears instead of the operation cancelling.\n-    - Removed antialias setting for main table, because it interferes with proper rendering\n-      on LCDs when running under JRE 6. Removed non-optional antialias settings for entry\n-      editor for the same reason.\n-    - Changed external link handling so remote (http) links can be sent to the external\n-      application. Applications like Evince and Gimp can open remote links.\n-    - Replaced Simle HTML export filter with improved version by Mark Schenk.\n-    - Introduced ParamLayoutFormatter interface for layout formatters that can take an\n-      argument by the following syntax: \\format[MyFormatter(argument)]{\\field}\n-      Implementing classes contain a setArgument(String) method that receives the argument\n-      (if any) before the format() method is called.\n-    - Timestamp and owner fields are now set also when appending a bib file, and new options\n-      have been introduced to control whether imported/appended/pasted entries should have\n-      these fields overwritten if already set.\n-    - Added operations for adding file links in import inspection window, and made file\n-      and URL icons in the table clickable.\n-    - Removed PDF and PS columns and operations in import inspection window (replaced by\n-      operations on the \"file\" field).\n-    - File field column in main table now shows file type icon instead of generic icon.\n-    - Modified Endnote export to take \"file\" field into account, and to resolve full\n-      paths to PDF files.\n-    - Added \"Auto\" button to automatically set \"owner\" field to the default username.\n-    - Added \\encoding tag for begin/end layouts in export filters to print the name of the\n-      character encoding used for the export. The tag is not available in entry layouts.\n-    - Added \\% as a supported LaTeX command, producing '%'.\n-    - Fixed bug in HTMLChars: commands like {\\aa} and {\\o} were not processed properly, even\n-      though defined in Globals.HTMLCHARS.\n-    - Fixed bug that made it possible to accidentally close database without saving, when error\n-      occurs during the save operation.\n-2.3b\n-    - Added MIS Quarterly export format.\n-    - Added support for COPAC file format.\n-    - Added RemoveTilde LayoutFormatter to deal with Bibtex non-breakable spaces.\n-    - Added autocompletion feature for author/editors and other fields.\n-    - Added feature to save all open databases.\n-    - Added support for pushing citations to Vim when Vim server is enabled.\n-    - Added missing option for specifying the path to LEd.exe.\n-    - Added -s/--nosplash command line option for disabling the splash screen.\n-    - Added new field marker [auth.etal] for key generation.\n-    - Added support in XMP metadata handling for bibtex string resolution.\n-    - When opening databases, already open files are now skipped.\n-    - Option to use native instead of Swing file dialogs is now available on all OSes.\n-    - Synchronize external links now searches entire database, not selected entries.\n-    - Medline import now adds <Affiliation> information into the \"institution\" field.\n-    - Improved handling of external links. The 'file' field can now specify a list\n-      of external links, and arbitrary file types are supported. Old-style PDF and\n-      PS links can be moved automatically into the 'file' field.\n-    - Fixed minor bug in importing preferences. General fields for entry editors are\n-      now updated without restarting JabRef.\n-    - Fixed bug in RIS and Refer/Endnote imports. Entries with editors but no authors\n-      are now imported properly.\n-    - Fixed missing export formatter AuthorFirstFirstCommas.\n-    - Fixed minor bug in Harvard export with missing space between year and title.\n-    - Fixed bug that caused lockup when connection to IEEExplore fails.\n-    - Fixed wrong dependency in OAI2/ArXiv Fetcher.\n-    - Fixed problem with foreign characters in OAI2/ArXiv Fetcher.\n-    - Fixed problem with key generation in OAI2/ArXiv Fetcher.\n-    - Fixed bug in duplicate search that made misc entries never get\n-      detected as duplicates.\n-    - Fixed bug in XMP reimport from DublinCore related to month strings.\n-2.2      - Added progress bar to indicate progress when synchronizing PS/PDF links.\n-        - Option to autogenerate key for imported entries now also affects entries imported\n-          without using the import inspection window.\n-        - Modified quick jump behaviour so sequences of letters can be found. Timeout or\n-          ESC resets the search.\n-        - Width of side pane is now remembered.\n-        - Improved XMP support:\n-          - JabRef now reads and write DublinCore and Legacy Document Properties\n-            Caution needs to be used though since, JabRef does overwrite existing values.\n-          - XMP privacy filter can be used to prevent sensitive fields to be exported.\n-        - Support for OAI2 identifiers with subcategories, e.g. math.RA/0601001\n-        - Fixed bug that made explicit groups appear empty after updating group tree from external\n-          change.\n-        - New windows installer thanks to Uwe St\u00f6hr.\n-        - [ 1641247 ] Fixed: No update of preview after generating bibtex key\n-        - [ 1631548 ] Fixed: Absolute paths should be stored for last open files.\n-        - [ 1598777 ] Fixed: Month sorting\n-        - [ 1570570 ] New Feature: Deselect all duplicates on import\n-        - [ 1574773 ] Fixed: sanitizeUrl() breaks ftp:// and file:///\n-        - [ 1609991 ] Fixed: Silverplatter Import: Publisher and Year confused\n-        - [ 1608391 ] Fixed: Medline Search Editbox size gets to big\n-2.2b2   - Redesigned export functions to simplify GUI and provide \"Export selected\n-          entries\" functionality. Export filter is now chosen using the file type\n-          dropdown menu in the file dialog.\n-        - Fixed bug that caused UnsupportedEncodingException on Windows when saving.\n-        - Added warning dialog when exporting failed.\n-        - Added fix for exporting special chars in RTF like \u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd...\n-        - Added NameFormat LayoutFormatter based on Bibtex method name.format$\n-        - Added Fetch from ArXiv.org to Web Search\n-          [ 1587342 ] Quering ArXiv (and any OAI2 Repository)\n-        - [ 1594123 ] Fixed: Failure to import big numbers in Bibtex\n-        - [ 1594169 ] Fixed: Entry editor navigation between panels faulty\n-        - [ 1588028 ] Fixed: Export HTML table has relative DOI URL\n-        - [ 1601651 ] Fixed: PDF subdirectory - missing first character\n-2.2b    - Added Mark Schenk's advanced HTML export filter.\n-        - Added options to copy/move/link to dragged linkable file (pdf, ps, etc.).\n-        - Removed unnecessary output text when scanning for external file changes.\n-        - Changed layout of entry editor to solve problem with collapsing text fields.\n-        - Added first version of support for XMP-metadata in PDFs.\n-          - \"Import into...\"\n-          - Integrate with copy/move/link.\n-          - Added option to write all/selected PDFs in database\n-        - Added tooltips to database tabs showing the file's full path.\n-        - Added function for setting or clearing specific fields in selected or\n-          all entries.\n-        - Setting a relative PDF/PS path in Database Properties now makes JabRef\n-          look for the directory relative to the bib file's location.\n-        - Removed Oxford comma from AuthorList...Comma-LayoutFormatters.\n-        - Added LayoutFormatters that print the Oxford comma.\n-        - Added missing space between abbreviated author first names:\n-          William Andrew Paul => W. A. Paul (used to be W.A. Paul)\n-        - Added LayoutFormatter for HTML paragraphs.\n-        - Changing Database Properties now causes the database to be marked as changed.\n-        - Improved simple search. Words are now treated as separate search terms,\n-          and phrases can be indicated with \"double quotes\".\n-        - When a letter key is pressed in the table, the first entry starting with the\n-          same letter (in the current sort column) is selected.\n-        - Bib files dragged into JabRef now appear in the Recent files menu.\n-        - Fixed bug in import dialog.\n-        - Better support for ISI files in general (should basically be better than INSPEC) including IEEE parsing.\n-        - Added regular expression search for auto-linking. Search is now more flexible by default.\n-        - Search operation also now search relative to the JabRef directory.\n-        - General improvements in Inspec ISI handling.\n-        - New LayoutFormatter: AuthorOrgSci - first author is in \"last, first\"\n-          all others in \"first last\". First names are abbreviated.\n-        - New LayoutFormatter: NoSpaceBetweenAbbreviations - spaces between multiple\n-          abbreviated first names are removed.\n-        - Improved PDF link resolver to produce proper URIs.                                                 s\n-        - [ 1503956 ] Fixed: Help text instead of Help icon.\n-        - [ 1542552 ] Fixed: Wrong author import from ISI file.\n-        - [ 1534537 ] Fixed: resize groups interface\n-        - [ 1465610 ] Fixed: (Double-)Names containing hyphen (-) not handled correctly\n-        - [ 1436014 ] Fixed: No comma added to separate keywords\n-        - [ 1548875 ] Fixed: download pdf produces unsupported filename\n-        - [ 1545601 ] Fixed: downloading pdf corrupts pdf field text\n-        - [ 1285977 ] Fixed: Impossible to properly sort a numeric field\n-        - [ 1535044 ] Fixed: Month sorting\n-        - [ 1540646 ] Fixed: Default sort order: bibtexkey\n-        - [ 1553552 ] Fixed: Not properly detecting changes to flag as changed\n-2.1     - Added capability to drag files and WWW links into JabRef. BibTeX files will be\n-          opened normally, other files imported, and WWW links downloaded and imported.\n-        - The -v command line option now makes the application only print version number\n-          and quit immediately.\n-        - Duplicates within a set of imported entries are now found and shown in the\n-          import inspection window.\n-        - Mac users can now choose between native and Swing file chooser under\n-          Preferences -> Advanced.\n-        - Fixed missing duplicate warning when importing without import inspection window.\n-        - Fixed error in ISI import which allowed empty fields to be set, causing errors\n-          when saving and reloading entries.\n-        - Fixed missing time and owner stamps when importing entries (only in 2.1b/2.1b2).\n-        - Fixed erroneous updates in entry editor if user switches to a different entry\n-          while downloading PDF/PS file.\n-        - Fixed bug (only in 2.1b2) in calling file open/save dialog on Mac OS X.\n-        - Fixed bug that made duplicate resolver dialog pop under import inspection dialog.\n-        - Fixed bug in windows-installer which prevented running JabRef from the\n-          command-line with arguments.\n-        - Added windows-installer-option to associate JabRef with .bib files.\n-2.1b2   - Added option to toggle floating of marked entries to the top of the table.\n-        - Added option to open, append and import multiple BibTeX files.\n-        - Improved support for LaTeX special characters in HTML and RTF representations.\n-        - Improved generation of subdatabase from AUX file. Crossreferenced entries are\n-          now included automatically.\n-        - Fixed bug that made entry selection get lost when an edit modifies the entry's\n-          position in the main table.\n-        - Fixed bug in BibTeXML export (entry type name missing in tag).\n-        - Fixed name handling in (non-compliant) Endnote files giving all author names\n-          on the same line.\n-        - Fixed problem with keyword handling in Medline import.\n-        - Fixed (harmless) NullPointerException when medline fetch is cancelled.\n-        - Fixed bug in parser that made {\"} illegal in fields quoted with \".\n-2.1b    - Known issue: font sizes cannot be changed, but should follow OS settings on\n-          Windows and Mac.\n-        - Known issue: some HTML may be handled inappropriately when downloading from\n-          IEEEXplore.\n-        - Changed Paste function so timestamp and owner fields are updated.\n-        - Added \"Other\" item to the \"New entry ...\" menu.\n-        - Changed sorting order so marked entries are displayed at the top of the table.\n-        - Added IEEEXplore search and download feature.\n-        - Added option to store entries in their original order. Unsorted table view now\n-          shows entries in their original order.\n-        - Added option to autogenerate keys for entries with missing keys before each save.\n-        - Improved handling of external URLs to prevent problems with special characters.\n-        - Medline and Endnote imports no longer automatically add curly braces around capital\n-          letters in title.\n-        - Float search now scrolls table to the top.\n-        - Fixed lockup problem in preview with uneven number of # characters in fields.\n-        - Fixed problem with default content selector fields reappearing after removal.\n-        - Fixed problem with unsupported character encodings being selectable and causing\n-          unreported save errors.\n-        - Fixed bug that blocked last line in table columns setup from being removed.\n-        - Fixed missing export formats from command line.\n-        - Fixed bug that made Review tab impossible to remove from entry editor.\n-        - Fixed bug in Medline XML import that assigned wrong PMID for some entries.\n-        - Fixed bug in custom export that collapsed sequences of two or more backslashes\n-          into a single backslash in output.\n-        - Fixed bug (misspelled formatter name) in Harvard RTF export.\n-2.0.1:  - Fixed bug that made a hidden entry editor under some circumstances store a\n-          field value to the wrong entry.\n-        - Fixed synchronization bug that made the opening of a new database sometimes fail.\n-        - Fixed bug in setting external journal lists when no personal list is set.\n-2.0:    - Changed sorting selection interface for main table for more intuitive\n-          operation.\n-        - Made import operation update \"working directory\".\n-        - Removed hard-coded author/editor name rearrangement in OpenOffice and\n-          OpenDocument exports.\n-        - Fixed hangup when parsing RIS files from Nature.\n-        - Fixed NullPointerException when generating database from AUX file on Mac OS X.\n-        - Fixed bug in routine for adding braces around capital letters.\n-        - Fixed bug in switching preview layouts.\n-        - Fixed bug in link handling in entry preview.\n-2.0b2:  - Changed field order in OpenDocument export to comply with bibliography requirement.\n-        - Added support for inserting citations into Emacs using gnuserv/gnuclient.\n-        - Added option to set a regular expression replace operation on generated bibtex keys.\n-        - Added support for custom importers inside a jar file.\n-        - Fixed bug in opening URLs containing '&' on Windows.\n-2.0b:   - Added a system for registering custom import formats in the form of Java classes.\n-        - Added export option for OpenDocument spreadsheet.\n-        - Added new options for name formatting in main table.\n-        - Added REPEC-NEP import filter.\n-        - Added option for non-field parameters for export formatters. If the parameters does not start with the\n-          backslash character, it will be passed unchanged to the formatter in place of any field value.\n-        - Added export formatter CurrentDate, which returns the current date, and takes a format string as\n-          parameter.\n-        - Added customization of table colors, accessible from Tools -> Preferences -> Entry table.\n-        - Added new Appearance tab to preferences dialog to gather appearance related options.\n-        - Added toggling of abbreviated and full journal names. The list of journals is realized as\n-           an external file, but editable from a Manage Journal Abbreviations panel. Secondary lists can also\n-           be linked, but not edited. There is a download option to quickly get a list available on the internet,\n-           and we will provide one or more lists for download from the SourceForge web server.\n-        - Added functionality for new JabRef instances to detect a running instance, and send\n-          command line parameters to the running instance for processing.\n-        - Added handling of HTML links in preview panel.\n-        - Added confirmation dialog when database is saved and the chosen encoding doesn't support all characters.\n-          Gives options to save, cancel or try a different encoding.\n-        - The encoding used when opening a database is now remembered, and used when database is stored.\n-        - Added review field for research comments, paper reviews, etc.\n-        - Added option to disable wrapping for certain fields. Wrapping of pdf, ps, doi and url is disabled by\n-          default.\n-        - Antialiasing option now affects entry editor text fields as well as table text.\n-        - Changed to monospaced font in source editor field.\n-        - Removed option to put double braces around BibTeX fields, but retained option to remove double braces\n-          when loading. Added option to put braces around capital letters of a chosen set of fields.\n-        - Improved Ovid import.\n-        - Fixed problem with ordering of BibTeX strings that are referred to by other strings.\n-        - Fixed problem with loading 16-bit encoded bib files with 8-bit encoding as default, and vice versa.\n-        - Fixed multiplying authors bug when author/editor field appears both in Required and Optional tabs.\n-        - Fixed startup freeze when trying to load certain malformed bib files.\n-        - Fixed bug related to multi-line fields in RIS import.\n-        - Fixed bug related to looking up a fully qualified DOI\n-        - Included review field to preview panel 1, which shows the abstract\n-        - Fixed bug where booktitle field was not displayed in preview\n-          for conference proceedings, similar to journal field\n-        - By default preserve capitalization on the following fields: title;journal;booktitle;review;abstract\n-1.8.1:  - Added automatic timestamp with configurable format for entries.\n-        - Added new key generator modifier \":abbr\" to abbreviate field contents.\n-        - Added Help button in Preferences -> Entry preview\n-        - Added Big5, Big5_HKSCS and GBK encodings for Chinese.\n-        - Improved marking feature. Username is now used for marking, so different users can mark\n-          entries separately without interference.\n-        - Improved handling of names such as \"Firstname de la Lastname jr.\", with different handling\n-          for presentation and sorting purposes. Key generation now should always use the genuine last\n-          name, and not produce keys like \"de2001\".\n-        - Removed duplicate warning from inspection dialog for non-selected entries.\n-        - Fixed setting of sheet name in OpenOffice.org Calc export.\n-        - Fixed bug that prevented PDF/PS opening by F4 from automatically finding files in\n-          subdirectories below the main PDF/PS dir.\n-        - Fixed BibTeX parser bug that made it choke on short comment strings.\n-        - Fixed bug that made regexp search fail for fields containing newline characters.\n-        - Fixed platform-dependent handling of newline characters.\n-        - Fixed bug that prevented command line import with explicit format.\n-        - Fixed bug that made it impossible to disable table antialiasing.\n-        - Fixed AuthorAndsCommaReplacer.\n-1.8:    - Search panel now starts visible if it was visible at last shutdown.\n-        - Added option to disable import inspection window when only one entry is being imported.\n-        - Fixed parser bug that caused problems for bib files containing extra characters after the\n-          last entry.\n-        - Fixed missing month in JStor import.\n-        - Fixed some bugs in \"new from plain-text\" wizard\n-1.8b2:  - Changed handling of external updates so the notification is suppressed when there are\n-          no actual changes.\n-        - Changed autodetecting import so BibTeX files are handled more similarly to other formats.\n-        - Enabled sorting by icon columns.\n-        - Added option to remove BibTeX source panel from entry editor.\n-        - Added command line option to not load any files at startup. Will override any autoloading\n-          or other command line options that normally load or import files.\n-        - Added handling of duplicates to import inspection window.\n-        - Made entry preview be updated whenever the selection is expanded by one row, to make\n-          it more useful while selecting a set of entries.\n-        - Changed BibTeX field parsing to avoid inserting line breaks at wrong places.\n-        - Improved handling of page numbers in Medline import.\n-        - Fixed import of file links when importing SixPack files.\n-        - Fixed bug that prevented closing of search interface when no databases are open.\n-        - Fixed OpenOffice Calc export to be compatible with OpenOffice.org 2.0 beta.\n-        - Fixed bugs in Refer/Endnote import filter.\n-        - Fixed bug that caused changes to be lost in some cases when the same field is present\n-          in multiple entry editor tabs.\n-        - Fixed bug that prevented command line autodetecting import from working with BibTeX files.\n-        - Fixed minor bug in routine for removing double braces.\n-1.8b:   - Added option to store bib file with double braces.\n-        - Follow @input tags in aux files to indicate nested aux files for\n-          generating subdatabases.\n-        - Improved wrapping and formatting of bib files, to preserve paragraph separator (empty line).\n-        - Added test buttons for customization of preview layouts.\n-        - Added inspection dialog for previewing and generating keys for imported entries,\n-          and deciding which ones to keep and discard. The dialog allows inspection during long import\n-          processes such as Medline search.\n-        - Restructured layout to use a common side pane with all tabs.\n-        - Added import filter for Cambridge Scientific Abstracts (CSA) format.\n-        - Added PS directory with similar options as PDF.\n-        - Added [authshort] and [edtrshort] key field markers. Patch submitted by\n-          Kolja Brix.\n-        - Made the program remember preview enable setting.\n-        - Improved handling of illegal regular expressions in search.\n-        - Removed options to search only Required, Optional and/or General fields,\n-          in order to simplify search interface.\n-        - Changed keys for Next and Previous tab to CTRL-PGDN and CTRL-PGUP to match shortcuts in a\n-          certain popular web browser.\n-        - Minor change to Preferences -> Table columns to enable insertion of column in position 2.\n-        - Fixed parser bug that caused problems for files with >10000 entries.\n-        - Fixed bug in entry editor that caused the source edit panel to remove marking from entries.\n-        - Fixed export bug that made \"\\begin\" tags fail if encountered immediately after an \"\\end\" tag.\n-        - Fixed export bug that made whitespace disappear after empty field values.\n-        - Fixed ISI import bug that handled SO fields with line breaks wrong.\n-        - Fixed bug occuring when choosing not to import duplicate imported entry.\n-        - Fixed problem with detecting popup trigger on Mac OSX with one button mouse.\n-        - Fixed erroneous relative paths for PDF files when PDF directory is not set.\n-        - Fixed entry preview to resolve string references.\n-1.7.1   - Removed unnecessary stack traces when opening external viewer.\n-        - Fixed bug that made Ctrl-E destroy current edit in entry editor.\n-        - Fixed problem when copying modified BibTeX key gave old value.\n-        - Fixed missing 'booktitle' import in CONF entries in RIS import.\n-        - Fixed bug that made group tree disappear for certain keyword expressions.\n-        - Fixed bug that made standard BibTeX fields be saved without line wrapping.\n-1.7     - When fetching from Medline or CiteSeer, fetched entry is now opened in editor.\n-        - Added French translations of help files.\n-        - Added color highlighting of focused text field in entry editor.\n-        - Added option in context menu of entry editor for changing capitalization\n-              of field contents.\n-            - Added name conversion \"Smith, RA\" -> \"Smith, R. A.\" to Medline import.\n-            - Fixed bug that left some search settings items disabled when they shouldn't be.\n-        - Fixed bug that caused requirement for restart to register change in default\n-          key pattern.\n-        - Fixed bug that caused crash some times after adding/removing field content selectors.\n-        - Fixed bug in recognizing custom entry types when reading bib files.\n-        - Fixed bug that allowed a deleted entry to stay visible in the entry editor.\n-1.7b2:  - Made side pane resizable.\n-        - Replaced entry customization dialog with improved interface.\n-        - Added standard entry type \"conference\", similar to \"inproceedings\".\n-        - Added default key pattern to avoid the need to set similar patterns manually.\n-        - Added line wrapping to metadata in saved .bib file to avoid long lines.\n-        - Added \"bibtexkey\" as implicit fourth sort criterion, to minimize problem with almost\n-          similar entries swapping places.\n-        - Added OpenOffice.org Calc export filter that exports spreadsheet compatible with the\n-          OpenOffice.org bibliography feature.\n-        - Added a couple of previously unsupported publication types in SciFinder.\n-        - Added extra shortcuts CTRL-+ and CTRL-- for switching tabs in entry editor, since\n-          original shortcuts CTRL[-SHIFT]-TAB is used by some window managers.\n-        - Updated Endnote export filter.\n-        - Fixed focus and key binding problems for switching tabs/entries in entry editor\n-        - Fixed bug that prevented required fields tab from appearing for entries with only bibtex key\n-          as required field.\n-        - Fixed bug that prevented the user from changing the default encoding.\n-        - Fixed bugs in RIS import.\n-        - Fixed bug 1112050; freeze when reading certain author fields with mismatched braces.\n-1.7b:   - Changed routine for rearranging author names (Lastname, Firstname) so bracketed\n-            expressions are treated as units.\n-        - Grouping controls now allow group hierarchies, and now allow explicit and search\n-          expression groups as well as keyword groups.\n-        - Added full customization of general fields tabs\n-        - Added option to preserve formatting for non-BibTeX fields.\n-        - Added integrity check for database.\n-        - Added export filters EndNote and Harvard RTF.\n-        - Added automatic import format chooser for import (same as wildcard import below).\n-        - Added wildcard (*) option for command-line import, to try to automatically\n-          determine the correct format.\n-        - Improved layout of Preferences dialog.\n-        - Improved several import filters.\n-        - Added authIniN/edtrIniN key formatters.\n-        - Marked entries now float to the top when no searching or grouping reordering is active.\n-        - Fixed problem with opening file dialog on Win NT - AWT dialog is now opened if\n-          Swing dialog fails.\n-1.6:    - Improved handling of entry selection in various ways. E.g. selected entry is now scrolled\n-          into view when opening entry editor and entry is kept selected when importing CiteSeer\n-          fields.\n-        - Fixed update bug between autogenerated bibtex key and source panel.\n-        - Fixed missing . at the end of last author name in RIS import.\n-        - Fixed NullPointerException on certain special characters when exporting to BibTeXML.\n-        - Fixed bug that sometimes prevented the unmarking of entries.\n-        - Fixed problem with formatting one-name authors.\n-1.6b:   - Added mnemonic keys to menus and menu items.\n-        - Added MODS and tab-separated file export\n-        - Added facility for detecting and handling external changes to open bib files.\n-        - Added scan option for exact duplicates with automatic removal.\n-        - Bibtex strings are now sorted automatically.\n-        - Bibtex strings are now resolved when exporting database.\n-        - Fixed problem with field content selector getting too wide. Limited width.\n-        - Fixed PDF/PS view routine to remove problems with filenames\n-          containing spaces.\n-        - Fixed bug that interfered with Fetch Medline by ID, and fixed\n-          parsing problem with certain Medline entries.\n-        - Fixed bug that interfered with Push to WinEdt.\n-        - Fixed HTML output so \\c{c} is handled correctly.\n-        - command line option for generating a sub-database from LaTex aux file\n-          entries\n-        - simple copy/paste menu in entry editor\n-        - experimental: text-input-area with underlying infotext in plaintext import dialog\n-1.55:   - Made method for opening PDF files robust with regard to file separators (/ and \\),\n-          so bib files can easier be used across platforms.\n-        - Improved Medline fetcher. Can now fetch entries based on a search expression.\n-        - Added features for fetching fields and referring publications from the CiteSeer\n-          database.\n-        - Added option to always save database ordered by author/editor/year, and made this\n-          the default setting.\n-        - When a single entry is selected, right-click menu now shows a checkbox menu for group\n-          memberships instead of the regular \"Add to\" and \"Remove from\" menus.\n-        - Improved [shorttitle] and [veryshorttitle] special key pattern fields.\n-        - Added dialog box for conveniently setting the fields of an entry from a\n-          plain text description.\n-        - Added formatter \"ResolvePDF\" to create correct PDF/PS links in HTML export when\n-          relative file names are used.\n-        - Added Abstract panel in entry editor.\n-        - Added alternate preview with abstract, and made both previews configurable.\n-        - Added the option to create a subset of a database based on an .aux file.\n-        - Added 'Cancel' button to duplicate resolver dialog, so the process can be stopped.\n-        - Added check for spaces in custom entry type names.\n-        - Added several new key pattern markers.\n-        - Added toolbar buttons for Mark/Unmark to improve discoverability.\n-        - Fixed bug that made export filters ignore the chosen character encoding.\n-        - Fixed bug that interfered with author name formatting.\n-        - Fixed various bugs in import filters.\n-        - Fixed bug that prevented confirmation dialog when deleting entry from the entry editor.\n-        - Fixed bug that made the next entry be opened instead of the current, when pressing\n-          Enter in table.\n-        - Fixed bug that made it possible to leave a source edit when the source didn't validate\n-          properly. Also made it impossible to change table selection until source validates.\n-1.5:    - Enabled selection of default encoding, and started storing encoding information in\n-          saved .bib files, which is used when reopening.\n-        - Added Highlight and select options to the group interface, and made it possible\n-            to change the number of visible lines in the list.\n-              - Added option to allow or disallow direct table editing.\n-        - Added optional confirmation dialog for deleting entries.\n-              - Added optional warning dialog for duplicate BibTeX keys.\n-        - Added warnings to bibtex parser, and prevented failure to load files with\n-          duplicate string definitions.\n-              - Added JStor import filter.\n-        - Changed the look and feel to JGoodies Forms on non-Macintosh platforms.\n-        - Optimized performance in several areas.\n-        - Numerous usability improvements.\n-        - Fixed RIS import bug caused by short lines.\n-              - Fixed bug in SciFinder import.\n-              - Fixed bug that made entire field get cleared when removing from group.\n-1.4:    - Added advanced search feature.\n-        - Added facility for using custom export formats.\n-        - Added command line options for importing/exporting files, importing/exporting\n-          user preferences, loading session and for suppressing the GUI (using RitOpt for\n-          parsing options).\n-        - Added automatic stripping of \\url{} when opening url.\n-        - Improved export filters.\n-        - Fixed focus bug which sometimes interfered with cut/copy/paste.\n-1.3.1:  - Bugfix.\n-1.3:    - Added entry preview.\n-        - Added detection of duplicate entries.\n-              - Added possibility to mark entries persistently.\n-        - Added import filter for Sixpack and Biblioscape Tag files.\n-              - Added option to use a standard directory for PDFs. PDFs placed in or below this directory\n-          and named after an entry's BibTeX key can be automatically found.\n-            - Added optional columns showing clickable icons for pdf/ps and url/doi links.\n-        - Added menu and toolbar actions for open pdf/ps and url/doi.\n-        - Added web lookup of DOI.\n-        - Added several new special field markers to the key autogenerator.\n-              - Added BibTeXML and simple HTML export.\n-              - Changed browsing of entries. Entry editor now shows the selected entry.\n-              - Improved HTML export for several entry types.\n-              - Improved compatibility with Mac OS X.\n-        - Made it possible to set custom secondary and tertiary sort fields.\n-        - Made the entry number column width customizable.\n-              - Fixed bug that caused database to always be marked as changed after viewing source.\n-               - Fixed bug in selector word removal.\n-               - Fixed bug that made the file chooser unable to interpret Mac OS X aliases.\n-1.2:    - Replaced the icon set.\n-        - Added support for French language.\n-        - Added customization of key generation.\n-        - Improved HTML export.\n-        - Added Replace string feature.\n-            - Made a couple of adaptations for Mac OS X users.\n-        - Added option in Table Preferences to set current column widths as default.\n-            - Added import filter for BibTeXML.\n-        - Fixed bug that allowed non-lowercase grouping field, leading to problems.\n-        - Fixed bug that made selector words added in the dialog to be lowercased.\n-        - Fixed bug relating to translated help files.\n-1.19:   - Entry editor is now opened for an entry that causes an error when saving.\n-        - Added options to display names in harmonised format in the main table.\n-        - Added Docbook and (experimental) HTML export.\n-        - Enabled 'doi' and 'pii' fields for Medline import.\n-        - Enabled antialiasing fonts.\n-        - Added the Kunststoff look&feel to give a more pleasant user interface.\n-        - Added font selector for the main table.\n-        - Improved table column customization.\n-        - Added word selector feature for selected fields (keywords, journal).\n-        - Added support for German and Norwegian language.\n-        - Generalized copy cite key features for multiple entries.\n-        - Added quick load/save session feature.\n-        - Fixed issue/number bug in ISI import.\n-        - Added \"Open pdf/ps\" item in right-click menu.\n-        - Fixed bug causing external viewer to only work in General fields.\n-        - Added functionality for using Browse buttons for file-related fields\n-          (ps, pdf, etc.).\n-        - Added Browse buttons to External programs tab in Preferences.\n-        - Fixed bug related to Save database and Source field which caused changes\n-          to disappear.\n-1.1:    - Added bibtex key uniqueness checking, and prevented autogeneration\n-          from generating non-unique keys.\n-        - Added command line option to load file on startup.\n-        - Fixed problem with autogeneration creating invalid keys.\n-        - Improved Refer/Endnote import.\n-        - Added feature for importing entries and/or strings and/or group\n-          definitions from another BibTeX database.\n-        - Added menu choices to import into open database.\n-              - Added toolbar button for closing current database.\n-              - Fixed shortcut key for \"Store field\" in entry editor, and fixed\n-                problem that made shortcut for \"Save database\" unavailable from\n-          entry editor.\n-        - Added option to fetch Medline entries automatically by\n-          ID, based on a patch submitted by Mike Smoot.\n-        - Fixed bug in RIS import.\n-        - Added options to copy key and copy \"\\cite{key}\" to right-click menu.\n-        - Fixed bug that caused some General fields not to get displayed.\n-        - Enabled customization of General fields.\n-        - Enabled customization of existing entry types, and definition of\n-          new types.\n-1.0:    First release., @@ -0,0 +1,93 @@\n+# Changelog\n+All notable changes to this project will be documented in this file.\n+This project **does not** adhere to [Semantic Versioning](http://semver.org/).\n+This file tries to follow the conventions proposed by [keepachangelog.com](http://keepachangelog.com/).\n+Here, the categories \"Changed\" for added and changed functionality,\n+\"Fixed\" for fixed functionality, and\n+\"Removed\" for removed functionality is used.\n+\n+We refer to [GitHub issues](https://github.com/JabRef/jabref/issues) by using `#NUM`,\n+to [sourceforge bugs](https://sourceforge.net/p/jabref/bugs/) by using `bug NUM`, and\n+to [sourceforge feature requests](https://sourceforge.net/p/jabref/features/) by using `feature NUM`.\n+\n+## [Unreleased]\n+\n+### Changed\n+ - Feature: Search DOAJ, Directory of Open Access Journals\n+ - Changes the old integrity check by improving the code base (+tests) and converting it to a simple issues table\n+ - Added combo box in MassSetFieldAction to simplify selecting the correct field name\n+ - Feature: Merge information from both entries on duplication detection\n+ - Always use import inspection dialog on import from file\n+ - All duplicate whitespaces / tabs / newlines are now removed from non-multiline fields\n+ - Feature: Merge information from a DOI generated BibTex entry to an entry\n+ - Added more characters to HTML/Unicode converter\n+ - Feature: Push citations to Texmaker ([bug 318](https://sourceforge.net/p/jabref/bugs/318/), [bug 582](https://sourceforge.net/p/jabref/bugs/582/))\n+ - Case changers improved to honor words (not yet more than single words) within {}\n+ - Feature: Added converters from HTML and Unicode to LaTeX on right click in text fields (#191)\n+ - Feature: Add an option to the FileList context menu to delete an associated file from the file system\n+ - Feature: Field names \"Doi\", \"Ee\", and \"Url\" are now written as \"DOI\", \"EE\", and \"URL\"\n+ - The default language is now automatically set to the system's locale.\n+ - Use correct encoding names (#155) and replace old encoding names in bibtex files. This changes the file header.\n+ - No longer write JabRef version to BibTex file header.\n+ - No longer add blank lines inside a bibtex entry\n+ - Feature: When pasting a Google search URL, meta data will be automatically stripped before insertion.\n+ - Feature: PDF auto download from ACS, arXiv, ScienceDirect, SpringerLink, and Google Scholar\n+ - List of authors is now auto generated `scripts/generate-authors.sh` and inserted into L10N About.html\n+ - Streamline logging API: Replace usages of java.util.logging with commons.logging\n+ - Remove support for custom icon themes. The user has to use the default one.\n+ - Solved feature request #767: New subdatabase based on AUX file (biblatex)\n+ - Feature: DOItoBibTeX fetcher now also handles HTTP URLs\n+ - Feature: \"Normalize to BibTeX name format\" also removes newlines\n+ - Tweak of preference defaults\n+   - Autolink requires that the filename starts with the given BibTeX key and the default filename patterns is key followed by title\n+   - Default sorting changed\n+   - Default label pattern changed from [auth][year] to [authors3][year]\n+ - Feature: case changers now leave protected areas (enclosed with curly brakets) alone\n+ - BREAKING: The BibTeX key generator settings from previous versions are lost\n+ - BREAKING: LabelPatterns `[auth.etal]`, `[authEtAl]`, `[authors]`, `[authorsN]`, `[authorLast]` and more to omit spaces and commas (and work as described at http://jabref.sourceforge.net/help/LabelPatterns.php)\n+ - BREAKING: `[keywordN]` returns the Nth keyword (as described in the help) and not the first N keywords\n+ - BREAKING: If field consists of blanks only or an emtpy string, it is not written at all\n+ - Feature: new LabelPattern `[authFirstFull]` returning the last name of the first author and also a \"van\" or \"von\" if it exists\n+ - Feature: all new lines when writing an entry are obeying the globally configured new line (File -> newline separator). Affects fields: abstract and review\n+ - Feature: `[veryShortTitle]` and `[shortTitle]` also skip words like \"in\", \"among\", \"before\", ...\n+ - Feature: New LabelPattern `[keywordsN]`, where N is optional. Returns the first N keywords. If no N is specified (\"`[keywords]`\"), all keywords are returned. Spaces are removed.\n+ - Update supported LookAndFeels\n+ - Show replaced journal abbreviations on console\n+\n+### Fixed\n+ - Fixed bug when having added and then removed a personal journal list, an exception is always shown on startup\n+ - Fixed a bug in the IEEEXploreFetcher\n+ - Fixed [bug 1282](https://sourceforge.net/p/jabref/bugs/1282/) related to backslashes duplication.\n+ - Fixed [bug 1285](https://sourceforge.net/p/jabref/bugs/1285/): Editing position is not lost on saving\n+ - Fixed [bug 1297](https://sourceforge.net/p/jabref/bugs/1297/): No console message on closing\n+ - Fixed #194: JabRef starts again on Win XP and Win Vista\n+ - Fixed: Tooltips are now shown for the #-field when the bibtex entry is incomplete.\n+ - Fixed #173: Personal journal abbreviation list is not loaded twice\n+ - Bugfix: Preview of external journal abbreviation list now displays the correct list\n+ - Fixed #223: Window is displayed in visible area even when having multiple screens\n+ - Localization tweaks: \"can not\" -> \"cannot\" and \"file name\" -> \"filename\"\n+ - Fixed: When reconfiguring the BibTeX key generator, changes are applied instantly without requiring a restart of JabRef\n+ - Fixed #250: No hard line breaks after 70 chars in serialized JabRef meta data\n+ - Fixed [bug 1296](https://sourceforge.net/p/jabref/bugs/1296/): External links in the help open in the standard browser\n+\n+### Removed\n+ - BREAKING: Remove plugin functionality.\n+ - The key bindings for searching specific databases are removed\n+ - Remove option to toggle native file dialog on mac by making JabRef always use native file dialogs on mac\n+ - Remove options to set PDF and PS directories per .bib database as the general options have also been deleted.\n+ - Remove option to disable renaming in FileChooser dialogs.\n+ - Remove option to hide the BibTeX Code tab in the entry editor.\n+ - Remove option to set a custom icon for the external file types. This is not possible anymore with the new icon font.\n+ - Remove legacy options to sync files in the \"pdf\" or \"ps\" field\n+ - Remove button to merge entries and keep the old ones.\n+ - Remove non-compact rank symbols in favor of compact rank\n+ - Remove Mr.DLib support as MR.DLib will be shut down in 2015\n+ - Remove support for key bindings per external application by allowing only the key binding \"push to application\" for the currently selected external application.\n+ - Remove \"edit preamble\" from toolbar\n+ - Remove support to the move-to-SysTray action\n+\n+## 2.11 - 2015-11-11\n+\n+The changelog of 2.11 and versions before is maintained as text file in the [dev_2.11 branch](https://github.com/JabRef/jabref/tree/dev_2.11).\n+\n+[Unreleased]: https://github.com/JabRef/jabref/compare/v2.11...HEAD, @@ -25,10 +25,9 @@ When you use Eclipse, the required config is generated automatically by `gradlew\n You can also run `gradlew format` to let the [Gradle Format plugin](https://github.com/youribonnaffe/gradle-format-plugin) do the formatting.\n \n \n-### Add your change to the CHANGELOG\n-You should edit the [CHANGELOG](CHANGELOG) located in the root directory of the JabRef source.\n-Add a line with your changes and your name.\n-Nicknames are OK.\n+### Add your change to CHANGELOG.md\n+You should edit the [CHANGELOG.md](CHANGELOG.md) located in the root directory of the JabRef source.\n+Add a line with your changes in the appropriate section.\n \n If you did internal refactorings or improvements not visible to the user (e.g., UI, .bib file), then you don't need to put an entry there.\n , ", 96, 1425, "\"removed, added, modified, \"", 1521], ["Oscar Gustafsson", "Removed split again", "11/14/15, 11:17:37 AM", "Oscar Gustafsson", "810344d015521fb2cbbbfccc55ba152c0d2925cf", ["src/main/java/net/sf/jabref/logic/util/strings/StringUtil.java"], "@@ -84,19 +84,6 @@ public static String join(String[] strings, String separator) {\n         return join(strings, separator, 0, strings.length);\n     }\n \n-    /**\n-     * Takes a delimited string, splits it and returns\n-     *\n-     * @param names a <code>String</code> value\n-     * @return a <code>String[]</code> value\n-     */\n-    public static String[] split(String names, String delimiter) {\n-        if (names == null) {\n-            return null;\n-        }\n-        return names.split(delimiter);\n-    }\n-\n     /**\n      * Removes optional square brackets from the string s\n      *, ", 0, 13, "\"modified, \"", 13], ["Oscar Gustafsson", "Removed warning text and boldness", "11/13/15, 10:22:12 AM", "Oscar Gustafsson", "3874f486c6f73c1aa34c25abda98ef25dc3dd0d0", ["src/main/java/net/sf/jabref/gui/JabRefFrame.java"], "@@ -897,10 +897,7 @@ public boolean quit() {\n                         filename = GUIGlobals.untitledTitle;\n                     }\n                     int answer = JOptionPane.showOptionDialog(JabRefFrame.this,\n-                            \"<html><br><b>\" + Localization.lang(\"Database %0 has changed.\", filename) + \"</b>\\n\\n\"\n-                                    + Localization.lang(\n-                                            \"Click \\\"%0\\\" to save the changes,\\nclick \\\"%1\\\" to discard any changes,\\nclick \\\"%2\\\" to return to the main window.\",\n-                                            options[0].toString(), options[1].toString(), options[2].toString()),\n+                            Localization.lang(\"Database %0 has changed.\", filename),\n                             Localization.lang(\"Unsaved changes\"), JOptionPane.YES_NO_CANCEL_OPTION,\n                             JOptionPane.WARNING_MESSAGE, null, options, options[2]);\n , ", 1, 4, "\"modified, \"", 5], ["Simon Harrer", "Make model independent of any other JabRef classes.", "11/12/15, 10:26:24 PM", "Simon Harrer", "14df2b8105b9706155baa0b86c5559946aeaa058", ["src/main/java/net/sf/jabref/JabRef.java", "src/main/java/net/sf/jabref/JabRefPreferences.java", "src/main/java/net/sf/jabref/bibtex/BibtexEntryWriter.java", "src/main/java/net/sf/jabref/bibtex/EntryTypes.java", "src/main/java/net/sf/jabref/exporter/FileActions.java", "src/main/java/net/sf/jabref/gui/AttachFileDialog.java", "src/main/java/net/sf/jabref/gui/EntryCustomizationDialog2.java", "src/main/java/net/sf/jabref/gui/EntryTypeDialog.java", "src/main/java/net/sf/jabref/gui/EntryTypeList.java", "src/main/java/net/sf/jabref/gui/FindUnlinkedFilesDialog.java", "src/main/java/net/sf/jabref/gui/ImportInspectionDialog.java", "src/main/java/net/sf/jabref/gui/JabRefFrame.java", "src/main/java/net/sf/jabref/gui/MainTableFormat.java", "src/main/java/net/sf/jabref/gui/RightClickMenu.java", "src/main/java/net/sf/jabref/gui/SearchResultsDialog.java", "src/main/java/net/sf/jabref/gui/actions/NewEntryAction.java", "src/main/java/net/sf/jabref/gui/entryeditor/EntryEditor.java", "src/main/java/net/sf/jabref/gui/fieldeditors/FileListEditor.java", "src/main/java/net/sf/jabref/gui/fieldeditors/TextArea.java", "src/main/java/net/sf/jabref/gui/fieldeditors/TextField.java", "src/main/java/net/sf/jabref/gui/labelPattern/LabelPatternPanel.java", "src/main/java/net/sf/jabref/gui/preftabs/PreferencesDialog.java", "src/main/java/net/sf/jabref/gui/preftabs/PreviewPrefsTab.java", "src/main/java/net/sf/jabref/importer/CheckForNewEntryTypesAction.java", "src/main/java/net/sf/jabref/importer/fetcher/IEEEXploreFetcher.java", "src/main/java/net/sf/jabref/importer/fileformat/BibTeXMLHandler.java", "src/main/java/net/sf/jabref/importer/fileformat/BiblioscapeImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/BibtexParser.java", "src/main/java/net/sf/jabref/importer/fileformat/BiomailImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/CsaImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/EndnoteImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/InspecImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/IsiImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/JstorImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/MedlineHandler.java", "src/main/java/net/sf/jabref/importer/fileformat/MedlinePlainImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/OvidImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/RepecNepImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/RisImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/ScifinderImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/SilverPlatterImporter.java", "src/main/java/net/sf/jabref/importer/fileformat/SixpackImporter.java", "src/main/java/net/sf/jabref/logic/CustomEntryTypesManager.java", "src/main/java/net/sf/jabref/logic/util/strings/StringUtil.java", "src/main/java/net/sf/jabref/logic/xmp/XMPSchemaBibtex.java", "src/main/java/net/sf/jabref/logic/xmp/XMPUtil.java", "src/main/java/net/sf/jabref/model/entry/AuthorList.java", "src/main/java/net/sf/jabref/model/entry/BibLatexEntryTypes.java", "src/main/java/net/sf/jabref/model/entry/BibtexEntryTypes.java", "src/main/java/net/sf/jabref/model/entry/CompareUtil.java", "src/main/java/net/sf/jabref/model/entry/CustomEntryType.java", "src/main/java/net/sf/jabref/model/entry/EntryTypes.java", "src/main/java/net/sf/jabref/model/entry/Util.java", "src/main/java/net/sf/jabref/sql/exporter/DBExporter.java", "src/main/java/net/sf/jabref/sql/importer/DBImporter.java", "src/main/java/net/sf/jabref/util/Util.java", "src/test/java/net/sf/jabref/ArchitectureTests.java", "src/test/java/net/sf/jabref/bibtex/BibtexEntryWriterTest.java", "src/test/java/net/sf/jabref/importer/fileformat/OAI2ImportTest.java", "src/test/java/net/sf/jabref/model/entry/IdGeneratorTest.java", "src/test/java/net/sf/jabref/model/entry/MonthUtilTest.java", "src/test/java/net/sf/jabref/util/UtilTest.java"], "@@ -43,8 +43,6 @@\n import net.sf.jabref.migrations.PreferencesMigrations;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.CustomEntryType;\n-import net.sf.jabref.model.entry.EntryTypes;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.commons.logging.impl.Jdk14Logger;, @@ -44,6 +44,7 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.labelPattern.GlobalLabelPattern;\n import net.sf.jabref.logic.util.OS;\n+import net.sf.jabref.model.entry.Util;\n import net.sf.jabref.model.entry.CustomEntryType;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -1344,10 +1345,10 @@ public CustomEntryType getCustomEntryType(int number) {\n             return null;\n         }\n         if (priOpt == null) {\n-            return new CustomEntryType(StringUtil.capitalizeFirst(name), req, opt);\n+            return new CustomEntryType(Util.capitalizeFirst(name), req, opt);\n         }\n-        String[] secOpt = StringUtil.getRemainder(opt, priOpt);\n-        return new CustomEntryType(StringUtil.capitalizeFirst(name), req, priOpt, secOpt);\n+        String[] secOpt = Util.getRemainder(opt, priOpt);\n+        return new CustomEntryType(Util.capitalizeFirst(name), req, priOpt, secOpt);\n \n     }\n , @@ -30,7 +30,6 @@\n import java.util.*;\n \n import com.google.common.base.Strings;\n-import net.sf.jabref.model.entry.EntryTypes;\n \n public class BibtexEntryWriter {\n , @@ -0,0 +1,153 @@\n+package net.sf.jabref.bibtex;\n+\n+import net.sf.jabref.Globals;\n+import net.sf.jabref.JabRefPreferences;\n+import net.sf.jabref.model.entry.BibLatexEntryTypes;\n+import net.sf.jabref.model.entry.BibtexEntryType;\n+import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.model.entry.CustomEntryType;\n+\n+import java.util.*;\n+\n+public class EntryTypes {\n+\n+    private static final TreeMap<String, BibtexEntryType> ALL_TYPES = new TreeMap<>();\n+    private static final TreeMap<String, BibtexEntryType> STANDARD_TYPES;\n+\n+    static {\n+        // Put the standard entry types into the type map.\n+        Globals.prefs = JabRefPreferences.getInstance();\n+        if (!Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n+            initBibtexEntryTypes();\n+        } else {\n+            initBibLatexEntryTypes();\n+        }\n+        // We need a record of the standard types, in case the user wants\n+        // to remove a customized version. Therefore we clone the map.\n+        STANDARD_TYPES = new TreeMap<>(ALL_TYPES);\n+    }\n+\n+    private static void initBibLatexEntryTypes() {\n+        ALL_TYPES.put(\"article\", BibLatexEntryTypes.ARTICLE);\n+        ALL_TYPES.put(\"book\", BibLatexEntryTypes.BOOK);\n+        ALL_TYPES.put(\"inbook\", BibLatexEntryTypes.INBOOK);\n+        ALL_TYPES.put(\"bookinbook\", BibLatexEntryTypes.BOOKINBOOK);\n+        ALL_TYPES.put(\"suppbook\", BibLatexEntryTypes.SUPPBOOK);\n+        ALL_TYPES.put(\"booklet\", BibLatexEntryTypes.BOOKLET);\n+        ALL_TYPES.put(\"collection\", BibLatexEntryTypes.COLLECTION);\n+        ALL_TYPES.put(\"incollection\", BibLatexEntryTypes.INCOLLECTION);\n+        ALL_TYPES.put(\"suppcollection\", BibLatexEntryTypes.SUPPCOLLECTION);\n+        ALL_TYPES.put(\"manual\", BibLatexEntryTypes.MANUAL);\n+        ALL_TYPES.put(\"misc\", BibLatexEntryTypes.MISC);\n+        ALL_TYPES.put(\"online\", BibLatexEntryTypes.ONLINE);\n+        ALL_TYPES.put(\"patent\", BibLatexEntryTypes.PATENT);\n+        ALL_TYPES.put(\"periodical\", BibLatexEntryTypes.PERIODICAL);\n+        ALL_TYPES.put(\"suppperiodical\", BibLatexEntryTypes.SUPPPERIODICAL);\n+        ALL_TYPES.put(\"proceedings\", BibLatexEntryTypes.PROCEEDINGS);\n+        ALL_TYPES.put(\"inproceedings\", BibLatexEntryTypes.INPROCEEDINGS);\n+        ALL_TYPES.put(\"reference\", BibLatexEntryTypes.REFERENCE);\n+        ALL_TYPES.put(\"inreference\", BibLatexEntryTypes.INREFERENCE);\n+        ALL_TYPES.put(\"report\", BibLatexEntryTypes.REPORT);\n+        ALL_TYPES.put(\"set\", BibLatexEntryTypes.SET);\n+        ALL_TYPES.put(\"thesis\", BibLatexEntryTypes.THESIS);\n+        ALL_TYPES.put(\"unpublished\", BibLatexEntryTypes.UNPUBLISHED);\n+        ALL_TYPES.put(\"conference\", BibLatexEntryTypes.CONFERENCE);\n+        ALL_TYPES.put(\"electronic\", BibLatexEntryTypes.ELECTRONIC);\n+        ALL_TYPES.put(\"mastersthesis\", BibLatexEntryTypes.MASTERSTHESIS);\n+        ALL_TYPES.put(\"phdthesis\", BibLatexEntryTypes.PHDTHESIS);\n+        ALL_TYPES.put(\"techreport\", BibLatexEntryTypes.TECHREPORT);\n+        ALL_TYPES.put(\"www\", BibLatexEntryTypes.WWW);\n+        ALL_TYPES.put(\"ieeetranbstctl\", BibLatexEntryTypes.IEEETRANBSTCTL);\n+    }\n+\n+    private static void initBibtexEntryTypes() {\n+        ALL_TYPES.put(\"article\", BibtexEntryTypes.ARTICLE);\n+        ALL_TYPES.put(\"inbook\", BibtexEntryTypes.INBOOK);\n+        ALL_TYPES.put(\"book\", BibtexEntryTypes.BOOK);\n+        ALL_TYPES.put(\"booklet\", BibtexEntryTypes.BOOKLET);\n+        ALL_TYPES.put(\"incollection\", BibtexEntryTypes.INCOLLECTION);\n+        ALL_TYPES.put(\"conference\", BibtexEntryTypes.CONFERENCE);\n+        ALL_TYPES.put(\"inproceedings\", BibtexEntryTypes.INPROCEEDINGS);\n+        ALL_TYPES.put(\"proceedings\", BibtexEntryTypes.PROCEEDINGS);\n+        ALL_TYPES.put(\"manual\", BibtexEntryTypes.MANUAL);\n+        ALL_TYPES.put(\"mastersthesis\", BibtexEntryTypes.MASTERSTHESIS);\n+        ALL_TYPES.put(\"phdthesis\", BibtexEntryTypes.PHDTHESIS);\n+        ALL_TYPES.put(\"techreport\", BibtexEntryTypes.TECHREPORT);\n+        ALL_TYPES.put(\"unpublished\", BibtexEntryTypes.UNPUBLISHED);\n+        ALL_TYPES.put(\"patent\", BibtexEntryTypes.PATENT);\n+        ALL_TYPES.put(\"standard\", BibtexEntryTypes.STANDARD);\n+        ALL_TYPES.put(\"electronic\", BibtexEntryTypes.ELECTRONIC);\n+        ALL_TYPES.put(\"periodical\", BibtexEntryTypes.PERIODICAL);\n+        ALL_TYPES.put(\"misc\", BibtexEntryTypes.MISC);\n+        ALL_TYPES.put(\"other\", BibtexEntryTypes.OTHER);\n+        ALL_TYPES.put(\"ieeetranbstctl\", BibtexEntryTypes.IEEETRANBSTCTL);\n+    }\n+\n+\n+    /**\n+     * This method returns the BibtexEntryType for the name of a type,\n+     * or null if it does not exist.\n+     */\n+    public static BibtexEntryType getType(String name) {\n+        BibtexEntryType entryType = ALL_TYPES.get(name.toLowerCase(Locale.US));\n+        if (entryType == null) {\n+            return null;\n+        } else {\n+            return entryType;\n+        }\n+    }\n+\n+    /**\n+     * This method returns the standard BibtexEntryType for the\n+     * name of a type, or null if it does not exist.\n+     */\n+    public static BibtexEntryType getStandardType(String name) {\n+        BibtexEntryType entryType = STANDARD_TYPES.get(name.toLowerCase());\n+        if (entryType == null) {\n+            return null;\n+        } else {\n+            return entryType;\n+        }\n+    }\n+\n+    public static void addOrModifyCustomEntryType(CustomEntryType type) {\n+        ALL_TYPES.put(type.getName().toLowerCase(Locale.US), type);\n+    }\n+\n+    public static Set<String> getAllTypes() {\n+        return ALL_TYPES.keySet();\n+    }\n+\n+    public static Collection<BibtexEntryType> getAllValues() {\n+        return ALL_TYPES.values();\n+    }\n+\n+    /**\n+     * Removes a customized entry type from the type map. If this type\n+     * overrode a standard type, we reinstate the standard one.\n+     *\n+     * @param name The customized entry type to remove.\n+     */\n+    public static void removeType(String name) {\n+        String toLowerCase = name.toLowerCase();\n+\n+        ALL_TYPES.remove(toLowerCase);\n+\n+        if (STANDARD_TYPES.get(toLowerCase) != null) {\n+            // In this case the user has removed a customized version\n+            // of a standard type. We reinstate the standard type.\n+            addOrModifyCustomEntryType((CustomEntryType) STANDARD_TYPES.get(toLowerCase));\n+        }\n+    }\n+\n+    // Get an entry type defined in BibtexEntryType\n+    public static BibtexEntryType getBibtexEntryType(String type) {\n+        // decide which entryType object to return\n+        BibtexEntryType o = getType(type);\n+        if (o != null) {\n+            return o;\n+        } else {\n+            return BibtexEntryTypes.OTHER;\n+        }\n+    }\n+}, @@ -27,6 +27,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.logic.CustomEntryTypesManager;\n import net.sf.jabref.model.entry.*;\n import org.apache.commons.logging.Log;, @@ -33,9 +33,8 @@\n import net.sf.jabref.gui.fieldeditors.TextField;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.util.Util;\n+import net.sf.jabref.model.entry.Util;\n \n /**\n  * Created by IntelliJ IDEA.\n@@ -90,7 +89,7 @@ public String getValue() {\n     private void initGui() {\n \n         final ExternalFilePanel extPan = new ExternalFilePanel(fieldName, metaData, entry,\n-                editor, Util.getFileFilterForField(fieldName));\n+                editor, net.sf.jabref.util.Util.getFileFilterForField(fieldName));\n \n         browse.addActionListener(new ActionListener() {\n \n@@ -144,7 +143,7 @@ public void actionPerformed(ActionEvent event) {\n         FormLayout layout = new FormLayout(\"fill:160dlu, 4dlu, fill:pref\", \"\");\n         DefaultFormBuilder builder = new DefaultFormBuilder(layout);\n         //builder.append(Util.capitalizeFirst(fieldName));//(editor.getLabel());\n-        builder.appendSeparator(StringUtil.capitalizeFirst(fieldName));\n+        builder.appendSeparator(Util.capitalizeFirst(fieldName));\n         builder.append(editor.getTextComponent());\n         builder.append(browse);\n , @@ -27,11 +27,11 @@\n import javax.swing.event.ListSelectionListener;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n \n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.*;\n \n public class EntryCustomizationDialog2 extends JDialog implements ListSelectionListener, ActionListener {\n@@ -246,7 +246,7 @@ private void applyChanges() {\n             if (defaulted.contains(stringListEntry.getKey())) {\n                 // This type should be reverted to its default setup.\n                 //System.out.println(\"Defaulting: \"+typeName);\n-                String nm = StringUtil.capitalizeFirst(stringListEntry.getKey());\n+                String nm = Util.capitalizeFirst(stringListEntry.getKey());\n                 EntryTypes.removeType(nm);\n \n                 updateTypesForEntries(nm);\n@@ -272,8 +272,8 @@ private void applyChanges() {\n             if (changesMade) {\n                 //System.out.println(\"Updating: \"+typeName);\n                 CustomEntryType typ = biblatexMode ?\n-                        new CustomEntryType(StringUtil.capitalizeFirst(stringListEntry.getKey()), reqStr, optStr, opt2Str) :\n-                        new CustomEntryType(StringUtil.capitalizeFirst(stringListEntry.getKey()), reqStr, optStr);\n+                        new CustomEntryType(Util.capitalizeFirst(stringListEntry.getKey()), reqStr, optStr, opt2Str) :\n+                        new CustomEntryType(Util.capitalizeFirst(stringListEntry.getKey()), reqStr, optStr);\n \n                 EntryTypes.addOrModifyCustomEntryType(typ);\n                 updateTypesForEntries(typ.getName());\n@@ -307,14 +307,14 @@ private void typeDeletion(String name) {\n                                         + \"type will be declared \"\n                                         + \"typeless. Continue?\"),\n                                 Localization.lang(\"Delete custom format\") +\n-                                        \" '\" + StringUtil.capitalizeFirst(name) + '\\'', JOptionPane.YES_NO_OPTION,\n+                                        \" '\" + Util.capitalizeFirst(name) + '\\'', JOptionPane.YES_NO_OPTION,\n                                 JOptionPane.WARNING_MESSAGE);\n                 if (reply != JOptionPane.YES_OPTION) {\n                     return;\n                 }\n             }\n             EntryTypes.removeType(name);\n-            updateTypesForEntries(StringUtil.capitalizeFirst(name));\n+            updateTypesForEntries(Util.capitalizeFirst(name));\n             changed.remove(name);\n             reqLists.remove(name);\n             optLists.remove(name);, @@ -30,8 +30,8 @@\n import net.sf.jabref.model.entry.BibtexEntryType;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n+import net.sf.jabref.model.entry.Util;\n \n public class EntryTypeDialog extends JDialog implements ActionListener {\n \n@@ -107,7 +107,7 @@ public void windowClosing(WindowEvent e) {\n \n         for (BibtexEntryType tp : EntryTypes.getAllValues()) {\n             if (tp.isVisibleAtNewEntryDialog()) {\n-                TypeButton b = new TypeButton(StringUtil.capitalizeFirst(tp.getName()), tp);\n+                TypeButton b = new TypeButton(Util.capitalizeFirst(tp.getName()), tp);\n                 b.addActionListener(this);\n                 // Check if we should finish the row.\n                 col++;, @@ -28,7 +28,7 @@\n import net.sf.jabref.model.entry.BibtexEntryType;\n import net.sf.jabref.model.entry.CustomEntryType;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.util.Util;\n \n /**, @@ -79,7 +79,7 @@\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntryType;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n , @@ -67,6 +67,7 @@\n import net.sf.jabref.bibtex.DuplicateCheck;\n import net.sf.jabref.bibtex.comparator.FieldComparator;\n import net.sf.jabref.Globals;\n+import net.sf.jabref.model.entry.Util;\n import net.sf.jabref.model.entry.IdGenerator;\n import net.sf.jabref.JabRefExecutorService;\n import net.sf.jabref.JabRefPreferences;\n@@ -86,9 +87,7 @@\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableInsertEntry;\n import net.sf.jabref.gui.undo.UndoableRemoveEntry;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n-import net.sf.jabref.util.Util;\n import ca.odell.glazedlists.BasicEventList;\n import ca.odell.glazedlists.EventList;\n import ca.odell.glazedlists.SortedList;\n@@ -733,7 +732,7 @@ public void actionPerformed(ActionEvent event) {\n                 boolean groupingCanceled = false;\n \n                 // Set owner/timestamp if options are enabled:\n-                Util.setAutomaticFields(selected, Globals.prefs.getBoolean(JabRefPreferences.OVERWRITE_OWNER),\n+                net.sf.jabref.util.Util.setAutomaticFields(selected, Globals.prefs.getBoolean(JabRefPreferences.OVERWRITE_OWNER),\n                         Globals.prefs.getBoolean(JabRefPreferences.OVERWRITE_TIME_STAMP), Globals.prefs.getBoolean(JabRefPreferences.MARK_IMPORTED_ENTRIES));\n \n                 // Check if we should unmark entries before adding the new ones:\n@@ -1099,7 +1098,7 @@ public void mousePressed(MouseEvent e) {\n                     DuplicateResolverDialog diag = new DuplicateResolverDialog(\n                             ImportInspectionDialog.this, other, first,\n                             DuplicateResolverDialog.INSPECTION);\n-                    Util.placeDialog(diag, ImportInspectionDialog.this);\n+                    net.sf.jabref.util.Util.placeDialog(diag, ImportInspectionDialog.this);\n                     diag.setVisible(true);\n                     ImportInspectionDialog.this.toFront();\n                     if (diag.getSelected() == DuplicateResolverDialog.KEEP_UPPER) {\n@@ -1147,7 +1146,7 @@ public void mousePressed(MouseEvent e) {\n                 if (other != null) {\n                     DuplicateResolverDialog diag = new DuplicateResolverDialog(\n                             ImportInspectionDialog.this, first, other, DuplicateResolverDialog.DUPLICATE_SEARCH);\n-                    Util.placeDialog(diag, ImportInspectionDialog.this);\n+                    net.sf.jabref.util.Util.placeDialog(diag, ImportInspectionDialog.this);\n                     diag.setVisible(true);\n                     ImportInspectionDialog.this.toFront();\n                     int answer = diag.getSelected();\n@@ -1284,7 +1283,7 @@ public void actionPerformed(ActionEvent actionEvent) {\n             // We have a static utility method for searching for all relevant\n             // links:\n             JDialog diag = new JDialog(ImportInspectionDialog.this, true);\n-            JabRefExecutorService.INSTANCE.execute(Util.autoSetLinks(entry, localModel, metaData, new ActionListener() {\n+            JabRefExecutorService.INSTANCE.execute(net.sf.jabref.util.Util.autoSetLinks(entry, localModel, metaData, new ActionListener() {\n \n                 @Override\n                 public void actionPerformed(ActionEvent e) {\n@@ -1373,7 +1372,7 @@ public void actionPerformed(ActionEvent event) {\n             // buttons:\n             AttachFileDialog diag = new AttachFileDialog(ImportInspectionDialog.this, metaData,\n                     entry, fileType);\n-            Util.placeDialog(diag, ImportInspectionDialog.this);\n+            net.sf.jabref.util.Util.placeDialog(diag, ImportInspectionDialog.this);\n             diag.setVisible(true);\n             // After the dialog has closed, if it wasn't cancelled, list the\n             // field:\n@@ -1495,7 +1494,7 @@ public String getColumnName(int i) {\n                 return Localization.lang(\"Keep\");\n             }\n             if (i >= PAD) {\n-                return StringUtil.capitalizeFirst(fields[i - PAD]);\n+                return Util.capitalizeFirst(fields[i - PAD]);\n             }\n             return \"\";\n         }, @@ -63,7 +63,7 @@\n import net.sf.jabref.logic.util.OS;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.model.entry.Util;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -92,8 +92,6 @@\n import net.sf.jabref.sql.importer.DbImportAction;\n import net.sf.jabref.util.ManageKeywordsAction;\n import net.sf.jabref.util.MassSetFieldAction;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n-import net.sf.jabref.util.Util;\n \n import com.jgoodies.looks.HeaderStyle;\n import com.jgoodies.looks.Options;\n@@ -772,7 +770,7 @@ public void run() {\n                 output(Localization.lang(\"Opening preferences...\"));\n                 if (prefsDialog == null) {\n                     prefsDialog = new PreferencesDialog(JabRefFrame.this, jabRef);\n-                    Util.placeDialog(prefsDialog, JabRefFrame.this);\n+                    net.sf.jabref.util.Util.placeDialog(prefsDialog, JabRefFrame.this);\n                 } else {\n                     prefsDialog.setValues();\n                 }\n@@ -1728,7 +1726,7 @@ public void actionPerformed(ActionEvent e) {\n             KeyBindingsDialog d = new KeyBindingsDialog(new HashMap<>(prefs.getKeyBindings()), prefs.getDefaultKeys());\n             d.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n             d.pack(); //setSize(300,500);\n-            Util.placeDialog(d, JabRefFrame.this);\n+            net.sf.jabref.util.Util.placeDialog(d, JabRefFrame.this);\n             d.setVisible(true);\n             if (d.getAction()) {\n                 prefs.setNewKeyBindings(d.getNewKeyBindings());\n@@ -1866,7 +1864,7 @@ public void run() {\n                             openInNew);\n                     diag.addEntries(entries);\n                     diag.entryListComplete();\n-                    Util.placeDialog(diag, JabRefFrame.this);\n+                    net.sf.jabref.util.Util.placeDialog(diag, JabRefFrame.this);\n                     diag.setVisible(true);\n                     diag.toFront();\n                 }\n@@ -2147,7 +2145,7 @@ public void actionPerformed(ActionEvent e) {\n         public EditAction(String command, String name, Icon icon) {\n             super(icon);\n             this.command = command;\n-            String nName = StringUtil.capitalizeFirst(command);\n+            String nName = Util.capitalizeFirst(command);\n             putValue(Action.NAME, nName);\n             putValue(Action.ACCELERATOR_KEY, prefs.getKey(nName));\n             putValue(Action.SHORT_DESCRIPTION, name);\n@@ -2203,7 +2201,7 @@ public CustomizeEntryTypeAction() {\n         @Override\n         public void actionPerformed(ActionEvent e) {\n             JDialog dl = new EntryCustomizationDialog2(JabRefFrame.this);\n-            Util.placeDialog(dl, JabRefFrame.this);\n+            net.sf.jabref.util.Util.placeDialog(dl, JabRefFrame.this);\n             dl.setVisible(true);\n         }\n     }\n@@ -2217,7 +2215,7 @@ public GenFieldsCustomizationAction() {\n         @Override\n         public void actionPerformed(ActionEvent e) {\n             GenFieldsCustomizer gf = new GenFieldsCustomizer(JabRefFrame.this);\n-            Util.placeDialog(gf, JabRefFrame.this);\n+            net.sf.jabref.util.Util.placeDialog(gf, JabRefFrame.this);\n             gf.setVisible(true);\n \n         }\n@@ -2238,7 +2236,7 @@ public void actionPerformed(ActionEvent e) {\n                 propertiesDialog = new DatabasePropertiesDialog(JabRefFrame.this);\n             }\n             propertiesDialog.setPanel(basePanel());\n-            Util.placeDialog(propertiesDialog, JabRefFrame.this);\n+            net.sf.jabref.util.Util.placeDialog(propertiesDialog, JabRefFrame.this);\n             propertiesDialog.setVisible(true);\n         }\n \n@@ -2263,7 +2261,7 @@ public void actionPerformed(ActionEvent e) {\n                 // BibtexKeyPatternDialog allows for updating content based on currently selected panel\n                 bibtexKeyPatternDialog.setPanel(basePanel());\n             }\n-            Util.placeDialog(bibtexKeyPatternDialog, JabRefFrame.this);\n+            net.sf.jabref.util.Util.placeDialog(bibtexKeyPatternDialog, JabRefFrame.this);\n             bibtexKeyPatternDialog.setVisible(true);\n         }\n , @@ -22,7 +22,7 @@\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n+import net.sf.jabref.model.entry.Util;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Rank;\n import net.sf.jabref.specialfields.ReadStatus;\n@@ -109,7 +109,7 @@ public String getColumnName(int col) {\n                 if (disName != null) {\n                     sb.append(disName);\n                 } else {\n-                    sb.append(StringUtil.capitalizeFirst(fld[i]));\n+                    sb.append(Util.capitalizeFirst(fld[i]));\n                 }\n             }\n             return sb.toString();, @@ -32,7 +32,7 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.specialfields.Printed;\n import net.sf.jabref.specialfields.Priority;\n import net.sf.jabref.specialfields.Quality;, @@ -51,7 +51,6 @@\n import net.sf.jabref.MetaData;\n import net.sf.jabref.external.ExternalFileMenuItem;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import ca.odell.glazedlists.BasicEventList;\n@@ -64,6 +63,7 @@\n import ca.odell.glazedlists.swing.EventSelectionModel;\n import ca.odell.glazedlists.swing.EventTableModel;\n import ca.odell.glazedlists.swing.TableComparatorChooser;\n+import net.sf.jabref.model.entry.Util;\n \n /**\n  * Dialog to display search results, potentially from more than one BasePanel, with\n@@ -447,7 +447,7 @@ public int getColumnCount() {\n         @Override\n         public String getColumnName(int column) {\n             if (column >= PAD) {\n-                return StringUtil.capitalizeFirst(fields[column - PAD]);\n+                return Util.capitalizeFirst(fields[column - PAD]);\n             } else {\n                 return \"\";\n             }, @@ -2,10 +2,9 @@\n \n import net.sf.jabref.gui.*;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntryType;\n-import net.sf.jabref.model.entry.EntryTypes;\n-import net.sf.jabref.util.Util;\n+import net.sf.jabref.bibtex.EntryTypes;\n+import net.sf.jabref.model.entry.Util;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -31,14 +30,14 @@ public NewEntryAction(JabRefFrame jabRefFrame, KeyStroke key) {\n     public NewEntryAction(JabRefFrame jabRefFrame, String type_) {\n         this.jabRefFrame = jabRefFrame;\n         // This action leads to the creation of a specific entry.\n-        putValue(Action.NAME, StringUtil.capitalizeFirst(type_));\n+        putValue(Action.NAME, Util.capitalizeFirst(type_));\n         type = type_;\n     }\n \n     public NewEntryAction(JabRefFrame jabRefFrame, String type_, KeyStroke key) {\n         this.jabRefFrame = jabRefFrame;\n         // This action leads to the creation of a specific entry.\n-        putValue(Action.NAME, StringUtil.capitalizeFirst(type_));\n+        putValue(Action.NAME, Util.capitalizeFirst(type_));\n         putValue(Action.ACCELERATOR_KEY, key);\n         type = type_;\n     }\n@@ -48,7 +47,7 @@ public void actionPerformed(ActionEvent e) {\n         String thisType = type;\n         if (thisType == null) {\n             EntryTypeDialog etd = new EntryTypeDialog(jabRefFrame);\n-            Util.placeDialog(etd, jabRefFrame);\n+            net.sf.jabref.util.Util.placeDialog(etd, jabRefFrame);\n             etd.setVisible(true);\n             BibtexEntryType tp = etd.getChoice();\n             if (tp == null) {, @@ -62,20 +62,19 @@\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.labelPattern.LabelPatternUtil;\n import net.sf.jabref.logic.util.date.EasyDateFormat;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.database.BibtexDatabase;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;\n+import net.sf.jabref.model.entry.Util;\n import net.sf.jabref.model.entry.EntryConverter;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.specialfields.SpecialFieldUpdateListener;\n import net.sf.jabref.gui.undo.NamedCompound;\n import net.sf.jabref.gui.undo.UndoableChangeType;\n import net.sf.jabref.gui.undo.UndoableFieldChange;\n import net.sf.jabref.gui.undo.UndoableKeyChange;\n import net.sf.jabref.gui.undo.UndoableRemoveEntry;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n-import net.sf.jabref.util.Util;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -243,7 +242,7 @@ private void setupFieldPanels() {\n                 deprecatedFields.add(\"year\");\n                 deprecatedFields.add(\"month\");\n                 List<String> secondaryOptionalFields = entry.getType().getSecondaryOptionalFields();\n-                String[] optionalFieldsNotPrimaryOrDeprecated = StringUtil.getRemainder((secondaryOptionalFields.toArray(new String[0])),\n+                String[] optionalFieldsNotPrimaryOrDeprecated = Util.getRemainder((secondaryOptionalFields.toArray(new String[0])),\n                         deprecatedFields.toArray(new String[deprecatedFields.size()]));\n \n                 // Get list of all optional fields of this entry and their aliases\n@@ -1209,7 +1208,7 @@ public void actionPerformed(ActionEvent event) {\n                 }\n \n                 // Make sure the key is legal:\n-                String cleaned = Util.checkLegalKey(newValue);\n+                String cleaned = net.sf.jabref.util.Util.checkLegalKey(newValue);\n                 if ((cleaned != null) && !cleaned.equals(newValue)) {\n                     JOptionPane.showMessageDialog(frame, Localization.lang(\"Invalid BibTeX key\"),\n                             Localization.lang(\"Error setting field\"), JOptionPane.ERROR_MESSAGE);\n@@ -1233,8 +1232,8 @@ public void actionPerformed(ActionEvent event) {\n \n                 // Add an UndoableKeyChange to the baseframe's undoManager.\n                 UndoableKeyChange undoableKeyChange = new UndoableKeyChange(panel.database, entry.getId(), oldValue, newValue);\n-                if (Util.updateTimeStampIsSet()) {\n-                    NamedCompound ce = Util.doUpdateTimeStamp(entry, undoableKeyChange);\n+                if (net.sf.jabref.util.Util.updateTimeStampIsSet()) {\n+                    NamedCompound ce = net.sf.jabref.util.Util.doUpdateTimeStamp(entry, undoableKeyChange);\n                     panel.undoManager.addEdit(ce);\n                 } else {\n                     panel.undoManager.addEdit(undoableKeyChange);\n@@ -1296,8 +1295,8 @@ public void actionPerformed(ActionEvent event) {\n \n                         // Add an UndoableFieldChange to the baseframe's undoManager.\n                         UndoableFieldChange undoableFieldChange = new UndoableFieldChange(entry, fieldEditor.getFieldName(), oldValue, toSet);\n-                        if (Util.updateTimeStampIsSet()) {\n-                            NamedCompound ce = Util.doUpdateTimeStamp(entry, undoableFieldChange);\n+                        if (net.sf.jabref.util.Util.updateTimeStampIsSet()) {\n+                            NamedCompound ce = net.sf.jabref.util.Util.doUpdateTimeStamp(entry, undoableFieldChange);\n                             panel.undoManager.addEdit(ce);\n                         } else {\n                             panel.undoManager.addEdit(undoableFieldChange);, @@ -50,10 +50,9 @@\n import net.sf.jabref.gui.keyboard.KeyBinds;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.logic.util.io.FileUtil;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.gui.desktop.JabRefDesktop;\n-import net.sf.jabref.util.Util;\n+import net.sf.jabref.model.entry.Util;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -81,7 +80,7 @@ public FileListEditor(JabRefFrame frame, MetaData metaData, String fieldName, St\n         this.metaData = metaData;\n         this.fieldName = fieldName;\n         this.entryEditor = entryEditor;\n-        label = new FieldNameLabel(\" \" + StringUtil.capitalizeFirst(fieldName) + \" \");\n+        label = new FieldNameLabel(\" \" + Util.capitalizeFirst(fieldName) + \" \");\n         tableModel = new FileListTableModel();\n         setText(content);\n         setModel(tableModel);\n@@ -425,7 +424,7 @@ public void autoSetLinks() {\n \n         // filesystem lookup\n         JDialog dialog = new JDialog(frame, true);\n-        JabRefExecutorService.INSTANCE.execute(Util.autoSetLinks(entry, tableModel, metaData, new ActionListener() {\n+        JabRefExecutorService.INSTANCE.execute(net.sf.jabref.util.Util.autoSetLinks(entry, tableModel, metaData, new ActionListener() {\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 auto.setEnabled(true);, @@ -19,7 +19,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.gui.AutoCompleteListener;\n import net.sf.jabref.gui.fieldeditors.contextmenu.FieldTextMenu;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n+import net.sf.jabref.model.entry.Util;\n \n import java.awt.*;\n \n@@ -58,7 +58,7 @@ public TextArea(String fieldName, String content) {\n         setWrapStyleWord(true);\n         this.fieldName = fieldName;\n \n-        label = new FieldNameLabel(' ' + StringUtil.capitalizeFirst(this.fieldName) + ' ');\n+        label = new FieldNameLabel(' ' + Util.capitalizeFirst(this.fieldName) + ' ');\n         setBackground(GUIGlobals.validFieldBackgroundColor);\n         setForeground(GUIGlobals.editorTextColor);\n , @@ -22,7 +22,7 @@\n import net.sf.jabref.gui.actions.PasteAction;\n import net.sf.jabref.gui.fieldeditors.contextmenu.FieldTextMenu;\n import net.sf.jabref.gui.keyboard.KeyBinds;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n+import net.sf.jabref.model.entry.Util;\n \n import java.awt.Color;\n import java.awt.event.ActionEvent;\n@@ -63,7 +63,7 @@ public TextField(String fieldName, String content, boolean changeColorOnFocus) {\n             addFocusListener(new FieldEditorFocusListener());\n         }\n         this.fieldName = fieldName;\n-        label = new FieldNameLabel(' ' + StringUtil.capitalizeFirst(this.fieldName) + ' ');\n+        label = new FieldNameLabel(' ' + Util.capitalizeFirst(this.fieldName) + ' ');\n         setBackground(GUIGlobals.validFieldBackgroundColor);\n         setForeground(GUIGlobals.editorTextColor);\n , @@ -40,10 +40,10 @@\n import net.sf.jabref.logic.labelPattern.AbstractLabelPattern;\n import net.sf.jabref.logic.labelPattern.DatabaseLabelPattern;\n import net.sf.jabref.logic.labelPattern.GlobalLabelPattern;\n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.gui.help.HelpAction;\n import net.sf.jabref.gui.help.HelpDialog;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n+import net.sf.jabref.model.entry.Util;\n \n public class LabelPatternPanel extends JPanel {\n \n@@ -180,7 +180,7 @@ public void actionPerformed(ActionEvent arg0) {\n \n     private JTextField addEntryType(Container c, String name, int y) {\n \n-        JLabel lab = new JLabel(StringUtil.capitalizeFirst(name));\n+        JLabel lab = new JLabel(Util.capitalizeFirst(name));\n         name = name.toLowerCase();\n         con.gridx = 0;\n         con.gridy = y;, @@ -49,8 +49,6 @@\n import com.jgoodies.forms.builder.ButtonBarBuilder;\n import net.sf.jabref.logic.CustomEntryTypesManager;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.model.entry.CustomEntryType;\n-import net.sf.jabref.model.entry.EntryTypes;\n import net.sf.jabref.util.Util;\n \n /**, @@ -29,7 +29,7 @@\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.gui.PreviewPanel;\n import net.sf.jabref.gui.help.HelpAction;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n import net.sf.jabref.logic.l10n.Localization;\n import net.sf.jabref.model.entry.BibtexEntry;, @@ -24,7 +24,7 @@\n import net.sf.jabref.model.entry.BibtexEntryType;\n import net.sf.jabref.model.entry.CustomEntryType;\n import net.sf.jabref.logic.l10n.Localization;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * This action checks whether any new custom entry types were loaded from this, @@ -34,7 +34,7 @@\n import javax.swing.JOptionPane;\n import javax.swing.JPanel;\n \n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n , @@ -17,7 +17,7 @@\n \n import java.util.ArrayList;\n \n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;, @@ -23,7 +23,7 @@\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Imports a Biblioscape Tag File. The format is described on\n@@ -283,7 +283,7 @@ public boolean isRecognizedFormat(InputStream in) throws IOException {\n                     hm.put(\"comment\", s.toString());\n                 }\n                 BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID,\n-                        BibtexEntryTypes.getEntryType(bibtexType));\n+                        EntryTypes.getBibtexEntryType(bibtexType));\n                 b.setField(hm);\n                 bibItems.add(b);\n , @@ -27,6 +27,7 @@\n import java.util.regex.Pattern;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.gui.GUIGlobals;\n import net.sf.jabref.logic.CustomEntryTypesManager;\n import net.sf.jabref.model.database.KeyCollisionException;, @@ -28,7 +28,7 @@\n import java.util.List;\n import java.util.regex.Pattern;\n \n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Importer for the ISI Web of Science format.\n@@ -201,7 +201,7 @@ public boolean isRecognizedFormat(InputStream stream)\n             }\n \n             BibtexEntry b =\n-                    new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes.getEntryType(Type)); // id assumes an existing database so don't\n+                    new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes.getBibtexEntryType(Type)); // id assumes an existing database so don't\n \n             // create one here\n             b.setField(hm);, @@ -29,7 +29,7 @@\n import java.util.regex.Pattern;\n import java.util.regex.Matcher;\n \n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Importer for records downloaded from CSA: Cambridge Scientific Abstracts\n@@ -260,7 +260,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n \n                     BibtexEntry b =\n                             new BibtexEntry(DEFAULT_BIBTEXENTRY_ID,\n-                                    BibtexEntryTypes.getEntryType(Type));\n+                                    EntryTypes.getBibtexEntryType(Type));\n \n                     // create one here\n                     b.setField(hm);, @@ -27,7 +27,7 @@\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.model.entry.AuthorList;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.util.Util;\n \n /**\n@@ -273,8 +273,8 @@ else if (prefix.equals(\"P\")) {\n                 hm.put(\"pages\", artnum);\n             }\n \n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(Type)); // id assumes an existing database so don't\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                    .getBibtexEntryType(Type)); // id assumes an existing database so don't\n             // create one here\n             b.setField(hm);\n             //if (hm.isEmpty()), @@ -29,7 +29,7 @@\n \n import java.util.regex.Pattern;\n \n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * INSPEC format importer.\n@@ -155,7 +155,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n                     }\n                 }\n             }\n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes.getEntryType(Type)); // id assumes an existing database so don't\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes.getBibtexEntryType(Type)); // id assumes an existing database so don't\n             // create one here\n             b.setField(h);\n , @@ -27,10 +27,10 @@\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.logic.formatter.CaseChangers;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.MonthUtil;\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n \n /**\n  * Importer for the ISI Web of Science, INSPEC and Medline format.\n@@ -333,8 +333,8 @@ private static void processCapitalization(HashMap<String, String> map) {\n                 continue;\n             }\n \n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(Type));\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                    .getBibtexEntryType(Type));\n             // id assumes an existing database so don't\n \n             // Remove empty fields:, @@ -21,6 +21,7 @@\n import java.util.List;\n import java.util.ArrayList;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.model.entry.*;, @@ -22,9 +22,9 @@\n import net.sf.jabref.importer.HTMLConverter;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.model.entry.BibtexEntry;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n \n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n import org.xml.sax.Attributes;\n import org.xml.sax.helpers.DefaultHandler;\n \n@@ -244,7 +244,7 @@ public void endElement(String uri, String localName, String qName) {\n             String keywords = sb.toString();\n \n             BibtexEntry b = new BibtexEntry(IdGenerator.next(),//Globals.DEFAULT_BIBTEXENTRY_ID,\n-            BibtexEntryTypes.getEntryType(\"article\")); // id assumes an existing database so don't create one here\n+            EntryTypes.getBibtexEntryType(\"article\")); // id assumes an existing database so don't create one here\n             if (!author.equals(\"\")) {\n                 b.setField(\"author\", MedlineHandler.htmlConverter.formatUnicode(ImportFormatReader.expandAuthorInitials(author)));\n                 // b.setField(\"author\",Util.replaceSpecialCharacters(ImportFormatReader.expandAuthorInitials(author)));, @@ -29,7 +29,7 @@\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.AuthorList;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Importer for the MEDLINE Plain format.\n@@ -261,8 +261,8 @@ else if (lab.equals(\"AID\")) {\n                 hm.put(\"comment\", comment);\n             }\n \n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(type)); // id assumes an existing database so don't\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                    .getBibtexEntryType(type)); // id assumes an existing database so don't\n \n             // Remove empty fields:\n             ArrayList<Object> toRemove = new ArrayList<>();, @@ -24,12 +24,10 @@\n import java.util.ArrayList;\n import java.util.HashMap;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n-import net.sf.jabref.model.entry.AuthorList;\n-import net.sf.jabref.model.entry.IdGenerator;\n-import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.model.entry.*;\n \n /**\n  * Imports an Ovid file.\n@@ -232,7 +230,7 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n                     h.put(\"title\", h.remove(\"chaptertitle\"));\n                 }\n             }\n-            BibtexEntry b = new BibtexEntry(IdGenerator.next(), BibtexEntryTypes.getEntryType(entryType));\n+            BibtexEntry b = new BibtexEntry(IdGenerator.next(), EntryTypes.getBibtexEntryType(entryType));\n             b.setField(h);\n \n             bibitems.add(b);, @@ -26,7 +26,7 @@\n \n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n import net.sf.jabref.model.entry.BibtexEntry;\n import org.apache.commons.logging.Log;, @@ -23,12 +23,10 @@\n import java.util.ArrayList;\n import java.util.HashMap;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n-import net.sf.jabref.model.entry.AuthorList;\n-import net.sf.jabref.model.entry.MonthUtil;\n-import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.model.entry.*;\n \n /**\n  * Imports a Biblioscape Tag File. The format is described on\n@@ -262,8 +260,8 @@ else if (lab.equals(\"ID\")) {\n \n                 hm.put(\"pages\", startPage + \"--\" + endPage);\n             }\n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(type)); // id assumes an existing database so don't\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                    .getBibtexEntryType(type)); // id assumes an existing database so don't\n \n             // Remove empty fields:\n             ArrayList<Object> toRemove = new ArrayList<>();, @@ -26,7 +26,7 @@\n import net.sf.jabref.importer.OutputPrinter;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.AuthorList;\n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Imports a Biblioscape Tag File. The format is described on\n@@ -150,8 +150,8 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n                 }\n             }\n \n-            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                    .getEntryType(Type)); // id assumes an existing database so don't\n+            BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                    .getBibtexEntryType(Type)); // id assumes an existing database so don't\n             // create one here\n             b.setField(hm);\n             if (journal != null) {, @@ -29,7 +29,7 @@\n \n import java.util.regex.Pattern;\n \n-import net.sf.jabref.model.entry.BibtexEntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n \n /**\n  * Imports a SilverPlatter exported file. This is a poor format to parse,\n@@ -212,8 +212,8 @@ public boolean isRecognizedFormat(InputStream stream) throws IOException {\n \n                 }\n \n-                BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, BibtexEntryTypes\n-                        .getEntryType(Type)); // id assumes an existing database so don't\n+                BibtexEntry b = new BibtexEntry(DEFAULT_BIBTEXENTRY_ID, EntryTypes\n+                        .getBibtexEntryType(Type)); // id assumes an existing database so don't\n                 // create one here\n                 b.setField(h);\n , @@ -24,7 +24,7 @@\n \n import net.sf.jabref.importer.ImportFormatReader;\n import net.sf.jabref.importer.OutputPrinter;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n import net.sf.jabref.model.entry.BibtexEntry;\n import net.sf.jabref.model.entry.BibtexEntryType;, @@ -3,7 +3,7 @@\n import net.sf.jabref.Globals;\n import net.sf.jabref.JabRefPreferences;\n import net.sf.jabref.model.entry.CustomEntryType;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n , @@ -159,17 +159,6 @@ public static String toUpperFirstLetter(String string) {\n         return names.split(delimiter);\n     }\n \n-    public static String capitalizeFirst(String toCapitalize) {\n-        // Make first character of String uppercase, and the\n-        // rest lowercase.\n-        if (toCapitalize.length() > 1) {\n-            return toCapitalize.substring(0, 1).toUpperCase() + toCapitalize.substring(1, toCapitalize.length()).toLowerCase();\n-        } else {\n-            return toCapitalize.toUpperCase();\n-        }\n-\n-    }\n-\n     /**\n      * Removes optional square brackets from the string s\n      *\n@@ -505,55 +494,6 @@ public static String encodeString(String s) {\n         return sb.toString();\n     }\n \n-    /**\n-     * Build a String array containing all those elements of all that are not\n-     * in subset.\n-     * @param all The array of all values.\n-     * @param subset The subset of values.\n-     * @return The remainder that is not part of the subset.\n-     */\n-    public static String[] getRemainder(String[] all, String[] subset) {\n-    \tif (subset.length == 0) {\n-    \t\treturn all;\n-    \t}\n-    \tif (all.equals(subset)) {\n-    \t\treturn new String[0];\n-    \t}\n-\n-        ArrayList<String> al = new ArrayList<>();\n-        for (String anAll : all) {\n-            boolean found = false;\n-            for (String aSubset : subset) {\n-                if (aSubset.equals(anAll)) {\n-                    found = true;\n-                    break;\n-                }\n-            }\n-            if (!found) {\n-                al.add(anAll);\n-            }\n-        }\n-        return al.toArray(new String[al.size()]);\n-    }\n-\n-    /**\n-\t * Concatenate two String arrays\n-\t *\n-\t * @param array1\n-\t *            the first string array\n-\t * @param array2\n-\t *            the second string array\n-\t * @return The concatenation of array1 and array2\n-\t */\n-\tpublic static String[] arrayConcat(String[] array1, String[] array2) {\n-\t\tint len1 = array1.length;\n-\t\tint len2 = array2.length;\n-\t\tString[] union = new String[len1 + len2];\n-\t\tSystem.arraycopy(array1, 0, union, 0, len1);\n-\t\tSystem.arraycopy(array2, 0, union, len1, len2);\n-\t\treturn union;\n-\t}\n-\n     /**\n      * Wrap all uppercase letters, or sequences of uppercase letters, in curly\n      * braces. Ignore letters within a pair of # character, as these are part of, @@ -22,6 +22,7 @@\n \n import net.sf.jabref.*;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.*;\n import net.sf.jabref.model.database.BibtexDatabase;\n import org.apache.jempbox.xmp.XMPMetadata;, @@ -21,6 +21,7 @@\n import javax.xml.transform.TransformerException;\n \n import net.sf.jabref.*;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.exporter.LatexFieldFormatter;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.importer.ParserResult;, @@ -1023,11 +1023,11 @@ public boolean equals(Object o) {\n                 return false;\n             }\n             Author a = (Author) o;\n-            return CompareUtil.equals(firstPart, a.firstPart)\n-                    && CompareUtil.equals(firstAbbr, a.firstAbbr)\n-                    && CompareUtil.equals(vonPart, a.vonPart)\n-                    && CompareUtil.equals(lastPart, a.lastPart)\n-                    && CompareUtil.equals(jrPart, a.jrPart);\n+            return Util.equals(firstPart, a.firstPart)\n+                    && Util.equals(firstAbbr, a.firstAbbr)\n+                    && Util.equals(vonPart, a.vonPart)\n+                    && Util.equals(lastPart, a.lastPart)\n+                    && Util.equals(jrPart, a.jrPart);\n         }\n \n , @@ -25,7 +25,7 @@\n  * This class defines entry types for BibLatex support.\n  */\n \n-class BibLatexEntryTypes {\n+public class BibLatexEntryTypes {\n \n     /*\n         \"rare\" fields?, @@ -7,16 +7,6 @@\n import java.util.List;\n \n public class BibtexEntryTypes {\n-    // Get an entry type defined in BibtexEntryType\n-    public static BibtexEntryType getEntryType(String type) {\n-        // decide which entryType object to return\n-        Object o = EntryTypes.getType(type);\n-        if (o != null) {\n-            return (BibtexEntryType) o;\n-        } else {\n-            return OTHER;\n-        }\n-    }\n \n     public static final BibtexEntryType OTHER =\n             new BibtexEntryType() {, @@ -1,16 +0,0 @@\n-package net.sf.jabref.model.entry;\n-\n-public class CompareUtil {\n-\n-    /**\n-     * Static equals that can also return the right result when one of the objects is null.\n-     *\n-     * @param one The object whose equals method is called if the first is not null.\n-     * @param two The object passed to the first one if the first is not null.\n-     * @return <code>one == null ? two == null : one.equals(two);</code>\n-     */\n-    public static boolean equals(Object one, Object two) {\n-        return one == null ? two == null : one.equals(two);\n-    }\n-\n-}, @@ -20,7 +20,6 @@\n import java.util.Collections;\n import java.util.List;\n \n-import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.model.database.BibtexDatabase;\n \n import org.apache.commons.logging.Log;\n@@ -46,10 +45,10 @@ public CustomEntryType(String name, List<String> required, List<String> priOpt,\n     }\n \n     public CustomEntryType(String name, String[] required, String[] priOpt, String[] secOpt) {\n-        this.name = StringUtil.capitalizeFirst(name);\n+        this.name = Util.capitalizeFirst(name);\n         parseRequiredFields(required);\n         this.priOpt = priOpt;\n-        optional = StringUtil.arrayConcat(priOpt, secOpt);\n+        optional = Util.arrayConcat(priOpt, secOpt);\n     }\n \n     public CustomEntryType(String name, List<String> required, List<String> optional) {\n@@ -61,7 +60,7 @@ public CustomEntryType(String name, String[] required, String[] optional) {\n     }\n \n     public CustomEntryType(String name, String required, String optional) {\n-        this.name = StringUtil.capitalizeFirst(name);\n+        this.name = Util.capitalizeFirst(name);\n         if (required.isEmpty()) {\n             this.required = new String[0];\n         } else {\n@@ -119,7 +118,7 @@ public String getName() {\n \n     @Override\n     public List<String> getSecondaryOptionalFields() {\n-        return Arrays.asList(StringUtil.getRemainder(optional, priOpt));\n+        return Arrays.asList(Util.getRemainder(optional, priOpt));\n     }\n \n     @Override, @@ -1,133 +0,0 @@\n-package net.sf.jabref.model.entry;\n-\n-import net.sf.jabref.Globals;\n-import net.sf.jabref.JabRefPreferences;\n-\n-import java.util.*;\n-\n-public class EntryTypes {\n-\n-    private static final TreeMap<String, BibtexEntryType> ALL_TYPES = new TreeMap<>();\n-    private static final TreeMap<String, BibtexEntryType> STANDARD_TYPES;\n-\n-    static {\n-        // Put the standard entry types into the type map.\n-        Globals.prefs = JabRefPreferences.getInstance();\n-        if (!Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_MODE)) {\n-            ALL_TYPES.put(\"article\", BibtexEntryTypes.ARTICLE);\n-            ALL_TYPES.put(\"inbook\", BibtexEntryTypes.INBOOK);\n-            ALL_TYPES.put(\"book\", BibtexEntryTypes.BOOK);\n-            ALL_TYPES.put(\"booklet\", BibtexEntryTypes.BOOKLET);\n-            ALL_TYPES.put(\"incollection\", BibtexEntryTypes.INCOLLECTION);\n-            ALL_TYPES.put(\"conference\", BibtexEntryTypes.CONFERENCE);\n-            ALL_TYPES.put(\"inproceedings\", BibtexEntryTypes.INPROCEEDINGS);\n-            ALL_TYPES.put(\"proceedings\", BibtexEntryTypes.PROCEEDINGS);\n-            ALL_TYPES.put(\"manual\", BibtexEntryTypes.MANUAL);\n-            ALL_TYPES.put(\"mastersthesis\", BibtexEntryTypes.MASTERSTHESIS);\n-            ALL_TYPES.put(\"phdthesis\", BibtexEntryTypes.PHDTHESIS);\n-            ALL_TYPES.put(\"techreport\", BibtexEntryTypes.TECHREPORT);\n-            ALL_TYPES.put(\"unpublished\", BibtexEntryTypes.UNPUBLISHED);\n-            ALL_TYPES.put(\"patent\", BibtexEntryTypes.PATENT);\n-            ALL_TYPES.put(\"standard\", BibtexEntryTypes.STANDARD);\n-            ALL_TYPES.put(\"electronic\", BibtexEntryTypes.ELECTRONIC);\n-            ALL_TYPES.put(\"periodical\", BibtexEntryTypes.PERIODICAL);\n-            ALL_TYPES.put(\"misc\", BibtexEntryTypes.MISC);\n-            ALL_TYPES.put(\"other\", BibtexEntryTypes.OTHER);\n-            ALL_TYPES.put(\"ieeetranbstctl\", BibtexEntryTypes.IEEETRANBSTCTL);\n-        } else {\n-            ALL_TYPES.put(\"article\", BibLatexEntryTypes.ARTICLE);\n-            ALL_TYPES.put(\"book\", BibLatexEntryTypes.BOOK);\n-            ALL_TYPES.put(\"inbook\", BibLatexEntryTypes.INBOOK);\n-            ALL_TYPES.put(\"bookinbook\", BibLatexEntryTypes.BOOKINBOOK);\n-            ALL_TYPES.put(\"suppbook\", BibLatexEntryTypes.SUPPBOOK);\n-            ALL_TYPES.put(\"booklet\", BibLatexEntryTypes.BOOKLET);\n-            ALL_TYPES.put(\"collection\", BibLatexEntryTypes.COLLECTION);\n-            ALL_TYPES.put(\"incollection\", BibLatexEntryTypes.INCOLLECTION);\n-            ALL_TYPES.put(\"suppcollection\", BibLatexEntryTypes.SUPPCOLLECTION);\n-            ALL_TYPES.put(\"manual\", BibLatexEntryTypes.MANUAL);\n-            ALL_TYPES.put(\"misc\", BibLatexEntryTypes.MISC);\n-            ALL_TYPES.put(\"online\", BibLatexEntryTypes.ONLINE);\n-            ALL_TYPES.put(\"patent\", BibLatexEntryTypes.PATENT);\n-            ALL_TYPES.put(\"periodical\", BibLatexEntryTypes.PERIODICAL);\n-            ALL_TYPES.put(\"suppperiodical\", BibLatexEntryTypes.SUPPPERIODICAL);\n-            ALL_TYPES.put(\"proceedings\", BibLatexEntryTypes.PROCEEDINGS);\n-            ALL_TYPES.put(\"inproceedings\", BibLatexEntryTypes.INPROCEEDINGS);\n-            ALL_TYPES.put(\"reference\", BibLatexEntryTypes.REFERENCE);\n-            ALL_TYPES.put(\"inreference\", BibLatexEntryTypes.INREFERENCE);\n-            ALL_TYPES.put(\"report\", BibLatexEntryTypes.REPORT);\n-            ALL_TYPES.put(\"set\", BibLatexEntryTypes.SET);\n-            ALL_TYPES.put(\"thesis\", BibLatexEntryTypes.THESIS);\n-            ALL_TYPES.put(\"unpublished\", BibLatexEntryTypes.UNPUBLISHED);\n-            ALL_TYPES.put(\"conference\", BibLatexEntryTypes.CONFERENCE);\n-            ALL_TYPES.put(\"electronic\", BibLatexEntryTypes.ELECTRONIC);\n-            ALL_TYPES.put(\"mastersthesis\", BibLatexEntryTypes.MASTERSTHESIS);\n-            ALL_TYPES.put(\"phdthesis\", BibLatexEntryTypes.PHDTHESIS);\n-            ALL_TYPES.put(\"techreport\", BibLatexEntryTypes.TECHREPORT);\n-            ALL_TYPES.put(\"www\", BibLatexEntryTypes.WWW);\n-            ALL_TYPES.put(\"ieeetranbstctl\", BibLatexEntryTypes.IEEETRANBSTCTL);\n-        }\n-        // We need a record of the standard types, in case the user wants\n-        // to remove a customized version. Therefore we clone the map.\n-        STANDARD_TYPES = new TreeMap<>(ALL_TYPES);\n-    }\n-\n-    /**\n-     * This method returns the BibtexEntryType for the name of a type,\n-     * or null if it does not exist.\n-     */\n-    public static BibtexEntryType getType(String name) {\n-\n-        BibtexEntryType entryType = ALL_TYPES.get(name.toLowerCase(Locale.US));\n-        if (entryType == null) {\n-            return null;\n-        } else {\n-            return entryType;\n-        }\n-    }\n-\n-    /**\n-     * This method returns the standard BibtexEntryType for the\n-     * name of a type, or null if it does not exist.\n-     */\n-    public static BibtexEntryType getStandardType(String name) {\n-\n-        BibtexEntryType entryType = STANDARD_TYPES.get(name.toLowerCase());\n-        if (entryType == null) {\n-            return null;\n-        } else {\n-            return entryType;\n-        }\n-    }\n-\n-    public static void addOrModifyCustomEntryType(CustomEntryType type) {\n-        ALL_TYPES.put(type.getName().toLowerCase(Locale.US), type);\n-    }\n-\n-    public static Set<String> getAllTypes() {\n-        return ALL_TYPES.keySet();\n-    }\n-\n-    public static Collection<BibtexEntryType> getAllValues() {\n-        return ALL_TYPES.values();\n-    }\n-\n-    /**\n-     * Removes a customized entry type from the type map. If this type\n-     * overrode a standard type, we reinstate the standard one.\n-     *\n-     * @param name The customized entry type to remove.\n-     */\n-    public static void removeType(String name) {\n-\n-        String toLowerCase = name.toLowerCase();\n-\n-        ALL_TYPES.remove(toLowerCase);\n-\n-        if (STANDARD_TYPES.get(toLowerCase) != null) {\n-            // In this case the user has removed a customized version\n-            // of a standard type. We reinstate the standard type.\n-            addOrModifyCustomEntryType((CustomEntryType) STANDARD_TYPES.get(toLowerCase));\n-        }\n-    }\n-\n-}, @@ -0,0 +1,77 @@\n+package net.sf.jabref.model.entry;\n+\n+import java.util.ArrayList;\n+\n+public class Util {\n+\n+    /**\n+     * Static equals that can also return the right result when one of the objects is null.\n+     *\n+     * @param one The object whose equals method is called if the first is not null.\n+     * @param two The object passed to the first one if the first is not null.\n+     * @return <code>one == null ? two == null : one.equals(two);</code>\n+     */\n+    public static boolean equals(Object one, Object two) {\n+        return one == null ? two == null : one.equals(two);\n+    }\n+\n+    public static String capitalizeFirst(String toCapitalize) {\n+        // Make first character of String uppercase, and the\n+        // rest lowercase.\n+        if (toCapitalize.length() > 1) {\n+            return toCapitalize.substring(0, 1).toUpperCase() + toCapitalize.substring(1, toCapitalize.length()).toLowerCase();\n+        } else {\n+            return toCapitalize.toUpperCase();\n+        }\n+\n+    }\n+\n+    /**\n+     * Build a String array containing all those elements of all that are not\n+     * in subset.\n+     * @param all The array of all values.\n+     * @param subset The subset of values.\n+     * @return The remainder that is not part of the subset.\n+     */\n+    public static String[] getRemainder(String[] all, String[] subset) {\n+    \tif (subset.length == 0) {\n+    \t\treturn all;\n+    \t}\n+    \tif (all.equals(subset)) {\n+    \t\treturn new String[0];\n+    \t}\n+\n+        ArrayList<String> al = new ArrayList<>();\n+        for (String anAll : all) {\n+            boolean found = false;\n+            for (String aSubset : subset) {\n+                if (aSubset.equals(anAll)) {\n+                    found = true;\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                al.add(anAll);\n+            }\n+        }\n+        return al.toArray(new String[al.size()]);\n+    }\n+\n+    /**\n+\t * Concatenate two String arrays\n+\t *\n+\t * @param array1\n+\t *            the first string array\n+\t * @param array2\n+\t *            the second string array\n+\t * @return The concatenation of array1 and array2\n+\t */\n+\tpublic static String[] arrayConcat(String[] array1, String[] array2) {\n+\t\tint len1 = array1.length;\n+\t\tint len2 = array2.length;\n+\t\tString[] union = new String[len1 + len2];\n+\t\tSystem.arraycopy(array1, 0, union, 0, len1);\n+\t\tSystem.arraycopy(array2, 0, union, len1, len2);\n+\t\treturn union;\n+\t}\n+}, @@ -38,7 +38,7 @@\n import net.sf.jabref.logic.util.strings.StringUtil;\n import net.sf.jabref.exporter.FileActions;\n import net.sf.jabref.groups.GroupTreeNode;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.sql.DBImportExportDialog;\n import net.sf.jabref.sql.DBImporterExporter;\n import net.sf.jabref.sql.DBStrings;, @@ -21,6 +21,7 @@\n import java.sql.SQLException;\n import java.util.*;\n \n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.*;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;, @@ -210,15 +210,15 @@ public static String checkLegalKey(String key) {\n         // Replace non-english characters like umlauts etc. with a sensible\n         // letter or letter combination that bibtex can accept.\n \n-        return Util.replaceSpecialCharacters(newKey.toString());\n+        return net.sf.jabref.util.Util.replaceSpecialCharacters(newKey.toString());\n     }\n \n     /**\n      * Replace non-english characters like umlauts etc. with a sensible letter or letter combination that bibtex can\n      * accept. The basis for replacement is the HashMap Globals.UNICODE_CHARS.\n      */\n     public static String replaceSpecialCharacters(String s) {\n-        for (Map.Entry<String, String> chrAndReplace : Util.UNICODE_CHAR_MAP.entrySet()) {\n+        for (Map.Entry<String, String> chrAndReplace : net.sf.jabref.util.Util.UNICODE_CHAR_MAP.entrySet()) {\n             s = s.replaceAll(chrAndReplace.getKey(), chrAndReplace.getValue());\n         }\n         return s;\n@@ -234,7 +234,7 @@ public static String replaceSpecialCharacters(String s) {\n                 String fieldValue = o.toString().trim();\n                 StringTokenizer tok = new StringTokenizer(fieldValue, deliminator);\n                 while (tok.hasMoreTokens()) {\n-                    res.add(StringUtil.capitalizeFirst(tok.nextToken().trim()));\n+                    res.add(net.sf.jabref.model.entry.Util.capitalizeFirst(tok.nextToken().trim()));\n                 }\n             }\n         }\n@@ -259,7 +259,7 @@ public static String replaceSpecialCharacters(String s) {\n             if (o != null) {\n                 tok = new StringTokenizer(o.toString(), remove, false);\n                 while (tok.hasMoreTokens()) {\n-                    res.add(StringUtil.capitalizeFirst(tok.nextToken().trim()));\n+                    res.add(net.sf.jabref.model.entry.Util.capitalizeFirst(tok.nextToken().trim()));\n                 }\n             }\n         }\n@@ -443,10 +443,10 @@ public static String sanitizeUrl(String link) {\n \n \n     public static String expandBrackets(String bracketString, BibtexEntry entry, BibtexDatabase database) {\n-        Matcher m = Util.squareBracketsPattern.matcher(bracketString);\n+        Matcher m = net.sf.jabref.util.Util.squareBracketsPattern.matcher(bracketString);\n         StringBuffer s = new StringBuffer();\n         while (m.find()) {\n-            String replacement = Util.getFieldAndFormat(m.group(), entry, database);\n+            String replacement = net.sf.jabref.util.Util.getFieldAndFormat(m.group(), entry, database);\n             if (replacement == null) {\n                 replacement = \"\";\n             }\n@@ -468,7 +468,7 @@ public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean over\n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n \n         String defaultOwner = Globals.prefs.get(JabRefPreferences.DEFAULT_OWNER);\n-        String timestamp = Util.dateFormatter.getCurrentDate();\n+        String timestamp = net.sf.jabref.util.Util.dateFormatter.getCurrentDate();\n         boolean globalSetOwner = Globals.prefs.getBoolean(JabRefPreferences.USE_OWNER);\n         boolean globalSetTimeStamp = Globals.prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP);\n \n@@ -481,7 +481,7 @@ public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean over\n         for (BibtexEntry curEntry : bibs) {\n             boolean setOwner = globalSetOwner && (overwriteOwner || (curEntry.getField(BibtexFields.OWNER) == null));\n             boolean setTimeStamp = globalSetTimeStamp && (overwriteTimestamp || (curEntry.getField(timeStampField) == null));\n-            Util.setAutomaticFields(curEntry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n+            net.sf.jabref.util.Util.setAutomaticFields(curEntry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n             if (markEntries) {\n                 EntryMarker.markEntry(curEntry, EntryMarker.IMPORT_MARK_LEVEL, false, new NamedCompound(\"\"));\n             }\n@@ -498,12 +498,12 @@ public static void setAutomaticFields(Collection<BibtexEntry> bibs, boolean over\n      */\n     public static void setAutomaticFields(BibtexEntry entry, boolean overwriteOwner, boolean overwriteTimestamp) {\n         String defaultOwner = Globals.prefs.get(JabRefPreferences.DEFAULT_OWNER);\n-        String timestamp = Util.dateFormatter.getCurrentDate();\n+        String timestamp = net.sf.jabref.util.Util.dateFormatter.getCurrentDate();\n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n         boolean setOwner = Globals.prefs.getBoolean(JabRefPreferences.USE_OWNER) && (overwriteOwner || (entry.getField(BibtexFields.OWNER) == null));\n         boolean setTimeStamp = Globals.prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP) && (overwriteTimestamp || (entry.getField(timeStampField) == null));\n \n-        Util.setAutomaticFields(entry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n+        net.sf.jabref.util.Util.setAutomaticFields(entry, setOwner, defaultOwner, setTimeStamp, timeStampField, timestamp);\n     }\n \n     private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, String owner, boolean setTimeStamp, String timeStampField, String timeStamp) {\n@@ -532,7 +532,7 @@ private static void setAutomaticFields(BibtexEntry entry, boolean setOwner, Stri\n      * @return A CompoundEdit specifying the undo operation for the whole operation.\n      */\n     public static NamedCompound upgradePdfPsToFile(BibtexDatabase database, String[] fields) {\n-        return Util.upgradePdfPsToFile(database.getEntryMap().values(), fields);\n+        return net.sf.jabref.util.Util.upgradePdfPsToFile(database.getEntryMap().values(), fields);\n     }\n \n     /**\n@@ -801,7 +801,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n         try {\n             layout = new LayoutHelper(sr).getLayoutFromText(Globals.FORMATTER_PACKAGE);\n         } catch (Exception e) {\n-            Util.LOGGER.info(\"Wrong format \" + e.getMessage(), e);\n+            net.sf.jabref.util.Util.LOGGER.info(\"Wrong format \" + e.getMessage(), e);\n         }\n         if (layout != null) {\n             targetName = layout.doLayout(entry, database);\n@@ -824,7 +824,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n         // a more intelligent algorithm would check for the separator chosen (SEPARATING_CHARS_NOSPACE)\n         // if nothing is found, \" \" is likely to be the separating char.\n         // solution by RisKeywords.java: s.split(\",[ ]*\")\n-        StringTokenizer tok = new StringTokenizer(keywords, Util.SEPARATING_CHARS_NOSPACE);\n+        StringTokenizer tok = new StringTokenizer(keywords, net.sf.jabref.util.Util.SEPARATING_CHARS_NOSPACE);\n         while (tok.hasMoreTokens()) {\n             String word = tok.nextToken().trim();\n             res.add(word);\n@@ -833,7 +833,7 @@ public static String getLinkedFileName(BibtexDatabase database, BibtexEntry entr\n     }\n \n     public static ArrayList<String> getSeparatedKeywords(BibtexEntry be) {\n-        return Util.getSeparatedKeywords(be.getField(\"keywords\"));\n+        return net.sf.jabref.util.Util.getSeparatedKeywords(be.getField(\"keywords\"));\n     }\n \n     public static void putKeywords(BibtexEntry entry, ArrayList<String> keywords, NamedCompound ce) {\n@@ -866,7 +866,7 @@ public static void putKeywords(BibtexEntry entry, ArrayList<String> keywords, Na\n      * @param ce indicates the undo named compound. May be null\n      */\n     public static void updateField(BibtexEntry be, String field, String newValue, NamedCompound ce) {\n-        Util.updateField(be, field, newValue, ce, false);\n+        net.sf.jabref.util.Util.updateField(be, field, newValue, ce, false);\n     }\n \n     /**\n@@ -912,7 +912,7 @@ public static void bindCloseDialogKeyToCancelAction(JRootPane rootPane, Action c\n      */\n     public static String getResults(URL source) throws IOException {\n \n-        return Util.getResultsWithEncoding(source.openConnection(), null);\n+        return net.sf.jabref.util.Util.getResultsWithEncoding(source.openConnection(), null);\n     }\n \n     /**\n@@ -924,7 +924,7 @@ public static String getResults(URL source) throws IOException {\n      */\n     public static String getResults(URLConnection source) throws IOException {\n \n-        return Util.getResultsWithEncoding(source, null);\n+        return net.sf.jabref.util.Util.getResultsWithEncoding(source, null);\n     }\n \n     /**\n@@ -935,7 +935,7 @@ public static String getResults(URLConnection source) throws IOException {\n      * @throws IOException\n      */\n     public static String getResultsWithEncoding(URL source, String encoding) throws IOException {\n-        return Util.getResultsWithEncoding(source.openConnection(), encoding);\n+        return net.sf.jabref.util.Util.getResultsWithEncoding(source.openConnection(), encoding);\n     }\n     /**\n      * Download the URL using specified encoding and return contents as a String.\n@@ -1003,8 +1003,8 @@ public static NamedCompound doUpdateTimeStamp(BibtexEntry entry, AbstractUndoabl\n         NamedCompound ce = new NamedCompound(undoableEdit.getPresentationName());\n         ce.addEdit(undoableEdit);\n         String timeStampField = Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD);\n-        String timestamp = Util.dateFormatter.getCurrentDate();\n-        Util.updateField(entry, timeStampField, timestamp, ce);\n+        String timestamp = net.sf.jabref.util.Util.dateFormatter.getCurrentDate();\n+        net.sf.jabref.util.Util.updateField(entry, timeStampField, timestamp, ce);\n         return ce;\n     }\n \n@@ -1071,7 +1071,7 @@ public void run() {\n                     String regExp = Globals.prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY);\n                     result = RegExpFileSearch.findFilesForSet(entries, extensions, dirs, regExp);\n                 } else {\n-                    result = Util.findAssociatedFiles(entries, extensions, dirs);\n+                    result = net.sf.jabref.util.Util.findAssociatedFiles(entries, extensions, dirs);\n                 }\n \n                 boolean foundAny = false;\n@@ -1184,7 +1184,7 @@ public static Runnable autoSetLinks(final BibtexEntry entry, final FileListTable\n         final Collection<BibtexEntry> entries = new ArrayList<>();\n         entries.add(entry);\n \n-        return Util.autoSetLinks(entries, null, null, singleTableModel, metaData, callback, diag);\n+        return net.sf.jabref.util.Util.autoSetLinks(entries, null, null, singleTableModel, metaData, callback, diag);\n     }\n \n     /**, @@ -20,6 +20,8 @@\n     public static final String PACKAGE_JAVAX_SWING = \"javax.swing\";\n     public static final String PACKAGE_JAVA_AWT = \"java.awt\";\n     public static final String PACKAGE_NET_SF_JABREF_GUI = \"net.sf.jabref.gui\";\n+    public static final String PACKAGE_NET_SF_JABREF_LOGIC = \"net.sf.jabref.logic\";\n+    public static final String PACKAGE_NET_SF_JABREF_MODEL = \"net.sf.jabref.model\";\n \n     private final String firstPackage;\n     private final String secondPackage;\n@@ -33,12 +35,19 @@ public ArchitectureTests(String firstPackage, String secondPackage) {\n     public static Iterable<Object[]> data() {\n         return Arrays.asList(\n                 new Object[][] {\n-                        {\"net.sf.jabref.logic\", PACKAGE_JAVA_AWT},\n-                        {\"net.sf.jabref.logic\", PACKAGE_JAVAX_SWING},\n-                        {\"net.sf.jabref.logic\", PACKAGE_NET_SF_JABREF_GUI},\n-                        {\"net.sf.jabref.model\", PACKAGE_JAVA_AWT},\n-                        {\"net.sf.jabref.model\", PACKAGE_JAVAX_SWING},\n-                        {\"net.sf.jabref.model\", PACKAGE_NET_SF_JABREF_GUI}\n+                        {PACKAGE_NET_SF_JABREF_LOGIC, PACKAGE_JAVA_AWT},\n+                        {PACKAGE_NET_SF_JABREF_LOGIC, PACKAGE_JAVAX_SWING},\n+                        {PACKAGE_NET_SF_JABREF_LOGIC, PACKAGE_NET_SF_JABREF_GUI},\n+\n+                        {PACKAGE_NET_SF_JABREF_MODEL, PACKAGE_JAVA_AWT},\n+                        {PACKAGE_NET_SF_JABREF_MODEL, PACKAGE_JAVAX_SWING},\n+                        {PACKAGE_NET_SF_JABREF_MODEL, PACKAGE_NET_SF_JABREF_GUI},\n+                        {PACKAGE_NET_SF_JABREF_MODEL, PACKAGE_NET_SF_JABREF_LOGIC},\n+\n+                        {\"net.sf.jabref.bst\", PACKAGE_JAVA_AWT},\n+                        {\"net.sf.jabref.bst\", PACKAGE_JAVAX_SWING},\n+                        {\"net.sf.jabref.bst\", PACKAGE_NET_SF_JABREF_GUI},\n+                        {\"net.sf.jabref.bst\", PACKAGE_NET_SF_JABREF_LOGIC}\n                 }\n         );\n     }, @@ -6,7 +6,6 @@\n import net.sf.jabref.importer.ParserResult;\n import net.sf.jabref.importer.fileformat.BibtexParser;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.EntryTypes;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.BeforeClass;, @@ -3,7 +3,7 @@\n import net.sf.jabref.importer.OAI2Handler;\n import net.sf.jabref.importer.fetcher.OAI2Fetcher;\n import net.sf.jabref.model.entry.BibtexEntry;\n-import net.sf.jabref.model.entry.EntryTypes;\n+import net.sf.jabref.bibtex.EntryTypes;\n import net.sf.jabref.model.entry.IdGenerator;\n \n import org.junit.Assert;, @@ -15,7 +15,6 @@\n  */\n package net.sf.jabref.model.entry;\n \n-import net.sf.jabref.model.entry.IdGenerator;\n import org.junit.Assert;\n import org.junit.Test;\n , @@ -1,6 +1,5 @@\n package net.sf.jabref.model.entry;\n \n-import net.sf.jabref.model.entry.MonthUtil;\n import org.junit.Assert;\n import org.junit.Test;\n , @@ -9,6 +9,7 @@\n import net.sf.jabref.importer.ParserResult;\n import net.sf.jabref.logic.util.DOI;\n import net.sf.jabref.logic.util.strings.StringUtil;\n+import net.sf.jabref.model.entry.Util;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Ignore;\n@@ -25,31 +26,31 @@\n \n     @Test\n     public void testNCase() {\n-        Assert.assertEquals(\"\", StringUtil.capitalizeFirst(\"\"));\n-        Assert.assertEquals(\"Hello world\", StringUtil.capitalizeFirst(\"Hello World\"));\n-        Assert.assertEquals(\"A\", StringUtil.capitalizeFirst(\"a\"));\n-        Assert.assertEquals(\"Aa\", StringUtil.capitalizeFirst(\"AA\"));\n+        Assert.assertEquals(\"\", Util.capitalizeFirst(\"\"));\n+        Assert.assertEquals(\"Hello world\", Util.capitalizeFirst(\"Hello World\"));\n+        Assert.assertEquals(\"A\", Util.capitalizeFirst(\"a\"));\n+        Assert.assertEquals(\"Aa\", Util.capitalizeFirst(\"AA\"));\n     }\n \n     @Test\n     public void testGetPublicationDate() {\n \n-        Assert.assertEquals(\"2003-02\", Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(\"2003-02\", net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, year = {2003}, month = #FEB# }\")));\n \n-        Assert.assertEquals(\"2003-03\", Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(\"2003-03\", net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, year = {2003}, month = 3 }\")));\n \n-        Assert.assertEquals(\"2003\", Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(\"2003\", net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, year = {2003}}\")));\n \n-        Assert.assertEquals(null, Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(null, net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, month = 3 }\")));\n \n-        Assert.assertEquals(null, Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(null, net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, author={bla}}\")));\n \n-        Assert.assertEquals(\"2003-12\", Util.getPublicationDate(BibtexParser\n+        Assert.assertEquals(\"2003-12\", net.sf.jabref.util.Util.getPublicationDate(BibtexParser\n                 .singleFromString(\"@ARTICLE{HipKro03, year = {03}, month = #DEC# }\")));\n \n     }\n@@ -71,33 +72,33 @@ public void testPlaceDialog() {\n         Container c = new JWindow();\n         c.setBounds(100, 200, 100, 50);\n \n-        Util.placeDialog(d, c);\n+        net.sf.jabref.util.Util.placeDialog(d, c);\n         Assert.assertEquals(125, d.getX());\n         Assert.assertEquals(200, d.getY());\n \n         // Test upper left corner\n         c.setBounds(0, 0, 100, 100);\n         d.setSize(200, 200);\n \n-        Util.placeDialog(d, c);\n+        net.sf.jabref.util.Util.placeDialog(d, c);\n         Assert.assertEquals(0, d.getX());\n         Assert.assertEquals(0, d.getY());\n     }\n \n     @Test\n     public void testParseField() {\n \n-        Assert.assertEquals(\"\", Util.parseField(\"\"));\n+        Assert.assertEquals(\"\", net.sf.jabref.util.Util.parseField(\"\"));\n \n         // Three basic types (references, { } and \" \")\n-        Assert.assertEquals(\"#hallo#\", Util.parseField(\"hallo\"));\n-        Assert.assertEquals(\"hallo\", Util.parseField(\"{hallo}\"));\n-        Assert.assertEquals(\"bye\", Util.parseField(\"\\\"bye\\\"\"));\n+        Assert.assertEquals(\"#hallo#\", net.sf.jabref.util.Util.parseField(\"hallo\"));\n+        Assert.assertEquals(\"hallo\", net.sf.jabref.util.Util.parseField(\"{hallo}\"));\n+        Assert.assertEquals(\"bye\", net.sf.jabref.util.Util.parseField(\"\\\"bye\\\"\"));\n \n         // Concatenation\n-        Assert.assertEquals(\"longlonglonglong\", Util.parseField(\"\\\"long\\\" # \\\"long\\\" # \\\"long\\\" # \\\"long\\\"\"));\n+        Assert.assertEquals(\"longlonglonglong\", net.sf.jabref.util.Util.parseField(\"\\\"long\\\" # \\\"long\\\" # \\\"long\\\" # \\\"long\\\"\"));\n \n-        Assert.assertEquals(\"hallo#bye#\", Util.parseField(\"{hallo} # bye\"));\n+        Assert.assertEquals(\"hallo#bye#\", net.sf.jabref.util.Util.parseField(\"{hallo} # bye\"));\n     }\n \n     @Test\n@@ -115,17 +116,17 @@ public void testShaveString() {\n \n     @Test\n     public void testCheckLegalKey() {\n-        Assert.assertEquals(\"AAAA\", Util.checkLegalKey(\"AA AA\"));\n-        Assert.assertEquals(\"SPECIALCHARS\", Util.checkLegalKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\"));\n-        Assert.assertEquals(\"\", Util.checkLegalKey(\"\\n\\t\\r\"));\n+        Assert.assertEquals(\"AAAA\", net.sf.jabref.util.Util.checkLegalKey(\"AA AA\"));\n+        Assert.assertEquals(\"SPECIALCHARS\", net.sf.jabref.util.Util.checkLegalKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\"));\n+        Assert.assertEquals(\"\", net.sf.jabref.util.Util.checkLegalKey(\"\\n\\t\\r\"));\n     }\n \n     @Test\n     @Ignore\n     public void testReplaceSpecialCharacters() {\n-        Assert.assertEquals(\"Hallo Arger\", Util.replaceSpecialCharacters(\"Hallo Arger\"));\n+        Assert.assertEquals(\"Hallo Arger\", net.sf.jabref.util.Util.replaceSpecialCharacters(\"Hallo Arger\"));\n         // Shouldn't German \u00ef\u00bf\u00bd be resolved to Ae\n-        Assert.assertEquals(\"AeaeaAAA\", Util.replaceSpecialCharacters(\"\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\"));\n+        Assert.assertEquals(\"AeaeaAAA\", net.sf.jabref.util.Util.replaceSpecialCharacters(\"\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\"));\n     }\n \n     @Test\n@@ -205,50 +206,50 @@ public void setUp() {\n     @Test\n     public void testParseMethodCalls() {\n \n-        Assert.assertEquals(1, Util.parseMethodsCalls(\"bla\").size());\n-        Assert.assertEquals(\"bla\", (Util.parseMethodsCalls(\"bla\").get(0))[0]);\n+        Assert.assertEquals(1, net.sf.jabref.util.Util.parseMethodsCalls(\"bla\").size());\n+        Assert.assertEquals(\"bla\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla\").get(0))[0]);\n \n-        Assert.assertEquals(1, Util.parseMethodsCalls(\"bla,\").size());\n-        Assert.assertEquals(\"bla\", (Util.parseMethodsCalls(\"bla,\").get(0))[0]);\n+        Assert.assertEquals(1, net.sf.jabref.util.Util.parseMethodsCalls(\"bla,\").size());\n+        Assert.assertEquals(\"bla\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla,\").get(0))[0]);\n \n-        Assert.assertEquals(1, Util.parseMethodsCalls(\"_bla.bla.blub,\").size());\n-        Assert.assertEquals(\"_bla.bla.blub\", (Util.parseMethodsCalls(\"_bla.bla.blub,\").get(0))[0]);\n+        Assert.assertEquals(1, net.sf.jabref.util.Util.parseMethodsCalls(\"_bla.bla.blub,\").size());\n+        Assert.assertEquals(\"_bla.bla.blub\", (net.sf.jabref.util.Util.parseMethodsCalls(\"_bla.bla.blub,\").get(0))[0]);\n \n-        Assert.assertEquals(2, Util.parseMethodsCalls(\"bla,foo\").size());\n-        Assert.assertEquals(\"bla\", (Util.parseMethodsCalls(\"bla,foo\").get(0))[0]);\n-        Assert.assertEquals(\"foo\", (Util.parseMethodsCalls(\"bla,foo\").get(1))[0]);\n+        Assert.assertEquals(2, net.sf.jabref.util.Util.parseMethodsCalls(\"bla,foo\").size());\n+        Assert.assertEquals(\"bla\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla,foo\").get(0))[0]);\n+        Assert.assertEquals(\"foo\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla,foo\").get(1))[0]);\n \n-        Assert.assertEquals(2, Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").size());\n-        Assert.assertEquals(\"bla\", (Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(0))[0]);\n-        Assert.assertEquals(\"foo\", (Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(1))[0]);\n-        Assert.assertEquals(\"test\", (Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(0))[1]);\n-        Assert.assertEquals(\"fark\", (Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(1))[1]);\n+        Assert.assertEquals(2, net.sf.jabref.util.Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").size());\n+        Assert.assertEquals(\"bla\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(0))[0]);\n+        Assert.assertEquals(\"foo\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(1))[0]);\n+        Assert.assertEquals(\"test\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(0))[1]);\n+        Assert.assertEquals(\"fark\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(\\\"test\\\"),foo(\\\"fark\\\")\").get(1))[1]);\n \n-        Assert.assertEquals(2, Util.parseMethodsCalls(\"bla(test),foo(fark)\").size());\n-        Assert.assertEquals(\"bla\", (Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(0))[0]);\n-        Assert.assertEquals(\"foo\", (Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(1))[0]);\n-        Assert.assertEquals(\"test\", (Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(0))[1]);\n-        Assert.assertEquals(\"fark\", (Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(1))[1]);\n+        Assert.assertEquals(2, net.sf.jabref.util.Util.parseMethodsCalls(\"bla(test),foo(fark)\").size());\n+        Assert.assertEquals(\"bla\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(0))[0]);\n+        Assert.assertEquals(\"foo\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(1))[0]);\n+        Assert.assertEquals(\"test\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(0))[1]);\n+        Assert.assertEquals(\"fark\", (net.sf.jabref.util.Util.parseMethodsCalls(\"bla(test),foo(fark)\").get(1))[1]);\n     }\n \n     @Test\n     @Ignore\n     public void testFieldAndFormat() {\n-        Assert.assertEquals(\"Eric von Hippel and Georg von Krogh\", Util.getFieldAndFormat(\"[author]\", entry, database));\n+        Assert.assertEquals(\"Eric von Hippel and Georg von Krogh\", net.sf.jabref.util.Util.getFieldAndFormat(\"[author]\", entry, database));\n \n-        Assert.assertEquals(\"Eric von Hippel and Georg von Krogh\", Util.getFieldAndFormat(\"author\", entry, database));\n+        Assert.assertEquals(\"Eric von Hippel and Georg von Krogh\", net.sf.jabref.util.Util.getFieldAndFormat(\"author\", entry, database));\n \n-        Assert.assertEquals(null, Util.getFieldAndFormat(\"[unknownkey]\", entry, database));\n+        Assert.assertEquals(null, net.sf.jabref.util.Util.getFieldAndFormat(\"[unknownkey]\", entry, database));\n \n-        Assert.assertEquals(null, Util.getFieldAndFormat(\"[:]\", entry, database));\n+        Assert.assertEquals(null, net.sf.jabref.util.Util.getFieldAndFormat(\"[:]\", entry, database));\n \n-        Assert.assertEquals(null, Util.getFieldAndFormat(\"[:lower]\", entry, database));\n+        Assert.assertEquals(null, net.sf.jabref.util.Util.getFieldAndFormat(\"[:lower]\", entry, database));\n \n-        Assert.assertEquals(\"eric von hippel and georg von krogh\", Util.getFieldAndFormat(\"[author:lower]\", entry, database));\n+        Assert.assertEquals(\"eric von hippel and georg von krogh\", net.sf.jabref.util.Util.getFieldAndFormat(\"[author:lower]\", entry, database));\n \n-        Assert.assertEquals(\"HipKro03\", Util.getFieldAndFormat(\"[bibtexkey]\", entry, database));\n+        Assert.assertEquals(\"HipKro03\", net.sf.jabref.util.Util.getFieldAndFormat(\"[bibtexkey]\", entry, database));\n \n-        Assert.assertEquals(\"HipKro03\", Util.getFieldAndFormat(\"[bibtexkey:]\", entry, database));\n+        Assert.assertEquals(\"HipKro03\", net.sf.jabref.util.Util.getFieldAndFormat(\"[bibtexkey:]\", entry, database));\n     }\n \n     @Test\n@@ -279,7 +280,7 @@ public void testUserFieldAndFormat() {\n             Globals.prefs.putStringArray(NameFormatterTab.NAME_FORMATER_KEY, newNames);\n             Globals.prefs.putStringArray(NameFormatterTab.NAME_FORMATTER_VALUE, newFormats);\n \n-            Assert.assertEquals(\"testtest\", Util.getFieldAndFormat(\"[author:testMe123454321]\", entry, database));\n+            Assert.assertEquals(\"testtest\", net.sf.jabref.util.Util.getFieldAndFormat(\"[author:testMe123454321]\", entry, database));\n \n         } finally {\n             Globals.prefs.putStringArray(NameFormatterTab.NAME_FORMATER_KEY, names);\n@@ -290,50 +291,50 @@ public void testUserFieldAndFormat() {\n     @Test\n     public void testExpandBrackets() {\n \n-        Assert.assertEquals(\"\", Util.expandBrackets(\"\", entry, database));\n+        Assert.assertEquals(\"\", net.sf.jabref.util.Util.expandBrackets(\"\", entry, database));\n \n-        Assert.assertEquals(\"dropped\", Util.expandBrackets(\"drop[unknownkey]ped\", entry, database));\n+        Assert.assertEquals(\"dropped\", net.sf.jabref.util.Util.expandBrackets(\"drop[unknownkey]ped\", entry, database));\n \n         Assert.assertEquals(\"Eric von Hippel and Georg von Krogh\",\n-                Util.expandBrackets(\"[author]\", entry, database));\n+                net.sf.jabref.util.Util.expandBrackets(\"[author]\", entry, database));\n \n         Assert.assertEquals(\"Eric von Hippel and Georg von Krogh are two famous authors.\",\n-                Util.expandBrackets(\"[author] are two famous authors.\", entry, database));\n+                net.sf.jabref.util.Util.expandBrackets(\"[author] are two famous authors.\", entry, database));\n \n         Assert.assertEquals(\"Eric von Hippel and Georg von Krogh are two famous authors.\",\n-                Util.expandBrackets(\"[author] are two famous authors.\", entry, database));\n+                net.sf.jabref.util.Util.expandBrackets(\"[author] are two famous authors.\", entry, database));\n \n         Assert.assertEquals(\"Eric von Hippel and Georg von Krogh have published Open Source Software and the \\\"Private-Collective\\\" Innovation Model: Issues for Organization Science in Organization Science.\",\n-                Util.expandBrackets(\"[author] have published [title] in [journal].\", entry, database));\n+                net.sf.jabref.util.Util.expandBrackets(\"[author] have published [title] in [journal].\", entry, database));\n     }\n \n     @Test\n     public void testSanitizeUrl() {\n \n-        Assert.assertEquals(\"http://www.vg.no\", Util.sanitizeUrl(\"http://www.vg.no\"));\n-        Assert.assertEquals(\"http://www.vg.no/fil%20e.html\", Util.sanitizeUrl(\"http://www.vg.no/fil e.html\"));\n-        Assert.assertEquals(\"http://www.vg.no/fil%20e.html\", Util.sanitizeUrl(\"http://www.vg.no/fil%20e.html\"));\n-        Assert.assertEquals(\"www.vg.no/fil%20e.html\", Util.sanitizeUrl(\"www.vg.no/fil%20e.html\"));\n+        Assert.assertEquals(\"http://www.vg.no\", net.sf.jabref.util.Util.sanitizeUrl(\"http://www.vg.no\"));\n+        Assert.assertEquals(\"http://www.vg.no/fil%20e.html\", net.sf.jabref.util.Util.sanitizeUrl(\"http://www.vg.no/fil e.html\"));\n+        Assert.assertEquals(\"http://www.vg.no/fil%20e.html\", net.sf.jabref.util.Util.sanitizeUrl(\"http://www.vg.no/fil%20e.html\"));\n+        Assert.assertEquals(\"www.vg.no/fil%20e.html\", net.sf.jabref.util.Util.sanitizeUrl(\"www.vg.no/fil%20e.html\"));\n \n-        Assert.assertEquals(\"www.vg.no/fil%20e.html\", Util.sanitizeUrl(\"\\\\url{www.vg.no/fil%20e.html}\"));\n+        Assert.assertEquals(\"www.vg.no/fil%20e.html\", net.sf.jabref.util.Util.sanitizeUrl(\"\\\\url{www.vg.no/fil%20e.html}\"));\n \n         /**\n          * Doi Test cases\n          */\n-        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), Util.sanitizeUrl(\"10.1109/VLHCC.2004.20\"));\n-        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), Util.sanitizeUrl(\"doi://10.1109/VLHCC.2004.20\"));\n-        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), Util.sanitizeUrl(\"doi:/10.1109/VLHCC.2004.20\"));\n-        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), Util.sanitizeUrl(\"doi:10.1109/VLHCC.2004.20\"));\n+        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), net.sf.jabref.util.Util.sanitizeUrl(\"10.1109/VLHCC.2004.20\"));\n+        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), net.sf.jabref.util.Util.sanitizeUrl(\"doi://10.1109/VLHCC.2004.20\"));\n+        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), net.sf.jabref.util.Util.sanitizeUrl(\"doi:/10.1109/VLHCC.2004.20\"));\n+        Assert.assertEquals(DOI.RESOLVER.resolve(\"/10.1109/VLHCC.2004.20\").toASCIIString(), net.sf.jabref.util.Util.sanitizeUrl(\"doi:10.1109/VLHCC.2004.20\"));\n \n         /**\n          * Additional testcases provided by Hannes Restel and Micha Beckmann.\n          */\n-        Assert.assertEquals(\"ftp://www.vg.no\", Util.sanitizeUrl(\"ftp://www.vg.no\"));\n-        Assert.assertEquals(\"file://doof.txt\", Util.sanitizeUrl(\"file://doof.txt\"));\n-        Assert.assertEquals(\"file:///\", Util.sanitizeUrl(\"file:///\"));\n-        Assert.assertEquals(\"/src/doof.txt\", Util.sanitizeUrl(\"/src/doof.txt\"));\n-        Assert.assertEquals(\"/\", Util.sanitizeUrl(\"/\"));\n-        Assert.assertEquals(\"/home/user/example.txt\", Util.sanitizeUrl(\"/home/user/example.txt\"));\n+        Assert.assertEquals(\"ftp://www.vg.no\", net.sf.jabref.util.Util.sanitizeUrl(\"ftp://www.vg.no\"));\n+        Assert.assertEquals(\"file://doof.txt\", net.sf.jabref.util.Util.sanitizeUrl(\"file://doof.txt\"));\n+        Assert.assertEquals(\"file:///\", net.sf.jabref.util.Util.sanitizeUrl(\"file:///\"));\n+        Assert.assertEquals(\"/src/doof.txt\", net.sf.jabref.util.Util.sanitizeUrl(\"/src/doof.txt\"));\n+        Assert.assertEquals(\"/\", net.sf.jabref.util.Util.sanitizeUrl(\"/\"));\n+        Assert.assertEquals(\"/home/user/example.txt\", net.sf.jabref.util.Util.sanitizeUrl(\"/home/user/example.txt\"));\n     }\n \n     @Test\n@@ -351,7 +352,7 @@ public void testToUpperCharFirst() {\n     @Test\n     public void getSeparatedKeywords() {\n         String keywords = \"w1, w2a w2b, w3\";\n-        ArrayList<String> separatedKeywords = Util.getSeparatedKeywords(keywords);\n+        ArrayList<String> separatedKeywords = net.sf.jabref.util.Util.getSeparatedKeywords(keywords);\n         String[] expected = new String[]{\"w1\", \"w2a w2b\", \"w3\"};\n         Assert.assertArrayEquals(expected, separatedKeywords.toArray());\n     }, ", 460, 452, "\"modified, modified, modified, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, modified, removed, modified, removed, added, modified, modified, modified, modified, modified, modified, modified, modified, modified, \"", 912], ["Simon Harrer", "Use green instead of red.", "11/26/15, 11:23:02 PM", "Simon Harrer", "f453017f9b163a78f947aa0203429a3cf9996a25", ["src/main/java/net/sf/jabref/gui/search/SearchBar.java"], "@@ -304,7 +304,7 @@ public void updateResults(int matched, String description, boolean grammarBasedS\n \n \n         if(grammarBasedSearch) {\n-            searchIcon.setIcon(IconTheme.JabRefIcon.SEARCH.getSmallIcon().createWithNewColor(Color.RED));\n+            searchIcon.setIcon(IconTheme.JabRefIcon.SEARCH.getSmallIcon().createWithNewColor(new Color(102,255,255)));\n             searchIcon.setToolTipText(Localization.lang(\"Advanced search active.\"));\n         } else {\n             searchIcon.setIcon(IconTheme.JabRefIcon.SEARCH.getSmallIcon());, ", 1, 1, "\"modified, \"", 2]]